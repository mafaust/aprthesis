[0] INFO ProjectConfiguration - Version of the JVM used: 1.8.0_202
[0] INFO main - Java version of the JDK used to run tests: 1.8.0_202
[0] INFO main - The compliance of the JVM is:  8
[2] INFO main - command line arguments: [-location  /Users/marekmazur/astor/defects4j/math-44  -mode  jgenprog  -package  org.apache.commons  -jvm4testexecution  /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin  -failing  org.apache.commons.math.ode.events.EventStateTest  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -stopfirst  true  -dependencies  /Users/marekmazur/astor/examples/libs/junit-4.4.jar  -maxgen  1000000  -seed  10  -maxtime  60  -scope  local  -stopfirst  true  -flthreshold  0  -population  1  -faultlocalization  flacoco]
[6] INFO AstorMain - Running Astor on a JDK at /Users/marekmazur/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre
Source folders: [/Users/marekmazur/astor/defects4j/math-44/src/main/java]
Source Test folders: [/Users/marekmazur/astor/defects4j/math-44/src/test]
---- Creating spoon model
Creating model,  Code location from working folder: /Users/marekmazur/astor/defects4j/math-44/src/main/java
building model: /Users/marekmazur/astor/defects4j/math-44/src/main/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/Users/marekmazur/astor/examples/libs/junit-4.4.jar]
Spoon Model built from location: /Users/marekmazur/astor/defects4j/math-44/src/main/java
Number of CtTypes created: 587
Running chosen test detection strategy: CLASSLOADER
Test retrieved from classes: 300
Running Flacoco...
Running spectrum-based fault localization...
FlacocoConfig{workspace='/Users/marekmazur/astor/.', projectPath='/Users/marekmazur/astor/defects4j/math-44', srcJavaDir=[/Users/marekmazur/astor/defects4j/math-44/src/main/java], srcTestDir=[/Users/marekmazur/astor/defects4j/math-44/src/test], binJavaDir=[/Users/marekmazur/astor/defects4j/math-44/target/classes], binTestDir=[/Users/marekmazur/astor/defects4j/math-44/target/test-classes], classpath='/Users/marekmazur/astor/examples/libs/junit-4.4.jar', customJUnitClasspath='null', customJacocoClasspath='null', mavenHome='/Users/marekmazur/.m2/repository/', coverTests=false, testRunnerVerbose=false, testRunnerTimeoutInMs=3600000, testRunnerJVMArgs='null', threshold=0.0, includeZeros=false, complianceLevel=8, testDetectionStrategy=CLASSLOADER, ignoredTests=[], jUnit4Tests=[org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.random.Well19937cTest#testNextZipf, org.apache.commons.math.dfp.DfpTest#testLog10K, org.apache.commons.math.linear.QRSolverTest#testOverdetermined, org.apache.commons.math.fraction.BigFractionTest#testPow, org.apache.commons.math.linear.ConjugateGradientTest#testNonSquareOperator, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, org.apache.commons.math.random.Well512aTest#testDoubleDirect, org.apache.commons.math.distribution.PascalDistributionTest#testSampling, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, org.apache.commons.math.optimization.BatteryNISTTest#chwirut1Test, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, org.apache.commons.math.stat.StatUtilsTest#testStats, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, org.apache.commons.math.random.Well44497aTest#testNextLongDirect, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, org.apache.commons.math.random.Well19937aTest#testConfig, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator, org.apache.commons.math.random.Well44497aTest#testNextPermutation, org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.distribution.TDistributionTest#testConsistency, org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, org.apache.commons.math.complex.ComplexTest#testConstructor, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, org.apache.commons.math.random.Well19937cTest#testNextFloatDirect, org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, org.apache.commons.math.random.Well19937aTest#testNexBytes, org.apache.commons.math.random.Well44497aTest#testNextWeibull, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull, org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix, org.apache.commons.math.util.FastMathTestPerformance#testHypot, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, org.apache.commons.math.random.ValueServerTest#testReplay, org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation, org.apache.commons.math.random.Well44497bTest#testNextInt2, org.apache.commons.math.complex.ComplexTest#testMultiplyInfInf, org.apache.commons.math.util.MathUtilsTest#testSignInt, org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation, org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue, org.apache.commons.math.fraction.FractionTest#testDoubleValue, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK, org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, org.apache.commons.math.linear.EigenDecompositionTest#testAEqualVDVt, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric, org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial, org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, org.apache.commons.math.stat.FrequencyTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments, org.apache.commons.math.random.Well1024aTest#testNextSample, org.apache.commons.math.complex.ComplexTest#testScalarAdd, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, org.apache.commons.math.random.Well44497bTest#testNextBeta, org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, org.apache.commons.math.linear.QRDecompositionTest#testDimensions, org.apache.commons.math.linear.PivotingQRDecompositionTest#testHTrapezoidal, org.apache.commons.math.linear.EigenSolverTest#testSolve, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage, org.apache.commons.math.complex.ComplexTest#testTan, org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, org.apache.commons.math.util.BigRealTest#testConstructor, org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolution, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations, org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, org.apache.commons.math.distribution.CauchyDistributionTest#testDensities, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors, org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, org.apache.commons.math.util.FastMathTest#testLogSpecialCases, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue, org.apache.commons.math.complex.ComplexTest#testCosNaN, org.apache.commons.math.distribution.ZipfDistributionTest#testSampling, org.apache.commons.math.random.Well1024aTest#testNextZipf, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData, org.apache.commons.math.random.Well44497aTest#testNextLong2, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox, org.apache.commons.math.linear.QRDecompositionTest#testMatricesValues, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, org.apache.commons.math.genetics.RandomKeyTest#testIsSame, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation, org.apache.commons.math.random.Well19937cTest#testNextT, org.apache.commons.math.util.FastMathTest#testAtanAccuracy, org.apache.commons.math.random.RandomDataTest#testNextUniform, org.apache.commons.math.linear.SingularValueDecompositionTest#testVOrthogonal, org.apache.commons.math.fraction.FractionTest#testCompareTo, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution, org.apache.commons.math.random.Well19937cTest#testNextF, org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, org.apache.commons.math.complex.ComplexTest#testReciprocal, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin, org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, org.apache.commons.math.util.BigRealTest#testCompareTo, org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.util.MathArraysTest#testSortInPlaceFailures, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.random.Well19937aTest#testNextF, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, org.apache.commons.math.random.Well512aTest#testNextFloatDirect, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary, org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid, org.apache.commons.math.complex.ComplexTest#testSubtractNaN, org.apache.commons.math.random.Well19937aTest#testNextT, org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointOperator, org.apache.commons.math.optimization.BatteryNISTTest#misra1aTest, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions, org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide, org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, org.apache.commons.math.dfp.DfpTest#testPower10K, org.apache.commons.math.complex.ComplexTest#testSinhNaN, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, org.apache.commons.math.distribution.NormalDistributionTest#testDensities, org.apache.commons.math.linear.CholeskyDecompositionTest#testMath274, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, org.apache.commons.math.linear.ArrayRealVectorTest#testAddToEntry, org.apache.commons.math.random.Well19937aTest#testDoubleDirect, org.apache.commons.math.random.RandomDataTest#testNextHypergeometric, org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors, org.apache.commons.math.distribution.BinomialDistributionTest#testSampling, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.distribution.NormalDistributionTest#testMomonts, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, org.apache.commons.math.random.Well512aTest#testNextLong2, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, org.apache.commons.math.analysis.function.GaussianTest#testParametricValue, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, org.apache.commons.math.util.FastMathTest#testCosAccuracy, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, org.apache.commons.math.linear.PivotingQRDecompositionTest#testAEqualQR, org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient, org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse, org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples, org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, org.apache.commons.math.random.Well512aTest#testNexBoolean2, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, org.apache.commons.math.util.IncrementorTest#testAccessor, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1, org.apache.commons.math.linear.SymmLQTest#testNonPositiveDefinitePreconditioner, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1, org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, org.apache.commons.math.distribution.BetaDistributionTest#testDensity, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, org.apache.commons.math.util.MathArraysTest#testCopyOfDouble2, org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchSolution, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.util.MathArraysTest#testCopyOfDouble3, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, org.apache.commons.math.random.RandomDataTest#testNextZipf, org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues, org.apache.commons.math.random.Well44497bTest#testFloatDirect, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, org.apache.commons.math.linear.SingularValueDecompositionTest#testAEqualUSVt, org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedResidual, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoIntercept_noint1, org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, org.apache.commons.math.random.Well512aTest#testNextInversionDeviate, org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, org.apache.commons.math.random.Well512aTest#testNextPoisson, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, org.apache.commons.math.util.MathArraysTest#testLinearCombinationInfinite, org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.exception.util.ExceptionContextTest#testContext, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, org.apache.commons.math.complex.ComplexTest#testTanhCritical, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, org.apache.commons.math.random.RandomDataTest#testNextChiSquare, org.apache.commons.math.util.FastMathTestPerformance#testTanh, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast, org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, org.apache.commons.math.random.Well1024aTest#testNextFloatDirect, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, org.apache.commons.math.util.FastMathTest#testHyperbolic, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, org.apache.commons.math.util.FastMathTestPerformance#testAsin, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionFieldTest#testSerial, org.apache.commons.math.linear.SparseRealVectorTest#testMisc, org.apache.commons.math.special.GammaTest#testLogGammaPositive, org.apache.commons.math.stat.StatUtilsTest#testProduct, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.complex.ComplexTest#testCosInf, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance, org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix, org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency, org.apache.commons.math.random.Well1024aTest#testNextGaussian, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, org.apache.commons.math.util.FastMathTest#testPowAccuracy, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, org.apache.commons.math.linear.RealVectorTest#testClone, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues1, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, org.apache.commons.math.random.Well512aTest#testNextSample, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, org.apache.commons.math.util.PairTest#testAccessor, org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues2, org.apache.commons.math.random.Well44497bTest#testNextLong, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2, org.apache.commons.math.distribution.GammaDistributionTest#testValues, org.apache.commons.math.random.Well19937aTest#testNextLong, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedDelta, org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary, org.apache.commons.math.random.Well44497bTest#testNextSample, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, org.apache.commons.math.util.PrecisionTest#testCompareToEpsilon, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency, org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, org.apache.commons.math.stat.FrequencyTest#testAdd, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, org.apache.commons.math.random.RandomDataTest#testNextPoisson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.random.ValueServerTest#testFixedSeed, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs, org.apache.commons.math.util.PrecisionTest#testMath475, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, org.apache.commons.math.random.Well1024aTest#testFloatDirect, org.apache.commons.math.linear.FieldLUSolverTest#testSingular, org.apache.commons.math.linear.CholeskyDecompositionTest#testNotPositiveDefinite, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, org.apache.commons.math.dfp.DfpTest#testDivideInt, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, org.apache.commons.math.distribution.CauchyDistributionTest#testScale, org.apache.commons.math.random.Well19937cTest#testNextWeibull, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, org.apache.commons.math.fraction.BigFractionTest#testNegate, org.apache.commons.math.complex.ComplexTest#testExpInf, org.apache.commons.math.random.Well44497aTest#testNextBeta, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2, org.apache.commons.math.util.FastMathTest#testAtan2, org.apache.commons.math.genetics.RandomKeyTest#testDecode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, org.apache.commons.math.random.Well512aTest#testNextUniform, org.apache.commons.math.linear.QRSolverTest#testSolve, org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, org.apache.commons.math.util.TransformerMapTest#testTransformers, org.apache.commons.math.util.FastMathTest#testPowSpecialCases, org.apache.commons.math.util.OpenIntToFieldTest#testIterator, org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, org.apache.commons.math.util.MathUtilsTest#testReduce, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2, org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron, org.apache.commons.math.random.Well44497bTest#testNextHypergeometric, org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference, org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect, org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase, org.apache.commons.math.random.Well19937aTest#testNextBeta, org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl, org.apache.commons.math.util.FastMathTest#testAcosAccuracy, org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, org.apache.commons.math.linear.PivotingQRSolverTest#testSolveRankErrors, org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, org.apache.commons.math.random.Well19937aTest#testNextFloatDirect, org.apache.commons.math.util.FastMathTestPerformance#testPow, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.random.MersenneTwisterTest#testNextHex, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData, org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl, org.apache.commons.math.util.BigRealTest#testNegate, org.apache.commons.math.complex.ComplexTest#testEqualsTrue, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, org.apache.commons.math.complex.ComplexTest#testEqualsNull, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, org.apache.commons.math.random.Well19937aTest#testNextInt2, org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, org.apache.commons.math.random.Well44497aTest#testNextLong, org.apache.commons.math.util.BigRealFieldTest#testOne, org.apache.commons.math.linear.FieldLUDecompositionTest#testSingular, org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx03, org.apache.commons.math.complex.ComplexTest#testScalarMultiply, org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx02, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX, org.apache.commons.math.linear.PivotingQRSolverTest#testUnderdetermined, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, org.apache.commons.math.util.TransformerMapTest#testClear, org.apache.commons.math.random.Well44497aTest#testNextInt2, org.apache.commons.math.complex.ComplexTest#testSqrtPolar, org.apache.commons.math.util.IncrementorTest#testBulkIncrement, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance, org.apache.commons.math.random.ValueServerTest#testFill, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolutionWithInitialGuess, org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues, org.apache.commons.math.distribution.NormalDistributionTest#testMath280, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, org.apache.commons.math.util.MathArraysTest#testNormalizeArray, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation, org.apache.commons.math.distribution.CauchyDistributionTest#testMomonts, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteOrthogonality, org.apache.commons.math.util.MathUtilsTest#testCopySignByte2, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints, org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, org.apache.commons.math.random.Well19937aTest#testNextInt, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckErrorMessage, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions, org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, org.apache.commons.math.linear.ConjugateGradientTest#testNonSquarePreconditioner, org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType, org.apache.commons.math.distribution.PascalDistributionTest#testMomonts, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, org.apache.commons.math.util.TransformerMapTest#testPutTransformer, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments, org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheck, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect, org.apache.commons.math.random.MersenneTwisterTest#testNextUniform, org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable, org.apache.commons.math.MathExceptionTest#testConstructorCause, org.apache.commons.math.complex.ComplexTest#testAbsNaN, org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, org.apache.commons.math.special.GammaTest#testLogGammaZero, org.apache.commons.math.stat.StatUtilsTest#testPercentile, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, org.apache.commons.math.util.MathArraysTest#testLInfDistanceInt, org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, org.apache.commons.math.random.Well19937aTest#testNextPascal, org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, org.apache.commons.math.random.Well19937aTest#testNextChiSquare, org.apache.commons.math.util.FastMathTest#testConstants, org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520, org.apache.commons.math.complex.ComplexTest#testMath221, org.apache.commons.math.complex.ComplexTest#testSubtractInf, org.apache.commons.math.complex.ComplexTest#testSqrt1z, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders10, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders11, org.apache.commons.math.linear.EigenDecompositionTest#testMath308, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, org.apache.commons.math.dfp.DfpTest#testToString, org.apache.commons.math.util.FastMathTestPerformance#testLog, org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders18, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders19, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders16, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders17, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders14, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders15, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders12, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders13, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset, org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2, org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, org.apache.commons.math.random.Well19937aTest#testNextGaussian, org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, org.apache.commons.math.util.MathUtilsTest#testCopySignByte, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints, org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, org.apache.commons.math.distribution.WeibullDistributionTest#testMomonts, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes, org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite, org.apache.commons.math.util.TransformerMapTest#testContainsClass, org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull, org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, org.apache.commons.math.linear.PivotingQRSolverTest#testSolve, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry, org.apache.commons.math.distribution.ExponentialDistributionTest#testMomonts, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ, org.apache.commons.math.analysis.function.LogitTest#testPreconditions2, org.apache.commons.math.analysis.function.LogitTest#testPreconditions1, org.apache.commons.math.util.ArithmeticUtilsTest#testLcm, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX, org.apache.commons.math.random.Well19937aTest#testNextIntIAE, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.fraction.FractionFieldTest#testZero, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes, org.apache.commons.math.util.DefaultTransformerTest#testTransformString, org.apache.commons.math.complex.ComplexTest#testReciprocalZero, org.apache.commons.math.random.Well19937aTest#testNextLongDirect, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, org.apache.commons.math.distribution.BinomialDistributionTest#testMomonts, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders20, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample, org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, org.apache.commons.math.random.Well1024aTest#testNextCauchy, org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix, org.apache.commons.math.util.ArithmeticUtilsTest#testLcmLong, org.apache.commons.math.complex.ComplexTest#testConjugate, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, org.apache.commons.math.random.Well44497aTest#testNextPoisson, org.apache.commons.math.analysis.function.SincTest#testEuler, org.apache.commons.math.random.Well19937cTest#testNextIntDirect, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn, org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheckLong, org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, org.apache.commons.math.random.Well512aTest#testNextLongDirect, org.apache.commons.math.fraction.BigFractionTest#testDivide, org.apache.commons.math.util.FastMathTest#testSinhAccuracy, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType, org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.random.Well1024aTest#testDoubleDirect, org.apache.commons.math.random.Well44497aTest#testDoubleDirect, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, org.apache.commons.math.special.GammaTest#testTrigamma, org.apache.commons.math.fraction.BigFractionTest#testSerial, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate, org.apache.commons.math.random.Well512aTest#testNextGaussian, org.apache.commons.math.complex.ComplexTest#testDivideReal, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, org.apache.commons.math.dfp.DfpTest#testCopySign, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, org.apache.commons.math.random.Well19937cTest#testNextHex, org.apache.commons.math.analysis.function.GaussianTest#testPreconditions, org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolution, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, org.apache.commons.math.complex.ComplexTest#testDivideNaN, org.apache.commons.math.random.Well19937aTest#testNextWeibull, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain, org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, org.apache.commons.math.dfp.DfpTest#testRound, org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, org.apache.commons.math.fraction.FractionFormatTest#testParseProper, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, org.apache.commons.math.linear.ConjugateGradientTest#testMismatchedOperatorDimensions, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov, org.apache.commons.math.random.Well44497bTest#testNextIntIAE, org.apache.commons.math.linear.SymmLQTest#testNonSquareOperator, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, org.apache.commons.math.random.Well1024aTest#testNexBytes, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, org.apache.commons.math.util.FastMathTest#testSignumDouble, org.apache.commons.math.complex.ComplexTest#testNegateNaN, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheckLong, org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect, org.apache.commons.math.random.Well19937aTest#testNextIntNeg, org.apache.commons.math.util.FastMathTestPerformance#testAcos, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry, org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRegressIfaceMethod, org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent, org.apache.commons.math.complex.ComplexTest#testSinNaN, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, org.apache.commons.math.distribution.ZipfDistributionTest#testMomonts, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside, org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, org.apache.commons.math.linear.RealVectorFormatTest#testNan, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, org.apache.commons.math.util.MathArraysTest#testArrayEqualsIncludingNaN, org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData, org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, org.apache.commons.math.util.MathArraysTest#testIsMonotonic, org.apache.commons.math.complex.ComplexTest#testLogZero, org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs, org.apache.commons.math.distribution.GammaDistributionTest#testDensities, org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, org.apache.commons.math.util.FastMathTest#testAsinSpecialCases, org.apache.commons.math.random.Well44497aTest#testNextSample, org.apache.commons.math.complex.ComplexTest#testCosh, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect, org.apache.commons.math.util.FastMathTest#testLogAccuracy, org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, org.apache.commons.math.linear.PivotingQRSolverTest#testRank, org.apache.commons.math.dfp.DfpTest#testLongConstructor, org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, org.apache.commons.math.util.PairTest#testEquals, org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, org.apache.commons.math.random.Well44497aTest#testNexBoolean2, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, org.apache.commons.math.util.IncrementorTest#testConstructor1, org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions, org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate, org.apache.commons.math.util.IncrementorTest#testConstructor2, org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, org.apache.commons.math.complex.ComplexTest#testDivideZeroZero, org.apache.commons.math.dfp.DfpTest#testRemainder, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.fraction.BigFractionTest#testSubtract, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, org.apache.commons.math.util.FastMathTestPerformance#testAbs, org.apache.commons.math.fraction.FractionFormatTest#testParse, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, org.apache.commons.math.special.ErfTest#testTwoArgumentErf, org.apache.commons.math.util.BigRealTest#testSerial, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate, org.apache.commons.math.random.Well44497bTest#testNextHex, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid, org.apache.commons.math.random.Well512aTest#testFloatDirect, org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult, org.apache.commons.math.distribution.GammaDistributionTest#testDensity, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside, org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, org.apache.commons.math.util.ArithmeticUtilsTest#testFactorial, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.random.Well1024aTest#testNextIntIAE, org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes, org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare, org.apache.commons.math.random.Well44497bTest#testNextPoisson, org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition, org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheck, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, org.apache.commons.math.random.RandomDataTest#testNextBinomial, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide, org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, org.apache.commons.math.util.FastMathTestPerformance#testExpm1, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal, org.apache.commons.math.linear.FieldMatrixImplTest#testToString, org.apache.commons.math.distribution.PoissonDistributionTest#testSampling, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, org.apache.commons.math.util.MathArraysTest#testIsMonotonicComparable, org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane, org.apache.commons.math.distribution.WeibullDistributionTest#testDensities, org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1, org.apache.commons.math.random.Well19937aTest#testNextGamma, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar, org.apache.commons.math.random.Well1024aTest#testNextLongDirect, org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.random.Well19937cTest#testNextGamma, org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan, org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal, org.apache.commons.math.util.FastMathTest#testTanhAccuracy, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev, org.apache.commons.math.linear.SparseRealMatrixTest#testToString, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, org.apache.commons.math.random.Well44497aTest#testNextT, org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, org.apache.commons.math.MathExceptionTest#testSerialization, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid, org.apache.commons.math.util.FastMathTest#testToRadians, org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283, org.apache.commons.math.random.Well19937cTest#testNextGaussian, org.apache.commons.math.random.Well44497aTest#testNextF, org.apache.commons.math.linear.LUDecompositionTest#testUUpperTriangular, org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.analysis.function.LogisticTest#testSomeValues, org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, org.apache.commons.math.linear.QRDecompositionTest#testQOrthogonal, org.apache.commons.math.analysis.function.SqrtTest#testComparison, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct, org.apache.commons.math.random.Well44497bTest#testNextGaussian, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments, org.apache.commons.math.util.MathArraysTest#testCopyOfDouble, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, org.apache.commons.math.linear.SymmLQTest#testNonSquarePreconditioner, org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAddToEntry, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2, org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedUlps, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.LUDecompositionTest#testNonSquare, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, org.apache.commons.math.complex.ComplexTest#testScalarAddInf, org.apache.commons.math.analysis.function.SincTest#testDerivativeZero, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg, org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, org.apache.commons.math.complex.ComplexTest#testSinh, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast, org.apache.commons.math.linear.LUSolverTest#testDeterminant, org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell, org.apache.commons.math.linear.FieldLUDecompositionTest#testPAEqualLU, org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientLarge, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.random.Well19937cTest#testNextPermutation, org.apache.commons.math.random.Well44497bTest#testNextLong2, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType, org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, org.apache.commons.math.random.MersenneTwisterTest#testNextZipf, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, org.apache.commons.math.util.BigRealTest#testSubtract, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, org.apache.commons.math.util.MathUtilsTest#testSignByte, org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE, org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy, org.apache.commons.math.analysis.function.LogitTest#testSomeValues, org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect, org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensities, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, org.apache.commons.math.util.FastMathTest#testLog10Accuracy, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, org.apache.commons.math.linear.CholeskyDecompositionTest#testNotSymmetricMatrixException, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors, org.apache.commons.math.linear.LUDecompositionTest#testSingular, org.apache.commons.math.random.Well44497bTest#testNextIntDirect, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.special.ErfTest#testErf3291, org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax, org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631, org.apache.commons.math.complex.ComplexTest#testHashCode, org.apache.commons.math.linear.SingularValueDecompositionTest#testStability2, org.apache.commons.math.linear.SingularValueDecompositionTest#testStability1, org.apache.commons.math.random.Well44497bTest#testNexBytes, org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect, org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function, org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, org.apache.commons.math.random.Well1024aTest#testNextIntDirect, org.apache.commons.math.complex.ComplexTest#testAddNaN, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct, org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize, org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic, org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct, org.apache.commons.math.dfp.DfpTest#testAdd, org.apache.commons.math.dfp.DfpDecTest#testNextAfter, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate, org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane, org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, org.apache.commons.math.linear.SingularValueDecompositionTest#testHadamard, org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.complex.ComplexTest#testConjugateNaN, org.apache.commons.math.analysis.FunctionUtilsTest#testAddDifferentiable, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation, org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, org.apache.commons.math.linear.CholeskyDecompositionTest#testDimensions, org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero, org.apache.commons.math.random.Well512aTest#testNextT, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreOrthogonality, org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, org.apache.commons.math.complex.ComplexTest#testCos, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficient, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution2, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.distribution.TDistributionTest#testDensities, org.apache.commons.math.random.Well512aTest#testNextF, org.apache.commons.math.random.RandomDataTest#testConfig, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, org.apache.commons.math.complex.ComplexTest#testAsinInf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, org.apache.commons.math.random.Well1024aTest#testNextBinomial, org.apache.commons.math.complex.ComplexTest#testAtanNaN, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, org.apache.commons.math.complex.ComplexTest#testAcosInf, org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName, org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType, org.apache.commons.math.util.FastMathTest#testToDegrees, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst, org.apache.commons.math.dfp.DfpTest#testNextAfter, org.apache.commons.math.complex.ComplexTest#testDivideImaginary, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, org.apache.commons.math.util.FastMathTestPerformance#testAtan, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, org.apache.commons.math.complex.ComplexTest#testPow, org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt, org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, org.apache.commons.math.random.RandomDataTest#testNextSecureInt, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither, org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry, org.apache.commons.math.stat.FrequencyTest#testEmptyTable, org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount, org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.linear.FieldMatrixImplTest#testPower, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, org.apache.commons.math.linear.PivotingQRSolverTest#testOverdetermined, org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.StatUtilsTest#testVariance, org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors, org.apache.commons.math.linear.FieldLUSolverTest#testSolve, org.apache.commons.math.complex.ComplexTest#testScalarPowInf, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, org.apache.commons.math.random.Well44497bTest#testNextUniform, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo, org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference, org.apache.commons.math.random.Well44497aTest#testNextIntIAE, org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation, org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar, org.apache.commons.math.random.Well19937aTest#testNextHypergeometric, org.apache.commons.math.random.Well1024aTest#testNextWeibull, org.apache.commons.math.complex.ComplexTest#testScalarAddNaN, org.apache.commons.math.random.Well44497aTest#testNextUniform, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast, org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10, org.apache.commons.math.util.BigRealTest#testMultiply, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.FrequencyTest#testPcts, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull, org.apache.commons.math.analysis.FunctionUtilsTest#testCombine, org.apache.commons.math.random.Well44497aTest#testNextChiSquare, org.apache.commons.math.linear.EigenDecompositionTest#testVOrthogonal, org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, org.apache.commons.math.analysis.function.SigmoidTest#testDerivative, org.apache.commons.math.util.MathArraysTest#testLInfDistanceDouble, org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin, org.apache.commons.math.distribution.FDistributionTest#testSampling, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, org.apache.commons.math.random.Well44497bTest#testNexBoolean2, org.apache.commons.math.linear.FieldLUDecompositionTest#testPPermutation, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, org.apache.commons.math.random.ValueServerTest#testProperties, org.apache.commons.math.distribution.TDistributionTest#nistData, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation, org.apache.commons.math.util.MathArraysTest#testL1DistanceInt, org.apache.commons.math.complex.ComplexTest#testAtanInf, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, org.apache.commons.math.random.Well19937cTest#testNextIntNeg, org.apache.commons.math.special.ErfTest#testErf2807, org.apache.commons.math.linear.EigenDecompositionTest#testZeroDivide, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock, org.apache.commons.math.util.TransformerMapTest#testClasses, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect, org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, org.apache.commons.math.random.MersenneTwisterTest#testNextGamma, org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, org.apache.commons.math.random.Well512aTest#testNextZipf, org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testSignShort, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev, org.apache.commons.math.complex.ComplexTest#testAddInf, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect, org.apache.commons.math.random.Well19937aTest#testNextHex, org.apache.commons.math.special.ErfTest#testErf1960, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta, org.apache.commons.math.util.MathUtilsTest#testHash, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.fraction.FractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, org.apache.commons.math.fraction.BigFractionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, org.apache.commons.math.distribution.GammaDistributionTest#testMomonts, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders9, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders7, org.apache.commons.math.stat.FrequencyTest#testIntegerValues, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders8, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders5, org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders6, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders3, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders4, org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders1, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders2, org.apache.commons.math.dfp.DfpTest#testSignPredicates, org.apache.commons.math.genetics.BinaryMutationTest#testMutate, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.random.Well19937cTest#testNextPascal, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2, org.apache.commons.math.random.Well19937cTest#testNextHypergeometric, org.apache.commons.math.fraction.FractionTest#testIntValue, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1, org.apache.commons.math.complex.ComplexTest#testAcosNaN, org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint, org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2, org.apache.commons.math.analysis.FunctionUtilsTest#testComposeDifferentiable, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose, org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance, org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression, org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection, org.apache.commons.math.linear.PivotingQRDecompositionTest#testRUpperTriangular, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection, org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong, org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, org.apache.commons.math.random.MersenneTwisterTest#testNextInt, org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, org.apache.commons.math.complex.ComplexTest#testLog, org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, org.apache.commons.math.fraction.FractionFieldTest#testOne, org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, org.apache.commons.math.random.Well44497aTest#testNextHex, org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian, org.apache.commons.math.random.Well512aTest#testNextInt, org.apache.commons.math.util.ArithmeticUtilsTest#testGcdConsistency, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear, org.apache.commons.math.dfp.DfpTest#testMultiply, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, org.apache.commons.math.util.IncrementorTest#testAlternateException, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, org.apache.commons.math.random.Well44497aTest#testFloatDirect, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy, org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, org.apache.commons.math.optimization.BatteryNISTTest#lanczosTest, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, org.apache.commons.math.complex.ComplexTest#testEqualsSame, org.apache.commons.math.random.EmpiricalDistributionTest#testNext, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen, org.apache.commons.math.random.Well512aTest#testNextIntIAE, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2, org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevOrthogonality, org.apache.commons.math.random.Well44497bTest#testNextPermutation, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4, org.apache.commons.math.analysis.function.GaussianTest#testSomeValues, org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, org.apache.commons.math.dfp.DfpTest#testReciprocal, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK, org.apache.commons.math.random.Well512aTest#testReferenceCode, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464, org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.linear.CholeskySolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testToString, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, org.apache.commons.math.util.FastMathStrictComparisonTest#test1, org.apache.commons.math.random.RandomDataTest#testNextExponential, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiEvaluationAt1, org.apache.commons.math.util.MathArraysTest#testSortInPlaceExample, org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane, org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexTest#testLogInf, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.random.Well19937cTest#testReferenceCode, org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, org.apache.commons.math.complex.ComplexTest#testCoshNaN, org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, org.apache.commons.math.linear.LUSolverTest#testSolve, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency, org.apache.commons.math.random.Well512aTest#testNexBytes, org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4, org.apache.commons.math.analysis.function.SincTest#testCrossings, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere, org.apache.commons.math.random.MersenneTwisterTest#testNextSample, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints, org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.util.FastMathTestPerformance#testSqrt, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse, org.apache.commons.math.random.Well512aTest#testNextIntDirect, org.apache.commons.math.special.GammaTest#testLogGammaNegative, org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, org.apache.commons.math.linear.SymmLQTest#testEventManagement, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.fraction.BigFractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity, org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave, org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan, org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten, org.apache.commons.math.util.MathArraysTest#testL2DistanceDouble, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange, org.apache.commons.math.linear.SingularValueDecompositionTest#testConditionNumber, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf, org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth, org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341, org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues1, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues2, org.apache.commons.math.random.Well44497aTest#testNextGaussian, org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll, org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect, org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions, org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev, org.apache.commons.math.random.Well19937cTest#testConfig, org.apache.commons.math.fraction.FractionFormatTest#testFormat, org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator, org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage, org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithSplit, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, org.apache.commons.math.random.Well512aTest#testNextExponential, org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596, org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch, org.apache.commons.math.linear.SingularValueDecompositionTest#testInverseConditionNumber, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.fraction.FractionTest#testDivide, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, org.apache.commons.math.linear.SingularValueDecompositionTest#testRank, org.apache.commons.math.complex.ComplexTest#testAbs, org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, org.apache.commons.math.util.MathArraysTest#testL1DistanceDouble, org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, org.apache.commons.math.complex.ComplexTest#testGetArgument, org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointPreconditioner, org.apache.commons.math.dfp.DfpTest#testFloor, org.apache.commons.math.util.FastMathTest#testAtan2Accuracy, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf, org.apache.commons.math.random.RandomDataTest#testNextInt, org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated, org.apache.commons.math.dfp.DfpTest#testIssue567, org.apache.commons.math.linear.LUDecompositionTest#testDimensions, org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic, org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, org.apache.commons.math.dfp.DfpTest#testIntConstructor, org.apache.commons.math.stat.StatUtilsTest#testNormalize1, org.apache.commons.math.random.MersenneTwisterTest#testConfig, org.apache.commons.math.stat.StatUtilsTest#testNormalize2, org.apache.commons.math.dfp.DfpTest#testPower10, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent, org.apache.commons.math.random.Well19937aTest#testNextPoisson, org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest#testAccessors, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, org.apache.commons.math.distribution.TDistributionTest#testSampling, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.util.FastMathTest#testExpm1Accuracy, org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements, org.apache.commons.math.random.Well1024aTest#testNextHypergeometric, org.apache.commons.math.complex.ComplexTest#testSqrtNaN, org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither, org.apache.commons.math.analysis.function.LogitTest#testDerivative, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, org.apache.commons.math.linear.CholeskyDecompositionTest#testMatricesValues, org.apache.commons.math.complex.ComplexTest#testEqualsClass, org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, org.apache.commons.math.complex.ComplexTest#testCoshInf, org.apache.commons.math.util.FastMathTestPerformance#testSin, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, org.apache.commons.math.complex.ComplexTest#testScalarSubtract, org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable, org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheck, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, org.apache.commons.math.random.Well1024aTest#testNextBeta, org.apache.commons.math.random.Well512aTest#testConfig, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D, org.apache.commons.math.random.Well19937aTest#testNexBoolean2, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, org.apache.commons.math.distribution.TDistributionTest#testMomonts, org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, org.apache.commons.math.random.Well1024aTest#testNextUniform, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch, org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar, org.apache.commons.math.random.Well44497aTest#testReferenceCode, org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr, org.apache.commons.math.distribution.TDistributionTest#testPreconditions, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, org.apache.commons.math.util.MathArraysTest#testCheckOrder, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints, org.apache.commons.math.random.Well19937cTest#testNextSample, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters, org.apache.commons.math.complex.ComplexTest#testAsinNaN, org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples, org.apache.commons.math.complex.ComplexTest#testAtanI, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.random.RandomDataTest#testNextSecureLong, org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst, org.apache.commons.math.linear.FieldLUSolverTest#testDeterminant, org.apache.commons.math.linear.LUDecompositionTest#testPPermutation, org.apache.commons.math.util.BigRealFieldTest#testSerial, org.apache.commons.math.linear.EigenDecompositionTest#testRepeatedEigenvalue, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, org.apache.commons.math.random.Well1024aTest#testNextHex, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial, org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, org.apache.commons.math.random.Well19937cTest#testNextLong, org.apache.commons.math.distribution.PoissonDistributionTest#testMean, org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero, org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testAdd, org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary, org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, org.apache.commons.math.linear.FieldLUDecompositionTest#testUUpperTriangular, org.apache.commons.math.distribution.FDistributionTest#testDensities, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, org.apache.commons.math.complex.ComplexTest#testSqrtInf, org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testAbsInfinite, org.apache.commons.math.complex.ComplexFieldTest#testZero, org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, org.apache.commons.math.random.Well19937cTest#testNextInt, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, org.apache.commons.math.complex.ComplexTest#testEqualsNaN, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, org.apache.commons.math.stat.inference.TTestTest#testPaired, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors, org.apache.commons.math.random.ValueServerTest#testNextDigestFail, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.optimization.BatteryNISTTest#chwirut2Test, org.apache.commons.math.random.Well44497aTest#testNextPascal, org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1, org.apache.commons.math.analysis.function.SqrtTest#testDerivativeComparison, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4, org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide, org.apache.commons.math.random.Well44497aTest#testNextZipf, org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases, org.apache.commons.math.dfp.DfpTest#testRint, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.StatUtilsTest#testMax, org.apache.commons.math.random.Well19937cTest#testNextInt2, org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2, org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation, org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues, org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics, org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev, org.apache.commons.math.stat.FrequencyTest#testToString, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.analysis.FunctionUtilsTest#testSinc, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.complex.ComplexTest#testPowInf, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, org.apache.commons.math.random.Well1024aTest#testNextInt2, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.EigenDecompositionTest#testDistinctEigenvalues, org.apache.commons.math.linear.PivotingQRSolverTest#testSolveDimensionErrors, org.apache.commons.math.random.Well1024aTest#testNextExponential, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric, org.apache.commons.math.random.Well19937cTest#testNextBeta, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedResidual, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02, org.apache.commons.math.random.Well19937aTest#testNextExponential, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.random.Well1024aTest#testReferenceCode, org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, org.apache.commons.math.util.FastMathTest#testLog1pAccuracy, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection, org.apache.commons.math.complex.ComplexTest#testTanh, org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreColumns, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, org.apache.commons.math.random.Well19937cTest#testNextPoisson, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, org.apache.commons.math.random.Well44497aTest#testNextBinomial, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide, org.apache.commons.math.util.IncrementorTest#testAboveMaxCount, org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues, org.apache.commons.math.analysis.FunctionUtilsTest#testCollector, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.Well19937aTest#testReferenceCode, org.apache.commons.math.complex.ComplexTest#testScalarDivideInf, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected, org.apache.commons.math.random.RandomDataTest#testNextBeta, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, org.apache.commons.math.complex.ComplexTest#testpowNull, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative, org.apache.commons.math.analysis.function.SincTest#testShortcut, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString, org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments, org.apache.commons.math.random.MersenneTwisterTest#testNextExponential, org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate, org.apache.commons.math.random.Well44497bTest#testReferenceCode, org.apache.commons.math.random.Well19937aTest#testNextSample, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionTest#testConstructor, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole, org.apache.commons.math.distribution.FDistributionTest#testConsistency, org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues, org.apache.commons.math.random.Well1024aTest#testNextGamma, org.apache.commons.math.random.Well512aTest#testNextHex, org.apache.commons.math.linear.EigenDecompositionTest#testBigMatrix, org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, org.apache.commons.math.random.Well1024aTest#testNextLong, org.apache.commons.math.util.BigRealTest#testDoubleValue, org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.analysis.FunctionUtilsTest#testCompose, org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution, org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency, org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, org.apache.commons.math.complex.ComplexTest#testConstructorNaN, org.apache.commons.math.dfp.DfpTest#testDivide, org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst, org.apache.commons.math.fraction.BigFractionFieldTest#testZero, org.apache.commons.math.util.PrecisionTest#testRoundFloat, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector, org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, org.apache.commons.math.random.Well19937cTest#testFloatDirect, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen, org.apache.commons.math.linear.LUSolverTest#testThreshold, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide, org.apache.commons.math.random.Well19937cTest#testNextCauchy, org.apache.commons.math.linear.OpenMapRealMatrixTest#testMath679, org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect, org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1, org.apache.commons.math.util.FastMathTestPerformance#testExp, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testShift, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, org.apache.commons.math.dfp.DfpTest#testCeil, org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity, org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions, org.apache.commons.math.complex.ComplexTest#testTanNaN, org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors, org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.fraction.BigFractionTest#testAdd, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth, org.apache.commons.math.random.RandomDataTest#testNextSample, org.apache.commons.math.random.Well44497bTest#testNextInt, org.apache.commons.math.random.RandomDataTest#testNextGamma, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.ode.events.EventStateTest#testIssue695, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts, org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple, org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.QRSolverTest#testRank, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.util.FastMathTest#testSinAccuracy, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData, org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, org.apache.commons.math.fraction.BigFractionTest#testAbs, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions, org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, org.apache.commons.math.complex.ComplexFieldTest#testOne, org.apache.commons.math.linear.FieldLUDecompositionTest#testNonSquare, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3, org.apache.commons.math.util.MathUtilsTest#testCheckFinite, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry, org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, org.apache.commons.math.random.Well19937cTest#testNextChiSquare, org.apache.commons.math.random.Well44497aTest#testNextIntDirect, org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, org.apache.commons.math.dfp.DfpTest#testByteConstructor, org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, org.apache.commons.math.linear.CholeskyDecompositionTest#testNonSquare, org.apache.commons.math.distribution.NormalDistributionTest#testDensity, org.apache.commons.math.random.Well19937aTest#testNextZipf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, org.apache.commons.math.complex.ComplexTest#testLogNaN, org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, org.apache.commons.math.util.FastMathTest#testLog1pSpecialCases, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, org.apache.commons.math.linear.LUDecompositionTest#testPAEqualLU, org.apache.commons.math.util.IncrementorTest#testReset, org.apache.commons.math.util.FastMathTestPerformance#testLog10, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.util.IncrementorTest#testBelowMaxCount, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4, org.apache.commons.math.random.RandomDataTest#testNextF, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2, org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, org.apache.commons.math.analysis.FunctionUtilsTest#testMultiplyDifferentiable, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, org.apache.commons.math.MathExceptionTest#testConstructor, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma, org.apache.commons.math.analysis.function.LogitTest#testParametricValue, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector, org.apache.commons.math.random.RandomDataTest#testNextLong, org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert, org.apache.commons.math.random.Well44497bTest#testNextChiSquare, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity, org.apache.commons.math.random.Well19937aTest#testNextPermutation, org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefinitePreconditioner, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, org.apache.commons.math.util.FastMathTestPerformance#testLog1p, org.apache.commons.math.random.Well19937aTest#testNextBinomial, org.apache.commons.math.linear.LUSolverTest#testSingular, org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, org.apache.commons.math.random.Well19937cTest#testDoubleDirect, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary, org.apache.commons.math.util.FastMathTest#testAsinAccuracy, org.apache.commons.math.random.RandomDataTest#testNextT, org.apache.commons.math.random.RandomDataTest#testNextSecureHex, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy, org.apache.commons.math.complex.ComplexTest#testScalarDivideZero, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, org.apache.commons.math.util.BigRealFieldTest#testZero, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, org.apache.commons.math.complex.ComplexTest#testDivideInf, org.apache.commons.math.distribution.FDistributionTest#testMomonts, org.apache.commons.math.random.Well1024aTest#testNextPermutation, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross, org.apache.commons.math.random.MersenneTwisterTest#testNextT, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, org.apache.commons.math.fraction.BigFractionTest#testMultiply, org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaN, org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, org.apache.commons.math.random.Well1024aTest#testConfig, org.apache.commons.math.distribution.TDistributionTest#testSmallDf, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform, org.apache.commons.math.util.ArithmeticUtilsTest#testFactorialFail, org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, org.apache.commons.math.random.MersenneTwisterTest#testNextF, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.util.TransformerMapTest#testSerial, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.util.MathArraysTest#testArrayEquals, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, org.apache.commons.math.random.RandomDataTest#testNextPascal, org.apache.commons.math.util.MathArraysTest#testL2DistanceInt, org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, org.apache.commons.math.random.Well44497aTest#testNextHypergeometric, org.apache.commons.math.random.Well512aTest#testNextWeibull, org.apache.commons.math.complex.ComplexTest#testSinInf, org.apache.commons.math.random.Well44497bTest#testNextPascal, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide, org.apache.commons.math.dfp.DfpMathTest#testSin, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments, org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchRightHandSide, org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.random.Well44497bTest#testNextIntNeg, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection, org.apache.commons.math.linear.PivotingQRDecompositionTest#testMatricesValues, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, org.apache.commons.math.random.Well44497bTest#testDoubleDirect, org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution2, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction, org.apache.commons.math.complex.ComplexFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction, org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, org.apache.commons.math.random.Well19937cTest#testNextUniform, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, org.apache.commons.math.dfp.DfpTest#testIsZero, org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, org.apache.commons.math.dfp.DfpTest#testLog10, org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors, org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses, org.apache.commons.math.random.Well1024aTest#testNextChiSquare, org.apache.commons.math.distribution.ChiSquareDistributionTest#testMomonts, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations, org.apache.commons.math.complex.ComplexTest#testAsin, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefiniteLinearOperator, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, org.apache.commons.math.util.FastMathTest#testMinMaxDouble, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside, org.apache.commons.math.analysis.FunctionUtilsTest#testAdd, org.apache.commons.math.util.ArithmeticUtilsTest#testGcd, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, org.apache.commons.math.dfp.DfpTest#testCompare, org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchSolution, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, org.apache.commons.math.linear.CholeskyDecompositionTest#testAEqualLLT, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev, org.apache.commons.math.random.Well44497bTest#testNextFloatDirect, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, org.apache.commons.math.util.FastMathTestPerformance#testTan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, org.apache.commons.math.util.OpenIntToFieldTest#testRemove, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, org.apache.commons.math.util.FastMathTest#testLogWithBase, org.apache.commons.math.linear.RealVectorTest#testCombine, org.apache.commons.math.linear.FieldLUSolverTest#testSolveDimensionErrors, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, org.apache.commons.math.random.MersenneTwisterTest#testNextBeta, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace, org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide, org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero, org.apache.commons.math.linear.SymmLQTest#testMismatchedOperatorDimensions, org.apache.commons.math.distribution.GammaDistributionTest#testSampling, org.apache.commons.math.random.Well1024aTest#testNextInt, org.apache.commons.math.dfp.DfpDecTest#testRound, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3, org.apache.commons.math.special.ErfTest#testErfcMaple, org.apache.commons.math.random.Well1024aTest#testNextPascal, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreOrthogonality, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments, org.apache.commons.math.stat.StatUtilsTest#testSumLog, org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev, org.apache.commons.math.ode.events.EventStateTest#closeEvents, org.apache.commons.math.transform.FastSineTransformerTest#testParameters, org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded, org.apache.commons.math.random.Well512aTest#testNextGamma, org.apache.commons.math.complex.ComplexTest#testPowZero, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, org.apache.commons.math.random.Well44497bTest#testNextT, org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments, org.apache.commons.math.random.Well512aTest#testNextCauchy, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, org.apache.commons.math.random.MersenneTwisterTest#testNextInt2, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.random.Well44497aTest#testNextInt, org.apache.commons.math.util.FastMathTest#testExpSpecialCases, org.apache.commons.math.random.Well44497bTest#testNextF, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, org.apache.commons.math.random.MersenneTwisterTest#testNextLong2, org.apache.commons.math.util.FastMathTest#testCoshAccuracy, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, org.apache.commons.math.fraction.FractionTest#testFloatValue, org.apache.commons.math.complex.ComplexTest#testDivide, org.apache.commons.math.random.Well1024aTest#testNextLong2, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, org.apache.commons.math.complex.ComplexTest#testSubtract, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, org.apache.commons.math.random.Well44497aTest#testNextGamma, org.apache.commons.math.util.FastMathTest#testAcosSpecialCases, org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside, org.apache.commons.math.fraction.FractionTest#testMultiply, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, org.apache.commons.math.linear.EigenDecompositionTest#testTridiagonal, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, org.apache.commons.math.fraction.BigFractionTest#testFloatValue, org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, org.apache.commons.math.random.Well512aTest#testNextPascal, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions, org.apache.commons.math.util.FastMathTest#testSignumFloat, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE, org.apache.commons.math.complex.ComplexTest#testAtan, org.apache.commons.math.linear.QRDecompositionTest#testAEqualQR, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide, org.apache.commons.math.random.Well19937aTest#testFloatDirect, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMomonts, org.apache.commons.math.complex.ComplexTest#testReciprocalNaN, org.apache.commons.math.linear.FieldLUSolverTest#testSolveSingularityErrors, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType, org.apache.commons.math.random.MersenneTwisterTest#testNextLong, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, org.apache.commons.math.util.FastMathTest#testCbrtAccuracy, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation, org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, org.apache.commons.math.linear.EigenDecompositionTest#testDiagonal, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealVectorTest#testMap, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.stat.StatUtilsTest#testMean, org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage, org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, org.apache.commons.math.dfp.DfpTest#testIntValue, org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE, org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, org.apache.commons.math.random.Well44497aTest#testNextIntNeg, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev, org.apache.commons.math.complex.ComplexTest#testSin, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow, org.apache.commons.math.linear.RealVectorTest#testIterator, org.apache.commons.math.RetryRunnerTest#testRetryFailAlways, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, org.apache.commons.math.random.Well19937cTest#testNextBinomial, org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag, org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testExpNaN, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection, org.apache.commons.math.linear.ArrayRealVectorTest#testCosine, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple, org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientFail, org.apache.commons.math.util.PrecisionTest#testCompareToMaxUlps, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, org.apache.commons.math.fraction.BigFractionTest#testIntValue, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.random.Well19937aTest#testNextCauchy, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAddToEntry, org.apache.commons.math.linear.SingularValueDecompositionTest#testUOrthogonal, org.apache.commons.math.random.Well44497bTest#testNextLongDirect, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, org.apache.commons.math.dfp.DfpMathTest#testPow, org.apache.commons.math.util.BigRealTest#testBigDecimalValue, org.apache.commons.math.linear.PivotingQRDecompositionTest#testQOrthogonal, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, org.apache.commons.math.linear.EigenSolverTest#testInvertible, org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow, org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT, org.apache.commons.math.complex.ComplexTest#testReciprocalImaginary, org.apache.commons.math.util.MathUtilsTest#testPow, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolutionWithInitialGuess, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF, org.apache.commons.math.random.MersenneTwisterTest#testNextPascal, org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoInterceot_noint2, org.apache.commons.math.util.MathArraysTest#testLinearCombination2, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, org.apache.commons.math.util.MathArraysTest#testLinearCombination1, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1, org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2, org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct, org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency, org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect, org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert, org.apache.commons.math.util.PrecisionTest#testRoundDouble, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, org.apache.commons.math.linear.RealVectorTest#testSparseIterator, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, org.apache.commons.math.random.ValueServerTest#testNextDigest, org.apache.commons.math.random.Well1024aTest#testNextPoisson, org.apache.commons.math.random.Well44497bTest#testNextExponential, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, org.apache.commons.math.random.RandomDataTest#testNextGaussian, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, org.apache.commons.math.util.FastMathTest#testMinMaxFloat, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, org.apache.commons.math.distribution.FDistributionTest#testPreconditions, org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, org.apache.commons.math.util.MathArraysTest#testCopyOfInt, org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, org.apache.commons.math.MathExceptionTest#testPrintStackTrace, org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa, org.apache.commons.math.random.Well19937cTest#testNextLongDirect, org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, org.apache.commons.math.util.FastMathTest#testNextAfter, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.util.MathArraysTest#testSortInPlace, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, org.apache.commons.math.complex.ComplexFormatTest#testNan, org.apache.commons.math.random.RandomDataTest#testNextPermutation, org.apache.commons.math.complex.ComplexTest#testReciprocalInf, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch, org.apache.commons.math.util.MathArraysTest#testCopyOfInt3, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639, org.apache.commons.math.util.BigRealTest#testAdd, org.apache.commons.math.util.MathArraysTest#testCopyOfInt2, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide, org.apache.commons.math.linear.EigenDecompositionTest#testEigenvectors, org.apache.commons.math.special.ErfTest#testErf2576, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.util.FastMathTestPerformance#testCos, org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX, org.apache.commons.math.util.MathUtilsTest#testArrayHash, org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction, org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, org.apache.commons.math.util.BigRealTest#testReciprocal, org.apache.commons.math.special.ErfTest#testErfGnu, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, org.apache.commons.math.random.Well19937cTest#testNexBoolean2, org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor, org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.linear.EigenDecompositionTest#testEigenvalues, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, org.apache.commons.math.complex.ComplexTest#testTanInf, org.apache.commons.math.linear.FieldLUDecompositionTest#testLLowerTriangular, org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedUlps, org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.complex.ComplexTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testTanhInf, org.apache.commons.math.stat.FrequencyTest#testCounts, org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2, org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.linear.LUDecompositionTest#testLLowerTriangular, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1, org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.fraction.BigFractionFormatTest#testParse, org.apache.commons.math.fraction.BigFractionTest#testCompareTo, org.apache.commons.math.util.ArithmeticUtilsTest#test0Choose0, org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate, org.apache.commons.math.random.Well44497bTest#testNextBinomial, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testTanhNaN, org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig, org.apache.commons.math.util.FastMathTest#testHyperbolicInverses, org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithoutSplit, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull, org.apache.commons.math.fraction.FractionTest#testAbs, org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.random.Well512aTest#testNextInt2, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.random.Well1024aTest#testNextT, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testScalarPow, org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, org.apache.commons.math.random.Well1024aTest#testNextF, org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, org.apache.commons.math.random.RandomDataTest#testNextWeibull, org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiLegendre, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate, org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval, org.apache.commons.math.random.Well512aTest#testNextLong, org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, org.apache.commons.math.linear.CholeskyDecompositionTest#testLTTransposed, org.apache.commons.math.util.FastMathTest#testExpAccuracy, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, org.apache.commons.math.linear.CholeskyDecompositionTest#testLLowerTriangular, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, org.apache.commons.math.util.MathUtilsTest#testSignLong, org.apache.commons.math.random.Well512aTest#testNextHypergeometric, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, org.apache.commons.math.random.Well44497aTest#testNextCauchy, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine, org.apache.commons.math.random.Well1024aTest#testNextIntNeg, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle, org.apache.commons.math.complex.ComplexTest#testMultiply, org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments, org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency, org.apache.commons.math.random.Well512aTest#testNextBinomial, org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, org.apache.commons.math.fraction.FractionTest#testAdd, org.apache.commons.math.linear.RealVectorTest#testCombineToSelf, org.apache.commons.math.complex.ComplexTest#testNegate, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, org.apache.commons.math.random.Well44497bTest#testConfig, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, org.apache.commons.math.special.ErfTest#testLargeValues, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3, org.apache.commons.math.random.Well19937aTest#testNextLong2, org.apache.commons.math.complex.ComplexTest#testSinhInf, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3, org.apache.commons.math.analysis.function.SincTest#testDerivativeShortcut, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckLong, org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.filter.KalmanFilterTest#testConstant, org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, org.apache.commons.math.util.FastMathTest#testTanAccuracy, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator, org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage, org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, org.apache.commons.math.util.FastMathTestPerformance#testCosh, org.apache.commons.math.dfp.DfpTest#testSqrt, org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, org.apache.commons.math.distribution.BetaDistributionTest#testMomonts, org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedDelta, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct, org.apache.commons.math.linear.QRDecompositionTest#testHTrapezoidal, org.apache.commons.math.util.FastMathTestPerformance#testAtan2, org.apache.commons.math.random.Well19937cTest#testNextLong2, org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, org.apache.commons.math.stat.StatUtilsTest#testSumSq, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.complex.ComplexTest#testAcos, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal, org.apache.commons.math.linear.QRDecompositionTest#testRUpperTriangular, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet, org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, org.apache.commons.math.distribution.PoissonDistributionTest#testMomonts, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, org.apache.commons.math.util.DefaultTransformerTest#testSerial, org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency, org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, org.apache.commons.math.util.OpenIntToFieldTest#testCopy, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, org.apache.commons.math.linear.SingularValueDecompositionTest#testDimensions, org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions, org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion, org.apache.commons.math.random.Well44497aTest#testConfig, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, org.apache.commons.math.distribution.CauchyDistributionTest#testSampling, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiOrthogonality, org.apache.commons.math.linear.ConjugateGradientTest#testEventManagement, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, org.apache.commons.math.distribution.PascalDistributionTest#testDensities, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy, org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreRows, org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary, org.apache.commons.math.random.Well44497aTest#testNextExponential, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testToString, org.apache.commons.math.complex.ComplexTest#testScalarPowZero, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, org.apache.commons.math.complex.ComplexTest#testTanCritical, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.linear.PivotingQRDecompositionTest#testDimensions, org.apache.commons.math.random.Well512aTest#testNextPermutation, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero, org.apache.commons.math.complex.ComplexTest#testReciprocalReal, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide, org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.util.FastMathTestPerformance#testSimpleBenchmark, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, org.apache.commons.math.random.Well19937aTest#testNextIntDirect, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon, org.apache.commons.math.random.Well1024aTest#testNexBoolean2, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, org.apache.commons.math.complex.ComplexTest#testExp, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, org.apache.commons.math.stat.StatUtilsTest#testMin, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, org.apache.commons.math.special.ErfTest#testErfcGnu, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.analysis.function.GaussianTest#testDerivative, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, org.apache.commons.math.random.Well44497bTest#testNextZipf, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox, org.apache.commons.math.random.Well44497bTest#testNextWeibull, org.apache.commons.math.fraction.FractionTest#testConstructorDouble, org.apache.commons.math.random.Well512aTest#testNextIntNeg, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth, org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, org.apache.commons.math.random.Well19937cTest#testNexBytes, org.apache.commons.math.random.Well44497bTest#testNextCauchy, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, org.apache.commons.math.util.BigRealTest#testDivide, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, org.apache.commons.math.fraction.FractionTest#testSubtract, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, org.apache.commons.math.complex.ComplexTest#testScalarDivide, org.apache.commons.math.complex.ComplexTest#testPowNaNBase, org.apache.commons.math.random.Well512aTest#testNextChiSquare, org.apache.commons.math.random.Well44497aTest#testNextFloatDirect, org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN, org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, org.apache.commons.math.linear.SparseRealVectorTest#testSerial, org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testDivideZero, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither, org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, org.apache.commons.math.special.GammaTest#testLogGammaNan, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection, org.apache.commons.math.util.IncrementorTest#testCanIncrement2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, org.apache.commons.math.random.RandomDataTest#testNextHex, org.apache.commons.math.analysis.function.SincTest#testZero, org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, org.apache.commons.math.util.ArithmeticUtilsTest#testGcdLong, org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints, org.apache.commons.math.fraction.BigFractionTest#testLongValue, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation, org.apache.commons.math.linear.FieldLUDecompositionTest#testDimensions, org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchRightHandSide, org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos, org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, org.apache.commons.math.util.IncrementorTest#testCanIncrement1, org.apache.commons.math.random.ValueServerTest#testModes, org.apache.commons.math.fraction.FractionTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev, org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax, org.apache.commons.math.linear.EigenDecompositionTest#testDimensions, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar, org.apache.commons.math.random.Well44497aTest#testNexBytes, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero, org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency, org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.fraction.FractionTest#testLongValue, org.apache.commons.math.fraction.BigFractionTest#testMath340, org.apache.commons.math.random.Well44497bTest#testNextGamma, org.apache.commons.math.random.RandomDataTest#testNextCauchy, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities, org.apache.commons.math.random.Well19937aTest#testNextUniform, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian, org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.random.Well512aTest#testNextBooleanDirect, org.apache.commons.math.fraction.BigFractionFieldTest#testOne, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, org.apache.commons.math.linear.EigenDecompositionTest#testDimension3MultipleRoot, org.apache.commons.math.util.FastMathTestPerformance#testSinh, org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, org.apache.commons.math.stat.data.LewTest#testCertifiedValues, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt, org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, org.apache.commons.math.linear.EigenDecompositionTest#testDimension2, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, org.apache.commons.math.linear.EigenDecompositionTest#testDimension1, org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, org.apache.commons.math.linear.EigenDecompositionTest#testDimension3, org.apache.commons.math.util.FastMathTestPerformance#testCbrt, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds, org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, org.apache.commons.math.linear.RealVectorTest#testAddToEntry, org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, org.apache.commons.math.distribution.NormalDistributionTest#testSampling, org.apache.commons.math.random.Well512aTest#testNextBeta, org.apache.commons.math.linear.SingularValueSolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testGoldenRatio, org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments, org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, org.apache.commons.math.random.Well19937cTest#testNextIntIAE, org.apache.commons.math.complex.ComplexFieldTest#testSerial, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry, org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, org.apache.commons.math.random.Well19937cTest#testNextExponential, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg, org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull, org.apache.commons.math.util.PrecisionTest#testFloatEqualsWithAllowedUlps, org.apache.commons.math.special.ErfTest#testErf0, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, org.apache.commons.math.fraction.FractionTest#testNegate, org.apache.commons.math.analysis.function.StepFunctionTest#testEndpointBehavior, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification, org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], jUnit5Tests=[], jacocoIncludes=[org.apache.commons.*], jacocoExcludes=[java.*], family=SPECTRUM_BASED, spectrumFormula=TARANTULA, computeSpoonResults=false}
Computing tests from config.
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10K, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut1Test, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testHypot, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyInfInf, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextT, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtanAccuracy, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextF, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceFailures, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointOperator, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#misra1aTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10K, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble2, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoIntercept_noint1, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombinationInfinite, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testContext, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTanh, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFixedSeed, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testMath475, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivideInt, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowSpecialCases, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduce, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx03, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx02, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBulkIncrement, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testNormalizeArray, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteOrthogonality, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testConstants, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders10, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders11, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMath308, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders18, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders19, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders16, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders17, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders14, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders15, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders12, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders13, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders20, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcmLong, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testEuler, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideReal, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCopySign, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRound, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumDouble, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAcos, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRegressIfaceMethod, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinSpecialCases, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLongConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testEquals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZeroZero, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRemainder, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAbs, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testTwoArgumentErf, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExpm1, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonicComparable, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToRadians, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testComparison, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddInf, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog10Accuracy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability2, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability1, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testAdd, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAddDifferentiable, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreOrthogonality, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToDegrees, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPower, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowInf, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddNaN, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCombine, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#nistData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testZeroDivide, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInf, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders9, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders7, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders8, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders5, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders6, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders3, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders4, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders1, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders2, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSignPredicates, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testComposeDifferentiable, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAlternateException, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#lanczosTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevOrthogonality, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.util.FastMathStrictComparisonTest#test1, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiEvaluationAt1, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceExample, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testCrossings, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSqrt, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testConfig, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testInverseConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testRank, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointPreconditioner, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testFloor, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2Accuracy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIssue567, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntConstructor, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize1, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize2, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpm1Accuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSin, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtract, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCheckOrder, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanI, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut2Test, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRint, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testSinc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAboveMaxCount, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCollector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideInf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testShortcut, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCompose, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.linear.OpenMapRealMatrixTest#testMath679, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testShift, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCeil, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#testIssue695, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckFinite, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testByteConstructor, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testReset, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog10, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBelowMaxCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextF, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiplyDifferentiable, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog1p, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinAccuracy, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInf, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextF, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIsZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefiniteLinearOperator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxDouble, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAdd, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCompare, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogWithBase, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombine, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRound, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcMaple, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreOrthogonality, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#closeEvents, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpSpecialCases, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCoshAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosSpecialCases, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumFloat, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalNaN, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCbrtAccuracy, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testMap, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailAlways, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosine, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToMaxUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testPow, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalImaginary, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoInterceot_noint2, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination1, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxFloat, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlace, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt3, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testAdd, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCos, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfGnu, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolicInverses, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiLegendre, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpAccuracy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeShortcut, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testConstant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanAccuracy, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCosh, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSqrt, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiOrthogonality, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowZero, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalReal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSimpleBenchmark, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcGnu, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZero, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement1, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMath340, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3MultipleRoot, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSinh, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCbrt, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testFloatEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testEndpointBehavior, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@6a175569}
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10K, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut1Test, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testHypot, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyInfInf, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextT, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtanAccuracy, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextF, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceFailures, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointOperator, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#misra1aTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10K, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble2, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoIntercept_noint1, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombinationInfinite, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testContext, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTanh, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFixedSeed, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testMath475, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivideInt, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowSpecialCases, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduce, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx03, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx02, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBulkIncrement, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testNormalizeArray, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteOrthogonality, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testConstants, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders10, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders11, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMath308, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders18, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders19, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders16, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders17, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders14, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders15, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders12, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders13, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders20, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcmLong, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testEuler, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideReal, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCopySign, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRound, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumDouble, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAcos, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRegressIfaceMethod, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinSpecialCases, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLongConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testEquals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZeroZero, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRemainder, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAbs, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testTwoArgumentErf, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExpm1, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonicComparable, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToRadians, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testComparison, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddInf, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog10Accuracy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability2, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability1, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testAdd, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAddDifferentiable, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreOrthogonality, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToDegrees, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPower, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowInf, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddNaN, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCombine, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#nistData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testZeroDivide, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInf, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders9, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders7, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders8, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders5, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders6, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders3, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders4, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders1, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders2, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSignPredicates, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testComposeDifferentiable, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAlternateException, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#lanczosTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevOrthogonality, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.util.FastMathStrictComparisonTest#test1, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiEvaluationAt1, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceExample, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testCrossings, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSqrt, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testConfig, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testInverseConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testRank, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointPreconditioner, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testFloor, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2Accuracy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIssue567, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntConstructor, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize1, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize2, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpm1Accuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSin, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtract, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCheckOrder, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanI, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut2Test, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRint, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testSinc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAboveMaxCount, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCollector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideInf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testShortcut, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCompose, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.linear.OpenMapRealMatrixTest#testMath679, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testShift, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCeil, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#testIssue695, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckFinite, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testByteConstructor, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testReset, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog10, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBelowMaxCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextF, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiplyDifferentiable, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog1p, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinAccuracy, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInf, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextF, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIsZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefiniteLinearOperator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxDouble, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAdd, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCompare, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogWithBase, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombine, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRound, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcMaple, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreOrthogonality, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#closeEvents, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpSpecialCases, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCoshAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosSpecialCases, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumFloat, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalNaN, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCbrtAccuracy, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testMap, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailAlways, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosine, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToMaxUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testPow, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalImaginary, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoInterceot_noint2, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination1, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxFloat, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlace, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt3, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testAdd, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCos, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfGnu, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolicInverses, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiLegendre, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpAccuracy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeShortcut, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testConstant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanAccuracy, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCosh, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSqrt, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMomonts, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiOrthogonality, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowZero, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalReal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSimpleBenchmark, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcGnu, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZero, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement1, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMath340, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3MultipleRoot, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSinh, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCbrt, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testFloatEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testEndpointBehavior, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@6a175569}
Path to runner Classes: /Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
Test [Manual]TestMethod=org.apache.commons.math.util.FastMathStrictComparisonTest#test1 result was not reported by test-runner.
Adding a line where an exception was thrown: org.apache.commons.math.ode.events.EventStateTest$ResettingEvent@-@120
No source code file was found for stack-trace element: org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
Adding a line where an exception was thrown: org.apache.commons.math.ode.events.EventState@-@214
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.events.EventState@-@212
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.events.EventState@-@213
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.events.EventState@-@214
Adding a line where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@302
Adding a line where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@296
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@227
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@230
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@231
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@293
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@294
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@295
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@-@296
Adding a line where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@213
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@200
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@203
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@208
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@209
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@210
Adding a line from the block where an exception was thrown: org.apache.commons.math.ode.AbstractIntegrator@-@213
Test [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses result was not reported by test-runner.
Tests found: 3041
Tests executed: 3039
Suspicious: 1 line org.apache.commons.math.ode.events.EventStateTest$2 l: 82, susp 1.0
Suspicious: 2 line org.apache.commons.math.ode.events.EventStateTest$2 l: 85, susp 1.0
Suspicious: 3 line org.apache.commons.math.ode.events.EventStateTest$2 l: 89, susp 1.0
Suspicious: 4 line org.apache.commons.math.ode.events.EventStateTest$2 l: 90, susp 1.0
Suspicious: 5 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 111, susp 1.0
Suspicious: 6 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 112, susp 1.0
Suspicious: 7 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 113, susp 1.0
Suspicious: 8 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 120, susp 1.0
Suspicious: 9 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 122, susp 1.0
Suspicious: 10 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 127, susp 1.0
Suspicious: 11 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 128, susp 1.0
Suspicious: 12 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 132, susp 1.0
Suspicious: 13 line org.apache.commons.math.ode.events.EventStateTest$ResettingEvent l: 133, susp 1.0
Suspicious: 14 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 209, susp 0.9993410214168039
Suspicious: 15 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 212, susp 0.9993410214168039
Suspicious: 16 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 214, susp 0.9993410214168039
Suspicious: 17 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 252, susp 0.9993410214168039
Suspicious: 18 line org.apache.commons.math.ode.events.EventState l: 334, susp 0.9970414201183432
Suspicious: 19 line org.apache.commons.math.ode.AbstractIntegrator l: 340, susp 0.9960591133004926
Suspicious: 20 line org.apache.commons.math.ode.AbstractIntegrator l: 341, susp 0.9960591133004926
Suspicious: 21 line org.apache.commons.math.ode.AbstractIntegrator l: 342, susp 0.9960591133004926
Suspicious: 22 line org.apache.commons.math.ode.AbstractIntegrator l: 343, susp 0.9960591133004926
Suspicious: 23 line org.apache.commons.math.ode.events.EventState l: 329, susp 0.9954053167049557
Suspicious: 24 line org.apache.commons.math.ode.events.EventState l: 333, susp 0.9954053167049557
Suspicious: 25 line org.apache.commons.math.ode.events.EventState l: 336, susp 0.9954053167049557
Suspicious: 26 line org.apache.commons.math.ode.AbstractIntegrator l: 337, susp 0.9954053167049557
Suspicious: 27 line org.apache.commons.math.ode.events.EventState l: 337, susp 0.9954053167049557
Suspicious: 28 line org.apache.commons.math.ode.events.EventState l: 339, susp 0.9954053167049557
Suspicious: 29 line org.apache.commons.math.ode.AbstractIntegrator l: 128, susp 0.9947523778287964
Suspicious: 30 line org.apache.commons.math.ode.AbstractIntegrator l: 131, susp 0.9947523778287964
Suspicious: 31 line org.apache.commons.math.ode.events.EventState l: 229, susp 0.9947523778287964
Suspicious: 32 line org.apache.commons.math.ode.events.EventState l: 232, susp 0.9947523778287964
Suspicious: 33 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 287, susp 0.9947523778287964
Suspicious: 34 line org.apache.commons.math.ode.AbstractIntegrator$1 l: 296, susp 0.9947523778287964
Suspicious: 35 line org.apache.commons.math.ode.AbstractIntegrator l: 304, susp 0.9947523778287964
Suspicious: 36 line org.apache.commons.math.ode.AbstractIntegrator l: 311, susp 0.9947523778287964
Suspicious: 37 line org.apache.commons.math.ode.AbstractIntegrator l: 312, susp 0.9947523778287964
Suspicious: 38 line org.apache.commons.math.ode.AbstractIntegrator l: 313, susp 0.9947523778287964
Suspicious: 39 line org.apache.commons.math.ode.AbstractIntegrator l: 316, susp 0.9947523778287964
Suspicious: 40 line org.apache.commons.math.ode.AbstractIntegrator l: 317, susp 0.9947523778287964
Suspicious: 41 line org.apache.commons.math.ode.AbstractIntegrator l: 318, susp 0.9947523778287964
Suspicious: 42 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 320, susp 0.9947523778287964
Suspicious: 43 line org.apache.commons.math.ode.AbstractIntegrator l: 321, susp 0.9947523778287964
Suspicious: 44 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 321, susp 0.9947523778287964
Suspicious: 45 line org.apache.commons.math.ode.AbstractIntegrator l: 322, susp 0.9947523778287964
Suspicious: 46 line org.apache.commons.math.ode.AbstractIntegrator l: 323, susp 0.9947523778287964
Suspicious: 47 line org.apache.commons.math.ode.AbstractIntegrator l: 324, susp 0.9947523778287964
Suspicious: 48 line org.apache.commons.math.ode.AbstractIntegrator l: 327, susp 0.9947523778287964
Suspicious: 49 line org.apache.commons.math.ode.AbstractIntegrator l: 331, susp 0.9947523778287964
Suspicious: 50 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 334, susp 0.9947523778287964
Suspicious: 51 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 335, susp 0.9947523778287964
Suspicious: 52 line org.apache.commons.math.ode.events.EventState l: 227, susp 0.9944262295081967
Suspicious: 53 line org.apache.commons.math.ode.events.EventState l: 246, susp 0.9944262295081967
Suspicious: 54 line org.apache.commons.math.ode.events.EventState l: 254, susp 0.9944262295081967
Suspicious: 55 line org.apache.commons.math.ode.events.EventState l: 256, susp 0.9944262295081967
Suspicious: 56 line org.apache.commons.math.ode.events.EventState l: 257, susp 0.9944262295081967
Suspicious: 57 line org.apache.commons.math.ode.events.EventState l: 258, susp 0.9944262295081967
Suspicious: 58 line org.apache.commons.math.ode.events.EventState l: 285, susp 0.9944262295081967
Suspicious: 59 line org.apache.commons.math.ode.events.EventState l: 303, susp 0.9944262295081967
Suspicious: 60 line org.apache.commons.math.ode.events.EventState l: 304, susp 0.9944262295081967
Suspicious: 61 line org.apache.commons.math.ode.events.EventState l: 305, susp 0.9944262295081967
Suspicious: 62 line org.apache.commons.math.ode.AbstractIntegrator l: 139, susp 0.9941002949852508
Suspicious: 63 line org.apache.commons.math.ode.AbstractIntegrator l: 141, susp 0.9941002949852508
Suspicious: 64 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 172, susp 0.9941002949852508
Suspicious: 65 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 173, susp 0.9941002949852508
Suspicious: 66 line org.apache.commons.math.ode.events.EventState$1 l: 202, susp 0.9941002949852508
Suspicious: 67 line org.apache.commons.math.ode.events.EventState$1 l: 203, susp 0.9941002949852508
Suspicious: 68 line org.apache.commons.math.ode.events.EventState l: 221, susp 0.9941002949852508
Suspicious: 69 line org.apache.commons.math.ode.events.EventState l: 225, susp 0.9941002949852508
Suspicious: 70 line org.apache.commons.math.ode.AbstractIntegrator l: 285, susp 0.9941002949852508
Suspicious: 71 line org.apache.commons.math.ode.AbstractIntegrator l: 286, susp 0.9941002949852508
Suspicious: 72 line org.apache.commons.math.ode.AbstractIntegrator l: 302, susp 0.9941002949852508
Suspicious: 73 line org.apache.commons.math.ode.AbstractIntegrator l: 306, susp 0.9941002949852508
Suspicious: 74 line org.apache.commons.math.ode.events.EventState l: 307, susp 0.9941002949852508
Suspicious: 75 line org.apache.commons.math.ode.events.EventState l: 308, susp 0.9941002949852508
Suspicious: 76 line org.apache.commons.math.ode.events.EventState l: 317, susp 0.9941002949852508
Suspicious: 77 line org.apache.commons.math.ode.AbstractIntegrator l: 362, susp 0.9941002949852508
Suspicious: 78 line org.apache.commons.math.ode.AbstractIntegrator l: 363, susp 0.9941002949852508
Suspicious: 79 line org.apache.commons.math.ode.AbstractIntegrator l: 364, susp 0.9941002949852508
Suspicious: 80 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 386, susp 0.9941002949852508
Suspicious: 81 line org.apache.commons.math.ode.events.EventState l: 102, susp 0.9937745740498035
Suspicious: 82 line org.apache.commons.math.ode.events.EventState l: 103, susp 0.9937745740498035
Suspicious: 83 line org.apache.commons.math.ode.events.EventState l: 104, susp 0.9937745740498035
Suspicious: 84 line org.apache.commons.math.ode.events.EventState l: 105, susp 0.9937745740498035
Suspicious: 85 line org.apache.commons.math.ode.events.EventState l: 106, susp 0.9937745740498035
Suspicious: 86 line org.apache.commons.math.ode.events.EventState l: 107, susp 0.9937745740498035
Suspicious: 87 line org.apache.commons.math.ode.events.EventState l: 110, susp 0.9937745740498035
Suspicious: 88 line org.apache.commons.math.ode.events.EventState l: 111, susp 0.9937745740498035
Suspicious: 89 line org.apache.commons.math.ode.events.EventState l: 112, susp 0.9937745740498035
Suspicious: 90 line org.apache.commons.math.ode.events.EventState l: 113, susp 0.9937745740498035
Suspicious: 91 line org.apache.commons.math.ode.events.EventState l: 114, susp 0.9937745740498035
Suspicious: 92 line org.apache.commons.math.ode.events.EventState l: 115, susp 0.9937745740498035
Suspicious: 93 line org.apache.commons.math.ode.events.EventState l: 116, susp 0.9937745740498035
Suspicious: 94 line org.apache.commons.math.ode.events.EventState l: 117, susp 0.9937745740498035
Suspicious: 95 line org.apache.commons.math.ode.events.EventState l: 119, susp 0.9937745740498035
Suspicious: 96 line org.apache.commons.math.ode.events.EventState l: 154, susp 0.9937745740498035
Suspicious: 97 line org.apache.commons.math.ode.events.EventState l: 155, susp 0.9937745740498035
Suspicious: 98 line org.apache.commons.math.ode.events.EventState l: 156, susp 0.9937745740498035
Suspicious: 99 line org.apache.commons.math.ode.events.EventState l: 157, susp 0.9937745740498035
Suspicious: 100 line org.apache.commons.math.ode.events.EventState l: 177, susp 0.9937745740498035
Suspicious: 101 line org.apache.commons.math.ode.events.EventState l: 179, susp 0.9937745740498035
Suspicious: 102 line org.apache.commons.math.ode.events.EventState l: 190, susp 0.9937745740498035
Suspicious: 103 line org.apache.commons.math.ode.events.EventState l: 191, susp 0.9937745740498035
Suspicious: 104 line org.apache.commons.math.ode.events.EventState l: 192, susp 0.9937745740498035
Suspicious: 105 line org.apache.commons.math.ode.events.EventState l: 193, susp 0.9937745740498035
Suspicious: 106 line org.apache.commons.math.ode.events.EventState l: 197, susp 0.9937745740498035
Suspicious: 107 line org.apache.commons.math.ode.events.EventState l: 198, susp 0.9937745740498035
Suspicious: 108 line org.apache.commons.math.ode.events.EventState l: 200, susp 0.9937745740498035
Suspicious: 109 line org.apache.commons.math.ode.events.EventState$1 l: 200, susp 0.9937745740498035
Suspicious: 110 line org.apache.commons.math.ode.events.EventState l: 207, susp 0.9937745740498035
Suspicious: 111 line org.apache.commons.math.ode.events.EventState l: 208, susp 0.9937745740498035
Suspicious: 112 line org.apache.commons.math.ode.events.EventState l: 209, susp 0.9937745740498035
Suspicious: 113 line org.apache.commons.math.ode.events.EventState l: 212, susp 0.9937745740498035
Suspicious: 114 line org.apache.commons.math.ode.events.EventState l: 213, susp 0.9937745740498035
Suspicious: 115 line org.apache.commons.math.ode.events.EventState l: 214, susp 0.9937745740498035
Suspicious: 116 line org.apache.commons.math.ode.events.EventState l: 217, susp 0.9937745740498035
Suspicious: 117 line org.apache.commons.math.ode.events.EventState l: 267, susp 0.9937745740498035
Suspicious: 118 line org.apache.commons.math.ode.events.EventState l: 268, susp 0.9937745740498035
Suspicious: 119 line org.apache.commons.math.ode.events.EventState l: 274, susp 0.9937745740498035
Suspicious: 120 line org.apache.commons.math.ode.events.EventState l: 275, susp 0.9937745740498035
Suspicious: 121 line org.apache.commons.math.ode.events.EventState l: 276, susp 0.9937745740498035
Suspicious: 122 line org.apache.commons.math.ode.events.EventState l: 298, susp 0.9937745740498035
Suspicious: 123 line org.apache.commons.math.ode.events.EventState l: 299, susp 0.9937745740498035
Suspicious: 124 line org.apache.commons.math.ode.events.EventState l: 301, susp 0.9937745740498035
Suspicious: 125 line org.apache.commons.math.ode.events.EventState l: 310, susp 0.9937745740498035
Suspicious: 126 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 385, susp 0.9937745740498035
Suspicious: 127 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 195, susp 0.9924738219895287
Suspicious: 128 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 198, susp 0.9924738219895287
Suspicious: 129 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 199, susp 0.9924738219895287
Suspicious: 130 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 200, susp 0.9924738219895287
Suspicious: 131 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 201, susp 0.9924738219895287
Suspicious: 132 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 202, susp 0.9924738219895287
Suspicious: 133 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 203, susp 0.9924738219895287
Suspicious: 134 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 204, susp 0.9924738219895287
Suspicious: 135 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 205, susp 0.9924738219895287
Suspicious: 136 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 211, susp 0.9924738219895287
Suspicious: 137 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 213, susp 0.9924738219895287
Suspicious: 138 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 233, susp 0.9924738219895287
Suspicious: 139 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 236, susp 0.9924738219895287
Suspicious: 140 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 241, susp 0.9924738219895287
Suspicious: 141 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 246, susp 0.9924738219895287
Suspicious: 142 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 247, susp 0.9924738219895287
Suspicious: 143 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 251, susp 0.9924738219895287
Suspicious: 144 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 252, susp 0.9924738219895287
Suspicious: 145 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 254, susp 0.9924738219895287
Suspicious: 146 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 273, susp 0.9924738219895287
Suspicious: 147 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 275, susp 0.9924738219895287
Suspicious: 148 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 283, susp 0.9924738219895287
Suspicious: 149 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 284, susp 0.9924738219895287
Suspicious: 150 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 318, susp 0.9924738219895287
Suspicious: 151 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 320, susp 0.9924738219895287
Suspicious: 152 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 328, susp 0.9924738219895287
Suspicious: 153 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 331, susp 0.9924738219895287
Suspicious: 154 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 332, susp 0.9924738219895287
Suspicious: 155 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 333, susp 0.9924738219895287
Suspicious: 156 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 334, susp 0.9924738219895287
Suspicious: 157 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 335, susp 0.9924738219895287
Suspicious: 158 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 336, susp 0.9924738219895287
Suspicious: 159 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 337, susp 0.9924738219895287
Suspicious: 160 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 338, susp 0.9924738219895287
Suspicious: 161 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 339, susp 0.9924738219895287
Suspicious: 162 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 340, susp 0.9924738219895287
Suspicious: 163 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 341, susp 0.9924738219895287
Suspicious: 164 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 342, susp 0.9924738219895287
Suspicious: 165 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 343, susp 0.9924738219895287
Suspicious: 166 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 344, susp 0.9924738219895287
Suspicious: 167 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 347, susp 0.9924738219895287
Suspicious: 168 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 348, susp 0.9924738219895287
Suspicious: 169 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 349, susp 0.9924738219895287
Suspicious: 170 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 350, susp 0.9924738219895287
Suspicious: 171 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 357, susp 0.9924738219895287
Suspicious: 172 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 361, susp 0.9924738219895287
Suspicious: 173 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 362, susp 0.9924738219895287
Suspicious: 174 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 363, susp 0.9924738219895287
Suspicious: 175 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 364, susp 0.9924738219895287
Suspicious: 176 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 365, susp 0.9924738219895287
Suspicious: 177 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 365, susp 0.9924738219895287
Suspicious: 178 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 366, susp 0.9924738219895287
Suspicious: 179 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 366, susp 0.9924738219895287
Suspicious: 180 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 367, susp 0.9924738219895287
Suspicious: 181 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 367, susp 0.9924738219895287
Suspicious: 182 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 368, susp 0.9924738219895287
Suspicious: 183 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 368, susp 0.9924738219895287
Suspicious: 184 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 369, susp 0.9924738219895287
Suspicious: 185 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 371, susp 0.9924738219895287
Suspicious: 186 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 372, susp 0.9924738219895287
Suspicious: 187 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 373, susp 0.9924738219895287
Suspicious: 188 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 374, susp 0.9924738219895287
Suspicious: 189 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 375, susp 0.9924738219895287
Suspicious: 190 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 378, susp 0.9924738219895287
Suspicious: 191 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 380, susp 0.9924738219895287
Suspicious: 192 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 385, susp 0.9924738219895287
Suspicious: 193 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 397, susp 0.9924738219895287
Suspicious: 194 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 398, susp 0.9924738219895287
Suspicious: 195 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 401, susp 0.9924738219895287
Suspicious: 196 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 402, susp 0.9924738219895287
Suspicious: 197 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 405, susp 0.9924738219895287
Suspicious: 198 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 407, susp 0.9924738219895287
Suspicious: 199 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 410, susp 0.9924738219895287
Suspicious: 200 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 411, susp 0.9924738219895287
Suspicious: 201 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 415, susp 0.9924738219895287
Suspicious: 202 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 417, susp 0.9924738219895287
Suspicious: 203 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 420, susp 0.9924738219895287
Suspicious: 204 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 421, susp 0.9924738219895287
Suspicious: 205 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 425, susp 0.9924738219895287
Suspicious: 206 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 427, susp 0.9924738219895287
Suspicious: 207 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 429, susp 0.9924738219895287
Suspicious: 208 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 86, susp 0.9918247220405495
Suspicious: 209 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 87, susp 0.9918247220405495
Suspicious: 210 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 88, susp 0.9918247220405495
Suspicious: 211 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 146, susp 0.9918247220405495
Suspicious: 212 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 147, susp 0.9918247220405495
Suspicious: 213 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 148, susp 0.9918247220405495
Suspicious: 214 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 149, susp 0.9918247220405495
Suspicious: 215 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 150, susp 0.9918247220405495
Suspicious: 216 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 151, susp 0.9918247220405495
Suspicious: 217 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 154, susp 0.9918247220405495
Suspicious: 218 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 155, susp 0.9918247220405495
Suspicious: 219 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 161, susp 0.9918247220405495
Suspicious: 220 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 162, susp 0.9918247220405495
Suspicious: 221 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 169, susp 0.9918247220405495
Suspicious: 222 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 82, susp 0.9915004903563256
Suspicious: 223 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 83, susp 0.9915004903563256
Suspicious: 224 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 244, susp 0.9915004903563256
Suspicious: 225 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 246, susp 0.9915004903563256
Suspicious: 226 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 248, susp 0.9915004903563256
Suspicious: 227 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 249, susp 0.9915004903563256
Suspicious: 228 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 250, susp 0.9915004903563256
Suspicious: 229 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 255, susp 0.9915004903563256
Suspicious: 230 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 256, susp 0.9915004903563256
Suspicious: 231 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 258, susp 0.9915004903563256
Suspicious: 232 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 259, susp 0.9915004903563256
Suspicious: 233 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 263, susp 0.9915004903563256
Suspicious: 234 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 268, susp 0.9915004903563256
Suspicious: 235 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 269, susp 0.9915004903563256
Suspicious: 236 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 272, susp 0.9915004903563256
Suspicious: 237 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 273, susp 0.9915004903563256
Suspicious: 238 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 273, susp 0.9915004903563256
Suspicious: 239 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 274, susp 0.9915004903563256
Suspicious: 240 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 275, susp 0.9915004903563256
Suspicious: 241 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 278, susp 0.9915004903563256
Suspicious: 242 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 278, susp 0.9915004903563256
Suspicious: 243 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 279, susp 0.9915004903563256
Suspicious: 244 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 283, susp 0.9915004903563256
Suspicious: 245 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 288, susp 0.9915004903563256
Suspicious: 246 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 290, susp 0.9915004903563256
Suspicious: 247 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 292, susp 0.9915004903563256
Suspicious: 248 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 293, susp 0.9915004903563256
Suspicious: 249 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 294, susp 0.9915004903563256
Suspicious: 250 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 297, susp 0.9915004903563256
Suspicious: 251 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 298, susp 0.9915004903563256
Suspicious: 252 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 299, susp 0.9915004903563256
Suspicious: 253 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 302, susp 0.9915004903563256
Suspicious: 254 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 304, susp 0.9915004903563256
Suspicious: 255 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 309, susp 0.9915004903563256
Suspicious: 256 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 310, susp 0.9915004903563256
Suspicious: 257 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 311, susp 0.9915004903563256
Suspicious: 258 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 391, susp 0.9915004903563256
Suspicious: 259 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 393, susp 0.9915004903563256
Suspicious: 260 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 220, susp 0.9911764705882353
Suspicious: 261 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 223, susp 0.9911764705882353
Suspicious: 262 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 231, susp 0.990205680705191
Suspicious: 263 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 232, susp 0.990205680705191
Suspicious: 264 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 233, susp 0.990205680705191
Suspicious: 265 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 234, susp 0.990205680705191
Suspicious: 266 line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 235, susp 0.990205680705191
Suspicious: 267 line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 247, susp 0.990205680705191
Suspicious: 268 line org.apache.commons.math.util.FastMath l: 3373, susp 0.9895595432300163
Suspicious: 269 line org.apache.commons.math.util.FastMath l: 3375, susp 0.9895595432300163
Suspicious: 270 line org.apache.commons.math.util.FastMath l: 3379, susp 0.9895595432300163
Suspicious: 271 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 305, susp 0.9869834038398958
Suspicious: 272 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 241, susp 0.9857003574910627
Suspicious: 273 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 242, susp 0.9857003574910627
Suspicious: 274 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 296, susp 0.9841012329656067
Suspicious: 275 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 298, susp 0.9841012329656067
Suspicious: 276 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 301, susp 0.9841012329656067
Suspicious: 277 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 303, susp 0.9841012329656067
Suspicious: 278 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 309, susp 0.9841012329656067
Suspicious: 279 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 311, susp 0.9841012329656067
Suspicious: 280 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 312, susp 0.9841012329656067
Suspicious: 281 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 313, susp 0.9841012329656067
Suspicious: 282 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 314, susp 0.9841012329656067
Suspicious: 283 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 316, susp 0.9841012329656067
Suspicious: 284 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 317, susp 0.9841012329656067
Suspicious: 285 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 318, susp 0.9841012329656067
Suspicious: 286 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 324, susp 0.9841012329656067
Suspicious: 287 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 116, susp 0.9834630350194553
Suspicious: 288 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 118, susp 0.9834630350194553
Suspicious: 289 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 119, susp 0.9834630350194553
Suspicious: 290 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 120, susp 0.9834630350194553
Suspicious: 291 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 121, susp 0.9834630350194553
Suspicious: 292 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 122, susp 0.9834630350194553
Suspicious: 293 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 124, susp 0.9834630350194553
Suspicious: 294 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 127, susp 0.9834630350194553
Suspicious: 295 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 128, susp 0.9834630350194553
Suspicious: 296 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 129, susp 0.9834630350194553
Suspicious: 297 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 131, susp 0.9834630350194553
Suspicious: 298 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 293, susp 0.9834630350194553
Suspicious: 299 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 294, susp 0.9834630350194553
Suspicious: 300 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 295, susp 0.9834630350194553
Suspicious: 301 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 235, susp 0.9818711557138232
Suspicious: 302 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 238, susp 0.9818711557138232
Suspicious: 303 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 239, susp 0.9818711557138232
Suspicious: 304 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 240, susp 0.9818711557138232
Suspicious: 305 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 249, susp 0.9818711557138232
Suspicious: 306 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 251, susp 0.9818711557138232
Suspicious: 307 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 254, susp 0.9818711557138232
Suspicious: 308 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 257, susp 0.9818711557138232
Suspicious: 309 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 259, susp 0.9818711557138232
Suspicious: 310 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 260, susp 0.9818711557138232
Suspicious: 311 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 261, susp 0.9818711557138232
Suspicious: 312 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 262, susp 0.9818711557138232
Suspicious: 313 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 264, susp 0.9818711557138232
Suspicious: 314 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 267, susp 0.9818711557138232
Suspicious: 315 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 272, susp 0.9818711557138232
Suspicious: 316 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 273, susp 0.9818711557138232
Suspicious: 317 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 274, susp 0.9818711557138232
Suspicious: 318 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 275, susp 0.9818711557138232
Suspicious: 319 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 277, susp 0.9818711557138232
Suspicious: 320 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 281, susp 0.9818711557138232
Suspicious: 321 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 282, susp 0.9818711557138232
Suspicious: 322 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 195, susp 0.9815533980582525
Suspicious: 323 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 196, susp 0.9815533980582525
Suspicious: 324 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 197, susp 0.9815533980582525
Suspicious: 325 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 198, susp 0.9815533980582525
Suspicious: 326 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 201, susp 0.9815533980582525
Suspicious: 327 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 202, susp 0.9815533980582525
Suspicious: 328 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 203, susp 0.9815533980582525
Suspicious: 329 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 204, susp 0.9815533980582525
Suspicious: 330 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 205, susp 0.9815533980582525
Suspicious: 331 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 206, susp 0.9815533980582525
Suspicious: 332 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 209, susp 0.9815533980582525
Suspicious: 333 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 210, susp 0.9815533980582525
Suspicious: 334 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 212, susp 0.9815533980582525
Suspicious: 335 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 215, susp 0.9815533980582525
Suspicious: 336 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 216, susp 0.9815533980582525
Suspicious: 337 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 217, susp 0.9815533980582525
Suspicious: 338 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 218, susp 0.9815533980582525
Suspicious: 339 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 221, susp 0.9815533980582525
Suspicious: 340 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 224, susp 0.9815533980582525
Suspicious: 341 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 227, susp 0.9815533980582525
Suspicious: 342 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 230, susp 0.9815533980582525
Suspicious: 343 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 231, susp 0.9815533980582525
Suspicious: 344 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 233, susp 0.9815533980582525
Suspicious: 345 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 187, susp 0.9793348401679043
Suspicious: 346 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 188, susp 0.9793348401679043
Suspicious: 347 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 345, susp 0.9793348401679043
Suspicious: 348 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 346, susp 0.9793348401679043
Suspicious: 349 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 359, susp 0.9793348401679043
Suspicious: 350 line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 360, susp 0.9793348401679043
Suspicious: 351 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 333, susp 0.97056
Suspicious: 352 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 331, susp 0.9702495201535509
Suspicious: 353 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 337, susp 0.9702495201535509
Suspicious: 354 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 110, susp 0.9696291560102301
Suspicious: 355 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 111, susp 0.9696291560102301
Suspicious: 356 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 112, susp 0.9696291560102301
Suspicious: 357 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 114, susp 0.9696291560102301
Suspicious: 358 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 157, susp 0.9696291560102301
Suspicious: 359 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 158, susp 0.9696291560102301
Suspicious: 360 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 159, susp 0.9696291560102301
Suspicious: 361 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 161, susp 0.9696291560102301
Suspicious: 362 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 162, susp 0.9696291560102301
Suspicious: 363 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 163, susp 0.9696291560102301
Suspicious: 364 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 164, susp 0.9696291560102301
Suspicious: 365 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 166, susp 0.9696291560102301
Suspicious: 366 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 250, susp 0.9683908045977012
Suspicious: 367 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 321, susp 0.9683908045977012
Suspicious: 368 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 322, susp 0.9683908045977012
Suspicious: 369 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 82, susp 0.9680817108203
Suspicious: 370 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 84, susp 0.9680817108203
Suspicious: 371 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 95, susp 0.9680817108203
Suspicious: 372 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 100, susp 0.9680817108203
Suspicious: 373 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 102, susp 0.9680817108203
Suspicious: 374 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 181, susp 0.9680817108203
Suspicious: 375 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 182, susp 0.9680817108203
Suspicious: 376 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 183, susp 0.9680817108203
Suspicious: 377 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 184, susp 0.9680817108203
Suspicious: 378 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 233, susp 0.9680817108203
Suspicious: 379 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 221, susp 0.9677728142948309
Suspicious: 380 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 223, susp 0.9677728142948309
Suspicious: 381 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 225, susp 0.9677728142948309
Suspicious: 382 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 229, susp 0.9677728142948309
Suspicious: 383 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 131, susp 0.9671556122448979
Suspicious: 384 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 132, susp 0.9671556122448979
Suspicious: 385 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 133, susp 0.9671556122448979
Suspicious: 386 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 134, susp 0.9671556122448979
Suspicious: 387 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 171, susp 0.9671556122448979
Suspicious: 388 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 173, susp 0.9671556122448979
Suspicious: 389 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 174, susp 0.9671556122448979
Suspicious: 390 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 175, susp 0.9671556122448979
Suspicious: 391 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 176, susp 0.9671556122448979
Suspicious: 392 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 177, susp 0.9671556122448979
Suspicious: 393 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 178, susp 0.9671556122448979
Suspicious: 394 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 180, susp 0.9671556122448979
Suspicious: 395 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 199, susp 0.9671556122448979
Suspicious: 396 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 200, susp 0.9671556122448979
Suspicious: 397 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 201, susp 0.9671556122448979
Suspicious: 398 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 202, susp 0.9671556122448979
Suspicious: 399 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 203, susp 0.9671556122448979
Suspicious: 400 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 206, susp 0.9671556122448979
Suspicious: 401 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 248, susp 0.9671556122448979
Suspicious: 402 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 249, susp 0.9671556122448979
Suspicious: 403 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 250, susp 0.9671556122448979
Suspicious: 404 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 251, susp 0.9671556122448979
Suspicious: 405 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 252, susp 0.9671556122448979
Suspicious: 406 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 253, susp 0.9671556122448979
Suspicious: 407 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 254, susp 0.9671556122448979
Suspicious: 408 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 255, susp 0.9671556122448979
Suspicious: 409 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 256, susp 0.9671556122448979
Suspicious: 410 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 257, susp 0.9671556122448979
Suspicious: 411 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 258, susp 0.9671556122448979
Suspicious: 412 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 259, susp 0.9671556122448979
Suspicious: 413 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 260, susp 0.9671556122448979
Suspicious: 414 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 262, susp 0.9671556122448979
Suspicious: 415 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 268, susp 0.9671556122448979
Suspicious: 416 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 271, susp 0.9671556122448979
Suspicious: 417 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 483, susp 0.9668473063436405
Suspicious: 418 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 484, susp 0.9668473063436405
Suspicious: 419 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 486, susp 0.9668473063436405
Suspicious: 420 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 482, susp 0.9665391969407267
Suspicious: 421 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 353, susp 0.9653087205601527
Suspicious: 422 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 354, susp 0.9653087205601527
Suspicious: 423 line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 355, susp 0.9653087205601527
Suspicious: 424 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 58, susp 0.9634688691232528
Suspicious: 425 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 59, susp 0.9634688691232528
Suspicious: 426 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 60, susp 0.9634688691232528
Suspicious: 427 line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 61, susp 0.9634688691232528
Suspicious: 428 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 111, susp 0.9628571428571427
Suspicious: 429 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 112, susp 0.9628571428571427
Suspicious: 430 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 113, susp 0.9628571428571427
Suspicious: 431 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 114, susp 0.9628571428571427
Suspicious: 432 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 115, susp 0.9628571428571427
Suspicious: 433 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 116, susp 0.9628571428571427
Suspicious: 434 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 117, susp 0.9628571428571427
Suspicious: 435 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 118, susp 0.9628571428571427
Suspicious: 436 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 119, susp 0.9628571428571427
Suspicious: 437 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 120, susp 0.9628571428571427
Suspicious: 438 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 121, susp 0.9628571428571427
Suspicious: 439 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 122, susp 0.9628571428571427
Suspicious: 440 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 123, susp 0.9628571428571427
Suspicious: 441 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 124, susp 0.9628571428571427
Suspicious: 442 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 125, susp 0.9628571428571427
Suspicious: 443 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 213, susp 0.9628571428571427
Suspicious: 444 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 214, susp 0.9628571428571427
Suspicious: 445 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 215, susp 0.9628571428571427
Suspicious: 446 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 216, susp 0.9628571428571427
Suspicious: 447 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 217, susp 0.9628571428571427
Suspicious: 448 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 218, susp 0.9628571428571427
Suspicious: 449 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 359, susp 0.96011396011396
Suspicious: 450 line org.apache.commons.math.ode.AbstractIntegrator l: 213, susp 0.9595064852894654
Suspicious: 451 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 368, susp 0.958899778691116
Suspicious: 452 line org.apache.commons.math.ode.AbstractIntegrator l: 278, susp 0.9570842537077943
Suspicious: 453 line org.apache.commons.math.ode.AbstractIntegrator l: 279, susp 0.9570842537077943
Suspicious: 454 line org.apache.commons.math.ode.AbstractIntegrator l: 280, susp 0.9570842537077943
Suspicious: 455 line org.apache.commons.math.ode.AbstractIntegrator l: 283, susp 0.9570842537077943
Suspicious: 456 line org.apache.commons.math.ode.AbstractIntegrator l: 284, susp 0.9570842537077943
Suspicious: 457 line org.apache.commons.math.ode.AbstractIntegrator l: 287, susp 0.9570842537077943
Suspicious: 458 line org.apache.commons.math.ode.AbstractIntegrator l: 291, susp 0.9570842537077943
Suspicious: 459 line org.apache.commons.math.ode.AbstractIntegrator l: 292, susp 0.9570842537077943
Suspicious: 460 line org.apache.commons.math.ode.AbstractIntegrator$1 l: 292, susp 0.9570842537077943
Suspicious: 461 line org.apache.commons.math.ode.AbstractIntegrator l: 301, susp 0.9570842537077943
Suspicious: 462 line org.apache.commons.math.ode.AbstractIntegrator l: 308, susp 0.9570842537077943
Suspicious: 463 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 342, susp 0.9570842537077943
Suspicious: 464 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 350, susp 0.9570842537077943
Suspicious: 465 line org.apache.commons.math.ode.AbstractIntegrator l: 359, susp 0.9570842537077943
Suspicious: 466 line org.apache.commons.math.ode.AbstractIntegrator l: 360, susp 0.9570842537077943
Suspicious: 467 line org.apache.commons.math.ode.AbstractIntegrator l: 361, susp 0.9570842537077943
Suspicious: 468 line org.apache.commons.math.ode.AbstractIntegrator l: 365, susp 0.9570842537077943
Suspicious: 469 line org.apache.commons.math.ode.AbstractIntegrator l: 368, susp 0.9570842537077943
Suspicious: 470 line org.apache.commons.math.ode.AbstractIntegrator l: 372, susp 0.9570842537077943
Suspicious: 471 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 268, susp 0.956782334384858
Suspicious: 472 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 269, susp 0.956782334384858
Suspicious: 473 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 384, susp 0.9564806054872279
Suspicious: 474 line org.apache.commons.math.ode.ExpandableStatefulODE l: 98, susp 0.9561790668348046
Suspicious: 475 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 355, susp 0.9561790668348046
Suspicious: 476 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 356, susp 0.9561790668348046
Suspicious: 477 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 122, susp 0.9558777182477152
Suspicious: 478 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 354, susp 0.9558777182477152
Suspicious: 479 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 195, susp 0.9555765595463137
Suspicious: 480 line org.apache.commons.math.ode.ExpandableStatefulODE l: 115, susp 0.955275590551181
Suspicious: 481 line org.apache.commons.math.ode.ExpandableStatefulODE l: 116, susp 0.955275590551181
Suspicious: 482 line org.apache.commons.math.ode.ExpandableStatefulODE l: 119, susp 0.955275590551181
Suspicious: 483 line org.apache.commons.math.ode.ExpandableStatefulODE l: 126, susp 0.955275590551181
Suspicious: 484 line org.apache.commons.math.ode.AbstractIntegrator l: 250, susp 0.955275590551181
Suspicious: 485 line org.apache.commons.math.ode.AbstractIntegrator l: 251, susp 0.955275590551181
Suspicious: 486 line org.apache.commons.math.ode.EquationsMapper l: 92, susp 0.9549748110831234
Suspicious: 487 line org.apache.commons.math.ode.EquationsMapper l: 95, susp 0.9549748110831234
Suspicious: 488 line org.apache.commons.math.ode.EquationsMapper l: 96, susp 0.9549748110831234
Suspicious: 489 line org.apache.commons.math.ode.ExpandableStatefulODE l: 96, susp 0.9549748110831234
Suspicious: 490 line org.apache.commons.math.ode.ExpandableStatefulODE l: 114, susp 0.9549748110831234
Suspicious: 491 line org.apache.commons.math.ode.ExpandableStatefulODE l: 163, susp 0.9549748110831234
Suspicious: 492 line org.apache.commons.math.ode.ExpandableStatefulODE l: 164, susp 0.9549748110831234
Suspicious: 493 line org.apache.commons.math.ode.ExpandableStatefulODE l: 167, susp 0.9549748110831234
Suspicious: 494 line org.apache.commons.math.ode.AbstractIntegrator l: 192, susp 0.9549748110831234
Suspicious: 495 line org.apache.commons.math.ode.AbstractIntegrator l: 193, susp 0.9549748110831234
Suspicious: 496 line org.apache.commons.math.ode.AbstractIntegrator l: 203, susp 0.9549748110831234
Suspicious: 497 line org.apache.commons.math.ode.AbstractIntegrator l: 208, susp 0.9549748110831234
Suspicious: 498 line org.apache.commons.math.ode.AbstractIntegrator l: 209, susp 0.9549748110831234
Suspicious: 499 line org.apache.commons.math.ode.AbstractIntegrator l: 210, susp 0.9549748110831234
Suspicious: 500 line org.apache.commons.math.ode.AbstractIntegrator l: 249, susp 0.9549748110831234
Suspicious: 501 line org.apache.commons.math.ode.AbstractIntegrator l: 261, susp 0.9549748110831234
Suspicious: 502 line org.apache.commons.math.ode.AbstractIntegrator l: 262, susp 0.9549748110831234
Suspicious: 503 line org.apache.commons.math.ode.ExpandableStatefulODE l: 285, susp 0.9549748110831234
Suspicious: 504 line org.apache.commons.math.ode.ExpandableStatefulODE l: 288, susp 0.9549748110831234
Suspicious: 505 line org.apache.commons.math.ode.ExpandableStatefulODE l: 289, susp 0.9549748110831234
Suspicious: 506 line org.apache.commons.math.ode.ExpandableStatefulODE l: 293, susp 0.9549748110831234
Suspicious: 507 line org.apache.commons.math.ode.ExpandableStatefulODE l: 155, susp 0.9546742209631728
Suspicious: 508 line org.apache.commons.math.ode.AbstractIntegrator l: 392, susp 0.9546742209631728
Suspicious: 509 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 402, susp 0.9546742209631728
Suspicious: 510 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 403, susp 0.9546742209631728
Suspicious: 511 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 404, susp 0.9546742209631728
Suspicious: 512 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 405, susp 0.9546742209631728
Suspicious: 513 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 406, susp 0.9546742209631728
Suspicious: 514 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 408, susp 0.9546742209631728
Suspicious: 515 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 412, susp 0.9546742209631728
Suspicious: 516 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 413, susp 0.9546742209631728
Suspicious: 517 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 415, susp 0.9546742209631728
Suspicious: 518 line org.apache.commons.math.ode.ExpandableStatefulODE l: 72, susp 0.9537735849056603
Suspicious: 519 line org.apache.commons.math.ode.ExpandableStatefulODE l: 73, susp 0.9537735849056603
Suspicious: 520 line org.apache.commons.math.ode.ExpandableStatefulODE l: 74, susp 0.9537735849056603
Suspicious: 521 line org.apache.commons.math.ode.ExpandableStatefulODE l: 75, susp 0.9537735849056603
Suspicious: 522 line org.apache.commons.math.ode.ExpandableStatefulODE l: 76, susp 0.9537735849056603
Suspicious: 523 line org.apache.commons.math.ode.ExpandableStatefulODE l: 77, susp 0.9537735849056603
Suspicious: 524 line org.apache.commons.math.ode.ExpandableStatefulODE l: 78, susp 0.9537735849056603
Suspicious: 525 line org.apache.commons.math.ode.ExpandableStatefulODE l: 79, susp 0.9537735849056603
Suspicious: 526 line org.apache.commons.math.ode.ExpandableStatefulODE l: 80, susp 0.9537735849056603
Suspicious: 527 line org.apache.commons.math.ode.ExpandableStatefulODE l: 174, susp 0.9537735849056603
Suspicious: 528 line org.apache.commons.math.ode.ExpandableStatefulODE l: 175, susp 0.9537735849056603
Suspicious: 529 line org.apache.commons.math.ode.ExpandableStatefulODE l: 181, susp 0.9537735849056603
Suspicious: 530 line org.apache.commons.math.ode.ExpandableStatefulODE l: 192, susp 0.9537735849056603
Suspicious: 531 line org.apache.commons.math.ode.ExpandableStatefulODE l: 197, susp 0.9537735849056603
Suspicious: 532 line org.apache.commons.math.ode.ExpandableStatefulODE l: 199, susp 0.9537735849056603
Suspicious: 533 line org.apache.commons.math.ode.AbstractIntegrator l: 384, susp 0.9537735849056603
Suspicious: 534 line org.apache.commons.math.ode.AbstractIntegrator l: 386, susp 0.9537735849056603
Suspicious: 535 line org.apache.commons.math.ode.AbstractIntegrator l: 387, susp 0.9537735849056603
Suspicious: 536 line org.apache.commons.math.ode.EquationsMapper l: 77, susp 0.9525753768844221
Suspicious: 537 line org.apache.commons.math.ode.EquationsMapper l: 80, susp 0.9525753768844221
Suspicious: 538 line org.apache.commons.math.ode.EquationsMapper l: 81, susp 0.9525753768844221
Suspicious: 539 line org.apache.commons.math.ode.AbstractIntegrator l: 200, susp 0.952276295133438
Suspicious: 540 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 220, susp 0.952276295133438
Suspicious: 541 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 221, susp 0.952276295133438
Suspicious: 542 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 222, susp 0.952276295133438
Suspicious: 543 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 223, susp 0.952276295133438
Suspicious: 544 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 224, susp 0.952276295133438
Suspicious: 545 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 228, susp 0.952276295133438
Suspicious: 546 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 229, susp 0.952276295133438
Suspicious: 547 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 230, susp 0.952276295133438
Suspicious: 548 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 289, susp 0.952276295133438
Suspicious: 549 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 290, susp 0.952276295133438
Suspicious: 550 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 291, susp 0.952276295133438
Suspicious: 551 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 292, susp 0.952276295133438
Suspicious: 552 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 299, susp 0.952276295133438
Suspicious: 553 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 300, susp 0.952276295133438
Suspicious: 554 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 301, susp 0.952276295133438
Suspicious: 555 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 302, susp 0.952276295133438
Suspicious: 556 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 305, susp 0.952276295133438
Suspicious: 557 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 307, susp 0.952276295133438
Suspicious: 558 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 378, susp 0.952276295133438
Suspicious: 559 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 379, susp 0.952276295133438
Suspicious: 560 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 380, susp 0.952276295133438
Suspicious: 561 line org.apache.commons.math.ode.EquationsMapper l: 65, susp 0.9519774011299434
Suspicious: 562 line org.apache.commons.math.ode.EquationsMapper l: 49, susp 0.9510818438381937
Suspicious: 563 line org.apache.commons.math.ode.EquationsMapper l: 50, susp 0.9510818438381937
Suspicious: 564 line org.apache.commons.math.ode.EquationsMapper l: 51, susp 0.9510818438381937
Suspicious: 565 line org.apache.commons.math.ode.EquationsMapper l: 52, susp 0.9510818438381937
Suspicious: 566 line org.apache.commons.math.ode.AbstractIntegrator l: 85, susp 0.9498903852176637
Suspicious: 567 line org.apache.commons.math.ode.AbstractIntegrator l: 86, susp 0.9498903852176637
Suspicious: 568 line org.apache.commons.math.ode.AbstractIntegrator l: 87, susp 0.9498903852176637
Suspicious: 569 line org.apache.commons.math.ode.AbstractIntegrator l: 88, susp 0.9498903852176637
Suspicious: 570 line org.apache.commons.math.ode.AbstractIntegrator l: 89, susp 0.9498903852176637
Suspicious: 571 line org.apache.commons.math.ode.AbstractIntegrator l: 90, susp 0.9498903852176637
Suspicious: 572 line org.apache.commons.math.ode.AbstractIntegrator l: 91, susp 0.9498903852176637
Suspicious: 573 line org.apache.commons.math.ode.AbstractIntegrator l: 92, susp 0.9498903852176637
Suspicious: 574 line org.apache.commons.math.ode.AbstractIntegrator l: 93, susp 0.9498903852176637
Suspicious: 575 line org.apache.commons.math.ode.AbstractIntegrator l: 94, susp 0.9498903852176637
Suspicious: 576 line org.apache.commons.math.ode.AbstractIntegrator l: 95, susp 0.9498903852176637
Suspicious: 577 line org.apache.commons.math.ode.AbstractIntegrator l: 169, susp 0.9498903852176637
Suspicious: 578 line org.apache.commons.math.ode.AbstractIntegrator l: 170, susp 0.9498903852176637
Suspicious: 579 line org.apache.commons.math.ode.AbstractIntegrator l: 185, susp 0.9498903852176637
Suspicious: 580 line org.apache.commons.math.ode.AbstractIntegrator l: 186, susp 0.9498903852176637
Suspicious: 581 line org.apache.commons.math.util.FastMath l: 3032, susp 0.9492957746478873
Suspicious: 582 line org.apache.commons.math.util.FastMath l: 3035, susp 0.9492957746478873
Suspicious: 583 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 134, susp 0.9489987484355444
Suspicious: 584 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 212, susp 0.9489987484355444
Suspicious: 585 line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 236, susp 0.9489987484355444
Suspicious: 586 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 128, susp 0.9472204871955028
Suspicious: 587 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 140, susp 0.9469247580393382
Suspicious: 588 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 190, susp 0.9463338533541342
Suspicious: 589 line org.apache.commons.math.util.FastMath l: 3370, susp 0.9451542536615769
Suspicious: 590 line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 37, susp 0.9448598130841122
Suspicious: 591 line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 38, susp 0.9448598130841122
Suspicious: 592 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 65, susp 0.9428038545228474
Suspicious: 593 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 68, susp 0.9428038545228474
Suspicious: 594 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 110, susp 0.9428038545228474
Suspicious: 595 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 116, susp 0.9428038545228474
Suspicious: 596 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 153, susp 0.9425108763206962
Suspicious: 597 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 154, susp 0.9425108763206962
Suspicious: 598 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 294, susp 0.9425108763206962
Suspicious: 599 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 297, susp 0.9425108763206962
Suspicious: 600 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 298, susp 0.9425108763206962
Suspicious: 601 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 173, susp 0.9422180801491146
Suspicious: 602 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 176, susp 0.9422180801491146
Suspicious: 603 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 177, susp 0.9422180801491146
Suspicious: 604 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 178, susp 0.9422180801491146
Suspicious: 605 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 179, susp 0.9422180801491146
Suspicious: 606 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 180, susp 0.9422180801491146
Suspicious: 607 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 181, susp 0.9422180801491146
Suspicious: 608 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 182, susp 0.9422180801491146
Suspicious: 609 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 187, susp 0.9422180801491146
Suspicious: 610 line org.apache.commons.math.util.FastMath l: 3364, susp 0.9410487123797704
Suspicious: 611 line org.apache.commons.math.util.FastMath l: 3368, susp 0.9410487123797704
Suspicious: 612 line org.apache.commons.math.util.FastMath l: 3369, susp 0.9410487123797704
Suspicious: 613 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 49, susp 0.9407568238213401
Suspicious: 614 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 92, susp 0.9407568238213401
Suspicious: 615 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 93, susp 0.9407568238213401
Suspicious: 616 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 94, susp 0.9407568238213401
Suspicious: 617 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 95, susp 0.9407568238213401
Suspicious: 618 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 96, susp 0.9407568238213401
Suspicious: 619 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 340, susp 0.9390092879256967
Suspicious: 620 line org.apache.commons.math.util.Precision l: 272, susp 0.9381379523662232
Suspicious: 621 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 336, susp 0.9375579598145286
Suspicious: 622 line org.apache.commons.math.util.FastMath l: 920, susp 0.9375579598145286
Suspicious: 623 line org.apache.commons.math.util.FastMath l: 1456, susp 0.9369786839666358
Suspicious: 624 line org.apache.commons.math.util.FastMath l: 1467, susp 0.9369786839666358
Suspicious: 625 line org.apache.commons.math.util.FastMath l: 1479, susp 0.9369786839666358
Suspicious: 626 line org.apache.commons.math.util.FastMath l: 1503, susp 0.9369786839666358
Suspicious: 627 line org.apache.commons.math.util.FastMath l: 1517, susp 0.9369786839666358
Suspicious: 628 line org.apache.commons.math.util.FastMath l: 1534, susp 0.9369786839666358
Suspicious: 629 line org.apache.commons.math.util.FastMath l: 1535, susp 0.9369786839666358
Suspicious: 630 line org.apache.commons.math.util.FastMath l: 1536, susp 0.9369786839666358
Suspicious: 631 line org.apache.commons.math.util.FastMath l: 1537, susp 0.9369786839666358
Suspicious: 632 line org.apache.commons.math.util.FastMath l: 1538, susp 0.9369786839666358
Suspicious: 633 line org.apache.commons.math.util.FastMath l: 1546, susp 0.9369786839666358
Suspicious: 634 line org.apache.commons.math.util.FastMath l: 1547, susp 0.9369786839666358
Suspicious: 635 line org.apache.commons.math.util.FastMath l: 1551, susp 0.9369786839666358
Suspicious: 636 line org.apache.commons.math.util.FastMath l: 1552, susp 0.9369786839666358
Suspicious: 637 line org.apache.commons.math.util.FastMath l: 1555, susp 0.9369786839666358
Suspicious: 638 line org.apache.commons.math.util.FastMath l: 1556, susp 0.9369786839666358
Suspicious: 639 line org.apache.commons.math.util.FastMath l: 1557, susp 0.9369786839666358
Suspicious: 640 line org.apache.commons.math.util.FastMath l: 1558, susp 0.9369786839666358
Suspicious: 641 line org.apache.commons.math.util.FastMath l: 1561, susp 0.9369786839666358
Suspicious: 642 line org.apache.commons.math.util.FastMath l: 1562, susp 0.9369786839666358
Suspicious: 643 line org.apache.commons.math.util.FastMath l: 1564, susp 0.9369786839666358
Suspicious: 644 line org.apache.commons.math.util.FastMath l: 1565, susp 0.9369786839666358
Suspicious: 645 line org.apache.commons.math.util.FastMath l: 1567, susp 0.9369786839666358
Suspicious: 646 line org.apache.commons.math.util.FastMath l: 1568, susp 0.9369786839666358
Suspicious: 647 line org.apache.commons.math.util.FastMath l: 1569, susp 0.9369786839666358
Suspicious: 648 line org.apache.commons.math.util.FastMath l: 1570, susp 0.9369786839666358
Suspicious: 649 line org.apache.commons.math.util.FastMath l: 1571, susp 0.9369786839666358
Suspicious: 650 line org.apache.commons.math.util.FastMath l: 1572, susp 0.9369786839666358
Suspicious: 651 line org.apache.commons.math.util.FastMath l: 1574, susp 0.9369786839666358
Suspicious: 652 line org.apache.commons.math.util.FastMath l: 1576, susp 0.9369786839666358
Suspicious: 653 line org.apache.commons.math.util.FastMath l: 1420, susp 0.9366893143915997
Suspicious: 654 line org.apache.commons.math.util.FastMath l: 1422, susp 0.9366893143915997
Suspicious: 655 line org.apache.commons.math.util.FastMath l: 1426, susp 0.9366893143915997
Suspicious: 656 line org.apache.commons.math.util.FastMath l: 1431, susp 0.9366893143915997
Suspicious: 657 line org.apache.commons.math.util.FastMath l: 1220, susp 0.9355336212214681
Suspicious: 658 line org.apache.commons.math.util.FastMath l: 1221, susp 0.9355336212214681
Suspicious: 659 line org.apache.commons.math.util.FastMath l: 1222, susp 0.9355336212214681
Suspicious: 660 line org.apache.commons.math.util.FastMath l: 1223, susp 0.9355336212214681
Suspicious: 661 line org.apache.commons.math.util.FastMath l: 1224, susp 0.9355336212214681
Suspicious: 662 line org.apache.commons.math.util.FastMath l: 1227, susp 0.9355336212214681
Suspicious: 663 line org.apache.commons.math.util.FastMath l: 1228, susp 0.9355336212214681
Suspicious: 664 line org.apache.commons.math.util.FastMath l: 1229, susp 0.9355336212214681
Suspicious: 665 line org.apache.commons.math.util.FastMath l: 1230, susp 0.9355336212214681
Suspicious: 666 line org.apache.commons.math.util.FastMath l: 1233, susp 0.9355336212214681
Suspicious: 667 line org.apache.commons.math.util.FastMath l: 1234, susp 0.9355336212214681
Suspicious: 668 line org.apache.commons.math.util.FastMath l: 1236, susp 0.9355336212214681
Suspicious: 669 line org.apache.commons.math.util.FastMath l: 1238, susp 0.9355336212214681
Suspicious: 670 line org.apache.commons.math.util.FastMath l: 1239, susp 0.9355336212214681
Suspicious: 671 line org.apache.commons.math.util.FastMath l: 1241, susp 0.9355336212214681
Suspicious: 672 line org.apache.commons.math.util.FastMath l: 1242, susp 0.9355336212214681
Suspicious: 673 line org.apache.commons.math.util.FastMath l: 1243, susp 0.9355336212214681
Suspicious: 674 line org.apache.commons.math.util.FastMath l: 1246, susp 0.9355336212214681
Suspicious: 675 line org.apache.commons.math.util.FastMath l: 1247, susp 0.9355336212214681
Suspicious: 676 line org.apache.commons.math.util.FastMath l: 1249, susp 0.9355336212214681
Suspicious: 677 line org.apache.commons.math.util.FastMath l: 1250, susp 0.9355336212214681
Suspicious: 678 line org.apache.commons.math.util.FastMath l: 1251, susp 0.9355336212214681
Suspicious: 679 line org.apache.commons.math.util.FastMath l: 1255, susp 0.9355336212214681
Suspicious: 680 line org.apache.commons.math.util.FastMath l: 1256, susp 0.9355336212214681
Suspicious: 681 line org.apache.commons.math.util.FastMath l: 1264, susp 0.9355336212214681
Suspicious: 682 line org.apache.commons.math.util.FastMath l: 1265, susp 0.9355336212214681
Suspicious: 683 line org.apache.commons.math.util.FastMath l: 1266, susp 0.9355336212214681
Suspicious: 684 line org.apache.commons.math.util.FastMath l: 1320, susp 0.9355336212214681
Suspicious: 685 line org.apache.commons.math.util.FastMath l: 1321, susp 0.9355336212214681
Suspicious: 686 line org.apache.commons.math.util.FastMath l: 3495, susp 0.9244132886315147
Suspicious: 687 line org.apache.commons.math.util.FastMath l: 3471, susp 0.9207650273224044
Suspicious: 688 line org.apache.commons.math.util.FastMath l: 874, susp 0.9124548736462095
Suspicious: 689 line org.apache.commons.math.util.FastMath l: 875, susp 0.9124548736462095
Suspicious: 690 line org.apache.commons.math.util.FastMath l: 864, susp 0.911358173076923
Suspicious: 691 line org.apache.commons.math.util.FastMath l: 866, susp 0.911358173076923
Suspicious: 692 line org.apache.commons.math.util.FastMath l: 3470, susp 0.90754039497307
Suspicious: 693 line org.apache.commons.math.util.FastMath l: 3354, susp 0.9026785714285716
Suspicious: 694 line org.apache.commons.math.util.FastMath l: 3345, susp 0.8910105757931845
Suspicious: 695 line org.apache.commons.math.util.FastMath l: 3346, susp 0.8910105757931845
Suspicious: 696 line org.apache.commons.math.util.FastMath l: 3350, susp 0.8910105757931845
Suspicious: 697 line org.apache.commons.math.util.FastMath l: 3337, susp 0.8904873752201996
Suspicious: 698 line org.apache.commons.math.util.FastMath l: 3341, susp 0.8904873752201996
Suspicious: 699 line org.apache.commons.math.util.FastMath l: 3539, susp 0.882198952879581
Suspicious: 700 line org.apache.commons.math.util.Precision l: 267, susp 0.8778581765557164
Suspicious: 701 line org.apache.commons.math.util.Precision l: 268, susp 0.8778581765557164
Suspicious: 702 line org.apache.commons.math.util.Precision l: 271, susp 0.8778581765557164
Suspicious: 703 line org.apache.commons.math.util.Precision l: 274, susp 0.8778581765557164
Suspicious: 704 line org.apache.commons.math.util.Precision l: 278, susp 0.8778581765557164
Suspicious: 705 line org.apache.commons.math.util.Precision l: 280, susp 0.8778581765557164
Suspicious: 706 line org.apache.commons.math.util.FastMath l: 3005, susp 0.8773503037315592
Suspicious: 707 line org.apache.commons.math.util.FastMath l: 3542, susp 0.8618925831202047
Suspicious: 708 line org.apache.commons.math.util.Incrementor l: 153, susp 0.8572639909553421
Suspicious: 709 line org.apache.commons.math.util.Incrementor l: 150, susp 0.8570217575586323
Suspicious: 710 line org.apache.commons.math.util.Incrementor l: 159, susp 0.8519662921348314
Suspicious: 711 line org.apache.commons.math.util.Incrementor l: 160, susp 0.8519662921348314
Suspicious: 712 line org.apache.commons.math.util.Incrementor l: 91, susp 0.8479172490914173
Suspicious: 713 line org.apache.commons.math.util.Incrementor l: 92, susp 0.8479172490914173
Suspicious: 714 line org.apache.commons.math.util.FastMath l: 3541, susp 0.8469701200781905
Suspicious: 715 line org.apache.commons.math.util.Incrementor l: 52, susp 0.84555338723167
Suspicious: 716 line org.apache.commons.math.util.Incrementor l: 53, susp 0.84555338723167
Suspicious: 717 line org.apache.commons.math.util.Incrementor l: 61, susp 0.8448467966573816
Suspicious: 718 line org.apache.commons.math.util.Incrementor$1 l: 62, susp 0.8448467966573816
Suspicious: 719 line org.apache.commons.math.util.Incrementor l: 68, susp 0.8448467966573816
Suspicious: 720 line org.apache.commons.math.util.Incrementor l: 40, susp 0.8446115288220551
Suspicious: 721 line org.apache.commons.math.util.Incrementor l: 78, susp 0.8446115288220551
Suspicious: 722 line org.apache.commons.math.util.Incrementor l: 79, susp 0.8446115288220551
Suspicious: 723 line org.apache.commons.math.util.Incrementor l: 80, susp 0.8446115288220551
Suspicious: 724 line org.apache.commons.math.util.Incrementor l: 81, susp 0.8446115288220551
Suspicious: 725 line org.apache.commons.math.util.FastMath l: 3538, susp 0.8403990024937656
Suspicious: 726 line org.apache.commons.math.util.FastMath l: 882, susp 0.8376139188069595
Suspicious: 727 line org.apache.commons.math.util.FastMath l: 883, susp 0.8376139188069595
Suspicious: 728 line org.apache.commons.math.util.FastMath l: 884, susp 0.8376139188069595
Suspicious: 729 line org.apache.commons.math.util.FastMath l: 890, susp 0.8376139188069595
Suspicious: 730 line org.apache.commons.math.util.FastMath l: 899, susp 0.8376139188069595
Suspicious: 731 line org.apache.commons.math.util.FastMath l: 900, susp 0.8376139188069595
Suspicious: 732 line org.apache.commons.math.util.FastMath l: 901, susp 0.8376139188069595
Suspicious: 733 line org.apache.commons.math.util.FastMath l: 902, susp 0.8376139188069595
Suspicious: 734 line org.apache.commons.math.util.FastMath l: 903, susp 0.8376139188069595
Suspicious: 735 line org.apache.commons.math.util.FastMath l: 910, susp 0.8376139188069595
Suspicious: 736 line org.apache.commons.math.util.FastMath l: 911, susp 0.8376139188069595
Suspicious: 737 line org.apache.commons.math.util.FastMath l: 917, susp 0.8376139188069595
Suspicious: 738 line org.apache.commons.math.util.FastMath l: 919, susp 0.8376139188069595
Suspicious: 739 line org.apache.commons.math.util.FastMath l: 925, susp 0.8376139188069595
Suspicious: 740 line org.apache.commons.math.util.FastMath l: 931, susp 0.8376139188069595
Suspicious: 741 line org.apache.commons.math.util.FastMath l: 1202, susp 0.8371515318796577
Suspicious: 742 line org.apache.commons.math.util.FastMath l: 1213, susp 0.8371515318796577
Suspicious: 743 line org.apache.commons.math.util.FastMath l: 1215, susp 0.8371515318796577
Suspicious: 744 line org.apache.commons.math.util.FastMath l: 1216, susp 0.8371515318796577
Suspicious: 745 line org.apache.commons.math.util.FastMath l: 1218, susp 0.8371515318796577
Suspicious: 746 line org.apache.commons.math.util.FastMath l: 1292, susp 0.8371515318796577
Suspicious: 747 line org.apache.commons.math.util.FastMath l: 1293, susp 0.8371515318796577
Suspicious: 748 line org.apache.commons.math.util.FastMath l: 1294, susp 0.8371515318796577
Suspicious: 749 line org.apache.commons.math.util.FastMath l: 1295, susp 0.8371515318796577
Suspicious: 750 line org.apache.commons.math.util.FastMath l: 1296, susp 0.8371515318796577
Suspicious: 751 line org.apache.commons.math.util.FastMath l: 1297, susp 0.8371515318796577
Suspicious: 752 line org.apache.commons.math.util.FastMath l: 1299, susp 0.8371515318796577
Suspicious: 753 line org.apache.commons.math.util.FastMath l: 1300, susp 0.8371515318796577
Suspicious: 754 line org.apache.commons.math.util.FastMath l: 1301, susp 0.8371515318796577
Suspicious: 755 line org.apache.commons.math.util.FastMath l: 1302, susp 0.8371515318796577
Suspicious: 756 line org.apache.commons.math.util.FastMath l: 1304, susp 0.8371515318796577
Suspicious: 757 line org.apache.commons.math.util.FastMath l: 1305, susp 0.8371515318796577
Suspicious: 758 line org.apache.commons.math.util.FastMath l: 1306, susp 0.8371515318796577
Suspicious: 759 line org.apache.commons.math.util.FastMath l: 1307, susp 0.8371515318796577
Suspicious: 760 line org.apache.commons.math.util.FastMath l: 1309, susp 0.8371515318796577
Suspicious: 761 line org.apache.commons.math.util.FastMath l: 1310, susp 0.8371515318796577
Suspicious: 762 line org.apache.commons.math.util.FastMath l: 1311, susp 0.8371515318796577
Suspicious: 763 line org.apache.commons.math.util.FastMath l: 1312, susp 0.8371515318796577
Suspicious: 764 line org.apache.commons.math.util.FastMath l: 1314, susp 0.8371515318796577
Suspicious: 765 line org.apache.commons.math.util.FastMath l: 1315, susp 0.8371515318796577
Suspicious: 766 line org.apache.commons.math.util.FastMath l: 1316, susp 0.8371515318796577
Suspicious: 767 line org.apache.commons.math.util.FastMath l: 1317, susp 0.8371515318796577
Suspicious: 768 line org.apache.commons.math.util.FastMath l: 1319, susp 0.8371515318796577
Suspicious: 769 line org.apache.commons.math.util.FastMath l: 1324, susp 0.8371515318796577
Suspicious: 770 line org.apache.commons.math.util.FastMath l: 826, susp 0.8350770925110133
Suspicious: 771 line org.apache.commons.math.util.FastMath l: 1132, susp 0.8343878954607978
Suspicious: 772 line org.apache.commons.math.util.FastMath l: 1134, susp 0.8343878954607978
Suspicious: 773 line org.apache.commons.math.util.FastMath l: 1154, susp 0.8343878954607978
Suspicious: 774 line org.apache.commons.math.util.FastMath l: 1109, susp 0.8341584158415841
Suspicious: 775 line org.apache.commons.math.util.FastMath l: 1112, susp 0.8341584158415841
Suspicious: 776 line org.apache.commons.math.util.FastMath l: 1123, susp 0.8341584158415841
Suspicious: 777 line org.apache.commons.math.util.FastMath l: 1106, susp 0.8339290624140775
Suspicious: 778 line org.apache.commons.math.util.MathUtils l: 518, susp 0.8197297297297298
Suspicious: 779 line org.apache.commons.math.util.MathUtils l: 515, susp 0.8186234817813764
Suspicious: 780 line org.apache.commons.math.util.FastMath l: 375, susp 0.7643649193548386
Suspicious: 781 line org.apache.commons.math.util.FastMath l: 3023, susp 0.7143193593970796
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 82, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 85, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 89, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 90, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 111, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 112, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 113, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 120, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 122, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 127, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 128, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 132, susp 1.0
Suspicious:  line org.apache.commons.math.ode.events.EventStateTest l: 133, susp 1.0
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 209, susp 0.9993410214168039
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 212, susp 0.9993410214168039
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 214, susp 0.9993410214168039
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 252, susp 0.9993410214168039
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 334, susp 0.9970414201183432
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 340, susp 0.9960591133004926
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 341, susp 0.9960591133004926
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 342, susp 0.9960591133004926
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 343, susp 0.9960591133004926
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 329, susp 0.9954053167049557
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 333, susp 0.9954053167049557
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 336, susp 0.9954053167049557
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 337, susp 0.9954053167049557
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 337, susp 0.9954053167049557
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 339, susp 0.9954053167049557
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 128, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 131, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 229, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 232, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 287, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 296, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 304, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 311, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 312, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 313, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 316, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 317, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 318, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 320, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 321, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 321, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 322, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 323, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 324, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 327, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 331, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 334, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 335, susp 0.9947523778287964
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 227, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 246, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 254, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 256, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 257, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 258, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 285, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 303, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 304, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 305, susp 0.9944262295081967
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 139, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 141, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 172, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 173, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 202, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 203, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 221, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 225, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 285, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 286, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 302, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 306, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 307, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 308, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 317, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 362, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 363, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 364, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 386, susp 0.9941002949852508
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 102, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 103, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 104, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 105, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 106, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 107, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 110, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 111, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 112, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 113, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 114, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 115, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 116, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 117, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 119, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 154, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 155, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 156, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 157, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 177, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 179, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 190, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 191, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 192, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 193, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 197, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 198, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 200, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 200, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 207, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 208, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 209, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 212, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 213, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 214, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 217, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 267, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 268, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 274, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 275, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 276, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 298, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 299, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 301, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.ode.events.EventState l: 310, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 385, susp 0.9937745740498035
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 195, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 198, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 199, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 200, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 201, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 202, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 203, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 204, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 205, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 211, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 213, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 233, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 236, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 241, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 246, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 247, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 251, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 252, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 254, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 273, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 275, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 283, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 284, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 318, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 320, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 328, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 331, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 332, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 333, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 334, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 335, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 336, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 337, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 338, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 339, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 340, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 341, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 342, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 343, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 344, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 347, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 348, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 349, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 350, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 357, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 361, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 362, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 363, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 364, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 365, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 365, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 366, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 366, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 367, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 367, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 368, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 368, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 369, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 371, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 372, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 373, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 374, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 375, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 378, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 380, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 385, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 397, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 398, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 401, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 402, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 405, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 407, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 410, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 411, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 415, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 417, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 420, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 421, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 425, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 427, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 429, susp 0.9924738219895287
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 86, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 87, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 88, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 146, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 147, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 148, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 149, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 150, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 151, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 154, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 155, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 161, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 162, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 169, susp 0.9918247220405495
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 82, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 83, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 244, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 246, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 248, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 249, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 250, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 255, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 256, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 258, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 259, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 263, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 268, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 269, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 272, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 273, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 273, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 274, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 275, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 278, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 278, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 279, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 283, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 288, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 290, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 292, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 293, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 294, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 297, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 298, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 299, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 302, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 304, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 309, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 310, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 311, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 391, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 393, susp 0.9915004903563256
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 220, susp 0.9911764705882353
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 223, susp 0.9911764705882353
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 231, susp 0.990205680705191
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 232, susp 0.990205680705191
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 233, susp 0.990205680705191
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 234, susp 0.990205680705191
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator l: 235, susp 0.990205680705191
Suspicious:  line org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator l: 247, susp 0.990205680705191
Suspicious:  line org.apache.commons.math.util.FastMath l: 3373, susp 0.9895595432300163
Suspicious:  line org.apache.commons.math.util.FastMath l: 3375, susp 0.9895595432300163
Suspicious:  line org.apache.commons.math.util.FastMath l: 3379, susp 0.9895595432300163
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 305, susp 0.9869834038398958
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 241, susp 0.9857003574910627
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 242, susp 0.9857003574910627
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 296, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 298, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 301, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 303, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 309, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 311, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 312, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 313, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 314, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 316, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 317, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 318, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 324, susp 0.9841012329656067
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 116, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 118, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 119, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 120, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 121, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 122, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 124, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 127, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 128, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 129, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 131, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 293, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 294, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 295, susp 0.9834630350194553
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 235, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 238, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 239, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 240, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 249, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 251, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 254, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 257, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 259, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 260, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 261, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 262, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 264, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 267, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 272, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 273, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 274, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 275, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 277, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 281, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 282, susp 0.9818711557138232
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 195, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 196, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 197, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 198, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 201, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 202, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 203, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 204, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 205, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 206, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 209, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 210, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 212, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 215, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 216, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 217, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 218, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 221, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 224, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 227, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 230, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 231, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 233, susp 0.9815533980582525
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 187, susp 0.9793348401679043
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 188, susp 0.9793348401679043
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 345, susp 0.9793348401679043
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 346, susp 0.9793348401679043
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 359, susp 0.9793348401679043
Suspicious:  line org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator l: 360, susp 0.9793348401679043
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 333, susp 0.97056
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 331, susp 0.9702495201535509
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 337, susp 0.9702495201535509
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 110, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 111, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 112, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 114, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 157, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 158, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 159, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 161, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 162, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 163, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 164, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 166, susp 0.9696291560102301
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 250, susp 0.9683908045977012
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 321, susp 0.9683908045977012
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 322, susp 0.9683908045977012
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 82, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 84, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 95, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 100, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 102, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 181, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 182, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 183, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 184, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 233, susp 0.9680817108203
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 221, susp 0.9677728142948309
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 223, susp 0.9677728142948309
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 225, susp 0.9677728142948309
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 229, susp 0.9677728142948309
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 131, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 132, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 133, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 134, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 171, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 173, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 174, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 175, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 176, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 177, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 178, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 180, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 199, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 200, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 201, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 202, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 203, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 206, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 248, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 249, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 250, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 251, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 252, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 253, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 254, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 255, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 256, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 257, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 258, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 259, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 260, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 262, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 268, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 271, susp 0.9671556122448979
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 483, susp 0.9668473063436405
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 484, susp 0.9668473063436405
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 486, susp 0.9668473063436405
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 482, susp 0.9665391969407267
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 353, susp 0.9653087205601527
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 354, susp 0.9653087205601527
Suspicious:  line org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator l: 355, susp 0.9653087205601527
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 58, susp 0.9634688691232528
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 59, susp 0.9634688691232528
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 60, susp 0.9634688691232528
Suspicious:  line org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator l: 61, susp 0.9634688691232528
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 111, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 112, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 113, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 114, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 115, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 116, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 117, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 118, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 119, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 120, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 121, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 122, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 123, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 124, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 125, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 213, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 214, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 215, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 216, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 217, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 218, susp 0.9628571428571427
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 359, susp 0.96011396011396
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 213, susp 0.9595064852894654
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 368, susp 0.958899778691116
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 278, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 279, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 280, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 283, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 284, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 287, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 291, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 292, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 292, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 301, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 308, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 342, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 350, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 359, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 360, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 361, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 365, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 368, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 372, susp 0.9570842537077943
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 268, susp 0.956782334384858
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 269, susp 0.956782334384858
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 384, susp 0.9564806054872279
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 98, susp 0.9561790668348046
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 355, susp 0.9561790668348046
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 356, susp 0.9561790668348046
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 122, susp 0.9558777182477152
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 354, susp 0.9558777182477152
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 195, susp 0.9555765595463137
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 115, susp 0.955275590551181
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 116, susp 0.955275590551181
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 119, susp 0.955275590551181
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 126, susp 0.955275590551181
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 250, susp 0.955275590551181
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 251, susp 0.955275590551181
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 92, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 95, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 96, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 96, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 114, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 163, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 164, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 167, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 192, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 193, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 203, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 208, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 209, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 210, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 249, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 261, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 262, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 285, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 288, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 289, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 293, susp 0.9549748110831234
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 155, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 392, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 402, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 403, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 404, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 405, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 406, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 408, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 412, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 413, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 415, susp 0.9546742209631728
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 72, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 73, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 74, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 75, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 76, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 77, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 78, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 79, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 80, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 174, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 175, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 181, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 192, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 197, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.ExpandableStatefulODE l: 199, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 384, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 386, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 387, susp 0.9537735849056603
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 77, susp 0.9525753768844221
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 80, susp 0.9525753768844221
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 81, susp 0.9525753768844221
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 200, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 220, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 221, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 222, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 223, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 224, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 228, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 229, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 230, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 289, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 290, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 291, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 292, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 299, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 300, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 301, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 302, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 305, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 307, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 378, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 379, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 380, susp 0.952276295133438
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 65, susp 0.9519774011299434
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 49, susp 0.9510818438381937
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 50, susp 0.9510818438381937
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 51, susp 0.9510818438381937
Suspicious:  line org.apache.commons.math.ode.EquationsMapper l: 52, susp 0.9510818438381937
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 85, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 86, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 87, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 88, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 89, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 90, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 91, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 92, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 93, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 94, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 95, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 169, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 170, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 185, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.ode.AbstractIntegrator l: 186, susp 0.9498903852176637
Suspicious:  line org.apache.commons.math.util.FastMath l: 3032, susp 0.9492957746478873
Suspicious:  line org.apache.commons.math.util.FastMath l: 3035, susp 0.9492957746478873
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 134, susp 0.9489987484355444
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 212, susp 0.9489987484355444
Suspicious:  line org.apache.commons.math.ode.sampling.AbstractStepInterpolator l: 236, susp 0.9489987484355444
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 128, susp 0.9472204871955028
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 140, susp 0.9469247580393382
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 190, susp 0.9463338533541342
Suspicious:  line org.apache.commons.math.util.FastMath l: 3370, susp 0.9451542536615769
Suspicious:  line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 37, susp 0.9448598130841122
Suspicious:  line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 38, susp 0.9448598130841122
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 65, susp 0.9428038545228474
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 68, susp 0.9428038545228474
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 110, susp 0.9428038545228474
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 116, susp 0.9428038545228474
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 153, susp 0.9425108763206962
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 154, susp 0.9425108763206962
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 294, susp 0.9425108763206962
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 297, susp 0.9425108763206962
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 298, susp 0.9425108763206962
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 173, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 176, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 177, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 178, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 179, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 180, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 181, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 182, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 187, susp 0.9422180801491146
Suspicious:  line org.apache.commons.math.util.FastMath l: 3364, susp 0.9410487123797704
Suspicious:  line org.apache.commons.math.util.FastMath l: 3368, susp 0.9410487123797704
Suspicious:  line org.apache.commons.math.util.FastMath l: 3369, susp 0.9410487123797704
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 49, susp 0.9407568238213401
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 92, susp 0.9407568238213401
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 93, susp 0.9407568238213401
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 94, susp 0.9407568238213401
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 95, susp 0.9407568238213401
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 96, susp 0.9407568238213401
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 340, susp 0.9390092879256967
Suspicious:  line org.apache.commons.math.util.Precision l: 272, susp 0.9381379523662232
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 336, susp 0.9375579598145286
Suspicious:  line org.apache.commons.math.util.FastMath l: 920, susp 0.9375579598145286
Suspicious:  line org.apache.commons.math.util.FastMath l: 1456, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1467, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1479, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1503, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1517, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1534, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1535, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1536, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1537, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1538, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1546, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1547, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1551, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1552, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1555, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1556, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1557, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1558, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1561, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1562, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1564, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1565, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1567, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1568, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1569, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1570, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1571, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1572, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1574, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1576, susp 0.9369786839666358
Suspicious:  line org.apache.commons.math.util.FastMath l: 1420, susp 0.9366893143915997
Suspicious:  line org.apache.commons.math.util.FastMath l: 1422, susp 0.9366893143915997
Suspicious:  line org.apache.commons.math.util.FastMath l: 1426, susp 0.9366893143915997
Suspicious:  line org.apache.commons.math.util.FastMath l: 1431, susp 0.9366893143915997
Suspicious:  line org.apache.commons.math.util.FastMath l: 1220, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1221, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1222, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1223, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1224, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1227, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1228, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1229, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1230, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1233, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1234, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1236, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1238, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1239, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1241, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1242, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1243, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1246, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1247, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1249, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1250, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1251, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1255, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1256, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1264, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1265, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1266, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1320, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 1321, susp 0.9355336212214681
Suspicious:  line org.apache.commons.math.util.FastMath l: 3495, susp 0.9244132886315147
Suspicious:  line org.apache.commons.math.util.FastMath l: 3471, susp 0.9207650273224044
Suspicious:  line org.apache.commons.math.util.FastMath l: 874, susp 0.9124548736462095
Suspicious:  line org.apache.commons.math.util.FastMath l: 875, susp 0.9124548736462095
Suspicious:  line org.apache.commons.math.util.FastMath l: 864, susp 0.911358173076923
Suspicious:  line org.apache.commons.math.util.FastMath l: 866, susp 0.911358173076923
Suspicious:  line org.apache.commons.math.util.FastMath l: 3470, susp 0.90754039497307
Suspicious:  line org.apache.commons.math.util.FastMath l: 3354, susp 0.9026785714285716
Suspicious:  line org.apache.commons.math.util.FastMath l: 3345, susp 0.8910105757931845
Suspicious:  line org.apache.commons.math.util.FastMath l: 3346, susp 0.8910105757931845
Suspicious:  line org.apache.commons.math.util.FastMath l: 3350, susp 0.8910105757931845
Suspicious:  line org.apache.commons.math.util.FastMath l: 3337, susp 0.8904873752201996
Suspicious:  line org.apache.commons.math.util.FastMath l: 3341, susp 0.8904873752201996
Suspicious:  line org.apache.commons.math.util.FastMath l: 3539, susp 0.882198952879581
Suspicious:  line org.apache.commons.math.util.Precision l: 267, susp 0.8778581765557164
Suspicious:  line org.apache.commons.math.util.Precision l: 268, susp 0.8778581765557164
Suspicious:  line org.apache.commons.math.util.Precision l: 271, susp 0.8778581765557164
Suspicious:  line org.apache.commons.math.util.Precision l: 274, susp 0.8778581765557164
Suspicious:  line org.apache.commons.math.util.Precision l: 278, susp 0.8778581765557164
Suspicious:  line org.apache.commons.math.util.Precision l: 280, susp 0.8778581765557164
Suspicious:  line org.apache.commons.math.util.FastMath l: 3005, susp 0.8773503037315592
Suspicious:  line org.apache.commons.math.util.FastMath l: 3542, susp 0.8618925831202047
Suspicious:  line org.apache.commons.math.util.Incrementor l: 153, susp 0.8572639909553421
Suspicious:  line org.apache.commons.math.util.Incrementor l: 150, susp 0.8570217575586323
Suspicious:  line org.apache.commons.math.util.Incrementor l: 159, susp 0.8519662921348314
Suspicious:  line org.apache.commons.math.util.Incrementor l: 160, susp 0.8519662921348314
Suspicious:  line org.apache.commons.math.util.Incrementor l: 91, susp 0.8479172490914173
Suspicious:  line org.apache.commons.math.util.Incrementor l: 92, susp 0.8479172490914173
Suspicious:  line org.apache.commons.math.util.FastMath l: 3541, susp 0.8469701200781905
Suspicious:  line org.apache.commons.math.util.Incrementor l: 52, susp 0.84555338723167
Suspicious:  line org.apache.commons.math.util.Incrementor l: 53, susp 0.84555338723167
Suspicious:  line org.apache.commons.math.util.Incrementor l: 61, susp 0.8448467966573816
Suspicious:  line org.apache.commons.math.util.Incrementor l: 62, susp 0.8448467966573816
Suspicious:  line org.apache.commons.math.util.Incrementor l: 68, susp 0.8448467966573816
Suspicious:  line org.apache.commons.math.util.Incrementor l: 40, susp 0.8446115288220551
Suspicious:  line org.apache.commons.math.util.Incrementor l: 78, susp 0.8446115288220551
Suspicious:  line org.apache.commons.math.util.Incrementor l: 79, susp 0.8446115288220551
Suspicious:  line org.apache.commons.math.util.Incrementor l: 80, susp 0.8446115288220551
Suspicious:  line org.apache.commons.math.util.Incrementor l: 81, susp 0.8446115288220551
Suspicious:  line org.apache.commons.math.util.FastMath l: 3538, susp 0.8403990024937656
Suspicious:  line org.apache.commons.math.util.FastMath l: 882, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 883, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 884, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 890, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 899, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 900, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 901, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 902, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 903, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 910, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 911, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 917, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 919, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 925, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 931, susp 0.8376139188069595
Suspicious:  line org.apache.commons.math.util.FastMath l: 1202, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1213, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1215, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1216, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1218, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1292, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1293, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1294, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1295, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1296, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1297, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1299, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1300, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1301, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1302, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1304, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1305, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1306, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1307, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1309, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1310, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1311, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1312, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1314, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1315, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1316, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1317, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1319, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 1324, susp 0.8371515318796577
Suspicious:  line org.apache.commons.math.util.FastMath l: 826, susp 0.8350770925110133
Suspicious:  line org.apache.commons.math.util.FastMath l: 1132, susp 0.8343878954607978
Suspicious:  line org.apache.commons.math.util.FastMath l: 1134, susp 0.8343878954607978
Suspicious:  line org.apache.commons.math.util.FastMath l: 1154, susp 0.8343878954607978
Suspicious:  line org.apache.commons.math.util.FastMath l: 1109, susp 0.8341584158415841
Suspicious:  line org.apache.commons.math.util.FastMath l: 1112, susp 0.8341584158415841
Suspicious:  line org.apache.commons.math.util.FastMath l: 1123, susp 0.8341584158415841
Suspicious:  line org.apache.commons.math.util.FastMath l: 1106, susp 0.8339290624140775
Suspicious:  line org.apache.commons.math.util.MathUtils l: 518, susp 0.8197297297297298
Suspicious:  line org.apache.commons.math.util.MathUtils l: 515, susp 0.8186234817813764
Suspicious:  line org.apache.commons.math.util.FastMath l: 375, susp 0.7643649193548386
Suspicious:  line org.apache.commons.math.util.FastMath l: 3023, susp 0.7143193593970796
Executing time Fault localization: 249 sec
Setting up the max to 2490840 milliseconds (2490 sec)
---- Initial suspicious size: 781
Creating variant 1
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$2, methodName=null, lineNumber=82, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$2, methodName=null, lineNumber=85, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$2, methodName=null, lineNumber=89, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$2, methodName=null, lineNumber=90, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=111, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=112, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=113, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=120, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=122, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=127, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=128, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=132, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.events.EventStateTest$ResettingEvent, methodName=null, lineNumber=133, susp=1.0]
--ModifPoint:CtIfImpl, suspValue 0.9993410214168039, line 209, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9993410214168039, line 212, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9993410214168039, line 252, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9970414201183432, line 334, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9960591133004926, line 340, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9960591133004926, line 341, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9960591133004926, line 342, file AbstractIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9960591133004926, line 343, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9954053167049557, line 329, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9954053167049557, line 333, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9954053167049557, line 336, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9954053167049557, line 337, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9954053167049557, line 337, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9954053167049557, line 339, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 128, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9947523778287964, line 229, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9947523778287964, line 287, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9947523778287964, line 296, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 304, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9947523778287964, line 311, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9947523778287964, line 312, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 313, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9947523778287964, line 316, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 317, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 318, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9947523778287964, line 320, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 321, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9947523778287964, line 322, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9947523778287964, line 323, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9947523778287964, line 324, file AbstractIntegrator.java
--ModifPoint:CtForEachImpl, suspValue 0.9947523778287964, line 327, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9947523778287964, line 331, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9947523778287964, line 334, file AbstractStepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9944262295081967, line 227, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9944262295081967, line 246, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9944262295081967, line 254, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9944262295081967, line 256, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9944262295081967, line 257, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9944262295081967, line 258, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9944262295081967, line 285, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9944262295081967, line 303, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9944262295081967, line 304, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9944262295081967, line 305, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9941002949852508, line 139, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9941002949852508, line 172, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9941002949852508, line 173, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9941002949852508, line 202, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9941002949852508, line 203, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9941002949852508, line 221, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9941002949852508, line 225, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9941002949852508, line 285, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9941002949852508, line 302, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9941002949852508, line 307, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9941002949852508, line 308, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9941002949852508, line 317, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9941002949852508, line 362, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9941002949852508, line 363, file AbstractIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9941002949852508, line 386, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 103, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 104, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 105, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 106, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 107, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 110, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 111, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 112, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 113, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 114, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 115, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 116, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 117, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 154, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9937745740498035, line 155, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 156, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9937745740498035, line 157, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 177, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 190, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 191, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 192, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9937745740498035, line 193, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 197, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 198, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 200, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 200, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 207, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 208, file EventState.java
--ModifPoint:CtForImpl, suspValue 0.9937745740498035, line 209, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 212, file EventState.java
--ModifPoint:CtInvocationImpl, suspValue 0.9937745740498035, line 213, file EventState.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9937745740498035, line 214, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9937745740498035, line 217, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 267, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 268, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 274, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 275, file EventState.java
--ModifPoint:CtReturnImpl, suspValue 0.9937745740498035, line 276, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 298, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 299, file EventState.java
--ModifPoint:CtIfImpl, suspValue 0.9937745740498035, line 301, file EventState.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9937745740498035, line 385, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 195, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 198, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 199, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 200, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 201, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 202, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 203, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 204, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 205, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 211, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 213, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 233, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 236, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 241, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 246, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 247, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9924738219895287, line 251, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 252, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 254, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 275, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 283, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 284, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 318, file DormandPrince853StepInterpolator.java
--ModifPoint:CtIfImpl, suspValue 0.9924738219895287, line 320, file DormandPrince853StepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9924738219895287, line 328, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 331, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 332, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 333, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 334, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 335, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 336, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 337, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 338, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 339, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 340, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 341, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 342, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 343, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 344, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 347, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 348, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 349, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 350, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 357, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 361, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 362, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 363, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 364, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 365, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 365, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 366, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 366, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 367, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 367, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 368, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 368, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 369, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 371, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 372, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 373, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 374, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 375, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9924738219895287, line 378, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 380, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 397, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9924738219895287, line 398, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 401, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 402, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 405, file DormandPrince853StepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9924738219895287, line 407, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 410, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 411, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 415, file DormandPrince853StepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9924738219895287, line 417, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9924738219895287, line 420, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 421, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9924738219895287, line 425, file DormandPrince853StepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9924738219895287, line 427, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 86, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 87, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9918247220405495, line 146, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9918247220405495, line 147, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 148, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 149, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 150, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9918247220405495, line 151, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 154, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9918247220405495, line 155, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9918247220405495, line 161, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9918247220405495, line 162, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9918247220405495, line 169, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9915004903563256, line 83, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9915004903563256, line 246, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 248, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 249, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 250, file DormandPrince853StepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 255, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 256, file DormandPrince853Integrator.java
--ModifPoint:CtForImpl, suspValue 0.9915004903563256, line 258, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 259, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 263, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 268, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 269, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 272, file DormandPrince853Integrator.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9915004903563256, line 273, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 274, file DormandPrince853Integrator.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9915004903563256, line 275, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 278, file DormandPrince853Integrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9915004903563256, line 278, file DormandPrince853StepInterpolator.java
--ModifPoint:CtIfImpl, suspValue 0.9915004903563256, line 279, file DormandPrince853Integrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9915004903563256, line 283, file DormandPrince853Integrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9915004903563256, line 290, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 292, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9915004903563256, line 293, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 294, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 297, file DormandPrince853StepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.9915004903563256, line 298, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 299, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 302, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9915004903563256, line 310, file DormandPrince853StepInterpolator.java
--ModifPoint:CtIfImpl, suspValue 0.9915004903563256, line 391, file DormandPrince853StepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9915004903563256, line 393, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.990205680705191, line 232, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.990205680705191, line 233, file DormandPrince853StepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.990205680705191, line 234, file DormandPrince853StepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.990205680705191, line 247, file DormandPrince853Integrator.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9895595432300163, line 3373, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9895595432300163, line 3375, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9895595432300163, line 3379, file FastMath.java
--ModifPoint:CtInvocationImpl, suspValue 0.9869834038398958, line 305, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForImpl, suspValue 0.9857003574910627, line 241, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9857003574910627, line 242, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9841012329656067, line 296, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9841012329656067, line 298, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9841012329656067, line 301, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9841012329656067, line 303, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9841012329656067, line 309, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9841012329656067, line 311, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9841012329656067, line 312, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9841012329656067, line 313, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9841012329656067, line 314, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9841012329656067, line 316, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9841012329656067, line 317, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9841012329656067, line 318, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9834630350194553, line 118, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9834630350194553, line 119, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9834630350194553, line 120, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9834630350194553, line 121, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9834630350194553, line 122, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9834630350194553, line 124, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9834630350194553, line 127, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9834630350194553, line 128, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9834630350194553, line 129, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9834630350194553, line 293, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9834630350194553, line 294, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9834630350194553, line 295, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9818711557138232, line 235, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9818711557138232, line 238, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9818711557138232, line 239, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9818711557138232, line 240, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9818711557138232, line 249, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9818711557138232, line 251, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9818711557138232, line 254, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForImpl, suspValue 0.9818711557138232, line 257, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForImpl, suspValue 0.9818711557138232, line 259, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9818711557138232, line 260, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForImpl, suspValue 0.9818711557138232, line 261, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9818711557138232, line 262, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9818711557138232, line 264, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9818711557138232, line 267, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForImpl, suspValue 0.9818711557138232, line 272, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9818711557138232, line 273, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForImpl, suspValue 0.9818711557138232, line 274, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9818711557138232, line 275, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9818711557138232, line 277, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9818711557138232, line 281, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9818711557138232, line 282, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 195, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 196, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 197, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 198, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 201, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 202, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 203, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 204, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 205, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 206, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 209, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 210, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 212, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9815533980582525, line 215, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 216, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 217, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtForEachImpl, suspValue 0.9815533980582525, line 218, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 221, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9815533980582525, line 224, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9815533980582525, line 227, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9815533980582525, line 230, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtWhileImpl, suspValue 0.9815533980582525, line 231, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9815533980582525, line 233, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9793348401679043, line 187, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9793348401679043, line 345, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9793348401679043, line 359, file EmbeddedRungeKuttaIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.97056, line 333, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9702495201535509, line 331, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9702495201535509, line 337, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9696291560102301, line 111, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9696291560102301, line 112, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 157, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 158, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 159, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 161, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 162, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 163, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9696291560102301, line 164, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9683908045977012, line 250, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9683908045977012, line 321, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9683908045977012, line 322, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9680817108203, line 84, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9680817108203, line 95, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9680817108203, line 100, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9680817108203, line 181, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9680817108203, line 182, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9680817108203, line 183, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9680817108203, line 184, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9677728142948309, line 223, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9677728142948309, line 225, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9677728142948309, line 229, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9671556122448979, line 131, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 132, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 133, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 173, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 174, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 175, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 176, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 177, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 178, file AbstractStepInterpolator.java
--ModifPoint:CtIfImpl, suspValue 0.9671556122448979, line 180, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 199, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 200, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 201, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 202, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 203, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 248, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 249, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 250, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 251, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 252, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 253, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 254, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 255, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 256, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 257, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 258, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9671556122448979, line 259, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9671556122448979, line 260, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9671556122448979, line 268, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9671556122448979, line 271, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9668473063436405, line 483, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9668473063436405, line 484, file AbstractStepInterpolator.java
--ModifPoint:CtIfImpl, suspValue 0.9665391969407267, line 482, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9653087205601527, line 353, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9653087205601527, line 354, file AdaptiveStepsizeIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9634688691232528, line 59, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9634688691232528, line 60, file RungeKuttaStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 112, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 113, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 114, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 115, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 116, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 117, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 118, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 119, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 120, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 121, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 122, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 123, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9628571428571427, line 124, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 213, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 214, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 215, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 216, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 217, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9628571428571427, line 218, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.96011396011396, line 359, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9595064852894654, line 213, file AbstractIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.958899778691116, line 368, file AbstractStepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9570842537077943, line 278, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9570842537077943, line 279, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9570842537077943, line 280, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9570842537077943, line 283, file AbstractIntegrator.java
--ModifPoint:CtForEachImpl, suspValue 0.9570842537077943, line 284, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9570842537077943, line 287, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9570842537077943, line 291, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9570842537077943, line 292, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9570842537077943, line 292, file AbstractIntegrator.java
--ModifPoint:CtForEachImpl, suspValue 0.9570842537077943, line 301, file AbstractIntegrator.java
--ModifPoint:CtWhileImpl, suspValue 0.9570842537077943, line 308, file AbstractIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9570842537077943, line 342, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9570842537077943, line 350, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9570842537077943, line 359, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9570842537077943, line 360, file AbstractIntegrator.java
--ModifPoint:CtForEachImpl, suspValue 0.9570842537077943, line 361, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9570842537077943, line 365, file AbstractIntegrator.java
--ModifPoint:CtForEachImpl, suspValue 0.9570842537077943, line 368, file AbstractIntegrator.java
--ModifPoint:CtReturnImpl, suspValue 0.9570842537077943, line 372, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.956782334384858, line 268, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9564806054872279, line 384, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9561790668348046, line 98, file ExpandableStatefulODE.java
--ModifPoint:CtInvocationImpl, suspValue 0.9561790668348046, line 355, file UnivariateRealSolverUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.9558777182477152, line 122, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9558777182477152, line 354, file UnivariateRealSolverUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.9555765595463137, line 195, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.955275590551181, line 115, file ExpandableStatefulODE.java
--ModifPoint:CtInvocationImpl, suspValue 0.955275590551181, line 116, file ExpandableStatefulODE.java
--ModifPoint:CtForEachImpl, suspValue 0.955275590551181, line 119, file ExpandableStatefulODE.java
--ModifPoint:CtInvocationImpl, suspValue 0.955275590551181, line 250, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9549748110831234, line 92, file EquationsMapper.java
--ModifPoint:CtInvocationImpl, suspValue 0.9549748110831234, line 95, file EquationsMapper.java
--ModifPoint:CtIfImpl, suspValue 0.9549748110831234, line 96, file ExpandableStatefulODE.java
--ModifPoint:CtInvocationImpl, suspValue 0.9549748110831234, line 114, file ExpandableStatefulODE.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9549748110831234, line 163, file ExpandableStatefulODE.java
--ModifPoint:CtForImpl, suspValue 0.9549748110831234, line 164, file ExpandableStatefulODE.java
--ModifPoint:CtReturnImpl, suspValue 0.9549748110831234, line 167, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9549748110831234, line 192, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9549748110831234, line 203, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9549748110831234, line 208, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9549748110831234, line 209, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9549748110831234, line 210, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9549748110831234, line 249, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9549748110831234, line 261, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9549748110831234, line 285, file ExpandableStatefulODE.java
--ModifPoint:CtInvocationImpl, suspValue 0.9549748110831234, line 288, file ExpandableStatefulODE.java
--ModifPoint:CtForEachImpl, suspValue 0.9549748110831234, line 289, file ExpandableStatefulODE.java
--ModifPoint:CtReturnImpl, suspValue 0.9549748110831234, line 293, file ExpandableStatefulODE.java
--ModifPoint:CtReturnImpl, suspValue 0.9546742209631728, line 155, file ExpandableStatefulODE.java
--ModifPoint:CtIfImpl, suspValue 0.9546742209631728, line 402, file AbstractStepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9546742209631728, line 403, file AbstractStepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9546742209631728, line 404, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9546742209631728, line 405, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9546742209631728, line 406, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9546742209631728, line 412, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9546742209631728, line 413, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9546742209631728, line 415, file AbstractStepInterpolator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9537735849056603, line 73, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 74, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 75, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 76, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 77, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 78, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 79, file ExpandableStatefulODE.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9537735849056603, line 174, file ExpandableStatefulODE.java
--ModifPoint:CtReturnImpl, suspValue 0.9537735849056603, line 181, file ExpandableStatefulODE.java
--ModifPoint:CtIfImpl, suspValue 0.9537735849056603, line 192, file ExpandableStatefulODE.java
--ModifPoint:CtInvocationImpl, suspValue 0.9537735849056603, line 197, file ExpandableStatefulODE.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9537735849056603, line 384, file AbstractIntegrator.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9537735849056603, line 386, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9537735849056603, line 387, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9525753768844221, line 77, file EquationsMapper.java
--ModifPoint:CtInvocationImpl, suspValue 0.9525753768844221, line 80, file EquationsMapper.java
--ModifPoint:CtIfImpl, suspValue 0.952276295133438, line 200, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 220, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 221, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 222, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 223, file AbstractStepInterpolator.java
--ModifPoint:CtIfImpl, suspValue 0.952276295133438, line 224, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 228, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 229, file AbstractStepInterpolator.java
--ModifPoint:CtForImpl, suspValue 0.952276295133438, line 230, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 289, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 290, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 291, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 299, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 300, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 301, file AbstractStepInterpolator.java
--ModifPoint:CtInvocationImpl, suspValue 0.952276295133438, line 302, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 305, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 378, file AbstractStepInterpolator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.952276295133438, line 379, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9519774011299434, line 65, file EquationsMapper.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9510818438381937, line 50, file EquationsMapper.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9510818438381937, line 51, file EquationsMapper.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 86, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 87, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 88, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 89, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 90, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 91, file AbstractIntegrator.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9498903852176637, line 92, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9498903852176637, line 93, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9498903852176637, line 94, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9498903852176637, line 169, file AbstractIntegrator.java
--ModifPoint:CtInvocationImpl, suspValue 0.9498903852176637, line 185, file AbstractIntegrator.java
--ModifPoint:CtIfImpl, suspValue 0.9492957746478873, line 3032, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9492957746478873, line 3035, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9489987484355444, line 134, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9489987484355444, line 212, file AbstractStepInterpolator.java
--ModifPoint:CtReturnImpl, suspValue 0.9472204871955028, line 128, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9469247580393382, line 140, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9463338533541342, line 190, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9451542536615769, line 3370, file FastMath.java
--ModifPoint:CtInvocationImpl, suspValue 0.9428038545228474, line 65, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9428038545228474, line 110, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9428038545228474, line 116, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9425108763206962, line 153, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.9425108763206962, line 154, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9425108763206962, line 294, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9422180801491146, line 173, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9422180801491146, line 176, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9422180801491146, line 177, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9422180801491146, line 178, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9422180801491146, line 179, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9422180801491146, line 180, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9422180801491146, line 181, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.9422180801491146, line 187, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtIfImpl, suspValue 0.9410487123797704, line 3364, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9410487123797704, line 3368, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9410487123797704, line 3369, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9407568238213401, line 93, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9407568238213401, line 94, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9407568238213401, line 95, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9381379523662232, line 272, file Precision.java
--ModifPoint:CtIfImpl, suspValue 0.9375579598145286, line 336, file UnivariateRealSolverUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9375579598145286, line 920, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1456, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1467, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1479, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1503, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1517, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1534, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1535, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1536, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1537, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1546, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9369786839666358, line 1547, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1551, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1552, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1555, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1556, file FastMath.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9369786839666358, line 1557, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1558, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1561, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1562, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1564, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1565, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1567, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1568, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1569, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1570, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1571, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9369786839666358, line 1572, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9369786839666358, line 1574, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9369786839666358, line 1576, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9366893143915997, line 1420, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9366893143915997, line 1422, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9366893143915997, line 1426, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.9366893143915997, line 1431, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1220, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1221, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1222, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1223, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1224, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1227, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1228, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1229, file FastMath.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.9355336212214681, line 1230, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1233, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.9355336212214681, line 1234, file FastMath.java
--ModifPoint:CtForImpl, suspValue 0.9355336212214681, line 1236, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1238, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1239, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1241, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1242, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1243, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1246, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1247, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1249, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1250, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1251, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1255, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1256, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1264, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1265, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1320, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9355336212214681, line 1321, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9244132886315147, line 3495, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9207650273224044, line 3471, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9124548736462095, line 874, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.9124548736462095, line 875, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.911358173076923, line 864, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.911358173076923, line 866, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.90754039497307, line 3470, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.9026785714285716, line 3354, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8910105757931845, line 3345, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8910105757931845, line 3346, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8910105757931845, line 3350, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8904873752201996, line 3337, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8904873752201996, line 3341, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.882198952879581, line 3539, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8778581765557164, line 267, file Precision.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8778581765557164, line 268, file Precision.java
--ModifPoint:CtIfImpl, suspValue 0.8778581765557164, line 271, file Precision.java
--ModifPoint:CtIfImpl, suspValue 0.8778581765557164, line 274, file Precision.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8778581765557164, line 278, file Precision.java
--ModifPoint:CtReturnImpl, suspValue 0.8778581765557164, line 280, file Precision.java
--ModifPoint:CtReturnImpl, suspValue 0.8773503037315592, line 3005, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.8618925831202047, line 3542, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8570217575586323, line 150, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8519662921348314, line 159, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8479172490914173, line 91, file Incrementor.java
--ModifPoint:CtIfImpl, suspValue 0.8469701200781905, line 3541, file FastMath.java
--ModifPoint:CtInvocationImpl, suspValue 0.84555338723167, line 52, file Incrementor.java
--ModifPoint:CtInvocationImpl, suspValue 0.8448467966573816, line 61, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8446115288220551, line 79, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8446115288220551, line 80, file Incrementor.java
--ModifPoint:CtIfImpl, suspValue 0.8403990024937656, line 3538, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 882, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 883, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 884, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 890, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 899, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8376139188069595, line 900, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8376139188069595, line 901, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8376139188069595, line 902, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8376139188069595, line 903, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 910, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 911, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8376139188069595, line 917, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8376139188069595, line 919, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8376139188069595, line 925, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.8376139188069595, line 931, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1202, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1213, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1215, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1216, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8371515318796577, line 1218, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1292, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1293, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1294, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8371515318796577, line 1295, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1296, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1297, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1299, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1300, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1301, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1302, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1304, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1305, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1306, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1307, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1309, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1310, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1311, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1312, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1314, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1315, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1316, file FastMath.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8371515318796577, line 1317, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8371515318796577, line 1319, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.8371515318796577, line 1324, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8350770925110133, line 826, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8343878954607978, line 1132, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8343878954607978, line 1134, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8343878954607978, line 1154, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.8341584158415841, line 1109, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8341584158415841, line 1112, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8341584158415841, line 1123, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8339290624140775, line 1106, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.8186234817813764, line 515, file MathUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.7643649193548386, line 375, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.7143193593970796, line 3023, file FastMath.java
Total suspicious from FL: 781,  671
Total ModPoint created: 671
Creating program variant #1, [Variant id: 1, #gens: 671, #ops: 0, parent:-]
Calculating fitness
Calculating fitness for original program variant.
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2490secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 3119] ,[]
The original fitness is : 2.0
----------------------------
---Configuration properties
p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
p:alternativecompliancelevel= 8
p:ignoredTestCases= 
p:workingDirectory= /Users/marekmazur/astor/./output_astor
p:manipulatesuper= false
p:validation= process
p:jvm4testexecution= /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:operatorspace= irr-statements
p:diffcontext= 0
p:binjavafolder= /target/classes/
p:synthesis_depth= 3
p:gzoltartestpackagetoexclude= junit.framework
p:skipfitnessinitialpopulation= false
p:evosuiteresultfolder= evosuite
p:flthreshold= 0
p:regressionforfaultlocalization= true
p:collectonlyusedmethod= false
p:folderDiff= ./diffSolutions
p:preservelinenumbers= true
p:tmax2= 2490840
p:tmax1= 10000
p:probagenmutation= false
p:nomodificationconvergence= 100
p:diff_type= relative
p:nolog= False
p:targetelementprocessor= statements
p:srctestfolder= /src/test/
p:forceExecuteRegression= false
p:clusteringfilename= clustering.csv
p:failing= org.apache.commons.math.ode.events.EventStateTest
p:logtestexecution= false
p:evo_buggy_class= true
p:numberExecutions= 1
p:maxnumbersolutions= 1000000
p:evo_affected_by_op= true
p:population= 1
p:maxCombinationVariableLimit= false
p:savesolution= true
p:javacompliancelevel= 8
p:uniqueoptogen= false
p:gzoltarpackagetonotinstrument= junit.framework
p:projectIdentifier= 
p:modificationpointnavigation= weight
p:stopfirst= true
p:multipointmodification= false
p:elementsToMutate= 10
p:jsonoutputname= astor_output
p:evoDSE= false
p:bintestfolder= /target/test-classes/
p:testbystep= false
p:version-location= ./math-version/
p:gzoltarVersion= 1.7.3
p:locationGzoltarJar= ./lib/
p:reintroduce= PARENTS:ORIGINAL
p:executorjar= ./lib/jtestex7.jar
p:maxGeneration= 1000000
p:max_synthesis_step= 10000
p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
p:maxVarCombination= 1000
p:includeZeros= false
p:maxtime= 60
p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
p:jvmversion= 1.8.0_202
p:commandTrunk= 50000
p:faultlocalization= flacoco
p:resetmodel= true
p:maxsuspcandidates= 1000
p:mode= jgenprog
p:learningdir= 
p:jvm4evosuitetestexecution= /Users/marekmazur/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:filterfaultlocalization= true
p:mutationrate= 1 
p:pathToMVNRepository= 
p:resourcesfolder= /src/main/resources:/src/test/resources:
p:timezone= America/Los_Angeles
p:runjava7code= false
p:evoRunOnBuggyClass= true
p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
p:limitbysuspicious= true
p:logsattemps= true
p:dependenciespath= /Users/marekmazur/astor/examples/libs/junit-4.4.jar
p:packageToInstrument= org.apache.commons
p:skipfaultlocalization= false
p:scope= local
p:transformingredient= false
p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
p:maxnumvariablesperingredient= 10
p:parsesourcefromoriginal= true
p:pvariantfoldername= variant-
p:savespoonmodelondisk= false
p:srcjavafolder= /src/java/
p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
p:ignoreflakyinfl= false
p:cleantemplates= true
p:applyCrossover= false
p:maxmodificationpoints= 1000
p:duplicateingredientsinspace= false
p:metid= 0
p:continuewhenmodelfail= true
p:saveall= false
p:seed= 10
p:savecompletepatched= true
p:resetoperations= false
p:keepcomments= true
p:processoutputinfile= false
p:location= /Users/marekmazur/astor/defects4j/math-44
p:probabilistictransformation= true
p:overridemaxtime= true
p:outputjsonresult= true
p:allpoints= false
p:antipattern= false
p:bugId= 280
p:evosuitetimeout= 120
p:maxtimefactor= 10
p:nrPlaceholders= 1
p:forcesubprocesskilling= false
----------------------------
----Starting Solution Search
----------Running generation: 1, population size: 1

***** Generation 1 : 0
**Parent Variant: [Variant id: 1, #gens: 671, #ops: 0, parent:-]

--Child created id: 2
--Creating new operations for variant [Variant id: 2, #gens: 671, #ops: 0, parent:1]
---analyzing modificationPoint position: 478
location: AbstractStepInterpolator.java379
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `dirtyState = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2, #gens: 670, #ops: 1, parent:1] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-2/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(1): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `dirtyState = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2(f=1.0), 1(f=2.0), )
Selected to next generation: IDs2--> (2(f=1.0), )
----------Running generation: 2, population size: 1

***** Generation 2 : 0
**Parent Variant: [Variant id: 3, #gens: 671, #ops: 0, parent:-]

--Child created id: 4
--Creating new operations for variant [Variant id: 4, #gens: 671, #ops: 0, parent:3]
---analyzing modificationPoint position: 405
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java372
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return currentT ` -topatch--> `return evaluations.getMaximalCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 372, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return currentT ` -topatch--> `return evaluations.getMaximalCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 4, #gens: 671, #ops: 1, parent:3] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 4
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-4/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(2): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return currentT ` -topatch--> `return evaluations.getMaximalCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (4(f=1.0), 3(f=2.0), )
Selected to next generation: IDs2--> (4(f=1.0), )
----------Running generation: 3, population size: 1

***** Generation 3 : 0
**Parent Variant: [Variant id: 5, #gens: 671, #ops: 0, parent:-]

--Child created id: 6
--Creating new operations for variant [Variant id: 6, #gens: 671, #ops: 0, parent:5]
---analyzing modificationPoint position: 387
---modifPoint 0 not mutation generated in  double previousT = interpolator.getGlobalPreviousTime()
---analyzing modificationPoint position: 235
location: EmbeddedRungeKuttaIntegrator.java303
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 6, #gens: 670, #ops: 1, parent:5] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 6
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-6/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(3): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (6(f=1.0), 5(f=2.0), )
Selected to next generation: IDs2--> (6(f=1.0), )
----------Running generation: 4, population size: 1

***** Generation 4 : 0
**Parent Variant: [Variant id: 7, #gens: 671, #ops: 0, parent:-]

--Child created id: 8
--Creating new operations for variant [Variant id: 8, #gens: 671, #ops: 0, parent:7]
---analyzing modificationPoint position: 384
---modifPoint 0 not mutation generated in  return softPreviousTime
---analyzing modificationPoint position: 540
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  lna = tmp2
---analyzing modificationPoint position: 100
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  // prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...]
---analyzing modificationPoint position: 137
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 3 not mutation generated in  final double yDot16 = yDotKLast[2][i]
---analyzing modificationPoint position: 429
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 4 not mutation generated in  evaluations.incrementCount()
---analyzing modificationPoint position: 257
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 5 not mutation generated in  if (firstTime) { 	final double[] scale = new double[mainSetDimension]; 	if (vecAbsoluteTolerance == [...]
---analyzing modificationPoint position: 575
location: FastMath.java1247
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 8, #gens: 670, #ops: 1, parent:7] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 8, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(4): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (7(f=2.0), 8(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (7(f=2.0), )
----------Running generation: 5, population size: 1

***** Generation 5 : 0
**Parent Variant: [Variant id: 9, #gens: 671, #ops: 0, parent:-]

--Child created id: 10
--Creating new operations for variant [Variant id: 10, #gens: 671, #ops: 0, parent:9]
---analyzing modificationPoint position: 292
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  boolean firstTime = true
---analyzing modificationPoint position: 499
---modifPoint 1 not mutation generated in  // Perform computation. return doSolve()
---analyzing modificationPoint position: 313
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 2 not mutation generated in  vecAbsoluteTolerance = null
---analyzing modificationPoint position: 193
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 3 not mutation generated in  yDotKLast = null
---analyzing modificationPoint position: 294
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 4 not mutation generated in  setStateInitialized(false)
---analyzing modificationPoint position: 68
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 5 not mutation generated in  previousEventTime = java.lang.Double.NaN
---analyzing modificationPoint position: 6
location: AbstractIntegrator.java342
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 10, #gens: 670, #ops: 1, parent:9] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 10
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-10/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(5): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (10(f=1.0), 9(f=2.0), )
Selected to next generation: IDs2--> (10(f=1.0), )
----------Running generation: 6, population size: 1

***** Generation 6 : 0
**Parent Variant: [Variant id: 11, #gens: 671, #ops: 0, parent:-]

--Child created id: 12
--Creating new operations for variant [Variant id: 12, #gens: 671, #ops: 0, parent:11]
---analyzing modificationPoint position: 587
location: FastMath.java874
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `intPartA = org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[org.apache.commons.math[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 12, #gens: 670, #ops: 1, parent:11] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 12, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(6): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `intPartA = org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[org.apache.commons.math[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (11(f=2.0), 12(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (11(f=2.0), )
----------Running generation: 7, population size: 1

***** Generation 7 : 0
**Parent Variant: [Variant id: 13, #gens: 671, #ops: 0, parent:-]

--Child created id: 14
--Creating new operations for variant [Variant id: 14, #gens: 671, #ops: 0, parent:13]
---analyzing modificationPoint position: 208
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator(this)
---analyzing modificationPoint position: 313
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 1 not mutation generated in  vecAbsoluteTolerance = null
---analyzing modificationPoint position: 119
location: BracketingNthOrderBrentSolver.java275
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 14, #gens: 670, #ops: 1, parent:13] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 14
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-14/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(7): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (14(f=1.0), 13(f=2.0), )
Selected to next generation: IDs2--> (14(f=1.0), )
----------Running generation: 8, population size: 1

***** Generation 8 : 0
**Parent Variant: [Variant id: 15, #gens: 671, #ops: 0, parent:-]

--Child created id: 16
--Creating new operations for variant [Variant id: 16, #gens: 671, #ops: 0, parent:15]
---analyzing modificationPoint position: 131
---modifPoint 0 not mutation generated in  final double yDot10 = yDotK[9][i]
---analyzing modificationPoint position: 216
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  for (int k = 0; k < v.length; ++k) { 	v[k] = new double[dimension]; }
---analyzing modificationPoint position: 494
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  return org.apache.commons.math.util.FastMath.abs(x - java.lang.Double.longBitsToDouble(java.lang.Dou[...]
---analyzing modificationPoint position: 284
---modifPoint 3 not mutation generated in  final double[][] yDotK = new double[stages][y.length]
---analyzing modificationPoint position: 178
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 4 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 164
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 5 not mutation generated in  final double[] yTmp = new double[currentState.length]
---analyzing modificationPoint position: 76
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 6 not mutation generated in  forward = interpolator.isForward()
---analyzing modificationPoint position: 536
Templates availables301
Attempts Base Ingredients  1 total 301
---modifPoint 7 not mutation generated in  double lnb = lns[1]
---analyzing modificationPoint position: 149
---modifPoint 8 not mutation generated in  final double dot2 = theta * (2 - (3 * theta))
---analyzing modificationPoint position: 267
location: EmbeddedRungeKuttaIntegrator.java262
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += a[k - 1][l] * yDotK[l][j] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 16, #gens: 670, #ops: 1, parent:15] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child compiles: id 16
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-16/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(8): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += a[k - 1][l] * yDotK[l][j] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (16(f=1.0), 15(f=2.0), )
Selected to next generation: IDs2--> (16(f=1.0), )
----------Running generation: 9, population size: 1

***** Generation 9 : 0
**Parent Variant: [Variant id: 17, #gens: 671, #ops: 0, parent:-]

--Child created id: 18
--Creating new operations for variant [Variant id: 18, #gens: 671, #ops: 0, parent:17]
---analyzing modificationPoint position: 1
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 0 not mutation generated in  initialStep = initialStepSize
---analyzing modificationPoint position: 551
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1574
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double z = 1.0 / 120.0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1574, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double z = 1.0 / 120.0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 18, #gens: 671, #ops: 1, parent:17] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 18, errors: [FastMath.java:1573: error: variable z is already defined in method pow(double,double)
		z = z * lnb; 		double z = 1.0 / 120.0;
		             		       ^, FastMath.java:1577: error: cannot find symbol
		return result;
		       ^
  symbol:   variable result
  location: class org.apache.commons.math.util.FastMath, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(9): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double z = 1.0 / 120.0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (17(f=2.0), 18(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (17(f=2.0), )
----------Running generation: 10, population size: 1

***** Generation 10 : 0
**Parent Variant: [Variant id: 19, #gens: 671, #ops: 0, parent:-]

--Child created id: 20
--Creating new operations for variant [Variant id: 20, #gens: 671, #ops: 0, parent:19]
---analyzing modificationPoint position: 205
---modifPoint 0 not mutation generated in  final double ratio2 = errSum2 / tol
---analyzing modificationPoint position: 577
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  ya = (aa + tmp) - tmp
---analyzing modificationPoint position: 538
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1556
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tmp2 = (lna + tmp1) - tmp1 ` -topatch--> `final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1556, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tmp2 = (lna + tmp1) - tmp1 ` -topatch--> `final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 20, #gens: 671, #ops: 1, parent:19] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 20, errors: [FastMath.java:1761: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:1761: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:1761: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:1761: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:1761: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:1761: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:1761: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:1761: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:1762: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:1762: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:1762: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:1762: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:1764: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:1765: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:1765: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:1766: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:1766: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:1766: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:1766: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:1767: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:1767: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:1767: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:1767: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:1767: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:1776: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:1776: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:1776: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:1776: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:1776: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:1776: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:1781: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:1783: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:1783: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:1783: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:1784: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:1784: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:1785: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:1785: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:1786: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:1786: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:1787: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:1787: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:1788: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:1788: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:1800: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:1800: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:1825: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:1825: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:1825: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:1825: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:1825: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:1825: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:1825: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:1826: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:1826: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:1826: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:1826: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:1826: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:1826: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:1826: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:1828: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:1828: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:1829: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:1829: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:1829: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:1829: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:1830: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:1831: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:1831: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:1831: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:1831: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:1831: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:1831: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:1831: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:1832: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:1832: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:1832: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:1832: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:1832: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:1833: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:1833: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:1833: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:1833: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:1833: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:1833: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:1844: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:1844: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:1844: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:1844: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:1844: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:1844: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:1844: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:1844: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:1849: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:1851: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:1851: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:1851: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:1852: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:1852: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:1853: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(10): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tmp2 = (lna + tmp1) - tmp1 ` -topatch--> `final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (19(f=2.0), 20(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (19(f=2.0), )
----------Running generation: 11, population size: 1

***** Generation 11 : 0
**Parent Variant: [Variant id: 21, #gens: 671, #ops: 0, parent:-]

--Child created id: 22
--Creating new operations for variant [Variant id: 22, #gens: 671, #ops: 0, parent:21]
---analyzing modificationPoint position: 128
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  final double yDot7 = yDotK[6][i]
---analyzing modificationPoint position: 275
location: EmbeddedRungeKuttaIntegrator.java281
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// estimate the error at the end of the step error = estimateError(yDotK, y, yTmp, stepSize) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 22, #gens: 670, #ops: 1, parent:21] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 22
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-22/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(11): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// estimate the error at the end of the step error = estimateError(yDotK, y, yTmp, stepSize) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (22(f=1.0), 21(f=2.0), )
Selected to next generation: IDs2--> (22(f=1.0), )
----------Running generation: 12, population size: 1

***** Generation 12 : 0
**Parent Variant: [Variant id: 23, #gens: 671, #ops: 0, parent:-]

--Child created id: 24
--Creating new operations for variant [Variant id: 24, #gens: 671, #ops: 0, parent:23]
---analyzing modificationPoint position: 341
location: AbstractStepInterpolator.java202
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = interpolator.primaryMapper ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 24, #gens: 670, #ops: 1, parent:23] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 24
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-24/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(12): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = interpolator.primaryMapper ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (24(f=1.0), 23(f=2.0), )
Selected to next generation: IDs2--> (24(f=1.0), )
----------Running generation: 13, population size: 1

***** Generation 13 : 0
**Parent Variant: [Variant id: 25, #gens: 671, #ops: 0, parent:-]

--Child created id: 26
--Creating new operations for variant [Variant id: 26, #gens: 671, #ops: 0, parent:25]
---analyzing modificationPoint position: 417
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...]
---analyzing modificationPoint position: 118
location: BracketingNthOrderBrentSolver.java254
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 26, #gens: 670, #ops: 1, parent:25] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 26
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-26/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(13): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (26(f=1.0), 25(f=2.0), )
Selected to next generation: IDs2--> (26(f=1.0), )
----------Running generation: 14, population size: 1

***** Generation 14 : 0
**Parent Variant: [Variant id: 27, #gens: 671, #ops: 0, parent:-]

--Child created id: 28
--Creating new operations for variant [Variant id: 28, #gens: 671, #ops: 0, parent:27]
---analyzing modificationPoint position: 373
location: AbstractStepInterpolator.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.forward = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 28, #gens: 670, #ops: 1, parent:27] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 28
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-28/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(14): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.forward = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (28(f=1.0), 27(f=2.0), )
Selected to next generation: IDs2--> (28(f=1.0), )
----------Running generation: 15, population size: 1

***** Generation 15 : 0
**Parent Variant: [Variant id: 29, #gens: 671, #ops: 0, parent:-]

--Child created id: 30
--Creating new operations for variant [Variant id: 30, #gens: 671, #ops: 0, parent:29]
---analyzing modificationPoint position: 101
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // current tightest bracketing of the root double xA = x[signChangeIndex - 1]
---analyzing modificationPoint position: 524
location: FastMath.java1456
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.POSITIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	} 	if (y < [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 30, #gens: 670, #ops: 1, parent:29] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 30, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(15): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.POSITIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	} 	if (y < [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (29(f=2.0), 30(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (29(f=2.0), )
----------Running generation: 16, population size: 1

***** Generation 16 : 0
**Parent Variant: [Variant id: 31, #gens: 671, #ops: 0, parent:-]

--Child created id: 32
--Creating new operations for variant [Variant id: 32, #gens: 671, #ops: 0, parent:31]
---analyzing modificationPoint position: 16
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java287
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an exact root, since it is not an approximation // we don't need to bother about th[...] ` -topatch--> `// return the second endpoint if it is a perfect root. return x[2]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 287, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an exact root, since it is not an approximation // we don't need to bother about th[...] ` -topatch--> `// return the second endpoint if it is a perfect root. return x[2]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 32, #gens: 671, #ops: 1, parent:31] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 32
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-32/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(16): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an exact root, since it is not an approximation // we don't need to bother about th[...] ` -topatch--> `// return the second endpoint if it is a perfect root. return x[2]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (32(f=1.0), 31(f=2.0), )
Selected to next generation: IDs2--> (32(f=1.0), )
----------Running generation: 17, population size: 1

***** Generation 17 : 0
**Parent Variant: [Variant id: 33, #gens: 671, #ops: 0, parent:-]

--Child created id: 34
--Creating new operations for variant [Variant id: 34, #gens: 671, #ops: 0, parent:33]
---analyzing modificationPoint position: 260
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [interpolator, stepStart, stepSize]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: stepStart spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: stepSize spoon.support.reflect.code.CtFieldReadImpl
location: EmbeddedRungeKuttaIntegrator.java249
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `hNew = initializeStep(forward, getOrder(), scale,  stepStart, y, yDotK[0], yTmp, yDotK[1]) ` -topatch--> `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 249, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `hNew = initializeStep(forward, getOrder(), scale,  stepStart, y, yDotK[0], yTmp, yDotK[1]) ` -topatch--> `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 34, #gens: 672, #ops: 1, parent:33] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 34, errors: [EmbeddedRungeKuttaIntegrator.java:333: error: while expected
	}
	 ^, EmbeddedRungeKuttaIntegrator.java:339: error: '.class' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	              ^, EmbeddedRungeKuttaIntegrator.java:339: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:339: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                              ^, EmbeddedRungeKuttaIntegrator.java:339: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(17): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `hNew = initializeStep(forward, getOrder(), scale,  stepStart, y, yDotK[0], yTmp, yDotK[1]) ` -topatch--> `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (33(f=2.0), 34(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (33(f=2.0), )
----------Running generation: 18, population size: 1

***** Generation 18 : 0
**Parent Variant: [Variant id: 35, #gens: 671, #ops: 0, parent:-]

--Child created id: 36
--Creating new operations for variant [Variant id: 36, #gens: 671, #ops: 0, parent:35]
---analyzing modificationPoint position: 131
---modifPoint 0 not mutation generated in  final double yDot10 = yDotK[9][i]
---analyzing modificationPoint position: 343
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  globalPreviousTime = java.lang.Double.NaN
---analyzing modificationPoint position: 222
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 2 not mutation generated in  yDotKLast = null
---analyzing modificationPoint position: 618
Templates availables301
Attempts Base Ingredients  1 total 301
---modifPoint 3 not mutation generated in  final double fracPartB = org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac[...]
---analyzing modificationPoint position: 125
location: DormandPrince853StepInterpolator.java331
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// compute the interpolation vectors for this time step for (int i = 0; i < interpolatedState.length[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 36, #gens: 670, #ops: 1, parent:35] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 36
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-36/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(18): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// compute the interpolation vectors for this time step for (int i = 0; i < interpolatedState.length[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (36(f=1.0), 35(f=2.0), )
Selected to next generation: IDs2--> (36(f=1.0), )
----------Running generation: 19, population size: 1

***** Generation 19 : 0
**Parent Variant: [Variant id: 37, #gens: 671, #ops: 0, parent:-]

--Child created id: 38
--Creating new operations for variant [Variant id: 38, #gens: 671, #ops: 0, parent:37]
---analyzing modificationPoint position: 440
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 0 not mutation generated in  dirtyState = false
---analyzing modificationPoint position: 72
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 1 not mutation generated in  interpolator.setInterpolatedTime(t0)
---analyzing modificationPoint position: 513
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  evaluations.resetCount()
---analyzing modificationPoint position: 248
location: EmbeddedRungeKuttaIntegrator.java122
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.prototype = prototype ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 38, #gens: 670, #ops: 1, parent:37] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 38, errors: [EmbeddedRungeKuttaIntegrator.java:132: error: variable prototype might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(19): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.prototype = prototype ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (37(f=2.0), 38(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (37(f=2.0), )
----------Running generation: 20, population size: 1

***** Generation 20 : 0
**Parent Variant: [Variant id: 39, #gens: 671, #ops: 0, parent:-]

--Child created id: 40
--Creating new operations for variant [Variant id: 40, #gens: 671, #ops: 0, parent:39]
---analyzing modificationPoint position: 198
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: DormandPrince853Integrator.java258
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < mainSetDimension; ++j) { 	final double errSum1 = (((((((org.apache.commons.math.[...] ` -topatch--> `double error2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator line: 258, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < mainSetDimension; ++j) { 	final double errSum1 = (((((((org.apache.commons.math.[...] ` -topatch--> `double error2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 40, #gens: 672, #ops: 1, parent:39] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 40, errors: [DormandPrince853Integrator.java:257: error: variable error2 is already defined in method estimateError(double[][],double[],double[],double)
		double error2 = 0; 		double error2 = 0;
		                   		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(20): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < mainSetDimension; ++j) { 	final double errSum1 = (((((((org.apache.commons.math.[...] ` -topatch--> `double error2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (39(f=2.0), 40(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (39(f=2.0), )
----------Running generation: 21, population size: 1

***** Generation 21 : 0
**Parent Variant: [Variant id: 41, #gens: 671, #ops: 0, parent:-]

--Child created id: 42
--Creating new operations for variant [Variant id: 42, #gens: 671, #ops: 0, parent:41]
---analyzing modificationPoint position: 97
location: EventState.java299
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t, y) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 42, #gens: 670, #ops: 1, parent:41] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 42
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-42/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(21): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t, y) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (42(f=1.0), 41(f=2.0), )
Selected to next generation: IDs2--> (42(f=1.0), )
----------Running generation: 22, population size: 1

***** Generation 22 : 0
**Parent Variant: [Variant id: 43, #gens: 671, #ops: 0, parent:-]

--Child created id: 44
--Creating new operations for variant [Variant id: 44, #gens: 671, #ops: 0, parent:43]
---analyzing modificationPoint position: 16
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [targetY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR, yB]
--> var from patch: targetY spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java287
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an exact root, since it is not an approximation // we don't need to bother about th[...] ` -topatch--> `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 287, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an exact root, since it is not an approximation // we don't need to bother about th[...] ` -topatch--> `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 44, #gens: 672, #ops: 1, parent:43] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 44
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-44/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(22): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an exact root, since it is not an approximation // we don't need to bother about th[...] ` -topatch--> `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (44(f=1.0), 43(f=2.0), )
Selected to next generation: IDs2--> (44(f=1.0), )
----------Running generation: 23, population size: 1

***** Generation 23 : 0
**Parent Variant: [Variant id: 45, #gens: 671, #ops: 0, parent:-]

--Child created id: 46
--Creating new operations for variant [Variant id: 46, #gens: 671, #ops: 0, parent:45]
---analyzing modificationPoint position: 154
Templates availables106
Attempts Base Ingredients  1 total 106
Name Conflict [start, end, x, y]
---modifPoint 0 not mutation generated in  x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta])
---analyzing modificationPoint position: 111
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 189
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]
---analyzing modificationPoint position: 194
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 3 not mutation generated in  v = null
---analyzing modificationPoint position: 381
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [softPreviousTime]
--> var from patch: softPreviousTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java216
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = null ` -topatch--> `return softPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 216, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = null ` -topatch--> `return softPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 46, #gens: 672, #ops: 1, parent:45] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 46, errors: [AbstractStepInterpolator.java:392: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:392: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:392: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:392: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:392: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:392: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:392: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:394: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:394: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:395: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:395: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:395: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:395: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:395: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:395: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:395: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:395: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:395: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:396: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:396: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:396: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:396: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:396: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:396: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:396: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:396: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:396: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:396: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:396: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:396: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:397: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:397: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:397: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:397: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:397: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:398: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:398: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:399: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:400: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:400: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:398: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:401: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:401: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:401: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:402: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:402: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:403: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:403: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:403: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:403: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:403: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:415: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:415: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:415: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:415: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:419: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:419: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:423: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:423: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:428: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:428: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:433: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:433: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:435: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:435: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:439: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:439: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:450: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:450: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:450: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:450: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:450: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:450: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:452: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:452: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:452: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:455: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:455: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:457: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:457: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:459: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:459: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:459: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:461: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:461: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:461: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:496: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:496: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:499: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:499: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(23): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = null ` -topatch--> `return softPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (45(f=2.0), 46(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (45(f=2.0), )
----------Running generation: 24, population size: 1

***** Generation 24 : 0
**Parent Variant: [Variant id: 47, #gens: 671, #ops: 0, parent:-]

--Child created id: 48
--Creating new operations for variant [Variant id: 48, #gens: 671, #ops: 0, parent:47]
---analyzing modificationPoint position: 79
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [pendingEvent, pendingEventTime, forward, java.lang.Double.POSITIVE_INFINITY, java.lang.Double.NEGATIVE_INFINITY]
--> var from patch: pendingEvent spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pendingEventTime spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: forward spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NEGATIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java193
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 193, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 48, #gens: 672, #ops: 1, parent:47] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 48, errors: [EventState.java:291: error: illegal start of expression
	 * Get the occurrence time of the event triggered in the current step.
	 ^, EventState.java:291: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	      ^, EventState.java:291: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                     ^, EventState.java:291: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                             ^, EventState.java:291: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                       ^, EventState.java:291: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                    ^, EventState.java:291: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                ^, EventState.java:291: error: <identifier> expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                      ^, EventState.java:293: error: illegal start of expression
	 * @return occurrence time of the event triggered in the current
	 ^, EventState.java:293: error: <identifier> expected
	 * @return occurrence time of the event triggered in the current
	    ^, EventState.java:293: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                     ^, EventState.java:293: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                 ^, EventState.java:293: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                 ^, EventState.java:293: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                        ^, EventState.java:294: error: ';' expected
	step or infinity if no events are triggered
	    ^, EventState.java:294: error: ';' expected
	step or infinity if no events are triggered
	                ^, EventState.java:294: error: '(' expected
	step or infinity if no events are triggered
	                   ^, EventState.java:294: error: ')' expected
	step or infinity if no events are triggered
	                      ^, EventState.java:294: error: ';' expected
	step or infinity if no events are triggered
	                                 ^, EventState.java:294: error: variable declaration not allowed here
	step or infinity if no events are triggered
	                              ^, EventState.java:295: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	  ^, EventState.java:295: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	^, EventState.java:295: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	                          ^, EventState.java:304: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t;
	    	^, EventState.java:304: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t;
	    	       ^, EventState.java:304: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t;
	    	                        ^, EventState.java:304: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t;
	    	                                        ^, EventState.java:304: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t;
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(24): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (47(f=2.0), 48(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (47(f=2.0), )
----------Running generation: 25, population size: 1

***** Generation 25 : 0
**Parent Variant: [Variant id: 49, #gens: 671, #ops: 0, parent:-]

--Child created id: 50
--Creating new operations for variant [Variant id: 50, #gens: 671, #ops: 0, parent:49]
---analyzing modificationPoint position: 292
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  boolean firstTime = true
---analyzing modificationPoint position: 634
---modifPoint 1 not mutation generated in  double lnzb = 0.0
---analyzing modificationPoint position: 622
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 2 not mutation generated in  z = (z * epsilon) + 0.5000000000042687
---analyzing modificationPoint position: 415
location: ExpandableStatefulODE.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `// Add contribution for secondary equations for (final org.apache.commons.math.ode.ExpandableStatefu[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 50, #gens: 670, #ops: 1, parent:49] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 50
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-50/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(25): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `// Add contribution for secondary equations for (final org.apache.commons.math.ode.ExpandableStatefu[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (50(f=1.0), 49(f=2.0), )
Selected to next generation: IDs2--> (50(f=1.0), )
----------Running generation: 26, population size: 1

***** Generation 26 : 0
**Parent Variant: [Variant id: 51, #gens: 671, #ops: 0, parent:-]

--Child created id: 52
--Creating new operations for variant [Variant id: 52, #gens: 671, #ops: 0, parent:51]
---analyzing modificationPoint position: 134
Templates availables28
Attempts Base Ingredients  1 total 28
vars from patch [theta]
--> var from patch: theta spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853StepInterpolator.java340
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot13 = yDotK[12][i] ` -topatch--> `final double dot2 = theta * (2 - (3 * theta))` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 340, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot13 = yDotK[12][i] ` -topatch--> `final double dot2 = theta * (2 - (3 * theta))` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 52, #gens: 671, #ops: 1, parent:51] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 52, errors: [DormandPrince853StepInterpolator.java:366: error: cannot find symbol
				final double dot2 = theta * (2 - (3 * theta)); 				final double yDot14 = yDotKLast[0][i]; 				final double yDot15 = yDotKLast[1][i]; 				final double yDot16 = yDotKLast[2][i]; 				v[0][i] = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_01 * yDot1) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_06 * yDot6)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_07 * yDot7)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_08 * yDot8)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_09 * yDot9)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_10 * yDot10)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_11 * yDot11)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_12 * yDot12); 				v[1][i] = yDot1 - v[0][i]; 				v[2][i] = (v[0][i] - v[1][i]) - yDotK[12][i]; 				for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; ++k) { 					v[k + 3][i] = (((((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][0] * yDot1) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][1] * yDot6)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][2] * yDot7)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][3] * yDot8)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][4] * yDot9)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][5] * yDot10)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][6] * yDot11)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][7] * yDot12)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][8] * yDot13)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][9] * yDot14)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][10] * yDot15)) + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D[k][11] * yDot16);}} 			vectorsInitialized = true;} 		final double eta = 1 - theta; 		final double twoTheta = 2 * theta; 		final double theta2 = theta * theta; 		final double dot1 = 1 - twoTheta; 		final double dot2 = theta * (2 - (3 * theta));
				                                               				                                       				                                       				                                       								                           				                                              				                                                                                                           					
  symbol:   variable yDot13
  location: class org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator]
Ingredient counter is Zero
---Undoing: gnrtn(26): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot13 = yDotK[12][i] ` -topatch--> `final double dot2 = theta * (2 - (3 * theta))` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (51(f=2.0), 52(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (51(f=2.0), )
----------Running generation: 27, population size: 1

***** Generation 27 : 0
**Parent Variant: [Variant id: 53, #gens: 671, #ops: 0, parent:-]

--Child created id: 54
--Creating new operations for variant [Variant id: 54, #gens: 671, #ops: 0, parent:53]
---analyzing modificationPoint position: 514
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java187
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// Initialization. setup(maxEval, f, min, max, startValue) ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 187, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// Initialization. setup(maxEval, f, min, max, startValue) ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 54, #gens: 672, #ops: 1, parent:53] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 54, errors: [BaseAbstractUnivariateRealSolver.java:188: error: unreachable statement
		setup(maxEval, f, min, max, startValue);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(27): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// Initialization. setup(maxEval, f, min, max, startValue) ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (53(f=2.0), 54(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (53(f=2.0), )
----------Running generation: 28, population size: 1

***** Generation 28 : 0
**Parent Variant: [Variant id: 55, #gens: 671, #ops: 0, parent:-]

--Child created id: 56
--Creating new operations for variant [Variant id: 56, #gens: 671, #ops: 0, parent:55]
---analyzing modificationPoint position: 110
location: BracketingNthOrderBrentSolver.java213
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 56, #gens: 670, #ops: 1, parent:55] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 56
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-56/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(28): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (56(f=1.0), 55(f=2.0), )
Selected to next generation: IDs2--> (56(f=1.0), )
----------Running generation: 29, population size: 1

***** Generation 29 : 0
**Parent Variant: [Variant id: 57, #gens: 671, #ops: 0, parent:-]

--Child created id: 58
--Creating new operations for variant [Variant id: 58, #gens: 671, #ops: 0, parent:57]
---analyzing modificationPoint position: 92
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [g0Positive, g0]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: g0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java268
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ga = gb ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 268, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ga = gb ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 58, #gens: 672, #ops: 1, parent:57] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 58
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-58/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(29): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ga = gb ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (58(f=1.0), 57(f=2.0), )
Selected to next generation: IDs2--> (58(f=1.0), )
----------Running generation: 30, population size: 1

***** Generation 30 : 0
**Parent Variant: [Variant id: 59, #gens: 671, #ops: 0, parent:-]

--Child created id: 60
--Creating new operations for variant [Variant id: 60, #gens: 671, #ops: 0, parent:59]
---analyzing modificationPoint position: 236
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [mainSetDimension]
--> var from patch: mainSetDimension spoon.support.reflect.code.CtFieldReadImpl
location: EmbeddedRungeKuttaIntegrator.java309
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// stepsize control for next step final double factor =  org.apache.commons.math.util.FastMath.min(m[...] ` -topatch--> `final double[] scale = new double[mainSetDimension]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 309, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// stepsize control for next step final double factor =  org.apache.commons.math.util.FastMath.min(m[...] ` -topatch--> `final double[] scale = new double[mainSetDimension]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 60, #gens: 671, #ops: 1, parent:59] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 60, errors: [EmbeddedRungeKuttaIntegrator.java:312: error: cannot find symbol
				final double scaledH = stepSize * factor;
				                                  ^
  symbol:   variable factor
  location: class org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator]
Ingredient counter is Zero
---Undoing: gnrtn(30): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// stepsize control for next step final double factor =  org.apache.commons.math.util.FastMath.min(m[...] ` -topatch--> `final double[] scale = new double[mainSetDimension]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (59(f=2.0), 60(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (59(f=2.0), )
----------Running generation: 31, population size: 1

***** Generation 31 : 0
**Parent Variant: [Variant id: 61, #gens: 671, #ops: 0, parent:-]

--Child created id: 62
--Creating new operations for variant [Variant id: 62, #gens: 671, #ops: 0, parent:61]
---analyzing modificationPoint position: 15
location: EventState.java229
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 62, #gens: 670, #ops: 1, parent:61] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 62, errors: [EventState.java:228: error: variable declaration not allowed here
					org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analysis.UnivariateRealFunction> bracketing = 
					                                                                                                                                ^]
Ingredient counter is Zero
---Undoing: gnrtn(31): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (61(f=2.0), 62(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (61(f=2.0), )
----------Running generation: 32, population size: 1

***** Generation 32 : 0
**Parent Variant: [Variant id: 63, #gens: 671, #ops: 0, parent:-]

--Child created id: 64
--Creating new operations for variant [Variant id: 64, #gens: 671, #ops: 0, parent:63]
---analyzing modificationPoint position: 411
location: UnivariateRealSolverUtils.java354
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, initial) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 64, #gens: 670, #ops: 1, parent:63] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 64
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-64/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(32): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, initial) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (64(f=1.0), 63(f=2.0), )
Selected to next generation: IDs2--> (64(f=1.0), )
----------Running generation: 33, population size: 1

***** Generation 33 : 0
**Parent Variant: [Variant id: 65, #gens: 671, #ops: 0, parent:-]

--Child created id: 66
--Creating new operations for variant [Variant id: 66, #gens: 671, #ops: 0, parent:65]
---analyzing modificationPoint position: 591
location: FastMath.java3470
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (a > b) { 	return b; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 66, #gens: 670, #ops: 1, parent:65] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 66, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(33): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (a > b) { 	return b; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (65(f=2.0), 66(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (65(f=2.0), )
----------Running generation: 34, population size: 1

***** Generation 34 : 0
**Parent Variant: [Variant id: 67, #gens: 671, #ops: 0, parent:-]

--Child created id: 68
--Creating new operations for variant [Variant id: 68, #gens: 671, #ops: 0, parent:67]
---analyzing modificationPoint position: 458
location: EquationsMapper.java77
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 68, #gens: 670, #ops: 1, parent:67] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 68
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-68/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(34): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (68(f=1.0), 67(f=2.0), )
Selected to next generation: IDs2--> (68(f=1.0), )
----------Running generation: 35, population size: 1

***** Generation 35 : 0
**Parent Variant: [Variant id: 69, #gens: 671, #ops: 0, parent:-]

--Child created id: 70
--Creating new operations for variant [Variant id: 70, #gens: 671, #ops: 0, parent:69]
---analyzing modificationPoint position: 14
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  addEventHandler(handler, maxCheckInterval, convergence,  maxIterationCount,  new org.apache.commons.[...]
---analyzing modificationPoint position: 51
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [statesInitialized]
--> var from patch: statesInitialized spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java302
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (state.evaluateStep(interpolator)) { 	// the event occurs during the current step 	occuringEvents[...] ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 302, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (state.evaluateStep(interpolator)) { 	// the event occurs during the current step 	occuringEvents[...] ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 70, #gens: 672, #ops: 1, parent:69] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 70
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-70/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 2] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2490secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-70/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 3119] ,[]
-Valid?: |false|3|3119|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(35): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (state.evaluateStep(interpolator)) { 	// the event occurs during the current step 	occuringEvents[...] ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (69(f=2.0), 70(f=3.0), )
Selected to next generation: IDs2--> (69(f=2.0), )
----------Running generation: 36, population size: 1

***** Generation 36 : 0
**Parent Variant: [Variant id: 71, #gens: 671, #ops: 0, parent:-]

--Child created id: 72
--Creating new operations for variant [Variant id: 72, #gens: 671, #ops: 0, parent:71]
---analyzing modificationPoint position: 234
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java301
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// prepare next step interpolator.storeTime(stepStart) ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 301, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// prepare next step interpolator.storeTime(stepStart) ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 72, #gens: 672, #ops: 1, parent:71] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 72
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-72/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 2] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2490secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-72/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 3119] ,[]
-Valid?: |false|2|3119|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(36): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// prepare next step interpolator.storeTime(stepStart) ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (71(f=2.0), 72(f=2.0), )
Selected to next generation: IDs2--> (71(f=2.0), )
----------Running generation: 37, population size: 1

***** Generation 37 : 0
**Parent Variant: [Variant id: 73, #gens: 671, #ops: 0, parent:-]

--Child created id: 74
--Creating new operations for variant [Variant id: 74, #gens: 671, #ops: 0, parent:73]
---analyzing modificationPoint position: 355
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [finalized]
--> var from patch: finalized spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java260
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `allocateInterpolatedArrays(y.length) ` -topatch--> `// the step is not finalized anymore finalized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 260, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `allocateInterpolatedArrays(y.length) ` -topatch--> `// the step is not finalized anymore finalized = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 74, #gens: 672, #ops: 1, parent:73] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 74, errors: [AbstractStepInterpolator.java:327: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:329: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:329: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:330: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:330: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:330: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:330: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:330: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:330: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:330: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:330: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:330: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:331: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:331: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:331: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:331: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:331: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:331: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:331: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:331: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:331: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:331: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:331: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:331: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:332: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:333: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:333: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:334: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:335: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:335: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:333: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:337: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:337: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:338: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:338: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:338: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:338: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:338: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:350: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:350: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:350: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:350: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:354: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:354: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:358: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:358: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:363: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:363: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public double getCurrentTime() {
	    	^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public double getCurrentTime() {
	    	                            ^, AbstractStepInterpolator.java:374: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;
	    	^, AbstractStepInterpolator.java:374: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;
	    	                                 ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	       ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                               ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                                                 ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;
	    	^, AbstractStepInterpolator.java:385: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;
	    	                        ^, AbstractStepInterpolator.java:399: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:399: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:399: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:399: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	        ^, AbstractStepInterpolator.java:401: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	                                              ^, AbstractStepInterpolator.java:413: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:413: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	                                    ^, AbstractStepInterpolator.java:421: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:421: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(37): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `allocateInterpolatedArrays(y.length) ` -topatch--> `// the step is not finalized anymore finalized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (73(f=2.0), 74(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (73(f=2.0), )
----------Running generation: 38, population size: 1

***** Generation 38 : 0
**Parent Variant: [Variant id: 75, #gens: 671, #ops: 0, parent:-]

--Child created id: 76
--Creating new operations for variant [Variant id: 76, #gens: 671, #ops: 0, parent:75]
---analyzing modificationPoint position: 483
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [statesInitialized]
--> var from patch: statesInitialized spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java87
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepHandlers = new java.util.ArrayList<org.apache.commons.math.ode.sampling.StepHandler>() ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 87, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepHandlers = new java.util.ArrayList<org.apache.commons.math.ode.sampling.StepHandler>() ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 76, #gens: 671, #ops: 1, parent:75] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 76
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-76/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(38): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepHandlers = new java.util.ArrayList<org.apache.commons.math.ode.sampling.StepHandler>() ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (76(f=1.0), 75(f=2.0), )
Selected to next generation: IDs2--> (76(f=1.0), )
----------Running generation: 39, population size: 1

***** Generation 39 : 0
**Parent Variant: [Variant id: 77, #gens: 671, #ops: 0, parent:-]

--Child created id: 78
--Creating new operations for variant [Variant id: 78, #gens: 671, #ops: 0, parent:77]
---analyzing modificationPoint position: 400
location: AbstractIntegrator.java359
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setInterpolatedTime(currentT) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 78, #gens: 670, #ops: 1, parent:77] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 78
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-78/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(39): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setInterpolatedTime(currentT) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (78(f=1.0), 77(f=2.0), )
Selected to next generation: IDs2--> (78(f=1.0), )
----------Running generation: 40, population size: 1

***** Generation 40 : 0
**Parent Variant: [Variant id: 79, #gens: 671, #ops: 0, parent:-]

--Child created id: 80
--Creating new operations for variant [Variant id: 80, #gens: 671, #ops: 0, parent:79]
---analyzing modificationPoint position: 274
location: EmbeddedRungeKuttaIntegrator.java277
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 80, #gens: 670, #ops: 1, parent:79] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 80
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-80/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(40): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (80(f=1.0), 79(f=2.0), )
Selected to next generation: IDs2--> (80(f=1.0), )
----------Running generation: 41, population size: 1

***** Generation 41 : 0
**Parent Variant: [Variant id: 81, #gens: 671, #ops: 0, parent:-]

--Child created id: 82
--Creating new operations for variant [Variant id: 82, #gens: 671, #ops: 0, parent:81]
---analyzing modificationPoint position: 489
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: AbstractIntegrator.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(-1) ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(-1) ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 82, #gens: 671, #ops: 1, parent:81] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 82
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-82/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(41): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(-1) ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (82(f=1.0), 81(f=2.0), )
Selected to next generation: IDs2--> (82(f=1.0), )
----------Running generation: 42, population size: 1

***** Generation 42 : 0
**Parent Variant: [Variant id: 83, #gens: 671, #ops: 0, parent:-]

--Child created id: 84
--Creating new operations for variant [Variant id: 84, #gens: 671, #ops: 0, parent:83]
---analyzing modificationPoint position: 456
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch []
location: AbstractIntegrator.java386
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t) ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 386, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t) ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 84, #gens: 672, #ops: 1, parent:83] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 84
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-84/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(42): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t) ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (84(f=1.0), 83(f=2.0), )
Selected to next generation: IDs2--> (84(f=1.0), )
----------Running generation: 43, population size: 1

***** Generation 43 : 0
**Parent Variant: [Variant id: 85, #gens: 671, #ops: 0, parent:-]

--Child created id: 86
--Creating new operations for variant [Variant id: 86, #gens: 671, #ops: 0, parent:85]
---analyzing modificationPoint position: 628
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (extra != 0.0) { 	result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + [...]
---analyzing modificationPoint position: 163
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  interpolatedDerivatives[i] = (((((v[0][i] + (dot1 * v[1][i])) + (dot2 * v[2][i])) +  (dot3 * v[3][i][...]
---analyzing modificationPoint position: 657
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [hiPrec, java.lang.Double.POSITIVE_INFINITY]
--> var from patch: hiPrec spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: FastMath.java1317
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `if (hiPrec != null) { 	hiPrec[0] = java.lang.Double.POSITIVE_INFINITY; 	hiPrec[1] = 0.0; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1317, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `if (hiPrec != null) { 	hiPrec[0] = java.lang.Double.POSITIVE_INFINITY; 	hiPrec[1] = 0.0; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 86, #gens: 672, #ops: 1, parent:85] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 86, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(43): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `if (hiPrec != null) { 	hiPrec[0] = java.lang.Double.POSITIVE_INFINITY; 	hiPrec[1] = 0.0; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (85(f=2.0), 86(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (85(f=2.0), )
----------Running generation: 44, population size: 1

***** Generation 44 : 0
**Parent Variant: [Variant id: 87, #gens: 671, #ops: 0, parent:-]

--Child created id: 88
--Creating new operations for variant [Variant id: 88, #gens: 671, #ops: 0, parent:87]
---analyzing modificationPoint position: 174
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  // k16 for (int j = 0; j < currentState.length; ++j) { 	s = ((((((((((org.apache.commons.math.ode.no[...]
---analyzing modificationPoint position: 92
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [this.maxCheckInterval]
--> var from patch: this.maxCheckInterval spoon.support.reflect.code.CtFieldWriteImpl
location: EventState.java268
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ga = gb ` -topatch--> `this.maxCheckInterval = maxCheckInterval` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 268, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ga = gb ` -topatch--> `this.maxCheckInterval = maxCheckInterval` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 88, #gens: 672, #ops: 1, parent:87] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 88, errors: [EventState.java:269: error: cannot assign a value to final variable maxCheckInterval
				ga = gb; 				this.maxCheckInterval = maxCheckInterval;
				         				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(44): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ga = gb ` -topatch--> `this.maxCheckInterval = maxCheckInterval` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (87(f=2.0), 88(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (87(f=2.0), )
----------Running generation: 45, population size: 1

***** Generation 45 : 0
**Parent Variant: [Variant id: 89, #gens: 671, #ops: 0, parent:-]

--Child created id: 90
--Creating new operations for variant [Variant id: 90, #gens: 671, #ops: 0, parent:89]
---analyzing modificationPoint position: 128
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  final double yDot7 = yDotK[6][i]
---analyzing modificationPoint position: 47
---modifPoint 1 not mutation generated in  return handler.g(t, interpolator.getInterpolatedState())
---analyzing modificationPoint position: 310
location: AdaptiveStepsizeIntegrator.java159
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialStep = -1 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 90, #gens: 670, #ops: 1, parent:89] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 90
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-90/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(45): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialStep = -1 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (90(f=1.0), 89(f=2.0), )
Selected to next generation: IDs2--> (90(f=1.0), )
----------Running generation: 46, population size: 1

***** Generation 46 : 0
**Parent Variant: [Variant id: 91, #gens: 671, #ops: 0, parent:-]

--Child created id: 92
--Creating new operations for variant [Variant id: 92, #gens: 671, #ops: 0, parent:91]
---analyzing modificationPoint position: 402
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.stepAccepted[...]
---analyzing modificationPoint position: 542
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1562
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb) ` -topatch--> `final double[] hiPrec = new double[2]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1562, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb) ` -topatch--> `final double[] hiPrec = new double[2]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 92, #gens: 671, #ops: 1, parent:91] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 92, errors: [FastMath.java:1565: error: cannot find symbol
		lna = aa + ab;
		           ^
  symbol:   variable ab
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1566: error: cannot find symbol
		lnb = -((lna - aa) - ab);
		                     ^
  symbol:   variable ab
  location: class org.apache.commons.math.util.FastMath, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(46): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb) ` -topatch--> `final double[] hiPrec = new double[2]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (91(f=2.0), 92(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (91(f=2.0), )
----------Running generation: 47, population size: 1

***** Generation 47 : 0
**Parent Variant: [Variant id: 93, #gens: 671, #ops: 0, parent:-]

--Child created id: 94
--Creating new operations for variant [Variant id: 94, #gens: 671, #ops: 0, parent:93]
---analyzing modificationPoint position: 177
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [v]
--> var from patch: v spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java427
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 427, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 94, #gens: 672, #ops: 1, parent:93] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 94
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-94/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(47): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (94(f=1.0), 93(f=2.0), )
Selected to next generation: IDs2--> (94(f=1.0), )
----------Running generation: 48, population size: 1

***** Generation 48 : 0
**Parent Variant: [Variant id: 95, #gens: 671, #ops: 0, parent:-]

--Child created id: 96
--Creating new operations for variant [Variant id: 96, #gens: 671, #ops: 0, parent:95]
---analyzing modificationPoint position: 471
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [softCurrentTime, globalCurrentTime]
--> var from patch: softCurrentTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java291
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 291, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 96, #gens: 672, #ops: 1, parent:95] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 96
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-96/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(48): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (96(f=1.0), 95(f=2.0), )
Selected to next generation: IDs2--> (96(f=1.0), )
----------Running generation: 49, population size: 1

***** Generation 49 : 0
**Parent Variant: [Variant id: 97, #gens: 671, #ops: 0, parent:-]

--Child created id: 98
--Creating new operations for variant [Variant id: 98, #gens: 671, #ops: 0, parent:97]
---analyzing modificationPoint position: 647
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  d = -((c - a) - (org.apache.commons.math.util.FastMath.LN_2_B * exp))
---analyzing modificationPoint position: 608
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  count = 0
---analyzing modificationPoint position: 151
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [theta2, theta]
--> var from patch: theta2 spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: theta spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853StepInterpolator.java366
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dot3 = twoTheta * (1 + (theta * (twoTheta - 3))) ` -topatch--> `final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8)))` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 366, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dot3 = twoTheta * (1 + (theta * (twoTheta - 3))) ` -topatch--> `final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8)))` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 98, #gens: 672, #ops: 1, parent:97] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 98, errors: [DormandPrince853StepInterpolator.java:368: error: variable dot4 is already defined in method computeInterpolatedStateAndDerivatives(double,double)
		final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8))); 		final double dot3 = twoTheta * (1 + (theta * (twoTheta - 3))); 		final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8)));
		                                                                		                                                               		             ^]
Ingredient counter is Zero
---Undoing: gnrtn(49): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dot3 = twoTheta * (1 + (theta * (twoTheta - 3))) ` -topatch--> `final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8)))` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (97(f=2.0), 98(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (97(f=2.0), )
----------Running generation: 50, population size: 1

***** Generation 50 : 0
**Parent Variant: [Variant id: 99, #gens: 671, #ops: 0, parent:-]

--Child created id: 100
--Creating new operations for variant [Variant id: 100, #gens: 671, #ops: 0, parent:99]
---analyzing modificationPoint position: 168
location: DormandPrince853StepInterpolator.java405
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = currentState[j] + (h * s) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 100, #gens: 670, #ops: 1, parent:99] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 100
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-100/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(50): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = currentState[j] + (h * s) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (100(f=1.0), 99(f=2.0), )
Selected to next generation: IDs2--> (100(f=1.0), )
----------Running generation: 51, population size: 1

***** Generation 51 : 0
**Parent Variant: [Variant id: 101, #gens: 671, #ops: 0, parent:-]

--Child created id: 102
--Creating new operations for variant [Variant id: 102, #gens: 671, #ops: 0, parent:101]
---analyzing modificationPoint position: 293
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [interpolator, equations]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java218
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.commons.math.ode.sampling.StepHandler handler : stepHandlers) { 	handler.reset(); } ` -topatch--> `interpolator.storeTime(equations.getTime())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 218, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.commons.math.ode.sampling.StepHandler handler : stepHandlers) { 	handler.reset(); } ` -topatch--> `interpolator.storeTime(equations.getTime())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 102, #gens: 672, #ops: 1, parent:101] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 102
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-102/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(51): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.commons.math.ode.sampling.StepHandler handler : stepHandlers) { 	handler.reset(); } ` -topatch--> `interpolator.storeTime(equations.getTime())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (102(f=1.0), 101(f=2.0), )
Selected to next generation: IDs2--> (102(f=1.0), )
----------Running generation: 52, population size: 1

***** Generation 52 : 0
**Parent Variant: [Variant id: 103, #gens: 671, #ops: 0, parent:-]

--Child created id: 104
--Creating new operations for variant [Variant id: 104, #gens: 671, #ops: 0, parent:103]
---analyzing modificationPoint position: 486
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()
---analyzing modificationPoint position: 40
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [nextAction, org.apache.commons.math.ode.events.EventHandler.Action.STOP]
--> var from patch: nextAction spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.ode.events.EventHandler.Action.STOP spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java303
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// force the sign to its value "just after the event" previousEventTime = t ` -topatch--> `return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 303, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// force the sign to its value "just after the event" previousEventTime = t ` -topatch--> `return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 104, #gens: 672, #ops: 1, parent:103] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 104, errors: [EventState.java:319: error: illegal start of expression
	 * Check if the integration should be stopped at the end of the
	 ^, EventState.java:319: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	        ^, EventState.java:319: error: '(' expected
	 * Check if the integration should be stopped at the end of the
	           ^, EventState.java:319: error: ')' expected
	 * Check if the integration should be stopped at the end of the
	               ^, EventState.java:319: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                  ^, EventState.java:319: error: variable declaration not allowed here
	 * Check if the integration should be stopped at the end of the
	                            ^, EventState.java:319: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                             ^, EventState.java:319: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                    ^, EventState.java:319: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                           ^, EventState.java:320: error: not a statement
	 * current step.
	 ^, EventState.java:320: error: ';' expected
	 * current step.
	          ^, EventState.java:320: error: <identifier> expected
	 * current step.
	                ^, EventState.java:322: error: illegal start of expression
	 * @return true if the integration should be stopped
	 ^, EventState.java:322: error: <identifier> expected
	 * @return true if the integration should be stopped
	    ^, EventState.java:322: error: ';' expected
	 * @return true if the integration should be stopped
	               ^, EventState.java:322: error: ';' expected
	 * @return true if the integration should be stopped
	                                  ^, EventState.java:322: error: ';' expected
	 * @return true if the integration should be stopped
	                                            ^, EventState.java:323: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	  ^, EventState.java:323: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	^, EventState.java:323: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	                   ^, EventState.java:333: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;}
	    	^, EventState.java:333: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;}
	    	                    ^, EventState.java:333: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;}
	    	                                    ^, EventState.java:333: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;}
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(52): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// force the sign to its value "just after the event" previousEventTime = t ` -topatch--> `return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (103(f=2.0), 104(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (103(f=2.0), )
----------Running generation: 53, population size: 1

***** Generation 53 : 0
**Parent Variant: [Variant id: 105, #gens: 671, #ops: 0, parent:-]

--Child created id: 106
--Creating new operations for variant [Variant id: 106, #gens: 671, #ops: 0, parent:105]
---analyzing modificationPoint position: 383
location: AbstractStepInterpolator.java218
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 106, #gens: 670, #ops: 1, parent:105] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 106
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-106/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(53): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (106(f=1.0), 105(f=2.0), )
Selected to next generation: IDs2--> (106(f=1.0), )
----------Running generation: 54, population size: 1

***** Generation 54 : 0
**Parent Variant: [Variant id: 107, #gens: 671, #ops: 0, parent:-]

--Child created id: 108
--Creating new operations for variant [Variant id: 108, #gens: 671, #ops: 0, parent:107]
---analyzing modificationPoint position: 570
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  ab = ((ya * xb) + (yb * xa)) + (yb * xb)
---analyzing modificationPoint position: 410
---modifPoint 1 not mutation generated in  return searchStart
---analyzing modificationPoint position: 127
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [yDotKLast]
--> var from patch: yDotKLast spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java333
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot6 = yDotK[5][i] ` -topatch--> `yDotKLast = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 333, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot6 = yDotK[5][i] ` -topatch--> `yDotKLast = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 108, #gens: 672, #ops: 1, parent:107] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 108
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-108/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(54): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot6 = yDotK[5][i] ` -topatch--> `yDotKLast = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (108(f=1.0), 107(f=2.0), )
Selected to next generation: IDs2--> (108(f=1.0), )
----------Running generation: 55, population size: 1

***** Generation 55 : 0
**Parent Variant: [Variant id: 109, #gens: 671, #ops: 0, parent:-]

--Child created id: 110
--Creating new operations for variant [Variant id: 110, #gens: 671, #ops: 0, parent:109]
---analyzing modificationPoint position: 70
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [g0Positive, g0]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: g0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java117
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 117, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 110, #gens: 671, #ops: 1, parent:109] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 110, errors: [EventState.java:200: error: illegal start of expression
	 * Evaluate the impact of the proposed step on the event handler.
	 ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	           ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                      ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                             ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                           ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                  ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                                ^, EventState.java:202: error: <identifier> expected
	 * @param interpolator
	                      ^, EventState.java:203: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                 ^, EventState.java:203: error: '(' expected
	 * 		step interpolator for the proposed step
	   		                     ^, EventState.java:203: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                                  ^, EventState.java:204: error: <identifier> expected
	 * @return true if the event handler triggers an event before
	    ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	               ^, EventState.java:204: error: not a statement
	 * @return true if the event handler triggers an event before
	                   ^, EventState.java:204: error: ')' expected
	 * @return true if the event handler triggers an event before
	                      ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                    ^, EventState.java:204: error: variable declaration not allowed here
	 * @return true if the event handler triggers an event before
	                             ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                             ^, EventState.java:205: error: ';' expected
	the end of the proposed step
	       ^, EventState.java:205: error: ';' expected
	the end of the proposed step
	              ^, EventState.java:205: error: ';' expected
	the end of the proposed step
	                            ^, EventState.java:206: error: <identifier> expected
	 * @exception ConvergenceException
	                                  ^, EventState.java:207: error: '(' expected
	 * 		if an event cannot be located
	   		  ^, EventState.java:207: error: ')' expected
	 * 		if an event cannot be located
	   		     ^, EventState.java:207: error: ';' expected
	 * 		if an event cannot be located
	   		                  ^, EventState.java:207: error: variable declaration not allowed here
	 * 		if an event cannot be located
	   		            ^, EventState.java:207: error: ';' expected
	 * 		if an event cannot be located
	   		                             ^, EventState.java:208: error: illegal start of expression
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	^, EventState.java:208: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                           ^, EventState.java:208: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                    ^, EventState.java:208: error: not a statement
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                              ^, EventState.java:208: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                                                   ^, EventState.java:286: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	^, EventState.java:286: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	                          ^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                        ^, EventState.java:300: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                        ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(55): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (109(f=2.0), 110(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (109(f=2.0), )
----------Running generation: 56, population size: 1

***** Generation 56 : 0
**Parent Variant: [Variant id: 111, #gens: 671, #ops: 0, parent:-]

--Child created id: 112
--Creating new operations for variant [Variant id: 112, #gens: 671, #ops: 0, parent:111]
---analyzing modificationPoint position: 303
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 0 not mutation generated in  if (filteredH < (-maxStep)) { 	filteredH = -maxStep; }
---analyzing modificationPoint position: 426
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  // prepare expandable stateful equations final org.apache.commons.math.ode.ExpandableStatefulODE exp[...]
---analyzing modificationPoint position: 543
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  lna = aa + ab
---analyzing modificationPoint position: 393
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [interpolator]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java291
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...] ` -topatch--> `final double[] currentY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 291, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...] ` -topatch--> `final double[] currentY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 112, #gens: 671, #ops: 1, parent:111] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 112, errors: [AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(56): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...] ` -topatch--> `final double[] currentY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (111(f=2.0), 112(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (111(f=2.0), )
----------Running generation: 57, population size: 1

***** Generation 57 : 0
**Parent Variant: [Variant id: 113, #gens: 671, #ops: 0, parent:-]

--Child created id: 114
--Creating new operations for variant [Variant id: 114, #gens: 671, #ops: 0, parent:113]
---analyzing modificationPoint position: 591
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (a > b) { 	return b; }
---analyzing modificationPoint position: 526
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  if (x == java.lang.Double.NEGATIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	}  	if (y <[...]
---analyzing modificationPoint position: 197
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 2 not mutation generated in  double error2 = 0
---analyzing modificationPoint position: 644
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 3 not mutation generated in  a = c
---analyzing modificationPoint position: 87
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [nextAction, org.apache.commons.math.ode.events.EventHandler.Action.STOP]
--> var from patch: nextAction spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.ode.events.EventHandler.Action.STOP spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java212
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate handler value at the end of the substep final double tb = t0 + ((i + 1) * h) ` -topatch--> `return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 212, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate handler value at the end of the substep final double tb = t0 + ((i + 1) * h) ` -topatch--> `return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 114, #gens: 672, #ops: 1, parent:113] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 114, errors: [EventState.java:320: error: illegal start of expression
	 * Get the occurrence time of the event triggered in the current step.
	 ^, EventState.java:320: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	      ^, EventState.java:320: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                     ^, EventState.java:320: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                             ^, EventState.java:320: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                       ^, EventState.java:320: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                    ^, EventState.java:320: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                ^, EventState.java:320: error: <identifier> expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                      ^, EventState.java:322: error: illegal start of expression
	 * @return occurrence time of the event triggered in the current
	 ^, EventState.java:322: error: <identifier> expected
	 * @return occurrence time of the event triggered in the current
	    ^, EventState.java:322: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                     ^, EventState.java:322: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                 ^, EventState.java:322: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                 ^, EventState.java:322: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                        ^, EventState.java:323: error: ';' expected
	step or infinity if no events are triggered
	    ^, EventState.java:323: error: ';' expected
	step or infinity if no events are triggered
	                ^, EventState.java:323: error: '(' expected
	step or infinity if no events are triggered
	                   ^, EventState.java:323: error: ')' expected
	step or infinity if no events are triggered
	                      ^, EventState.java:323: error: ';' expected
	step or infinity if no events are triggered
	                                 ^, EventState.java:323: error: variable declaration not allowed here
	step or infinity if no events are triggered
	                              ^, EventState.java:324: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	  ^, EventState.java:324: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	^, EventState.java:324: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	                          ^, EventState.java:333: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	^, EventState.java:333: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	       ^, EventState.java:333: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                        ^, EventState.java:333: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                        ^, EventState.java:333: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                                         ^, EventState.java:334: error: illegal start of expression
	 * Check if the integration should be stopped at the end of the
	 ^, EventState.java:334: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	        ^, EventState.java:334: error: '(' expected
	 * Check if the integration should be stopped at the end of the
	           ^, EventState.java:334: error: ')' expected
	 * Check if the integration should be stopped at the end of the
	               ^, EventState.java:334: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                  ^, EventState.java:334: error: variable declaration not allowed here
	 * Check if the integration should be stopped at the end of the
	                            ^, EventState.java:334: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                             ^, EventState.java:334: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                    ^, EventState.java:334: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                           ^, EventState.java:335: error: not a statement
	 * current step.
	 ^, EventState.java:335: error: ';' expected
	 * current step.
	          ^, EventState.java:335: error: <identifier> expected
	 * current step.
	                ^, EventState.java:337: error: illegal start of expression
	 * @return true if the integration should be stopped
	 ^, EventState.java:337: error: <identifier> expected
	 * @return true if the integration should be stopped
	    ^, EventState.java:337: error: ';' expected
	 * @return true if the integration should be stopped
	               ^, EventState.java:337: error: ';' expected
	 * @return true if the integration should be stopped
	                                  ^, EventState.java:337: error: ';' expected
	 * @return true if the integration should be stopped
	                                            ^, EventState.java:338: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	  ^, EventState.java:338: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	^, EventState.java:338: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	                   ^, EventState.java:348: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	^, EventState.java:348: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                    ^, EventState.java:348: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                                    ^, EventState.java:348: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                                                     ^, EventState.java:348: error: reached end of file while parsing
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                                                         		                                                                                                           			               		                                                                                        			                           		                      		                                         		                                                                                                                                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(57): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate handler value at the end of the substep final double tb = t0 + ((i + 1) * h) ` -topatch--> `return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (113(f=2.0), 114(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (113(f=2.0), )
----------Running generation: 58, population size: 1

***** Generation 58 : 0
**Parent Variant: [Variant id: 115, #gens: 671, #ops: 0, parent:-]

--Child created id: 116
--Creating new operations for variant [Variant id: 116, #gens: 671, #ops: 0, parent:115]
---analyzing modificationPoint position: 180
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // prepare arrays with the first points final double[] x = new double[maximalOrder + 1]
---analyzing modificationPoint position: 113
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  // bracketing is balanced, try to find the root itself targetY = 0
---analyzing modificationPoint position: 214
Templates availables27
Attempts Base Ingredients  1 total 27
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 2 not mutation generated in  yDotKLast[k] = new double[dimension]
---analyzing modificationPoint position: 385
location: AbstractIntegrator.java213
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// perform integration integrate(expandableODE, t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 116, #gens: 670, #ops: 1, parent:115] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 116
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-116/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(58): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// perform integration integrate(expandableODE, t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (116(f=1.0), 115(f=2.0), )
Selected to next generation: IDs2--> (116(f=1.0), )
----------Running generation: 59, population size: 1

***** Generation 59 : 0
**Parent Variant: [Variant id: 117, #gens: 671, #ops: 0, parent:-]

--Child created id: 118
--Creating new operations for variant [Variant id: 118, #gens: 671, #ops: 0, parent:117]
---analyzing modificationPoint position: 126
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double yDot1 = yDotK[0][i]
---analyzing modificationPoint position: 169
location: DormandPrince853StepInterpolator.java407
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 118, #gens: 670, #ops: 1, parent:117] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 118
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-118/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(59): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (118(f=1.0), 117(f=2.0), )
Selected to next generation: IDs2--> (118(f=1.0), )
----------Running generation: 60, population size: 1

***** Generation 60 : 0
**Parent Variant: [Variant id: 119, #gens: 671, #ops: 0, parent:-]

--Child created id: 120
--Creating new operations for variant [Variant id: 120, #gens: 671, #ops: 0, parent:119]
---analyzing modificationPoint position: 660
location: FastMath.java826
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `/* Lookup exp(floor(x)). intPartA will have the upper 22 bits, intPartB will have the lower 52 bits.[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 120, #gens: 670, #ops: 1, parent:119] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 120, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(60): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `/* Lookup exp(floor(x)). intPartA will have the upper 22 bits, intPartB will have the lower 52 bits.[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (119(f=2.0), 120(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (119(f=2.0), )
----------Running generation: 61, population size: 1

***** Generation 61 : 0
**Parent Variant: [Variant id: 121, #gens: 671, #ops: 0, parent:-]

--Child created id: 122
--Creating new operations for variant [Variant id: 122, #gens: 671, #ops: 0, parent:121]
---analyzing modificationPoint position: 636
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  /* Relative sizes: lnzb     [0, 2.33E-10] lnm[1]   [0, 1.17E-7] ln2B*exp [0, 1.12E-4] lnza      [0, [...]
---analyzing modificationPoint position: 102
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java199
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 199, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 122, #gens: 671, #ops: 1, parent:121] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 122, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex is already defined in method doSolve()
		double xA = x[signChangeIndex - 1]; 		int signChangeIndex;
		                                    		    ^, BracketingNthOrderBrentSolver.java:201: error: cannot find symbol
		double absYA = org.apache.commons.math.util.FastMath.abs(yA);
		                                                         ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:223: error: cannot find symbol
						return yA <= 0 ? xA : xB;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:225: error: cannot find symbol
						return yA < 0 ? xB : xA;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				                                                                                                       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:324: error: cannot find symbol
			if ((nextY * yA) <= 0) {
			             ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:334: error: cannot find symbol
				yA = nextY;
				^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:335: error: cannot find symbol
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				                                                  ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(61): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (121(f=2.0), 122(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (121(f=2.0), )
----------Running generation: 62, population size: 1

***** Generation 62 : 0
**Parent Variant: [Variant id: 123, #gens: 671, #ops: 0, parent:-]

--Child created id: 124
--Creating new operations for variant [Variant id: 124, #gens: 671, #ops: 0, parent:123]
---analyzing modificationPoint position: 163
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  interpolatedDerivatives[i] = (((((v[0][i] + (dot1 * v[1][i])) + (dot2 * v[2][i])) +  (dot3 * v[3][i][...]
---analyzing modificationPoint position: 517
Templates availables198
Attempts Base Ingredients  1 total 198
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java3369
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (y == x) { 	return y; } ` -topatch--> `if (x < 0.0) { 	x = -x; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 3369, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (y == x) { 	return y; } ` -topatch--> `if (x < 0.0) { 	x = -x; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 124, #gens: 671, #ops: 1, parent:123] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 124, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(62): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (y == x) { 	return y; } ` -topatch--> `if (x < 0.0) { 	x = -x; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (123(f=2.0), 124(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (123(f=2.0), )
----------Running generation: 63, population size: 1

***** Generation 63 : 0
**Parent Variant: [Variant id: 125, #gens: 671, #ops: 0, parent:-]

--Child created id: 126
--Creating new operations for variant [Variant id: 126, #gens: 671, #ops: 0, parent:125]
---analyzing modificationPoint position: 22
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [stepHandlers]
--> var from patch: stepHandlers spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java316
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// restrict the interpolator to the first part of the step, up to the event final double eventT = cu[...] ` -topatch--> `stepHandlers.clear()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 316, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// restrict the interpolator to the first part of the step, up to the event final double eventT = cu[...] ` -topatch--> `stepHandlers.clear()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 126, #gens: 672, #ops: 1, parent:125] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 126
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-126/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(63): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// restrict the interpolator to the first part of the step, up to the event final double eventT = cu[...] ` -topatch--> `stepHandlers.clear()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (126(f=1.0), 125(f=2.0), )
Selected to next generation: IDs2--> (126(f=1.0), )
----------Running generation: 64, population size: 1

***** Generation 64 : 0
**Parent Variant: [Variant id: 127, #gens: 671, #ops: 0, parent:-]

--Child created id: 128
--Creating new operations for variant [Variant id: 128, #gens: 671, #ops: 0, parent:127]
---analyzing modificationPoint position: 294
location: EmbeddedRungeKuttaIntegrator.java221
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 128, #gens: 670, #ops: 1, parent:127] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 128
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-128/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(64): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (128(f=1.0), 127(f=2.0), )
Selected to next generation: IDs2--> (128(f=1.0), )
----------Running generation: 65, population size: 1

***** Generation 65 : 0
**Parent Variant: [Variant id: 129, #gens: 671, #ops: 0, parent:-]

--Child created id: 130
--Creating new operations for variant [Variant id: 130, #gens: 671, #ops: 0, parent:129]
---analyzing modificationPoint position: 181
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  final double[] y = new double[maximalOrder + 1]
---analyzing modificationPoint position: 413
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 1 not mutation generated in  primary.computeDerivatives(t, primaryState, primaryStateDot)
---analyzing modificationPoint position: 213
location: DormandPrince853StepInterpolator.java293
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < yDotKLast.length; ++k) { 	yDotKLast[k] = new double[dimension]; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 130, #gens: 670, #ops: 1, parent:129] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 130
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-130/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(65): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < yDotKLast.length; ++k) { 	yDotKLast[k] = new double[dimension]; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (130(f=1.0), 129(f=2.0), )
Selected to next generation: IDs2--> (130(f=1.0), )
----------Running generation: 66, population size: 1

***** Generation 66 : 0
**Parent Variant: [Variant id: 131, #gens: 671, #ops: 0, parent:-]

--Child created id: 132
--Creating new operations for variant [Variant id: 132, #gens: 671, #ops: 0, parent:131]
---analyzing modificationPoint position: 263
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  // next stages for (int k = 1; k < stages; ++k) {  	for (int j = 0; j < y0.length; ++j) { 		double s[...]
---analyzing modificationPoint position: 426
---modifPoint 1 not mutation generated in  // prepare expandable stateful equations final org.apache.commons.math.ode.ExpandableStatefulODE exp[...]
---analyzing modificationPoint position: 546
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  z = (z * lnb) + (1.0 / 24.0)
---analyzing modificationPoint position: 551
---modifPoint 3 not mutation generated in  final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null)
---analyzing modificationPoint position: 464
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [globalPreviousTime]
--> var from patch: globalPreviousTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java223
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = new double[primaryMapper.getDimension()] ` -topatch--> `return globalPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 223, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = new double[primaryMapper.getDimension()] ` -topatch--> `return globalPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 132, #gens: 672, #ops: 1, parent:131] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 132, errors: [AbstractStepInterpolator.java:375: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:375: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:375: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:375: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:375: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:375: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:375: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:377: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:378: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:378: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:378: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:378: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:378: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:378: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:378: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:378: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:378: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:379: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:379: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:379: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:379: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:379: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:379: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:379: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:379: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:379: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:380: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:380: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:380: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:380: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:380: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:381: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:381: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:382: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:383: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:383: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:381: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:385: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:385: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:386: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:386: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:386: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:386: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:386: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:398: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:398: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:398: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:398: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:402: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:402: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:406: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:406: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:411: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:411: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:416: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:416: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:418: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:418: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:420: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:420: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:422: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:422: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:433: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:433: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:433: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:433: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:433: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:433: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:435: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:435: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:435: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:438: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:438: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:440: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:440: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:442: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:442: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:442: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:444: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:444: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:444: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(66): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = new double[primaryMapper.getDimension()] ` -topatch--> `return globalPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (131(f=2.0), 132(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (131(f=2.0), )
----------Running generation: 67, population size: 1

***** Generation 67 : 0
**Parent Variant: [Variant id: 133, #gens: 671, #ops: 0, parent:-]

--Child created id: 134
--Creating new operations for variant [Variant id: 134, #gens: 671, #ops: 0, parent:133]
---analyzing modificationPoint position: 520
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [this.functionValueAccuracy]
--> var from patch: this.functionValueAccuracy spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 


























































































double functionValueAccuracy
SameName: final 


























































































double functionValueAccuracy
Transforming shadowed variable in functionValueAccuracy = functionValueAccuracy
location: BaseAbstractUnivariateRealSolver.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `functionValueAccuracy = functionValueAccuracy` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 95, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `functionValueAccuracy = functionValueAccuracy` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 134, #gens: 672, #ops: 1, parent:133] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 134, errors: [BaseAbstractUnivariateRealSolver.java:96: error: final parameter functionValueAccuracy may not be assigned
		functionValueAccuracy = functionValueAccuracy; 		this.functionValueAccuracy = functionValueAccuracy;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(67): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `functionValueAccuracy = functionValueAccuracy` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (133(f=2.0), 134(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (133(f=2.0), )
----------Running generation: 68, population size: 1

***** Generation 68 : 0
**Parent Variant: [Variant id: 135, #gens: 671, #ops: 0, parent:-]

--Child created id: 136
--Creating new operations for variant [Variant id: 136, #gens: 671, #ops: 0, parent:135]
---analyzing modificationPoint position: 270
location: EmbeddedRungeKuttaIntegrator.java272
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// estimate the state at the end of the step for (int j = 0; j < y0.length; ++j) { 	double sum = b[0[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 136, #gens: 670, #ops: 1, parent:135] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 136
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-136/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(68): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// estimate the state at the end of the step for (int j = 0; j < y0.length; ++j) { 	double sum = b[0[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (136(f=1.0), 135(f=2.0), )
Selected to next generation: IDs2--> (136(f=1.0), )
----------Running generation: 69, population size: 1

***** Generation 69 : 0
**Parent Variant: [Variant id: 137, #gens: 671, #ops: 0, parent:-]

--Child created id: 138
--Creating new operations for variant [Variant id: 138, #gens: 671, #ops: 0, parent:137]
---analyzing modificationPoint position: 222
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [vectorsInitialized]
--> var from patch: vectorsInitialized spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java232
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `vectorsInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 232, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `vectorsInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 138, #gens: 672, #ops: 1, parent:137] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 138
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-138/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(69): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `vectorsInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (138(f=1.0), 137(f=2.0), )
Selected to next generation: IDs2--> (138(f=1.0), )
----------Running generation: 70, population size: 1

***** Generation 70 : 0
**Parent Variant: [Variant id: 139, #gens: 671, #ops: 0, parent:-]

--Child created id: 140
--Creating new operations for variant [Variant id: 140, #gens: 671, #ops: 0, parent:139]
---analyzing modificationPoint position: 480
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  this.firstIndex = firstIndex
---analyzing modificationPoint position: 441
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [finalized]
--> var from patch: finalized spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java412
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateCompleteInterpolatedState() ` -topatch--> `finalized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 412, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateCompleteInterpolatedState() ` -topatch--> `finalized = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 140, #gens: 672, #ops: 1, parent:139] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 140
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-140/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(70): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateCompleteInterpolatedState() ` -topatch--> `finalized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (140(f=1.0), 139(f=2.0), )
Selected to next generation: IDs2--> (140(f=1.0), )
----------Running generation: 71, population size: 1

***** Generation 71 : 0
**Parent Variant: [Variant id: 141, #gens: 671, #ops: 0, parent:-]

--Child created id: 142
--Creating new operations for variant [Variant id: 142, #gens: 671, #ops: 0, parent:141]
---analyzing modificationPoint position: 68
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [nextAction, org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE, org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES]
--> var from patch: nextAction spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `previousEventTime = java.lang.Double.NaN ` -topatch--> `return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) ||  (nextA[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `previousEventTime = java.lang.Double.NaN ` -topatch--> `return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) ||  (nextA[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 142, #gens: 672, #ops: 1, parent:141] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 142, errors: [EventState.java:363: error: illegal start of expression
	 * Evaluate the impact of the proposed step on the event handler.
	 ^, EventState.java:363: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	           ^, EventState.java:363: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                      ^, EventState.java:363: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                             ^, EventState.java:363: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                           ^, EventState.java:363: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                  ^, EventState.java:363: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                                ^, EventState.java:365: error: <identifier> expected
	 * @param interpolator
	                      ^, EventState.java:366: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                 ^, EventState.java:366: error: '(' expected
	 * 		step interpolator for the proposed step
	   		                     ^, EventState.java:366: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                                  ^, EventState.java:367: error: <identifier> expected
	 * @return true if the event handler triggers an event before
	    ^, EventState.java:367: error: ';' expected
	 * @return true if the event handler triggers an event before
	               ^, EventState.java:367: error: not a statement
	 * @return true if the event handler triggers an event before
	                   ^, EventState.java:367: error: ')' expected
	 * @return true if the event handler triggers an event before
	                      ^, EventState.java:367: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                    ^, EventState.java:367: error: variable declaration not allowed here
	 * @return true if the event handler triggers an event before
	                             ^, EventState.java:367: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                ^, EventState.java:367: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                             ^, EventState.java:368: error: ';' expected
	the end of the proposed step
	       ^, EventState.java:368: error: ';' expected
	the end of the proposed step
	              ^, EventState.java:368: error: ';' expected
	the end of the proposed step
	                            ^, EventState.java:369: error: <identifier> expected
	 * @exception ConvergenceException
	                                  ^, EventState.java:370: error: '(' expected
	 * 		if an event cannot be located
	   		  ^, EventState.java:370: error: ')' expected
	 * 		if an event cannot be located
	   		     ^, EventState.java:370: error: ';' expected
	 * 		if an event cannot be located
	   		                  ^, EventState.java:370: error: variable declaration not allowed here
	 * 		if an event cannot be located
	   		            ^, EventState.java:370: error: ';' expected
	 * 		if an event cannot be located
	   		                             ^, EventState.java:371: error: illegal start of expression
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	^, EventState.java:371: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                           ^, EventState.java:371: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                    ^, EventState.java:371: error: not a statement
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                              ^, EventState.java:371: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                                                   ^, EventState.java:374: error: illegal start of expression
	 * Get the occurrence time of the event triggered in the current step.
	 ^, EventState.java:374: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	      ^, EventState.java:374: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                     ^, EventState.java:374: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                             ^, EventState.java:374: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                       ^, EventState.java:374: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                    ^, EventState.java:374: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                ^, EventState.java:374: error: <identifier> expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                      ^, EventState.java:376: error: illegal start of expression
	 * @return occurrence time of the event triggered in the current
	 ^, EventState.java:376: error: <identifier> expected
	 * @return occurrence time of the event triggered in the current
	    ^, EventState.java:376: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                     ^, EventState.java:376: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                 ^, EventState.java:376: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                 ^, EventState.java:376: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                        ^, EventState.java:377: error: ';' expected
	step or infinity if no events are triggered
	    ^, EventState.java:377: error: ';' expected
	step or infinity if no events are triggered
	                ^, EventState.java:377: error: '(' expected
	step or infinity if no events are triggered
	                   ^, EventState.java:377: error: ')' expected
	step or infinity if no events are triggered
	                      ^, EventState.java:377: error: ';' expected
	step or infinity if no events are triggered
	                                 ^, EventState.java:377: error: variable declaration not allowed here
	step or infinity if no events are triggered
	                              ^, EventState.java:378: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	  ^, EventState.java:378: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	^, EventState.java:378: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	                          ^, EventState.java:387: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	^, EventState.java:387: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	       ^, EventState.java:387: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                        ^, EventState.java:387: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                        ^, EventState.java:387: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                                         ^, EventState.java:388: error: illegal start of expression
	 * Check if the integration should be stopped at the end of the
	 ^, EventState.java:388: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	        ^, EventState.java:388: error: '(' expected
	 * Check if the integration should be stopped at the end of the
	           ^, EventState.java:388: error: ')' expected
	 * Check if the integration should be stopped at the end of the
	               ^, EventState.java:388: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                  ^, EventState.java:388: error: variable declaration not allowed here
	 * Check if the integration should be stopped at the end of the
	                            ^, EventState.java:388: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                             ^, EventState.java:388: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                    ^, EventState.java:388: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                           ^, EventState.java:389: error: not a statement
	 * current step.
	 ^, EventState.java:389: error: ';' expected
	 * current step.
	          ^, EventState.java:389: error: <identifier> expected
	 * current step.
	                ^, EventState.java:391: error: illegal start of expression
	 * @return true if the integration should be stopped
	 ^, EventState.java:391: error: <identifier> expected
	 * @return true if the integration should be stopped
	    ^, EventState.java:391: error: ';' expected
	 * @return true if the integration should be stopped
	               ^, EventState.java:391: error: ';' expected
	 * @return true if the integration should be stopped
	                                  ^, EventState.java:391: error: ';' expected
	 * @return true if the integration should be stopped
	                                            ^, EventState.java:392: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	  ^, EventState.java:392: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	^, EventState.java:392: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	                   ^, EventState.java:402: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	^, EventState.java:402: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                    ^, EventState.java:402: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                                    ^, EventState.java:402: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                                                     ^, EventState.java:402: error: reached end of file while parsing
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);} 		pendingEvent = false; 		pendingEventTime = java.lang.Double.NaN; 		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_DERIVATIVES);}}
	    	                                                         		                                                                                                           			               		                                                                                        			                           		                      		                                         		                                                                                                                                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(71): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `previousEventTime = java.lang.Double.NaN ` -topatch--> `return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) ||  (nextA[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (141(f=2.0), 142(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (141(f=2.0), )
----------Running generation: 72, population size: 1

***** Generation 72 : 0
**Parent Variant: [Variant id: 143, #gens: 671, #ops: 0, parent:-]

--Child created id: 144
--Creating new operations for variant [Variant id: 144, #gens: 671, #ops: 0, parent:143]
---analyzing modificationPoint position: 634
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1216
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnzb = 0.0 ` -topatch--> `/* Compute expm1(epsilon) */ double zb = 0.008336750013465571` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1216, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnzb = 0.0 ` -topatch--> `/* Compute expm1(epsilon) */ double zb = 0.008336750013465571` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 144, #gens: 671, #ops: 1, parent:143] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 144, errors: [FastMath.java:1266: error: cannot find symbol
			lnzb = -((lnza - aa) - ab);
			^
  symbol:   variable lnzb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1315: error: cannot find symbol
		c = a + lnzb;
		        ^
  symbol:   variable lnzb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1316: error: cannot find symbol
		d = -((c - a) - lnzb);
		                ^
  symbol:   variable lnzb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(72): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnzb = 0.0 ` -topatch--> `/* Compute expm1(epsilon) */ double zb = 0.008336750013465571` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (143(f=2.0), 144(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (143(f=2.0), )
----------Running generation: 73, population size: 1

***** Generation 73 : 0
**Parent Variant: [Variant id: 145, #gens: 671, #ops: 0, parent:-]

--Child created id: 146
--Creating new operations for variant [Variant id: 146, #gens: 671, #ops: 0, parent:145]
---analyzing modificationPoint position: 152
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); }
---analyzing modificationPoint position: 274
Templates availables22
Attempts Base Ingredients  1 total 22
vars from patch [this.maxGrowth]
--> var from patch: this.maxGrowth spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java277
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 277, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 146, #gens: 671, #ops: 1, parent:145] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 146, errors: [EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 * Get the minimal reduction factor for stepsize control.
	 ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	      ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                  ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                                   ^, EmbeddedRungeKuttaIntegrator.java:361: error: '(' expected
	 * Get the minimal reduction factor for stepsize control.
	                                       ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                                                        ^, EmbeddedRungeKuttaIntegrator.java:363: error: illegal start of expression
	 * @return minimal reduction factor
	 ^, EmbeddedRungeKuttaIntegrator.java:363: error: <identifier> expected
	 * @return minimal reduction factor
	    ^, EmbeddedRungeKuttaIntegrator.java:363: error: ';' expected
	 * @return minimal reduction factor
	                  ^, EmbeddedRungeKuttaIntegrator.java:364: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	  ^, EmbeddedRungeKuttaIntegrator.java:364: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:364: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:364: error: variable declaration not allowed here
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	              ^, EmbeddedRungeKuttaIntegrator.java:369: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:369: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	       ^, EmbeddedRungeKuttaIntegrator.java:369: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	                           ^, EmbeddedRungeKuttaIntegrator.java:369: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	                                                     ^, EmbeddedRungeKuttaIntegrator.java:373: error: illegal start of expression
	 */ 	public double getMaxGrowth() { 		return maxGrowth;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:373: error: ';' expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;} 	/**
	    	                          ^, EmbeddedRungeKuttaIntegrator.java:378: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:378: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	       ^, EmbeddedRungeKuttaIntegrator.java:378: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	                        ^, EmbeddedRungeKuttaIntegrator.java:378: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	                                               ^, EmbeddedRungeKuttaIntegrator.java:390: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	^, EmbeddedRungeKuttaIntegrator.java:390: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                       ^, EmbeddedRungeKuttaIntegrator.java:390: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                         ^, EmbeddedRungeKuttaIntegrator.java:390: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                 ^, EmbeddedRungeKuttaIntegrator.java:390: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                     ^, EmbeddedRungeKuttaIntegrator.java:390: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                           ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                            ^, EmbeddedRungeKuttaIntegrator.java:390: error: reached end of file while parsing
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(73): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (145(f=2.0), 146(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (145(f=2.0), )
----------Running generation: 74, population size: 1

***** Generation 74 : 0
**Parent Variant: [Variant id: 147, #gens: 671, #ops: 0, parent:-]

--Child created id: 148
--Creating new operations for variant [Variant id: 148, #gens: 671, #ops: 0, parent:147]
---analyzing modificationPoint position: 289
location: EmbeddedRungeKuttaIntegrator.java212
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.storeTime(equations.getTime()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 148, #gens: 670, #ops: 1, parent:147] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 148
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-148/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(74): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.storeTime(equations.getTime()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (148(f=1.0), 147(f=2.0), )
Selected to next generation: IDs2--> (148(f=1.0), )
----------Running generation: 75, population size: 1

***** Generation 75 : 0
**Parent Variant: [Variant id: 149, #gens: 671, #ops: 0, parent:-]

--Child created id: 150
--Creating new operations for variant [Variant id: 150, #gens: 671, #ops: 0, parent:149]
---analyzing modificationPoint position: 122
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  if (!vectorsInitialized) {  	if (v == null) { 		v = new double[7][]; 		for (int k = 0; k < 7; ++k) {[...]
---analyzing modificationPoint position: 42
location: EventState.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextAction = handler.eventOccurred(t, y, !(increasing ^ forward)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 150, #gens: 670, #ops: 1, parent:149] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 150
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-150/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(75): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextAction = handler.eventOccurred(t, y, !(increasing ^ forward)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (150(f=1.0), 149(f=2.0), )
Selected to next generation: IDs2--> (150(f=1.0), )
----------Running generation: 76, population size: 1

***** Generation 76 : 0
**Parent Variant: [Variant id: 151, #gens: 671, #ops: 0, parent:-]

--Child created id: 152
--Creating new operations for variant [Variant id: 152, #gens: 671, #ops: 0, parent:151]
---analyzing modificationPoint position: 392
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [eventsStates, state, interpolator]
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: state spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java287
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `statesInitialized = true ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 287, pointed element: CtForEachImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `statesInitialized = true ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 152, #gens: 672, #ops: 1, parent:151] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 152
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-152/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(76): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `statesInitialized = true ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (152(f=1.0), 151(f=2.0), )
Selected to next generation: IDs2--> (152(f=1.0), )
----------Running generation: 77, population size: 1

***** Generation 77 : 0
**Parent Variant: [Variant id: 153, #gens: 671, #ops: 0, parent:-]

--Child created id: 154
--Creating new operations for variant [Variant id: 154, #gens: 671, #ops: 0, parent:153]
---analyzing modificationPoint position: 529
location: FastMath.java1534
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y < 8.0E298) && (y > (-8.0E298))) { 	double tmp1 = y * org.apache.commons.math.util.FastMath.HE[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 154, #gens: 670, #ops: 1, parent:153] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 154, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(77): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y < 8.0E298) && (y > (-8.0E298))) { 	double tmp1 = y * org.apache.commons.math.util.FastMath.HE[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (153(f=2.0), 154(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (153(f=2.0), )
----------Running generation: 78, population size: 1

***** Generation 78 : 0
**Parent Variant: [Variant id: 155, #gens: 671, #ops: 0, parent:-]

--Child created id: 156
--Creating new operations for variant [Variant id: 156, #gens: 671, #ops: 0, parent:155]
---analyzing modificationPoint position: 123
location: DormandPrince853StepInterpolator.java320
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	v = new double[7][]; 	for (int k = 0; k < 7; ++k) { 		v[k] = new double[interpolat[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 156, #gens: 670, #ops: 1, parent:155] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 156
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-156/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(78): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	v = new double[7][]; 	for (int k = 0; k < 7; ++k) { 		v[k] = new double[interpolat[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (156(f=1.0), 155(f=2.0), )
Selected to next generation: IDs2--> (156(f=1.0), )
----------Running generation: 79, population size: 1

***** Generation 79 : 0
**Parent Variant: [Variant id: 157, #gens: 671, #ops: 0, parent:-]

--Child created id: 158
--Creating new operations for variant [Variant id: 158, #gens: 671, #ops: 0, parent:157]
---analyzing modificationPoint position: 550
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  z = z * lnb
---analyzing modificationPoint position: 519
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  this.relativeAccuracy = relativeAccuracy
---analyzing modificationPoint position: 571
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  /* split, so now y = a */ tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000
---analyzing modificationPoint position: 625
---modifPoint 3 not mutation generated in  /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial expansion. tempA is exact since i[...]
---analyzing modificationPoint position: 255
location: EmbeddedRungeKuttaIntegrator.java295
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 158, #gens: 670, #ops: 1, parent:157] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 158
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-158/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(79): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (158(f=1.0), 157(f=2.0), )
Selected to next generation: IDs2--> (158(f=1.0), )
----------Running generation: 80, population size: 1

***** Generation 80 : 0
**Parent Variant: [Variant id: 159, #gens: 671, #ops: 0, parent:-]

--Child created id: 160
--Creating new operations for variant [Variant id: 160, #gens: 671, #ops: 0, parent:159]
---analyzing modificationPoint position: 156
---modifPoint 0 not mutation generated in  final double dot6 = (theta2 * theta) * (4 + (theta * ((-15) + (theta * (18 - (7 * theta))))))
---analyzing modificationPoint position: 354
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  this.secondaryMappers = secondary.clone()
---analyzing modificationPoint position: 274
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 2 not mutation generated in  yTmp[j] = y[j] + (stepSize * sum)
---analyzing modificationPoint position: 96
location: EventState.java298
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 160, #gens: 670, #ops: 1, parent:159] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 160
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-160/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(80): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (159(f=2.0), 160(f=2.0), )
Selected to next generation: IDs2--> (159(f=2.0), )
----------Running generation: 81, population size: 1

***** Generation 81 : 0
**Parent Variant: [Variant id: 161, #gens: 671, #ops: 0, parent:-]

--Child created id: 162
--Creating new operations for variant [Variant id: 162, #gens: 671, #ops: 0, parent:161]
---analyzing modificationPoint position: 114
---modifPoint 0 not mutation generated in  int start = 0
---analyzing modificationPoint position: 175
location: DormandPrince853StepInterpolator.java421
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = ((((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K16_01 * yDotK[0[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 162, #gens: 670, #ops: 1, parent:161] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 162, errors: [DormandPrince853StepInterpolator.java:426: error: variable s might not have been initialized
			yTmp[j] = currentState[j] + (h * s);
			                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(81): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = ((((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K16_01 * yDotK[0[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (161(f=2.0), 162(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (161(f=2.0), )
----------Running generation: 82, population size: 1

***** Generation 82 : 0
**Parent Variant: [Variant id: 163, #gens: 671, #ops: 0, parent:-]

--Child created id: 164
--Creating new operations for variant [Variant id: 164, #gens: 671, #ops: 0, parent:163]
---analyzing modificationPoint position: 618
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  final double fracPartB = org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac[...]
---analyzing modificationPoint position: 476
location: AbstractStepInterpolator.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the step is not finalized anymore finalized = false ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 164, #gens: 670, #ops: 1, parent:163] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 164
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-164/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(82): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the step is not finalized anymore finalized = false ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (164(f=1.0), 163(f=2.0), )
Selected to next generation: IDs2--> (164(f=1.0), )
----------Running generation: 83, population size: 1

***** Generation 83 : 0
**Parent Variant: [Variant id: 165, #gens: 671, #ops: 0, parent:-]

--Child created id: 166
--Creating new operations for variant [Variant id: 166, #gens: 671, #ops: 0, parent:165]
---analyzing modificationPoint position: 317
location: AdaptiveStepsizeIntegrator.java322
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 	if (acceptSmall) { 		filteredH = (for[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 166, #gens: 670, #ops: 1, parent:165] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 166
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-166/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(83): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 	if (acceptSmall) { 		filteredH = (for[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (166(f=1.0), 165(f=2.0), )
Selected to next generation: IDs2--> (166(f=1.0), )
----------Running generation: 84, population size: 1

***** Generation 84 : 0
**Parent Variant: [Variant id: 167, #gens: 671, #ops: 0, parent:-]

--Child created id: 168
--Creating new operations for variant [Variant id: 168, #gens: 671, #ops: 0, parent:167]
---analyzing modificationPoint position: 98
location: EventState.java301
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 168, #gens: 670, #ops: 1, parent:167] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 168
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-168/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->86682
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 86682
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(84): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (167(f=2.0), 168(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (167(f=2.0), )
----------Running generation: 85, population size: 1

***** Generation 85 : 0
**Parent Variant: [Variant id: 169, #gens: 671, #ops: 0, parent:-]

--Child created id: 170
--Creating new operations for variant [Variant id: 170, #gens: 671, #ops: 0, parent:169]
---analyzing modificationPoint position: 581
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  /* split, so now lnz = a */ /* tmp = aa * 1073741824.0; lnza = aa + tmp - tmp; lnzb = aa - lnza + ab[...]
---analyzing modificationPoint position: 185
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [this.allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE]
--> var from patch: this.allowed spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java151
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 151, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 170, #gens: 672, #ops: 1, parent:169] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 170
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-170/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(85): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (170(f=1.0), 169(f=2.0), )
Selected to next generation: IDs2--> (170(f=1.0), )
----------Running generation: 86, population size: 1

***** Generation 86 : 0
**Parent Variant: [Variant id: 171, #gens: 671, #ops: 0, parent:-]

--Child created id: 172
--Creating new operations for variant [Variant id: 172, #gens: 671, #ops: 0, parent:171]
---analyzing modificationPoint position: 36
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  pendingEventTime = root
---analyzing modificationPoint position: 406
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...]
---analyzing modificationPoint position: 362
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 2 not mutation generated in  stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep)
---analyzing modificationPoint position: 367
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 3 not mutation generated in  softPreviousTime = java.lang.Double.NaN
---analyzing modificationPoint position: 75
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [g0, java.lang.Double.NaN]
--> var from patch: g0 spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java177
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `g0 = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 177, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `g0 = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 172, #gens: 671, #ops: 1, parent:171] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 172
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-172/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(86): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `g0 = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (171(f=2.0), 172(f=2.0), )
Selected to next generation: IDs2--> (171(f=2.0), )
----------Running generation: 87, population size: 1

***** Generation 87 : 0
**Parent Variant: [Variant id: 173, #gens: 671, #ops: 0, parent:-]

--Child created id: 174
--Creating new operations for variant [Variant id: 174, #gens: 671, #ops: 0, parent:173]
---analyzing modificationPoint position: 79
location: EventState.java193
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 174, #gens: 670, #ops: 1, parent:173] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 174
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-174/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(87): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (174(f=1.0), 173(f=2.0), )
Selected to next generation: IDs2--> (174(f=1.0), )
----------Running generation: 88, population size: 1

***** Generation 88 : 0
**Parent Variant: [Variant id: 175, #gens: 671, #ops: 0, parent:-]

--Child created id: 176
--Creating new operations for variant [Variant id: 176, #gens: 671, #ops: 0, parent:175]
---analyzing modificationPoint position: 342
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  secondaryMappers = (interpolator.secondaryMappers == null) ?  null : interpolator.secondaryMappers.c[...]
---analyzing modificationPoint position: 654
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  c = a + lnzb
---analyzing modificationPoint position: 90
location: EventState.java217
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// check events occurrence if (g0Positive ^ (gb >= 0)) { 	// there is a sign change: an event is exp[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 176, #gens: 670, #ops: 1, parent:175] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 176
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-176/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(88): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// check events occurrence if (g0Positive ^ (gb >= 0)) { 	// there is a sign change: an event is exp[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (175(f=2.0), 176(f=2.0), )
Selected to next generation: IDs2--> (175(f=2.0), )
----------Running generation: 89, population size: 1

***** Generation 89 : 0
**Parent Variant: [Variant id: 177, #gens: 671, #ops: 0, parent:-]

--Child created id: 178
--Creating new operations for variant [Variant id: 178, #gens: 671, #ops: 0, parent:177]
---analyzing modificationPoint position: 185
location: BracketingNthOrderBrentSolver.java151
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 178, #gens: 670, #ops: 1, parent:177] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 178
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-178/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(89): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (178(f=1.0), 177(f=2.0), )
Selected to next generation: IDs2--> (178(f=1.0), )
----------Running generation: 90, population size: 1

***** Generation 90 : 0
**Parent Variant: [Variant id: 179, #gens: 671, #ops: 0, parent:-]

--Child created id: 180
--Creating new operations for variant [Variant id: 180, #gens: 671, #ops: 0, parent:179]
---analyzing modificationPoint position: 81
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  final double h = dt / n
---analyzing modificationPoint position: 50
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  state.reinitializeBegin(interpolator)
---analyzing modificationPoint position: 79
location: EventState.java193
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 180, #gens: 670, #ops: 1, parent:179] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 180
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-180/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(90): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (180(f=1.0), 179(f=2.0), )
Selected to next generation: IDs2--> (180(f=1.0), )
----------Running generation: 91, population size: 1

***** Generation 91 : 0
**Parent Variant: [Variant id: 181, #gens: 671, #ops: 0, parent:-]

--Child created id: 182
--Creating new operations for variant [Variant id: 182, #gens: 671, #ops: 0, parent:181]
---analyzing modificationPoint position: 359
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
vars from patch [primaryMapper]
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java484
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `finalized = true ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 484, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `finalized = true ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 182, #gens: 672, #ops: 1, parent:181] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 182
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-182/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(91): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `finalized = true ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (182(f=1.0), 181(f=2.0), )
Selected to next generation: IDs2--> (182(f=1.0), )
----------Running generation: 92, population size: 1

***** Generation 92 : 0
**Parent Variant: [Variant id: 183, #gens: 671, #ops: 0, parent:-]

--Child created id: 184
--Creating new operations for variant [Variant id: 184, #gens: 671, #ops: 0, parent:183]
---analyzing modificationPoint position: 225
---modifPoint 0 not mutation generated in  return 8
---analyzing modificationPoint position: 461
location: AbstractStepInterpolator.java220
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedState = new double[dimension] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 184, #gens: 670, #ops: 1, parent:183] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 184
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-184/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(92): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedState = new double[dimension] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (183(f=2.0), 184(f=2.0), )
Selected to next generation: IDs2--> (183(f=2.0), )
----------Running generation: 93, population size: 1

***** Generation 93 : 0
**Parent Variant: [Variant id: 185, #gens: 671, #ops: 0, parent:-]

--Child created id: 186
--Creating new operations for variant [Variant id: 186, #gens: 671, #ops: 0, parent:185]
---analyzing modificationPoint position: 311
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 0 not mutation generated in  scalAbsoluteTolerance = absoluteTolerance
---analyzing modificationPoint position: 492
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  evaluations.resetCount()
---analyzing modificationPoint position: 42
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 2 not mutation generated in  nextAction = handler.eventOccurred(t, y, !(increasing ^ forward))
---analyzing modificationPoint position: 144
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 3 not mutation generated in  final double eta = 1 - theta
---analyzing modificationPoint position: 110
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 4 not mutation generated in  if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]
---analyzing modificationPoint position: 95
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [ga, f, ta]
--> var from patch: ga spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ta spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java276
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `ga = f.value(ta)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 276, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `ga = f.value(ta)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 186, #gens: 672, #ops: 1, parent:185] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 186
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-186/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(93): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `ga = f.value(ta)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (186(f=1.0), 185(f=2.0), )
Selected to next generation: IDs2--> (186(f=1.0), )
----------Running generation: 94, population size: 1

***** Generation 94 : 0
**Parent Variant: [Variant id: 187, #gens: 671, #ops: 0, parent:-]

--Child created id: 188
--Creating new operations for variant [Variant id: 188, #gens: 671, #ops: 0, parent:187]
---analyzing modificationPoint position: 147
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  final double dot1 = 1 - twoTheta
---analyzing modificationPoint position: 132
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 1 not mutation generated in  final double yDot11 = yDotK[10][i]
---analyzing modificationPoint position: 239
---modifPoint 2 not mutation generated in  final boolean nextIsLast = (forward) ? nextT >= t : nextT <= t
---analyzing modificationPoint position: 26
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [stepHandlers]
--> var from patch: stepHandlers spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java321
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// trigger the event interpolator.setInterpolatedTime(eventT) ` -topatch--> `stepHandlers.clear()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 321, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// trigger the event interpolator.setInterpolatedTime(eventT) ` -topatch--> `stepHandlers.clear()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 188, #gens: 672, #ops: 1, parent:187] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 188
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-188/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(94): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// trigger the event interpolator.setInterpolatedTime(eventT) ` -topatch--> `stepHandlers.clear()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (188(f=1.0), 187(f=2.0), )
Selected to next generation: IDs2--> (188(f=1.0), )
----------Running generation: 95, population size: 1

***** Generation 95 : 0
**Parent Variant: [Variant id: 189, #gens: 671, #ops: 0, parent:-]

--Child created id: 190
--Creating new operations for variant [Variant id: 190, #gens: 671, #ops: 0, parent:189]
---analyzing modificationPoint position: 502
---modifPoint 0 not mutation generated in  return searchMin
---analyzing modificationPoint position: 524
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 1 not mutation generated in  if (x == java.lang.Double.POSITIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	} 	if (y < [...]
---analyzing modificationPoint position: 234
location: EmbeddedRungeKuttaIntegrator.java301
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// prepare next step interpolator.storeTime(stepStart) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 190, #gens: 670, #ops: 1, parent:189] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 190
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-190/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(95): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// prepare next step interpolator.storeTime(stepStart) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (190(f=1.0), 189(f=2.0), )
Selected to next generation: IDs2--> (190(f=1.0), )
----------Running generation: 96, population size: 1

***** Generation 96 : 0
**Parent Variant: [Variant id: 191, #gens: 671, #ops: 0, parent:-]

--Child created id: 192
--Creating new operations for variant [Variant id: 192, #gens: 671, #ops: 0, parent:191]
---analyzing modificationPoint position: 360
location: AbstractStepInterpolator.java482
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!finalized) { 	doFinalize(); 	finalized = true; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 192, #gens: 670, #ops: 1, parent:191] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 192
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-192/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(96): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!finalized) { 	doFinalize(); 	finalized = true; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (192(f=1.0), 191(f=2.0), )
Selected to next generation: IDs2--> (192(f=1.0), )
----------Running generation: 97, population size: 1

***** Generation 97 : 0
**Parent Variant: [Variant id: 193, #gens: 671, #ops: 0, parent:-]

--Child created id: 194
--Creating new operations for variant [Variant id: 194, #gens: 671, #ops: 0, parent:193]
---analyzing modificationPoint position: 8
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergenc[...]
---analyzing modificationPoint position: 434
---modifPoint 1 not mutation generated in  return completeState
---analyzing modificationPoint position: 309
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 2 not mutation generated in  maxStep = org.apache.commons.math.util.FastMath.abs(maximalStep)
---analyzing modificationPoint position: 559
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  double ab = epsilon - aa
---analyzing modificationPoint position: 299
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 4 not mutation generated in  if (firstTime || (!fsal)) { 	// first stage 	computeDerivatives(stepStart, y, yDotK[0]); }
---analyzing modificationPoint position: 507
location: BaseAbstractUnivariateRealSolver.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 194, #gens: 670, #ops: 1, parent:193] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 194
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-194/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(97): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (194(f=1.0), 193(f=2.0), )
Selected to next generation: IDs2--> (194(f=1.0), )
----------Running generation: 98, population size: 1

***** Generation 98 : 0
**Parent Variant: [Variant id: 195, #gens: 671, #ops: 0, parent:-]

--Child created id: 196
--Creating new operations for variant [Variant id: 196, #gens: 671, #ops: 0, parent:195]
---analyzing modificationPoint position: 436
Templates availables8
Attempts Base Ingredients  1 total 8
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  // lazy evaluation of the state if (dirtyState) { 	final double oneMinusThetaH = globalCurrentTime -[...]
---analyzing modificationPoint position: 500
---modifPoint 1 not mutation generated in  return y
---analyzing modificationPoint position: 669
Templates availables117
Attempts Base Ingredients  1 total 117
---modifPoint 2 not mutation generated in  return java.lang.Math.sqrt(a)
---analyzing modificationPoint position: 36
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [previousEventTime, root, convergence, pendingEventTime, pendingEvent, ta, tb, ga, gb]
--> var from patch: previousEventTime spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: root spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: convergence spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pendingEventTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: pendingEvent spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: ta spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: tb spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ga spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: gb spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java256
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 256, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 196, #gens: 672, #ops: 1, parent:195] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 196, errors: [EventState.java:266: error: 'else' without 'if'
			} else {
			  ^, EventState.java:286: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	^, EventState.java:286: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	                          ^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                        ^, EventState.java:300: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                        ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(98): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (195(f=2.0), 196(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (195(f=2.0), )
----------Running generation: 99, population size: 1

***** Generation 99 : 0
**Parent Variant: [Variant id: 197, #gens: 671, #ops: 0, parent:-]

--Child created id: 198
--Creating new operations for variant [Variant id: 198, #gens: 671, #ops: 0, parent:197]
---analyzing modificationPoint position: 110
location: BracketingNthOrderBrentSolver.java213
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 198, #gens: 670, #ops: 1, parent:197] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 198
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-198/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(99): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (198(f=1.0), 197(f=2.0), )
Selected to next generation: IDs2--> (198(f=1.0), )
----------Running generation: 100, population size: 1

***** Generation 100 : 0
**Parent Variant: [Variant id: 199, #gens: 671, #ops: 0, parent:-]

--Child created id: 200
--Creating new operations for variant [Variant id: 200, #gens: 671, #ops: 0, parent:199]
---analyzing modificationPoint position: 575
location: FastMath.java1247
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 200, #gens: 670, #ops: 1, parent:199] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 200, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(100): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (199(f=2.0), 200(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (199(f=2.0), )
----------Running generation: 101, population size: 1

***** Generation 101 : 0
**Parent Variant: [Variant id: 201, #gens: 671, #ops: 0, parent:-]

--Child created id: 202
--Creating new operations for variant [Variant id: 202, #gens: 671, #ops: 0, parent:201]
---analyzing modificationPoint position: 466
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
vars from patch [interpolatedPrimaryState, primaryMapper]
--> var from patch: interpolatedPrimaryState spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryState = new double[secondaryMappers.length][] ` -topatch--> `interpolatedPrimaryState = new double[primaryMapper.getDimension()]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 228, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryState = new double[secondaryMappers.length][] ` -topatch--> `interpolatedPrimaryState = new double[primaryMapper.getDimension()]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 202, #gens: 671, #ops: 1, parent:201] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 202
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-202/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(101): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryState = new double[secondaryMappers.length][] ` -topatch--> `interpolatedPrimaryState = new double[primaryMapper.getDimension()]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (202(f=1.0), 201(f=2.0), )
Selected to next generation: IDs2--> (202(f=1.0), )
----------Running generation: 102, population size: 1

***** Generation 102 : 0
**Parent Variant: [Variant id: 203, #gens: 671, #ops: 0, parent:-]

--Child created id: 204
--Creating new operations for variant [Variant id: 204, #gens: 671, #ops: 0, parent:203]
---analyzing modificationPoint position: 518
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [relativeAccuracy]
--> var from patch: relativeAccuracy spoon.support.reflect.code.CtFieldReadImpl
SameName: final 
























































































double relativeAccuracy
SameName: final 
























































































double relativeAccuracy
Transforming shadowed variable in return relativeAccuracy
location: BaseAbstractUnivariateRealSolver.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteAccuracy = absoluteAccuracy ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 93, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteAccuracy = absoluteAccuracy ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 204, #gens: 672, #ops: 1, parent:203] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 204, errors: [BaseAbstractUnivariateRealSolver.java:135: error: incompatible types: unexpected return value
		return relativeAccuracy; 		this.absoluteAccuracy = absoluteAccuracy; 		this.relativeAccuracy = relativeAccuracy; 		this.functionValueAccuracy = functionValueAccuracy;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(102): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteAccuracy = absoluteAccuracy ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (203(f=2.0), 204(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (203(f=2.0), )
----------Running generation: 103, population size: 1

***** Generation 103 : 0
**Parent Variant: [Variant id: 205, #gens: 671, #ops: 0, parent:-]

--Child created id: 206
--Creating new operations for variant [Variant id: 206, #gens: 671, #ops: 0, parent:205]
---analyzing modificationPoint position: 111
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 184
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  x[2] = getMax()
---analyzing modificationPoint position: 539
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1557
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `lnb += lna - tmp2 ` -topatch--> `double y = org.apache.commons.math.util.FastMath.floor(x)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1557, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `lnb += lna - tmp2 ` -topatch--> `double y = org.apache.commons.math.util.FastMath.floor(x)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 206, #gens: 672, #ops: 1, parent:205] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 206, errors: [FastMath.java:3397: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:3397: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:3397: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:3397: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:3397: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:3397: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:3397: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:3397: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:3398: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:3398: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:3398: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:3398: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:3400: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:3401: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:3401: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:3402: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:3402: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:3402: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:3402: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:3403: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:3403: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:3403: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:3403: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:3403: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:3412: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:3412: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:3412: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:3412: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:3412: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:3412: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:3417: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:3419: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:3419: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:3419: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:3420: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:3420: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:3421: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:3421: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:3422: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:3422: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:3423: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:3423: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:3424: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:3424: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:3436: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:3436: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:3461: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:3461: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:3461: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:3461: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:3461: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:3461: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:3461: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:3462: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:3462: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:3462: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:3462: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:3462: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:3462: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:3462: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:3464: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:3464: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:3465: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:3465: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:3465: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:3465: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:3466: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:3467: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:3467: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:3467: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:3467: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:3467: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:3467: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:3467: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:3468: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:3468: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:3468: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:3468: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:3468: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:3469: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:3469: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:3469: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:3469: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:3469: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:3469: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:3480: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:3480: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:3480: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:3480: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:3480: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:3480: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:3480: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:3480: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:3485: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:3487: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:3487: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:3487: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:3488: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:3488: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:3489: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(103): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `lnb += lna - tmp2 ` -topatch--> `double y = org.apache.commons.math.util.FastMath.floor(x)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (205(f=2.0), 206(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (205(f=2.0), )
----------Running generation: 104, population size: 1

***** Generation 104 : 0
**Parent Variant: [Variant id: 207, #gens: 671, #ops: 0, parent:-]

--Child created id: 208
--Creating new operations for variant [Variant id: 208, #gens: 671, #ops: 0, parent:207]
---analyzing modificationPoint position: 520
location: BaseAbstractUnivariateRealSolver.java95
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 208, #gens: 670, #ops: 1, parent:207] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 208, errors: [BaseAbstractUnivariateRealSolver.java:97: error: variable functionValueAccuracy might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(104): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (207(f=2.0), 208(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (207(f=2.0), )
----------Running generation: 105, population size: 1

***** Generation 105 : 0
**Parent Variant: [Variant id: 209, #gens: 671, #ops: 0, parent:-]

--Child created id: 210
--Creating new operations for variant [Variant id: 210, #gens: 671, #ops: 0, parent:209]
---analyzing modificationPoint position: 91
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [t1, t0]
--> var from patch: t1 spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: t0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java267
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no sign change: there is no event for now ta = tb ` -topatch--> `final double dt = t1 - t0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 267, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no sign change: there is no event for now ta = tb ` -topatch--> `final double dt = t1 - t0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 210, #gens: 672, #ops: 1, parent:209] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 210, errors: [EventState.java:266: error: variable dt is already defined in method evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator)
			} else { 				final double dt = t1 - t0;
			         				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(105): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no sign change: there is no event for now ta = tb ` -topatch--> `final double dt = t1 - t0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (209(f=2.0), 210(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (209(f=2.0), )
----------Running generation: 106, population size: 1

***** Generation 106 : 0
**Parent Variant: [Variant id: 211, #gens: 671, #ops: 0, parent:-]

--Child created id: 212
--Creating new operations for variant [Variant id: 212, #gens: 671, #ops: 0, parent:211]
---analyzing modificationPoint position: 428
location: AbstractIntegrator.java210
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `expandableODE.setPrimaryState(y0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 212, #gens: 670, #ops: 1, parent:211] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 212
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-212/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(106): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `expandableODE.setPrimaryState(y0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (212(f=1.0), 211(f=2.0), )
Selected to next generation: IDs2--> (212(f=1.0), )
----------Running generation: 107, population size: 1

***** Generation 107 : 0
**Parent Variant: [Variant id: 213, #gens: 671, #ops: 0, parent:-]

--Child created id: 214
--Creating new operations for variant [Variant id: 214, #gens: 671, #ops: 0, parent:213]
---analyzing modificationPoint position: 542
---modifPoint 0 not mutation generated in  final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb)
---analyzing modificationPoint position: 565
Templates availables77
Attempts Base Ingredients  1 total 77
---modifPoint 1 not mutation generated in  xb += aa / denom
---analyzing modificationPoint position: 99
location: BracketingNthOrderBrentSolver.java385
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 214, #gens: 670, #ops: 1, parent:213] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 214
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-214/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(107): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (214(f=1.0), 213(f=2.0), )
Selected to next generation: IDs2--> (214(f=1.0), )
----------Running generation: 108, population size: 1

***** Generation 108 : 0
**Parent Variant: [Variant id: 215, #gens: 671, #ops: 0, parent:-]

--Child created id: 216
--Creating new operations for variant [Variant id: 216, #gens: 671, #ops: 0, parent:215]
---analyzing modificationPoint position: 425
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  if (y.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionMi[...]
---analyzing modificationPoint position: 231
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [equations]
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java242
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `scale[i] = scalAbsoluteTolerance + (scalRelativeTolerance * org.apache.commons.math.util.FastMath.ab[...] ` -topatch--> `// create some internal working arrays final double[] y0 = equations.getCompleteState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 242, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `scale[i] = scalAbsoluteTolerance + (scalRelativeTolerance * org.apache.commons.math.util.FastMath.ab[...] ` -topatch--> `// create some internal working arrays final double[] y0 = equations.getCompleteState()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 216, #gens: 672, #ops: 1, parent:215] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 216
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-216/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(108): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `scale[i] = scalAbsoluteTolerance + (scalRelativeTolerance * org.apache.commons.math.util.FastMath.ab[...] ` -topatch--> `// create some internal working arrays final double[] y0 = equations.getCompleteState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (216(f=1.0), 215(f=2.0), )
Selected to next generation: IDs2--> (216(f=1.0), )
----------Running generation: 109, population size: 1

***** Generation 109 : 0
**Parent Variant: [Variant id: 217, #gens: 671, #ops: 0, parent:-]

--Child created id: 218
--Creating new operations for variant [Variant id: 218, #gens: 671, #ops: 0, parent:217]
---analyzing modificationPoint position: 659
Templates availables117
Attempts Base Ingredients  1 total 117
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1324
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return a + b ` -topatch--> `return org.apache.commons.math.util.FastMath.exp(x, 0.0, null)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1324, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return a + b ` -topatch--> `return org.apache.commons.math.util.FastMath.exp(x, 0.0, null)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 218, #gens: 671, #ops: 1, parent:217] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 218, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(109): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return a + b ` -topatch--> `return org.apache.commons.math.util.FastMath.exp(x, 0.0, null)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (217(f=2.0), 218(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (217(f=2.0), )
----------Running generation: 110, population size: 1

***** Generation 110 : 0
**Parent Variant: [Variant id: 219, #gens: 671, #ops: 0, parent:-]

--Child created id: 220
--Creating new operations for variant [Variant id: 220, #gens: 671, #ops: 0, parent:219]
---analyzing modificationPoint position: 662
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if ((bits & 0x7ff0000000000000L) == 0) { 	// Subnormal! 	if (x == 0) { 		// Zero 		if (hiPrec != nul[...]
---analyzing modificationPoint position: 331
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 1 not mutation generated in  globalPreviousTime = interpolator.globalPreviousTime
---analyzing modificationPoint position: 527
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1503
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.NEGATIVE_INFINITY) {  	if ((x * x) == 1.0) { 		return java.lang.Double.NaN[...] ` -topatch--> `if (y == x) { 	return y; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1503, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.NEGATIVE_INFINITY) {  	if ((x * x) == 1.0) { 		return java.lang.Double.NaN[...] ` -topatch--> `if (y == x) { 	return y; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 220, #gens: 672, #ops: 1, parent:219] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 220, errors: [FastMath.java:3385: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:3385: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:3385: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:3385: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:3385: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:3385: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:3385: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:3385: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:3386: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:3386: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:3386: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:3386: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:3388: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:3389: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:3389: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:3390: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:3390: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:3390: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:3390: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:3391: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:3391: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:3391: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:3391: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:3391: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:3400: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:3400: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:3400: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:3400: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:3400: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:3400: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:3405: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:3407: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:3407: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:3407: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:3408: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:3408: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:3409: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:3409: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:3410: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:3410: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:3411: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:3411: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:3412: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:3412: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:3424: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:3424: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:3449: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:3449: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:3449: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:3449: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:3449: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:3449: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:3449: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:3450: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:3450: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:3450: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:3450: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:3450: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:3450: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:3450: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:3452: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:3452: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:3453: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:3453: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:3453: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:3453: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:3454: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:3455: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:3455: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:3455: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:3455: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:3455: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:3455: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:3455: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:3456: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:3456: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:3456: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:3456: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:3456: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:3457: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:3457: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:3457: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:3457: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:3457: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:3457: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:3468: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:3468: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:3468: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:3468: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:3468: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:3468: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:3468: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:3468: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:3473: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:3475: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:3475: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:3475: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:3476: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:3476: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:3477: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(110): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.NEGATIVE_INFINITY) {  	if ((x * x) == 1.0) { 		return java.lang.Double.NaN[...] ` -topatch--> `if (y == x) { 	return y; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (219(f=2.0), 220(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (219(f=2.0), )
----------Running generation: 111, population size: 1

***** Generation 111 : 0
**Parent Variant: [Variant id: 221, #gens: 671, #ops: 0, parent:-]

--Child created id: 222
--Creating new operations for variant [Variant id: 222, #gens: 671, #ops: 0, parent:221]
---analyzing modificationPoint position: 245
Templates availables22
Attempts Base Ingredients  1 total 22
---modifPoint 0 not mutation generated in  this.c = c
---analyzing modificationPoint position: 642
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  c = a + lnza
---analyzing modificationPoint position: 468
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 2 not mutation generated in  for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...]
---analyzing modificationPoint position: 120
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java283
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX) ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 283, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX) ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 222, #gens: 672, #ops: 1, parent:221] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 222, errors: [BracketingNthOrderBrentSolver.java:281: error: variable start is already defined in method doSolve()
			} 			int start = 0;
			  			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(111): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX) ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (221(f=2.0), 222(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (221(f=2.0), )
----------Running generation: 112, population size: 1

***** Generation 112 : 0
**Parent Variant: [Variant id: 223, #gens: 671, #ops: 0, parent:-]

--Child created id: 224
--Creating new operations for variant [Variant id: 224, #gens: 671, #ops: 0, parent:223]
---analyzing modificationPoint position: 188
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java161
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `x[0] = getMin()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 161, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `x[0] = getMin()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 224, #gens: 671, #ops: 1, parent:223] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 224
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-224/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(112): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `x[0] = getMin()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (224(f=1.0), 223(f=2.0), )
Selected to next generation: IDs2--> (224(f=1.0), )
----------Running generation: 113, population size: 1

***** Generation 113 : 0
**Parent Variant: [Variant id: 225, #gens: 671, #ops: 0, parent:-]

--Child created id: 226
--Creating new operations for variant [Variant id: 226, #gens: 671, #ops: 0, parent:225]
---analyzing modificationPoint position: 249
location: EmbeddedRungeKuttaIntegrator.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exp = (-1.0) / getOrder() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 226, #gens: 670, #ops: 1, parent:225] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 226, errors: [EmbeddedRungeKuttaIntegrator.java:132: error: variable exp might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(113): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exp = (-1.0) / getOrder() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (225(f=2.0), 226(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (225(f=2.0), )
----------Running generation: 114, population size: 1

***** Generation 114 : 0
**Parent Variant: [Variant id: 227, #gens: 671, #ops: 0, parent:-]

--Child created id: 228
--Creating new operations for variant [Variant id: 228, #gens: 671, #ops: 0, parent:227]
---analyzing modificationPoint position: 129
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double yDot8 = yDotK[7][i]
---analyzing modificationPoint position: 422
location: ExpandableStatefulODE.java164
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 228, #gens: 670, #ops: 1, parent:227] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 228
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-228/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(114): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (228(f=1.0), 227(f=2.0), )
Selected to next generation: IDs2--> (228(f=1.0), )
----------Running generation: 115, population size: 1

***** Generation 115 : 0
**Parent Variant: [Variant id: 229, #gens: 671, #ops: 0, parent:-]

--Child created id: 230
--Creating new operations for variant [Variant id: 230, #gens: 671, #ops: 0, parent:229]
---analyzing modificationPoint position: 243
Templates availables7
Attempts Base Ingredients  1 total 7
Name Conflict [isLastStep, interpolator, stepStart, fsal, yDotTmp, yDotK, y0, y0.length, maxGrowth, minReduction, safety, error, exp, stepSize, forward, t, hNew]
---modifPoint 0 not mutation generated in  if (filteredNextIsLast) { 	hNew = t - stepStart; }
---analyzing modificationPoint position: 459
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [equationData, complete, firstIndex, dimension]
--> var from patch: equationData spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: complete spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: firstIndex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: dimension spoon.support.reflect.code.CtFieldReadImpl
location: EquationsMapper.java80
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(complete, firstIndex, equationData, 0, dimension) ` -topatch--> `java.lang.System.arraycopy(equationData, 0, complete, firstIndex, dimension)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.EquationsMapper line: 80, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(complete, firstIndex, equationData, 0, dimension) ` -topatch--> `java.lang.System.arraycopy(equationData, 0, complete, firstIndex, dimension)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 230, #gens: 671, #ops: 1, parent:229] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 230
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-230/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(115): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(complete, firstIndex, equationData, 0, dimension) ` -topatch--> `java.lang.System.arraycopy(equationData, 0, complete, firstIndex, dimension)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (230(f=1.0), 229(f=2.0), )
Selected to next generation: IDs2--> (230(f=1.0), )
----------Running generation: 116, population size: 1

***** Generation 116 : 0
**Parent Variant: [Variant id: 231, #gens: 671, #ops: 0, parent:-]

--Child created id: 232
--Creating new operations for variant [Variant id: 232, #gens: 671, #ops: 0, parent:231]
---analyzing modificationPoint position: 183
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x[1] = getStartValue()
---analyzing modificationPoint position: 456
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t)
---analyzing modificationPoint position: 525
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 2 not mutation generated in  if (y == java.lang.Double.POSITIVE_INFINITY) { 	if ((x * x) == 1.0) { 		return java.lang.Double.NaN;[...]
---analyzing modificationPoint position: 148
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 3 not mutation generated in  // compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...]
---analyzing modificationPoint position: 128
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 4 not mutation generated in  final double yDot7 = yDotK[6][i]
---analyzing modificationPoint position: 537
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 5 not mutation generated in  /* resplit lns */ double tmp1 = lna * org.apache.commons.math.util.FastMath.HEX_40000000
---analyzing modificationPoint position: 224
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 6 not mutation generated in  vectorsInitialized = false
---analyzing modificationPoint position: 15
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [ga, gb]
--> var from patch: ga spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: gb spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java229
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `ga = gb` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 229, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `ga = gb` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 232, #gens: 672, #ops: 1, parent:231] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 232
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-232/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(116): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `ga = gb` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (231(f=2.0), 232(f=2.0), )
Selected to next generation: IDs2--> (231(f=2.0), )
----------Running generation: 117, population size: 1

***** Generation 117 : 0
**Parent Variant: [Variant id: 233, #gens: 671, #ops: 0, parent:-]

--Child created id: 234
--Creating new operations for variant [Variant id: 234, #gens: 671, #ops: 0, parent:233]
---analyzing modificationPoint position: 450
Templates availables55
Attempts Base Ingredients  1 total 55
vars from patch [this.time]
--> var from patch: this.time spoon.support.reflect.code.CtFieldWriteImpl
location: ExpandableStatefulODE.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.Secondar[...] ` -topatch--> `this.time = time` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 79, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.Secondar[...] ` -topatch--> `this.time = time` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 234, #gens: 672, #ops: 1, parent:233] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 234, errors: [ExpandableStatefulODE.java:188: error: illegal start of expression
	 * Get the current time derivative of the complete state vector.
	 ^, ExpandableStatefulODE.java:188: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	      ^, ExpandableStatefulODE.java:188: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                  ^, ExpandableStatefulODE.java:188: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                  ^, ExpandableStatefulODE.java:188: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                         ^, ExpandableStatefulODE.java:188: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                                        ^, ExpandableStatefulODE.java:188: error: <identifier> expected
	 * Get the current time derivative of the complete state vector.
	                                                                ^, ExpandableStatefulODE.java:190: error: illegal start of expression
	 * @param t
	 ^, ExpandableStatefulODE.java:190: error: illegal start of expression
	 * @param t
	   ^, ExpandableStatefulODE.java:191: error: not a statement
	 * 		current value of the independent <I>time</I> variable
	 ^, ExpandableStatefulODE.java:191: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		       ^, ExpandableStatefulODE.java:191: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		                ^, ExpandableStatefulODE.java:191: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		                                ^, ExpandableStatefulODE.java:191: error: illegal start of expression
	 * 		current value of the independent <I>time</I> variable
	   		                                    ^, ExpandableStatefulODE.java:191: error: illegal start of type
	 * 		current value of the independent <I>time</I> variable
	   		                                         ^, ExpandableStatefulODE.java:191: error: illegal start of expression
	 * 		current value of the independent <I>time</I> variable
	   		                                          ^, ExpandableStatefulODE.java:192: error: illegal start of expression
	 * @param y
	   ^, ExpandableStatefulODE.java:191: error: not a statement
	 * 		current value of the independent <I>time</I> variable
	   		                                           ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		     ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                    ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                  ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                         ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                                        ^, ExpandableStatefulODE.java:194: error: illegal start of expression
	 * @param yDot
	   ^, ExpandableStatefulODE.java:195: error: not a statement
	 * 		placeholder array where to put the time derivative of the complete state vector
	 ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		           ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                       ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                              ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                       ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                     ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                                  ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                                               ^, ExpandableStatefulODE.java:196: error: illegal start of expression
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	^, ExpandableStatefulODE.java:196: error: illegal start of expression
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	       ^, ExpandableStatefulODE.java:196: error: ';' expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                              ^, ExpandableStatefulODE.java:196: error: <identifier> expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                              ^, ExpandableStatefulODE.java:196: error: <identifier> expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                                                ^, ExpandableStatefulODE.java:196: error: ';' expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                                                                    ^, ExpandableStatefulODE.java:203: error: illegal start of expression
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	^, ExpandableStatefulODE.java:203: error: ';' expected
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	                                ^, ExpandableStatefulODE.java:203: error: ';' expected
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	                                                                                               ^, ExpandableStatefulODE.java:204: error: illegal start of expression
	 * Get an equations mapper for the primary equations set.
	 ^, ExpandableStatefulODE.java:204: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	      ^, ExpandableStatefulODE.java:204: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                   ^, ExpandableStatefulODE.java:204: error: not a statement
	 * Get an equations mapper for the primary equations set.
	                    ^, ExpandableStatefulODE.java:204: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                          ^, ExpandableStatefulODE.java:204: error: '(' expected
	 * Get an equations mapper for the primary equations set.
	                              ^, ExpandableStatefulODE.java:204: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                                          ^, ExpandableStatefulODE.java:204: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                                                    ^, ExpandableStatefulODE.java:204: error: <identifier> expected
	 * Get an equations mapper for the primary equations set.
	                                                         ^, ExpandableStatefulODE.java:206: error: illegal start of expression
	 * @return mapper for the primary set
	 ^, ExpandableStatefulODE.java:206: error: <identifier> expected
	 * @return mapper for the primary set
	    ^, ExpandableStatefulODE.java:206: error: ')' expected
	 * @return mapper for the primary set
	                 ^, ExpandableStatefulODE.java:206: error: ';' expected
	 * @return mapper for the primary set
	                                 ^, ExpandableStatefulODE.java:206: error: variable declaration not allowed here
	 * @return mapper for the primary set
	                          ^, ExpandableStatefulODE.java:207: error: illegal character: '#'
	 * @see #getSecondaryMappers()
	        ^, ExpandableStatefulODE.java:207: error: not a statement
	 * @see #getSecondaryMappers()
	 ^, ExpandableStatefulODE.java:207: error: ';' expected
	 * @see #getSecondaryMappers()
	         ^, ExpandableStatefulODE.java:207: error: -> expected
	 * @see #getSecondaryMappers()
	                              ^, ExpandableStatefulODE.java:208: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	 ^, ExpandableStatefulODE.java:208: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	    	^, ExpandableStatefulODE.java:207: error: not a statement
	 * @see #getSecondaryMappers()
	                            ^, ExpandableStatefulODE.java:208: error: ';' expected
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	    	                                                                   ^, ExpandableStatefulODE.java:213: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper[] getSecondaryMappers() { 		final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.EquationsMapper[components.size()]; 		for (int i = 0; i < mappers.length; ++i) { 			mappers[i] = components.get(i).mapper;} 		return mappers;} 	/**
	    	^, ExpandableStatefulODE.java:213: error: ';' expected
	 */ 	public org.apache.commons.math.ode.EquationsMapper[] getSecondaryMappers() { 		final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.EquationsMapper[components.size()]; 		for (int i = 0; i < mappers.length; ++i) { 			mappers[i] = components.get(i).mapper;} 		return mappers;} 	/**
	    	                                                                        ^, ExpandableStatefulODE.java:218: error: illegal start of expression
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	^, ExpandableStatefulODE.java:218: error: illegal start of expression
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	       ^, ExpandableStatefulODE.java:218: error: ';' expected
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	                   ^, ExpandableStatefulODE.java:218: error: ';' expected
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	                                     ^, ExpandableStatefulODE.java:222: error: illegal start of expression
	 */ 	public double getTime() { 		return time;} 	/**
	    	^, ExpandableStatefulODE.java:222: error: ';' expected
	 */ 	public double getTime() { 		return time;} 	/**
	    	                     ^, ExpandableStatefulODE.java:230: error: illegal start of expression
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	^, ExpandableStatefulODE.java:230: error: illegal start of expression
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	       ^, ExpandableStatefulODE.java:230: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                           ^, ExpandableStatefulODE.java:230: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                       ^, ExpandableStatefulODE.java:230: error: not a statement
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                 ^, ExpandableStatefulODE.java:230: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                                            ^, ExpandableStatefulODE.java:232: error: illegal start of expression
	 * Get primary part of the current state.
	 ^, ExpandableStatefulODE.java:232: error: ';' expected
	 * Get primary part of the current state.
	      ^, ExpandableStatefulODE.java:232: error: ';' expected
	 * Get primary part of the current state.
	                   ^, ExpandableStatefulODE.java:232: error: ';' expected
	 * Get primary part of the current state.
	                          ^, ExpandableStatefulODE.java:232: error: ';' expected
	 * Get primary part of the current state.
	                                        ^, ExpandableStatefulODE.java:234: error: <identifier> expected
	 * @return primary part of the current state
	    ^, ExpandableStatefulODE.java:234: error: ';' expected
	 * @return primary part of the current state
	                  ^, ExpandableStatefulODE.java:234: error: ';' expected
	 * @return primary part of the current state
	                          ^, ExpandableStatefulODE.java:234: error: ';' expected
	 * @return primary part of the current state
	                                      ^, ExpandableStatefulODE.java:235: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	  ^, ExpandableStatefulODE.java:235: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	^, ExpandableStatefulODE.java:235: error: ';' expected
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	                               ^, ExpandableStatefulODE.java:239: error: illegal start of expression
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	^, ExpandableStatefulODE.java:239: error: ';' expected
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	                                  ^, ExpandableStatefulODE.java:249: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	^, ExpandableStatefulODE.java:249: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	       ^, ExpandableStatefulODE.java:249: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                             ^, ExpandableStatefulODE.java:249: error: <identifier> expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                              ^, ExpandableStatefulODE.java:249: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                            ^, ExpandableStatefulODE.java:249: error: not a statement
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                      ^, ExpandableStatefulODE.java:249: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                                                 ^, ExpandableStatefulODE.java:251: error: illegal start of expression
	 * Get secondary part of the current state.
	 ^, ExpandableStatefulODE.java:251: error: ';' expected
	 * Get secondary part of the current state.
	      ^]
Ingredient counter is Zero
---Undoing: gnrtn(117): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.Secondar[...] ` -topatch--> `this.time = time` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (233(f=2.0), 234(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (233(f=2.0), )
----------Running generation: 118, population size: 1

***** Generation 118 : 0
**Parent Variant: [Variant id: 235, #gens: 671, #ops: 0, parent:-]

--Child created id: 236
--Creating new operations for variant [Variant id: 236, #gens: 671, #ops: 0, parent:235]
---analyzing modificationPoint position: 382
location: AbstractStepInterpolator.java217
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryState = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 236, #gens: 670, #ops: 1, parent:235] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 236
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-236/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(118): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryState = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (236(f=1.0), 235(f=2.0), )
Selected to next generation: IDs2--> (236(f=1.0), )
----------Running generation: 119, population size: 1

***** Generation 119 : 0
**Parent Variant: [Variant id: 237, #gens: 671, #ops: 0, parent:-]

--Child created id: 238
--Creating new operations for variant [Variant id: 238, #gens: 671, #ops: 0, parent:237]
---analyzing modificationPoint position: 374
location: AbstractStepInterpolator.java121
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dirtyState = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 238, #gens: 670, #ops: 1, parent:237] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 238
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-238/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(119): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dirtyState = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (238(f=1.0), 237(f=2.0), )
Selected to next generation: IDs2--> (238(f=1.0), )
----------Running generation: 120, population size: 1

***** Generation 120 : 0
**Parent Variant: [Variant id: 239, #gens: 671, #ops: 0, parent:-]

--Child created id: 240
--Creating new operations for variant [Variant id: 240, #gens: 671, #ops: 0, parent:239]
---analyzing modificationPoint position: 289
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [interpolator, yTmp, yDotK, forward, equations]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yTmp spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yDotK spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: forward spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java212
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.storeTime(equations.getTime()) ` -topatch--> `interpolator.reinitialize(this, yTmp, yDotK, forward,  equations.getPrimaryMapper(), equations.getSe[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 212, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.storeTime(equations.getTime()) ` -topatch--> `interpolator.reinitialize(this, yTmp, yDotK, forward,  equations.getPrimaryMapper(), equations.getSe[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 240, #gens: 671, #ops: 1, parent:239] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 240
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-240/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(120): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.storeTime(equations.getTime()) ` -topatch--> `interpolator.reinitialize(this, yTmp, yDotK, forward,  equations.getPrimaryMapper(), equations.getSe[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (240(f=1.0), 239(f=2.0), )
Selected to next generation: IDs2--> (240(f=1.0), )
----------Running generation: 121, population size: 1

***** Generation 121 : 0
**Parent Variant: [Variant id: 241, #gens: 671, #ops: 0, parent:-]

--Child created id: 242
--Creating new operations for variant [Variant id: 242, #gens: 671, #ops: 0, parent:241]
---analyzing modificationPoint position: 490
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  resetEvaluations()
---analyzing modificationPoint position: 628
Templates availables1003
Attempts Base Ingredients  1 total 1003
Attempts Base Ingredients  2 total 1003
---modifPoint 1 not mutation generated in  if (extra != 0.0) { 	result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + [...]
---analyzing modificationPoint position: 421
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: ExpandableStatefulODE.java163
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...] ` -topatch--> `// allocate complete array double[] completeState = new double[getTotalDimension()]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 163, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...] ` -topatch--> `// allocate complete array double[] completeState = new double[getTotalDimension()]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 242, #gens: 671, #ops: 1, parent:241] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 242, errors: [ExpandableStatefulODE.java:305: error: illegal start of expression
	 * Get primary part of the current state.
	 ^, ExpandableStatefulODE.java:305: error: ';' expected
	 * Get primary part of the current state.
	      ^, ExpandableStatefulODE.java:305: error: ';' expected
	 * Get primary part of the current state.
	                   ^, ExpandableStatefulODE.java:305: error: ';' expected
	 * Get primary part of the current state.
	                          ^, ExpandableStatefulODE.java:305: error: ';' expected
	 * Get primary part of the current state.
	                                        ^, ExpandableStatefulODE.java:307: error: <identifier> expected
	 * @return primary part of the current state
	    ^, ExpandableStatefulODE.java:307: error: ';' expected
	 * @return primary part of the current state
	                  ^, ExpandableStatefulODE.java:307: error: ';' expected
	 * @return primary part of the current state
	                          ^, ExpandableStatefulODE.java:307: error: ';' expected
	 * @return primary part of the current state
	                                      ^, ExpandableStatefulODE.java:308: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	  ^, ExpandableStatefulODE.java:308: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	^, ExpandableStatefulODE.java:308: error: ';' expected
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	                               ^, ExpandableStatefulODE.java:312: error: illegal start of expression
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	^, ExpandableStatefulODE.java:312: error: ';' expected
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	                                  ^, ExpandableStatefulODE.java:322: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	^, ExpandableStatefulODE.java:322: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	       ^, ExpandableStatefulODE.java:322: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                             ^, ExpandableStatefulODE.java:322: error: <identifier> expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                              ^, ExpandableStatefulODE.java:322: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                            ^, ExpandableStatefulODE.java:322: error: not a statement
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                      ^, ExpandableStatefulODE.java:322: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                                                 ^, ExpandableStatefulODE.java:324: error: illegal start of expression
	 * Get secondary part of the current state.
	 ^, ExpandableStatefulODE.java:324: error: ';' expected
	 * Get secondary part of the current state.
	      ^, ExpandableStatefulODE.java:324: error: ';' expected
	 * Get secondary part of the current state.
	                     ^, ExpandableStatefulODE.java:324: error: ';' expected
	 * Get secondary part of the current state.
	                            ^, ExpandableStatefulODE.java:324: error: ';' expected
	 * Get secondary part of the current state.
	                                          ^, ExpandableStatefulODE.java:326: error: <identifier> expected
	 * @param index
	               ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		        ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                 ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                        ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                    ^, ExpandableStatefulODE.java:327: error: not a statement
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                     ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                       ^, ExpandableStatefulODE.java:327: error: illegal character: '#'
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                               ^, ExpandableStatefulODE.java:327: error: illegal start of type
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                                                     ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                                                      ^, ExpandableStatefulODE.java:327: error: illegal start of expression
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                                                                        ^, ExpandableStatefulODE.java:327: error: ';' expected
	 * 		index of the part to set as returned by {@link #addSecondaryEquations(SecondaryEquations)}
	   		                                                                                         ^, ExpandableStatefulODE.java:328: error: illegal start of expression
	 * @return secondary part of the current state
	 ^, ExpandableStatefulODE.java:328: error: ';' expected
	 * @return secondary part of the current state
	  ^, ExpandableStatefulODE.java:328: error: ';' expected
	 * @return secondary part of the current state
	                    ^, ExpandableStatefulODE.java:328: error: ';' expected
	 * @return secondary part of the current state
	                            ^, ExpandableStatefulODE.java:328: error: ';' expected
	 * @return secondary part of the current state
	                                        ^, ExpandableStatefulODE.java:329: error: illegal start of expression
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();} 	/**
	  ^, ExpandableStatefulODE.java:329: error: illegal start of expression
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();} 	/**
	    	^, ExpandableStatefulODE.java:329: error: ';' expected
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();} 	/**
	    	                                 ^, ExpandableStatefulODE.java:329: error: ';' expected
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();} 	/**
	    	                                                 ^, ExpandableStatefulODE.java:335: error: illegal start of expression
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();} 	/**
	    	^, ExpandableStatefulODE.java:335: error: ';' expected
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();} 	/**
	    	                                    ^, ExpandableStatefulODE.java:335: error: ';' expected
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();} 	/**
	    	                                                    ^, ExpandableStatefulODE.java:343: error: illegal start of expression
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	^, ExpandableStatefulODE.java:343: error: illegal start of expression
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	       ^, ExpandableStatefulODE.java:343: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                            ^, ExpandableStatefulODE.java:343: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                         ^, ExpandableStatefulODE.java:343: error: not a statement
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                   ^, ExpandableStatefulODE.java:343: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                                              ^, ExpandableStatefulODE.java:345: error: illegal start of expression
	 * Get the complete current state.
	 ^, ExpandableStatefulODE.java:345: error: ';' expected
	 * Get the complete current state.
	      ^, ExpandableStatefulODE.java:345: error: ';' expected
	 * Get the complete current state.
	                   ^, ExpandableStatefulODE.java:345: error: ';' expected
	 * Get the complete current state.
	                                 ^, ExpandableStatefulODE.java:347: error: <identifier> expected
	 * @return complete current state
	    ^, ExpandableStatefulODE.java:347: error: ';' expected
	 * @return complete current state
	                   ^, ExpandableStatefulODE.java:347: error: ';' expected
	 * @return complete current state
	                                 ^, ExpandableStatefulODE.java:348: error: <identifier> expected
	 * @throws DimensionMismatchException
	    ^, ExpandableStatefulODE.java:348: error: ';' expected
	 * @throws DimensionMismatchException
	                                     ^, ExpandableStatefulODE.java:349: error: '(' expected
	 * 		if the dimension of the complete state does not
	   		  ^, ExpandableStatefulODE.java:349: error: ')' expected
	 * 		if the dimension of the complete state does not
	   		      ^, ExpandableStatefulODE.java:349: error: ';' expected
	 * 		if the dimension of the complete state does not
	   		                   ^, ExpandableStatefulODE.java:349: error: variable declaration not allowed here
	 * 		if the dimension of the complete state does not
	   		                 ^, ExpandableStatefulODE.java:349: error: ';' expected
	 * 		if the dimension of the complete state does not
	   		                                ^, ExpandableStatefulODE.java:349: error: ';' expected
	 * 		if the dimension of the complete state does not
	   		                                           ^, ExpandableStatefulODE.java:350: error: not a statement
	 * 		match the complete equations sets dimension
	 ^, ExpandableStatefulODE.java:350: error: ';' expected
	 * 		match the complete equations sets dimension
	   		     ^, ExpandableStatefulODE.java:350: error: ';' expected
	 * 		match the complete equations sets dimension
	   		                  ^, ExpandableStatefulODE.java:350: error: ';' expected
	 * 		match the complete equations sets dimension
	   		                                 ^, ExpandableStatefulODE.java:351: error: illegal start of expression
	 */ 	public double[] getCompleteState() { 		// allocate complete array 		double[] completeState = new double[getTotalDimension()]; 		// set the data 		primaryMapper.insertEquationData(primaryState, completeState); 		for (final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent component : components) { 			component.mapper.insertEquationData(component.state, completeState);} 		return completeState;} 	/**
	  ^, ExpandableStatefulODE.java:351: error: illegal start of expression
	 */ 	public double[] getCompleteState() { 		// allocate complete array 		double[] completeState = new double[getTotalDimension()]; 		// set the data 		primaryMapper.insertEquationData(primaryState, completeState); 		for (final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent component : components) { 			component.mapper.insertEquationData(component.state, completeState);} 		return completeState;} 	/**
	    	^, ExpandableStatefulODE.java:351: error: ';' expected
	 */ 	public double[] getCompleteState() { 		// allocate complete array 		double[] completeState = new double[getTotalDimension()]; 		// set the data 		primaryMapper.insertEquationData(primaryState, completeState); 		for (final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent component : components) { 			component.mapper.insertEquationData(component.state, completeState);} 		return completeState;} 	/**
	    	                                ^, ExpandableStatefulODE.java:352: error: illegal start of expression
	 * Components of the compound stateful ODE.
	 ^, ExpandableStatefulODE.java:352: error: ';' expected
	 * Components of the compound stateful ODE.
	             ^, ExpandableStatefulODE.java:352: error: ';' expected
	 * Components of the compound stateful ODE.
	                    ^, ExpandableStatefulODE.java:352: error: ';' expected
	 * Components of the compound stateful ODE.
	                                      ^, ExpandableStatefulODE.java:352: error: <identifier> expected
	 * Components of the compound stateful ODE.
	                                           ^, ExpandableStatefulODE.java:353: error: illegal start of expression
	 */ 	private static class SecondaryComponent { 		/**
	  ^, ExpandableStatefulODE.java:353: error: illegal start of expression
	 */ 	private static class SecondaryComponent { 		/**
	    	^, ExpandableStatefulODE.java:353: error: illegal start of expression
	 */ 	private static class SecondaryComponent { 		/**
	    	        ^, ExpandableStatefulODE.java:353: error: ';' expected
	 */ 	private static class SecondaryComponent { 		/**
	    	              ^, ExpandableStatefulODE.java:353: error: not a statement
	 */ 	private static class SecondaryComponent { 		/**
	    	                     ^, ExpandableStatefulODE.java:353: error: ';' expected
	 */ 	private static class SecondaryComponent { 		/**
	    	                                       ^, ExpandableStatefulODE.java:355: error: illegal start of expression
		 */ 		private final org.apache.commons.math.ode.SecondaryEquations equation; 		/**
		    		^, ExpandableStatefulODE.java:357: error: illegal start of expression
		 */ 		private final org.apache.commons.math.ode.EquationsMapper mapper; 		/**
		    		^, ExpandableStatefulODE.java:359: error: illegal start of expression
		 */ 		private final double[] state; 		/**
		    		^, ExpandableStatefulODE.java:361: error: illegal start of expression
		 */ 		private final double[] stateDot; 		/**
		    		^, ExpandableStatefulODE.java:368: error: illegal start of expression
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		^, ExpandableStatefulODE.java:368: error: illegal start of expression
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		                          ^, ExpandableStatefulODE.java:368: error: ';' expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		                               ^, ExpandableStatefulODE.java:368: error: illegal start of expression
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		                                   ^, ExpandableStatefulODE.java:368: error: ';' expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		                                          ^, ExpandableStatefulODE.java:368: error: <identifier> expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		                                                                                        ^, ExpandableStatefulODE.java:368: error: ';' expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n); 			state = new double[n]; 			stateDot = new double[n];}}}
		    		                                                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(121): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...] ` -topatch--> `// allocate complete array double[] completeState = new double[getTotalDimension()]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (241(f=2.0), 242(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (241(f=2.0), )
----------Running generation: 122, population size: 1

***** Generation 122 : 0
**Parent Variant: [Variant id: 243, #gens: 671, #ops: 0, parent:-]

--Child created id: 244
--Creating new operations for variant [Variant id: 244, #gens: 671, #ops: 0, parent:243]
---analyzing modificationPoint position: 145
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double twoTheta = 2 * theta
---analyzing modificationPoint position: 12
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [maxIterationCount]
--> var from patch: maxIterationCount spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java337
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = java.lang.Double.NaN ` -topatch--> `return maxIterationCount` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 337, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = java.lang.Double.NaN ` -topatch--> `return maxIterationCount` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 244, #gens: 672, #ops: 1, parent:243] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 244, errors: [EventState.java:337: error: incompatible types: int cannot be converted to boolean
		pendingEvent = false; 		return maxIterationCount;
		                      		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(122): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = java.lang.Double.NaN ` -topatch--> `return maxIterationCount` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (243(f=2.0), 244(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (243(f=2.0), )
----------Running generation: 123, population size: 1

***** Generation 123 : 0
**Parent Variant: [Variant id: 245, #gens: 671, #ops: 0, parent:-]

--Child created id: 246
--Creating new operations for variant [Variant id: 246, #gens: 671, #ops: 0, parent:245]
---analyzing modificationPoint position: 49
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...]
---analyzing modificationPoint position: 124
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  // perform the last evaluations if they have not been done yet finalizeStep()
---analyzing modificationPoint position: 94
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [increasing]
--> var from patch: increasing spoon.support.reflect.code.CtFieldWriteImpl
location: EventState.java275
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = java.lang.Double.NaN ` -topatch--> `increasing = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 275, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = java.lang.Double.NaN ` -topatch--> `increasing = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 246, #gens: 671, #ops: 1, parent:245] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 246
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-246/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(123): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = java.lang.Double.NaN ` -topatch--> `increasing = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (246(f=1.0), 245(f=2.0), )
Selected to next generation: IDs2--> (246(f=1.0), )
----------Running generation: 124, population size: 1

***** Generation 124 : 0
**Parent Variant: [Variant id: 247, #gens: 671, #ops: 0, parent:-]

--Child created id: 248
--Creating new operations for variant [Variant id: 248, #gens: 671, #ops: 0, parent:247]
---analyzing modificationPoint position: 433
location: ExpandableStatefulODE.java289
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent component : componen[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 248, #gens: 670, #ops: 1, parent:247] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 248
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-248/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(124): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent component : componen[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (248(f=1.0), 247(f=2.0), )
Selected to next generation: IDs2--> (248(f=1.0), )
----------Running generation: 125, population size: 1

***** Generation 125 : 0
**Parent Variant: [Variant id: 249, #gens: 671, #ops: 0, parent:-]

--Child created id: 250
--Creating new operations for variant [Variant id: 250, #gens: 671, #ops: 0, parent:249]
---analyzing modificationPoint position: 649
location: FastMath.java1307
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 250, #gens: 670, #ops: 1, parent:249] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 250, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(125): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (249(f=2.0), 250(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (249(f=2.0), )
----------Running generation: 126, population size: 1

***** Generation 126 : 0
**Parent Variant: [Variant id: 251, #gens: 671, #ops: 0, parent:-]

--Child created id: 252
--Creating new operations for variant [Variant id: 252, #gens: 671, #ops: 0, parent:251]
---analyzing modificationPoint position: 453
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 0 not mutation generated in  // safety checks if (primaryState.length != this.primaryState.length) { 	throw new org.apache.common[...]
---analyzing modificationPoint position: 107
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  double absYB = org.apache.commons.math.util.FastMath.abs(yB)
---analyzing modificationPoint position: 279
location: EmbeddedRungeKuttaIntegrator.java197
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 252, #gens: 670, #ops: 1, parent:251] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 252
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-252/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(126): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (252(f=1.0), 251(f=2.0), )
Selected to next generation: IDs2--> (252(f=1.0), )
----------Running generation: 127, population size: 1

***** Generation 127 : 0
**Parent Variant: [Variant id: 253, #gens: 671, #ops: 0, parent:-]

--Child created id: 254
--Creating new operations for variant [Variant id: 254, #gens: 671, #ops: 0, parent:253]
---analyzing modificationPoint position: 412
---modifPoint 0 not mutation generated in  return solve(maxEval, f, min, max, min + (0.5 * (max - min)))
---analyzing modificationPoint position: 319
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  yDotK = null
---analyzing modificationPoint position: 227
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  if (y == 0) { 	return x * y; }
---analyzing modificationPoint position: 389
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [eventsStates]
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java280
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = false ` -topatch--> `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 280, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = false ` -topatch--> `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 254, #gens: 671, #ops: 1, parent:253] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 254
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-254/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(127): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = false ` -topatch--> `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (254(f=1.0), 253(f=2.0), )
Selected to next generation: IDs2--> (254(f=1.0), )
----------Running generation: 128, population size: 1

***** Generation 128 : 0
**Parent Variant: [Variant id: 255, #gens: 671, #ops: 0, parent:-]

--Child created id: 256
--Creating new operations for variant [Variant id: 256, #gens: 671, #ops: 0, parent:255]
---analyzing modificationPoint position: 160
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }
---analyzing modificationPoint position: 498
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java140
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return functionValueAccuracy ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 140, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return functionValueAccuracy ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 256, #gens: 672, #ops: 1, parent:255] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 256, errors: [BaseAbstractUnivariateRealSolver.java:207: error: illegal start of expression
	 * {@inheritDoc }
	 ^, BaseAbstractUnivariateRealSolver.java:207: error: illegal start of expression
	 * {@inheritDoc }
	   ^, BaseAbstractUnivariateRealSolver.java:207: error: illegal start of type
	 * {@inheritDoc }
	                ^, BaseAbstractUnivariateRealSolver.java:207: error: ';' expected
	 * {@inheritDoc }
	                 ^, BaseAbstractUnivariateRealSolver.java:208: error: illegal start of expression
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	  ^, BaseAbstractUnivariateRealSolver.java:208: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	   ^, BaseAbstractUnivariateRealSolver.java:208: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                   ^, BaseAbstractUnivariateRealSolver.java:208: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                     ^, BaseAbstractUnivariateRealSolver.java:208: error: not a statement
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                      ^, BaseAbstractUnivariateRealSolver.java:208: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                       ^, BaseAbstractUnivariateRealSolver.java:208: error: <identifier> expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                                    ^, BaseAbstractUnivariateRealSolver.java:208: error: not a statement
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                                            ^, BaseAbstractUnivariateRealSolver.java:208: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                                               ^, BaseAbstractUnivariateRealSolver.java:208: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max, double startValue) { 		// Initialization. 		setup(maxEval, f, min, max, startValue); 		// Perform computation.
	    	                                                                                  ^, BaseAbstractUnivariateRealSolver.java:211: error: illegal start of expression
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	^, BaseAbstractUnivariateRealSolver.java:211: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                   ^, BaseAbstractUnivariateRealSolver.java:211: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                                     ^, BaseAbstractUnivariateRealSolver.java:211: error: not a statement
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                                      ^, BaseAbstractUnivariateRealSolver.java:211: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                                       ^, BaseAbstractUnivariateRealSolver.java:211: error: <identifier> expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                                                    ^, BaseAbstractUnivariateRealSolver.java:211: error: not a statement
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                                                            ^, BaseAbstractUnivariateRealSolver.java:211: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));} 	/**
	    	                                                               ^, BaseAbstractUnivariateRealSolver.java:213: error: illegal start of expression
	 */ 	public double solve(int maxEval, FUNC f, double startValue) { 		return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue);} 	/**
	    	^, BaseAbstractUnivariateRealSolver.java:213: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double startValue) { 		return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue);} 	/**
	    	                   ^, BaseAbstractUnivariateRealSolver.java:213: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double startValue) { 		return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue);} 	/**
	    	                                     ^, BaseAbstractUnivariateRealSolver.java:213: error: not a statement
	 */ 	public double solve(int maxEval, FUNC f, double startValue) { 		return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue);} 	/**
	    	                                      ^, BaseAbstractUnivariateRealSolver.java:213: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double startValue) { 		return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue);} 	/**
	    	                                       ^, BaseAbstractUnivariateRealSolver.java:213: error: ';' expected
	 */ 	public double solve(int maxEval, FUNC f, double startValue) { 		return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue);} 	/**
	    	                                                          ^, BaseAbstractUnivariateRealSolver.java:224: error: illegal start of expression
	 */ 	protected abstract double doSolve() throws org.apache.commons.math.exception.TooManyEvaluationsException, org.apache.commons.math.exception.NoBracketingException; 	/**
	    	^, BaseAbstractUnivariateRealSolver.java:224: error: class, interface, or enum expected
	 */ 	protected abstract double doSolve() throws org.apache.commons.math.exception.TooManyEvaluationsException, org.apache.commons.math.exception.NoBracketingException; 	/**
	    	                   ^, BaseAbstractUnivariateRealSolver.java:224: error: ';' expected
	 */ 	protected abstract double doSolve() throws org.apache.commons.math.exception.TooManyEvaluationsException, org.apache.commons.math.exception.NoBracketingException; 	/**
	    	                                 ^, BaseAbstractUnivariateRealSolver.java:224: error: not a statement
	 */ 	protected abstract double doSolve() throws org.apache.commons.math.exception.TooManyEvaluationsException, org.apache.commons.math.exception.NoBracketingException; 	/**
	    	                                                                            ^, BaseAbstractUnivariateRealSolver.java:224: error: ';' expected
	 */ 	protected abstract double doSolve() throws org.apache.commons.math.exception.TooManyEvaluationsException, org.apache.commons.math.exception.NoBracketingException; 	/**
	    	                                                                                                        ^, BaseAbstractUnivariateRealSolver.java:224: error: not a statement
	 */ 	protected abstract double doSolve() throws org.apache.commons.math.exception.TooManyEvaluationsException, org.apache.commons.math.exception.NoBracketingException; 	/**
	    	                                                                                                                                           ^, BaseAbstractUnivariateRealSolver.java:233: error: illegal start of expression
	 */ 	protected boolean isBracketing(final double lower, final double upper) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper);} 	/**
	    	^, BaseAbstractUnivariateRealSolver.java:233: error: ';' expected
	 */ 	protected boolean isBracketing(final double lower, final double upper) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper);} 	/**
	    	                              ^, BaseAbstractUnivariateRealSolver.java:233: error: <identifier> expected
	 */ 	protected boolean isBracketing(final double lower, final double upper) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper);} 	/**
	    	                                                  ^, BaseAbstractUnivariateRealSolver.java:233: error: ';' expected
	 */ 	protected boolean isBracketing(final double lower, final double upper) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper);} 	/**
	    	                                                                     ^, BaseAbstractUnivariateRealSolver.java:243: error: illegal start of expression
	 */ 	protected boolean isSequence(final double start, final double mid, final double end) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end);}
	    	^, BaseAbstractUnivariateRealSolver.java:243: error: ';' expected
	 */ 	protected boolean isSequence(final double start, final double mid, final double end) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end);}
	    	                            ^, BaseAbstractUnivariateRealSolver.java:243: error: <identifier> expected
	 */ 	protected boolean isSequence(final double start, final double mid, final double end) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end);}
	    	                                                ^, BaseAbstractUnivariateRealSolver.java:243: error: <identifier> expected
	 */ 	protected boolean isSequence(final double start, final double mid, final double end) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end);}
	    	                                                                  ^, BaseAbstractUnivariateRealSolver.java:243: error: ';' expected
	 */ 	protected boolean isSequence(final double start, final double mid, final double end) { 		return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end);}
	    	                                                                                   ^, BaseAbstractUnivariateRealSolver.java:253: error: illegal start of expression
	 */ 	protected void verifyInterval(final double lower, final double upper) {
	    	^, BaseAbstractUnivariateRealSolver.java:253: error: illegal start of expression
	 */ 	protected void verifyInterval(final double lower, final double upper) {
	    	          ^, BaseAbstractUnivariateRealSolver.java:253: error: ';' expected
	 */ 	protected void verifyInterval(final double lower, final double upper) {
	    	                             ^, BaseAbstractUnivariateRealSolver.java:253: error: <identifier> expected
	 */ 	protected void verifyInterval(final double lower, final double upper) {
	    	                                                 ^, BaseAbstractUnivariateRealSolver.java:253: error: ';' expected
	 */ 	protected void verifyInterval(final double lower, final double upper) {
	    	                                                                    ^, BaseAbstractUnivariateRealSolver.java:268: error: illegal start of expression
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) {
	    	^, BaseAbstractUnivariateRealSolver.java:268: error: illegal start of expression
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) {
	    	          ^, BaseAbstractUnivariateRealSolver.java:268: error: ';' expected
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) {
	    	                             ^, BaseAbstractUnivariateRealSolver.java:268: error: <identifier> expected
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) {
	    	                                                 ^, BaseAbstractUnivariateRealSolver.java:268: error: <identifier> expected
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) {
	    	                                                                       ^, BaseAbstractUnivariateRealSolver.java:268: error: ';' expected
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) {
	    	                                                                                          ^, BaseAbstractUnivariateRealSolver.java:283: error: illegal start of expression
	 */ 	protected void verifyBracketing(final double lower, final double upper) { 		org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyBracketing(function, lower, upper);
	    	^, BaseAbstractUnivariateRealSolver.java:283: error: illegal start of expression
	 */ 	protected void verifyBracketing(final double lower, final double upper) { 		org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyBracketing(function, lower, upper);
	    	          ^, BaseAbstractUnivariateRealSolver.java:283: error: ';' expected
	 */ 	protected void verifyBracketing(final double lower, final double upper) { 		org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyBracketing(function, lower, upper);
	    	                               ^, BaseAbstractUnivariateRealSolver.java:283: error: <identifier> expected
	 */ 	protected void verifyBracketing(final double lower, final double upper) { 		org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyBracketing(function, lower, upper);
	    	                                                   ^, BaseAbstractUnivariateRealSolver.java:283: error: ';' expected
	 */ 	protected void verifyBracketing(final double lower, final double upper) { 		org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyBracketing(function, lower, upper);
	    	                                                                      ^, BaseAbstractUnivariateRealSolver.java:293: error: illegal start of expression
	protected void incrementEvaluationCount() {
	^, BaseAbstractUnivariateRealSolver.java:293: error: illegal start of expression
	protected void incrementEvaluationCount() {
	          ^, BaseAbstractUnivariateRealSolver.java:293: error: ';' expected
	protected void incrementEvaluationCount() {
	                                       ^, BaseAbstractUnivariateRealSolver.java:300: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(128): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return functionValueAccuracy ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (255(f=2.0), 256(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (255(f=2.0), )
----------Running generation: 129, population size: 1

***** Generation 129 : 0
**Parent Variant: [Variant id: 257, #gens: 671, #ops: 0, parent:-]

--Child created id: 258
--Creating new operations for variant [Variant id: 258, #gens: 671, #ops: 0, parent:257]
---analyzing modificationPoint position: 253
location: EmbeddedRungeKuttaIntegrator.java293
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 258, #gens: 670, #ops: 1, parent:257] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 258
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-258/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->86742
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 86742
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(129): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (257(f=2.0), 258(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (257(f=2.0), )
----------Running generation: 130, population size: 1

***** Generation 130 : 0
**Parent Variant: [Variant id: 259, #gens: 671, #ops: 0, parent:-]

--Child created id: 260
--Creating new operations for variant [Variant id: 260, #gens: 671, #ops: 0, parent:259]
---analyzing modificationPoint position: 366
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [interpolatedTime, java.lang.Double.NaN]
--> var from patch: interpolatedTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java113
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 113, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 260, #gens: 672, #ops: 1, parent:259] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 260, errors: [AbstractStepInterpolator.java:649: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:651: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:652: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:652: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:652: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:652: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:652: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:653: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:653: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:653: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:653: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:653: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:654: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:655: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:655: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:656: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:657: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:657: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:655: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:658: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:658: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:658: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:659: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:659: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:660: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:660: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:660: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:660: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:660: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:672: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:672: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:676: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:676: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:680: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:680: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:685: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:685: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:690: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:690: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:692: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:692: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:694: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:694: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:694: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:694: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:696: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:696: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:707: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:707: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:707: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:707: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:707: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:707: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:709: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:709: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:709: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:712: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:712: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:714: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:714: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:716: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:716: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:716: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:718: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:718: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:718: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:753: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:753: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:756: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:756: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(130): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (259(f=2.0), 260(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (259(f=2.0), )
----------Running generation: 131, population size: 1

***** Generation 131 : 0
**Parent Variant: [Variant id: 261, #gens: 671, #ops: 0, parent:-]

--Child created id: 262
--Creating new operations for variant [Variant id: 262, #gens: 671, #ops: 0, parent:261]
---analyzing modificationPoint position: 445
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 0 not mutation generated in  this.primary = primary
---analyzing modificationPoint position: 269
location: EmbeddedRungeKuttaIntegrator.java267
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 262, #gens: 670, #ops: 1, parent:261] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 262
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-262/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(131): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (262(f=1.0), 261(f=2.0), )
Selected to next generation: IDs2--> (262(f=1.0), )
----------Running generation: 132, population size: 1

***** Generation 132 : 0
**Parent Variant: [Variant id: 263, #gens: 671, #ops: 0, parent:-]

--Child created id: 264
--Creating new operations for variant [Variant id: 264, #gens: 671, #ops: 0, parent:263]
---analyzing modificationPoint position: 576
location: FastMath.java1249
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Split y = a */ tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 264, #gens: 670, #ops: 1, parent:263] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 264, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(132): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Split y = a */ tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (263(f=2.0), 264(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (263(f=2.0), )
----------Running generation: 133, population size: 1

***** Generation 133 : 0
**Parent Variant: [Variant id: 265, #gens: 671, #ops: 0, parent:-]

--Child created id: 266
--Creating new operations for variant [Variant id: 266, #gens: 671, #ops: 0, parent:265]
---analyzing modificationPoint position: 271
---modifPoint 0 not mutation generated in  double sum = b[0] * yDotK[0][j]
---analyzing modificationPoint position: 98
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 1 not mutation generated in  if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)[...]
---analyzing modificationPoint position: 115
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java247
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `int agingB = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 247, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `int agingB = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 266, #gens: 671, #ops: 1, parent:265] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 266, errors: [BracketingNthOrderBrentSolver.java:247: error: variable agingB is already defined in method doSolve()
			int start = 0; 			int agingB = 0;
			               			    ^, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                  ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				                                        ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:261: error: cannot find symbol
					if ((signChangeIndex - start) >= (end - signChangeIndex)) {
					                                  ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:266: error: cannot find symbol
						--end;
						  ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                            ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:280: error: cannot find symbol
				end = signChangeIndex;
				^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:291: error: cannot find symbol
			if ((nbPoints > 2) && ((end - start) != nbPoints)) {
			                        ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:295: error: cannot find symbol
				nbPoints = end - start;
				           ^
  symbol:   variable end
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(133): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `int agingB = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (265(f=2.0), 266(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (265(f=2.0), )
----------Running generation: 134, population size: 1

***** Generation 134 : 0
**Parent Variant: [Variant id: 267, #gens: 671, #ops: 0, parent:-]

--Child created id: 268
--Creating new operations for variant [Variant id: 268, #gens: 671, #ops: 0, parent:267]
---analyzing modificationPoint position: 181
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java147
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] y = new double[maximalOrder + 1] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 147, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] y = new double[maximalOrder + 1] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 268, #gens: 671, #ops: 1, parent:267] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 268
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-268/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(134): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] y = new double[maximalOrder + 1] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (268(f=1.0), 267(f=2.0), )
Selected to next generation: IDs2--> (268(f=1.0), )
----------Running generation: 135, population size: 1

***** Generation 135 : 0
**Parent Variant: [Variant id: 269, #gens: 671, #ops: 0, parent:-]

--Child created id: 270
--Creating new operations for variant [Variant id: 270, #gens: 671, #ops: 0, parent:269]
---analyzing modificationPoint position: 531
location: FastMath.java1536
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ya = (y + tmp1) - tmp1 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 270, #gens: 670, #ops: 1, parent:269] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 270, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(135): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ya = (y + tmp1) - tmp1 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (269(f=2.0), 270(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (269(f=2.0), )
----------Running generation: 136, population size: 1

***** Generation 136 : 0
**Parent Variant: [Variant id: 271, #gens: 671, #ops: 0, parent:-]

--Child created id: 272
--Creating new operations for variant [Variant id: 272, #gens: 671, #ops: 0, parent:271]
---analyzing modificationPoint position: 31
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [statesInitialized, eventsStates, state, interpolator]
--> var from patch: statesInitialized spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: state spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java331
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `// initialize the events states if needed if (!statesInitialized) { 	for (org.apache.commons.math.od[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 331, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `// initialize the events states if needed if (!statesInitialized) { 	for (org.apache.commons.math.od[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 272, #gens: 671, #ops: 1, parent:271] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 272
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-272/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(136): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `// initialize the events states if needed if (!statesInitialized) { 	for (org.apache.commons.math.od[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (272(f=1.0), 271(f=2.0), )
Selected to next generation: IDs2--> (272(f=1.0), )
----------Running generation: 137, population size: 1

***** Generation 137 : 0
**Parent Variant: [Variant id: 273, #gens: 671, #ops: 0, parent:-]

--Child created id: 274
--Creating new operations for variant [Variant id: 274, #gens: 671, #ops: 0, parent:273]
---analyzing modificationPoint position: 308
Templates availables29
Attempts Base Ingredients  1 total 29
vars from patch [scalRelativeTolerance, relativeTolerance]
--> var from patch: scalRelativeTolerance spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: relativeTolerance spoon.support.reflect.code.CtVariableReadImpl
location: AdaptiveStepsizeIntegrator.java157
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `minStep = org.apache.commons.math.util.FastMath.abs(minimalStep) ` -topatch--> `scalRelativeTolerance = relativeTolerance` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 157, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `minStep = org.apache.commons.math.util.FastMath.abs(minimalStep) ` -topatch--> `scalRelativeTolerance = relativeTolerance` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 274, #gens: 671, #ops: 1, parent:273] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 274
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-274/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(137): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `minStep = org.apache.commons.math.util.FastMath.abs(minimalStep) ` -topatch--> `scalRelativeTolerance = relativeTolerance` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (274(f=1.0), 273(f=2.0), )
Selected to next generation: IDs2--> (274(f=1.0), )
----------Running generation: 138, population size: 1

***** Generation 138 : 0
**Parent Variant: [Variant id: 275, #gens: 671, #ops: 0, parent:-]

--Child created id: 276
--Creating new operations for variant [Variant id: 276, #gens: 671, #ops: 0, parent:275]
---analyzing modificationPoint position: 232
location: EmbeddedRungeKuttaIntegrator.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepStart = acceptStep(interpolator, y, yDotTmp, t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 276, #gens: 670, #ops: 1, parent:275] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 276
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-276/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->86752
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 86752
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(138): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepStart = acceptStep(interpolator, y, yDotTmp, t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (275(f=2.0), 276(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (275(f=2.0), )
----------Running generation: 139, population size: 1

***** Generation 139 : 0
**Parent Variant: [Variant id: 277, #gens: 671, #ops: 0, parent:-]

--Child created id: 278
--Creating new operations for variant [Variant id: 278, #gens: 671, #ops: 0, parent:277]
---analyzing modificationPoint position: 569
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  /* Multiply a = y * x */ aa = ya * xa
---analyzing modificationPoint position: 255
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [this.maxGrowth]
--> var from patch: this.maxGrowth spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java295
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length) ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 295, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length) ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 278, #gens: 672, #ops: 1, parent:277] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 278, errors: [EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 * Get the minimal reduction factor for stepsize control.
	 ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	      ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                  ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                                   ^, EmbeddedRungeKuttaIntegrator.java:361: error: '(' expected
	 * Get the minimal reduction factor for stepsize control.
	                                       ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                                                        ^, EmbeddedRungeKuttaIntegrator.java:363: error: illegal start of expression
	 * @return minimal reduction factor
	 ^, EmbeddedRungeKuttaIntegrator.java:363: error: <identifier> expected
	 * @return minimal reduction factor
	    ^, EmbeddedRungeKuttaIntegrator.java:363: error: ';' expected
	 * @return minimal reduction factor
	                  ^, EmbeddedRungeKuttaIntegrator.java:364: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	  ^, EmbeddedRungeKuttaIntegrator.java:364: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:364: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:364: error: variable declaration not allowed here
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	              ^, EmbeddedRungeKuttaIntegrator.java:369: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:369: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	       ^, EmbeddedRungeKuttaIntegrator.java:369: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	                           ^, EmbeddedRungeKuttaIntegrator.java:369: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	                                                     ^, EmbeddedRungeKuttaIntegrator.java:373: error: illegal start of expression
	 */ 	public double getMaxGrowth() { 		return maxGrowth;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:373: error: ';' expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;} 	/**
	    	                          ^, EmbeddedRungeKuttaIntegrator.java:378: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:378: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	       ^, EmbeddedRungeKuttaIntegrator.java:378: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	                        ^, EmbeddedRungeKuttaIntegrator.java:378: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	                                               ^, EmbeddedRungeKuttaIntegrator.java:390: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	^, EmbeddedRungeKuttaIntegrator.java:390: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                       ^, EmbeddedRungeKuttaIntegrator.java:390: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                         ^, EmbeddedRungeKuttaIntegrator.java:390: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                 ^, EmbeddedRungeKuttaIntegrator.java:390: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                     ^, EmbeddedRungeKuttaIntegrator.java:390: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                           ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                            ^, EmbeddedRungeKuttaIntegrator.java:390: error: reached end of file while parsing
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(139): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length) ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (277(f=2.0), 278(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (277(f=2.0), )
----------Running generation: 140, population size: 1

***** Generation 140 : 0
**Parent Variant: [Variant id: 279, #gens: 671, #ops: 0, parent:-]

--Child created id: 280
--Creating new operations for variant [Variant id: 280, #gens: 671, #ops: 0, parent:279]
---analyzing modificationPoint position: 563
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L)
---analyzing modificationPoint position: 524
location: FastMath.java1456
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.POSITIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	} 	if (y < [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 280, #gens: 670, #ops: 1, parent:279] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 280, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(140): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.POSITIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	} 	if (y < [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (279(f=2.0), 280(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (279(f=2.0), )
----------Running generation: 141, population size: 1

***** Generation 141 : 0
**Parent Variant: [Variant id: 281, #gens: 671, #ops: 0, parent:-]

--Child created id: 282
--Creating new operations for variant [Variant id: 282, #gens: 671, #ops: 0, parent:281]
---analyzing modificationPoint position: 3
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [previousEventTime, t]
--> var from patch: previousEventTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java334
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `handler.resetState(t, y) ` -topatch--> `// force the sign to its value "just after the event" previousEventTime = t` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 334, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `handler.resetState(t, y) ` -topatch--> `// force the sign to its value "just after the event" previousEventTime = t` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 282, #gens: 672, #ops: 1, parent:281] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 282
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-282/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(141): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `handler.resetState(t, y) ` -topatch--> `// force the sign to its value "just after the event" previousEventTime = t` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (282(f=1.0), 281(f=2.0), )
Selected to next generation: IDs2--> (282(f=1.0), )
----------Running generation: 142, population size: 1

***** Generation 142 : 0
**Parent Variant: [Variant id: 283, #gens: 671, #ops: 0, parent:-]

--Child created id: 284
--Creating new operations for variant [Variant id: 284, #gens: 671, #ops: 0, parent:283]
---analyzing modificationPoint position: 97
location: EventState.java299
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t, y) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 284, #gens: 670, #ops: 1, parent:283] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 284
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-284/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(142): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t, y) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (284(f=1.0), 283(f=2.0), )
Selected to next generation: IDs2--> (284(f=1.0), )
----------Running generation: 143, population size: 1

***** Generation 143 : 0
**Parent Variant: [Variant id: 285, #gens: 671, #ops: 0, parent:-]

--Child created id: 286
--Creating new operations for variant [Variant id: 286, #gens: 671, #ops: 0, parent:285]
---analyzing modificationPoint position: 144
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double eta = 1 - theta
---analyzing modificationPoint position: 541
Templates availables301
Attempts Base Ingredients  1 total 301
---modifPoint 1 not mutation generated in  // y*ln(x) = (aa+ab) final double aa = lna * ya
---analyzing modificationPoint position: 106
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  double yB = y[signChangeIndex]
---analyzing modificationPoint position: 598
---modifPoint 3 not mutation generated in  return a
---analyzing modificationPoint position: 296
location: EmbeddedRungeKuttaIntegrator.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.shift() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 286, #gens: 670, #ops: 1, parent:285] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 286
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-286/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(143): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.shift() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (286(f=1.0), 285(f=2.0), )
Selected to next generation: IDs2--> (286(f=1.0), )
----------Running generation: 144, population size: 1

***** Generation 144 : 0
**Parent Variant: [Variant id: 287, #gens: 671, #ops: 0, parent:-]

--Child created id: 288
--Creating new operations for variant [Variant id: 288, #gens: 671, #ops: 0, parent:287]
---analyzing modificationPoint position: 448
location: ExpandableStatefulODE.java77
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryState = new double[n] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 288, #gens: 670, #ops: 1, parent:287] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 288, errors: [ExpandableStatefulODE.java:81: error: variable primaryState might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(144): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryState = new double[n] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (287(f=2.0), 288(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (287(f=2.0), )
----------Running generation: 145, population size: 1

***** Generation 145 : 0
**Parent Variant: [Variant id: 289, #gens: 671, #ops: 0, parent:-]

--Child created id: 290
--Creating new operations for variant [Variant id: 290, #gens: 671, #ops: 0, parent:289]
---analyzing modificationPoint position: 349
location: AbstractStepInterpolator.java254
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = y ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 290, #gens: 670, #ops: 1, parent:289] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 290
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-290/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(145): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = y ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (290(f=1.0), 289(f=2.0), )
Selected to next generation: IDs2--> (290(f=1.0), )
----------Running generation: 146, population size: 1

***** Generation 146 : 0
**Parent Variant: [Variant id: 291, #gens: 671, #ops: 0, parent:-]

--Child created id: 292
--Creating new operations for variant [Variant id: 292, #gens: 671, #ops: 0, parent:291]
---analyzing modificationPoint position: 9
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 	handler.res[...]
---analyzing modificationPoint position: 101
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // current tightest bracketing of the root double xA = x[signChangeIndex - 1]
---analyzing modificationPoint position: 381
location: AbstractStepInterpolator.java216
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 292, #gens: 670, #ops: 1, parent:291] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 292
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-292/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(146): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryDerivatives = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (292(f=1.0), 291(f=2.0), )
Selected to next generation: IDs2--> (292(f=1.0), )
----------Running generation: 147, population size: 1

***** Generation 147 : 0
**Parent Variant: [Variant id: 293, #gens: 671, #ops: 0, parent:-]

--Child created id: 294
--Creating new operations for variant [Variant id: 294, #gens: 671, #ops: 0, parent:293]
---analyzing modificationPoint position: 50
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [interpolator]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java285
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `state.reinitializeBegin(interpolator) ` -topatch--> `final double[] currentY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 285, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `state.reinitializeBegin(interpolator) ` -topatch--> `final double[] currentY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 294, #gens: 672, #ops: 1, parent:293] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 294, errors: [AbstractIntegrator.java:362: error: illegal start of expression
			 * {@inheritDoc }
			 ^, AbstractIntegrator.java:362: error: illegal start of expression
			 * {@inheritDoc }
			   ^, AbstractIntegrator.java:362: error: illegal start of type
			 * {@inheritDoc }
			                ^, AbstractIntegrator.java:362: error: ';' expected
			 * {@inheritDoc }
			                 ^, AbstractIntegrator.java:363: error: illegal start of expression
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			  ^, AbstractIntegrator.java:363: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			   ^, AbstractIntegrator.java:363: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                  ^, AbstractIntegrator.java:363: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                         ^, AbstractIntegrator.java:363: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                       ^, AbstractIntegrator.java:363: error: illegal start of type
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                         ^, AbstractIntegrator.java:363: error: illegal start of type
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		^, AbstractIntegrator.java:363: error: ')' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		                                                              ^, AbstractIntegrator.java:363: error: <identifier> expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		                                                                             ^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(147): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `state.reinitializeBegin(interpolator) ` -topatch--> `final double[] currentY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (293(f=2.0), 294(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (293(f=2.0), )
----------Running generation: 148, population size: 1

***** Generation 148 : 0
**Parent Variant: [Variant id: 295, #gens: 671, #ops: 0, parent:-]

--Child created id: 296
--Creating new operations for variant [Variant id: 296, #gens: 671, #ops: 0, parent:295]
---analyzing modificationPoint position: 654
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  c = a + lnzb
---analyzing modificationPoint position: 635
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  if (hiPrec != null) { 	/* split epsilon -> x */ 	double tmp = epsilon * org.apache.commons.math.util[...]
---analyzing modificationPoint position: 57
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  return super.solve(maxEval, f, min, max)
---analyzing modificationPoint position: 36
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [ga, gb]
--> var from patch: ga spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: gb spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java256
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `ga = gb` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 256, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `ga = gb` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 296, #gens: 672, #ops: 1, parent:295] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 296
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-296/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(148): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `ga = gb` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (296(f=1.0), 295(f=2.0), )
Selected to next generation: IDs2--> (296(f=1.0), )
----------Running generation: 149, population size: 1

***** Generation 149 : 0
**Parent Variant: [Variant id: 297, #gens: 671, #ops: 0, parent:-]

--Child created id: 298
--Creating new operations for variant [Variant id: 298, #gens: 671, #ops: 0, parent:297]
---analyzing modificationPoint position: 543
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  lna = aa + ab
---analyzing modificationPoint position: 150
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  final int delta = (i + 1) - start
---analyzing modificationPoint position: 503
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [absoluteAccuracy]
--> var from patch: absoluteAccuracy spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMax ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 116, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMax ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 298, #gens: 671, #ops: 1, parent:297] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 298
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-298/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(149): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMax ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (297(f=2.0), 298(f=2.0), )
Selected to next generation: IDs2--> (297(f=2.0), )
----------Running generation: 150, population size: 1

***** Generation 150 : 0
**Parent Variant: [Variant id: 299, #gens: 671, #ops: 0, parent:-]

--Child created id: 300
--Creating new operations for variant [Variant id: 300, #gens: 671, #ops: 0, parent:299]
---analyzing modificationPoint position: 205
---modifPoint 0 not mutation generated in  final double ratio2 = errSum2 / tol
---analyzing modificationPoint position: 207
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 1 not mutation generated in  double den = error1 + (0.01 * error2)
---analyzing modificationPoint position: 223
Templates availables27
Attempts Base Ingredients  1 total 27
---modifPoint 2 not mutation generated in  v = null
---analyzing modificationPoint position: 533
---modifPoint 3 not mutation generated in  /* Compute ln(x) */ final double lores = org.apache.commons.math.util.FastMath.log(x, lns)
---analyzing modificationPoint position: 238
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 4 not mutation generated in  final double nextT = stepStart + scaledH
---analyzing modificationPoint position: 23
location: AbstractIntegrator.java317
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setSoftPreviousTime(previousT) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 300, #gens: 670, #ops: 1, parent:299] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 300
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-300/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(150): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setSoftPreviousTime(previousT) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (300(f=1.0), 299(f=2.0), )
Selected to next generation: IDs2--> (300(f=1.0), )
----------Running generation: 151, population size: 1

***** Generation 151 : 0
**Parent Variant: [Variant id: 301, #gens: 671, #ops: 0, parent:-]

--Child created id: 302
--Creating new operations for variant [Variant id: 302, #gens: 671, #ops: 0, parent:301]
---analyzing modificationPoint position: 470
location: AbstractStepInterpolator.java290
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = globalPreviousTime ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 302, #gens: 670, #ops: 1, parent:301] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 302
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-302/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(151): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = globalPreviousTime ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (301(f=2.0), 302(f=2.0), )
Selected to next generation: IDs2--> (301(f=2.0), )
----------Running generation: 152, population size: 1

***** Generation 152 : 0
**Parent Variant: [Variant id: 303, #gens: 671, #ops: 0, parent:-]

--Child created id: 304
--Creating new operations for variant [Variant id: 304, #gens: 671, #ops: 0, parent:303]
---analyzing modificationPoint position: 8
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [nextAction, org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE, handler, t, y]
--> var from patch: nextAction spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: handler spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java329
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergenc[...] ` -topatch--> `if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 	handler.res[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 329, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergenc[...] ` -topatch--> `if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 	handler.res[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 304, #gens: 671, #ops: 1, parent:303] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 304
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-304/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(152): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergenc[...] ` -topatch--> `if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 	handler.res[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (304(f=1.0), 303(f=2.0), )
Selected to next generation: IDs2--> (304(f=1.0), )
----------Running generation: 153, population size: 1

***** Generation 153 : 0
**Parent Variant: [Variant id: 305, #gens: 671, #ops: 0, parent:-]

--Child created id: 306
--Creating new operations for variant [Variant id: 306, #gens: 671, #ops: 0, parent:305]
---analyzing modificationPoint position: 111
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xB, xA, xTol, absYA, absYB, allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE, yA, org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE]
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTol spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: allowed spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java233
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 233, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 306, #gens: 672, #ops: 1, parent:305] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 306
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-306/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(153): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (306(f=1.0), 305(f=2.0), )
Selected to next generation: IDs2--> (306(f=1.0), )
----------Running generation: 154, population size: 1

***** Generation 154 : 0
**Parent Variant: [Variant id: 307, #gens: 671, #ops: 0, parent:-]

--Child created id: 308
--Creating new operations for variant [Variant id: 308, #gens: 671, #ops: 0, parent:307]
---analyzing modificationPoint position: 211
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final int dimension = currentState.length
---analyzing modificationPoint position: 473
location: AbstractStepInterpolator.java300
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 308, #gens: 670, #ops: 1, parent:307] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 308
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-308/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(154): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (307(f=2.0), 308(f=2.0), )
Selected to next generation: IDs2--> (307(f=2.0), )
----------Running generation: 155, population size: 1

***** Generation 155 : 0
**Parent Variant: [Variant id: 309, #gens: 671, #ops: 0, parent:-]

--Child created id: 310
--Creating new operations for variant [Variant id: 310, #gens: 671, #ops: 0, parent:309]
---analyzing modificationPoint position: 47
Templates availables1
Attempts Base Ingredients  1 total 1
---modifPoint 0 not mutation generated in  return handler.g(t, interpolator.getInterpolatedState())
---analyzing modificationPoint position: 563
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [bits]
--> var from patch: bits spoon.support.reflect.code.CtVariableWriteImpl
location: FastMath.java1228
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L) ` -topatch--> `bits <<= 1` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1228, pointed element: CtOperatorAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L) ` -topatch--> `bits <<= 1` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 

--Summary Creation: for variant [Variant id: 310, #gens: 672, #ops: 1, parent:309] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 310, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(155): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L) ` -topatch--> `bits <<= 1` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (309(f=2.0), 310(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (309(f=2.0), )
----------Running generation: 156, population size: 1

***** Generation 156 : 0
**Parent Variant: [Variant id: 311, #gens: 671, #ops: 0, parent:-]

--Child created id: 312
--Creating new operations for variant [Variant id: 312, #gens: 671, #ops: 0, parent:311]
---analyzing modificationPoint position: 580
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  ab = ((ya * xb) + (yb * xa)) + (yb * xb)
---analyzing modificationPoint position: 335
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  h = interpolator.h
---analyzing modificationPoint position: 531
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  ya = (y + tmp1) - tmp1
---analyzing modificationPoint position: 467
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [this.dirtyState]
--> var from patch: this.dirtyState spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java229
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `this.dirtyState = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 229, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `this.dirtyState = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 312, #gens: 671, #ops: 1, parent:311] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 312
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-312/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(156): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `this.dirtyState = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (312(f=1.0), 311(f=2.0), )
Selected to next generation: IDs2--> (312(f=1.0), )
----------Running generation: 157, population size: 1

***** Generation 157 : 0
**Parent Variant: [Variant id: 313, #gens: 671, #ops: 0, parent:-]

--Child created id: 314
--Creating new operations for variant [Variant id: 314, #gens: 671, #ops: 0, parent:313]
---analyzing modificationPoint position: 124
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  // perform the last evaluations if they have not been done yet finalizeStep()
---analyzing modificationPoint position: 605
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  return x < 0L ? -x : x
---analyzing modificationPoint position: 86
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 2 not mutation generated in  for (int i = 0; i < n; ++i) {  	// evaluate handler value at the end of the substep 	final double tb[...]
---analyzing modificationPoint position: 276
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [equations]
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java282
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...] ` -topatch--> `setEquations(equations)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 282, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...] ` -topatch--> `setEquations(equations)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 314, #gens: 672, #ops: 1, parent:313] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 314
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-314/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(157): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...] ` -topatch--> `setEquations(equations)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (314(f=1.0), 313(f=2.0), )
Selected to next generation: IDs2--> (314(f=1.0), )
----------Running generation: 158, population size: 1

***** Generation 158 : 0
**Parent Variant: [Variant id: 315, #gens: 671, #ops: 0, parent:-]

--Child created id: 316
--Creating new operations for variant [Variant id: 316, #gens: 671, #ops: 0, parent:315]
---analyzing modificationPoint position: 493
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch []
location: FastMath.java3032
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isInfinite(x)) { 	return java.lang.Double.POSITIVE_INFINITY; } ` -topatch--> `double lnza = 0.0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 3032, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isInfinite(x)) { 	return java.lang.Double.POSITIVE_INFINITY; } ` -topatch--> `double lnza = 0.0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 316, #gens: 672, #ops: 1, parent:315] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 316, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(158): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isInfinite(x)) { 	return java.lang.Double.POSITIVE_INFINITY; } ` -topatch--> `double lnza = 0.0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (315(f=2.0), 316(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (315(f=2.0), )
----------Running generation: 159, population size: 1

***** Generation 159 : 0
**Parent Variant: [Variant id: 317, #gens: 671, #ops: 0, parent:-]

--Child created id: 318
--Creating new operations for variant [Variant id: 318, #gens: 671, #ops: 0, parent:317]
---analyzing modificationPoint position: 19
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  // handle the chronologically first event final java.util.Iterator<org.apache.commons.math.ode.event[...]
---analyzing modificationPoint position: 46
Templates availables1
Attempts Base Ingredients  1 total 1
---modifPoint 1 not mutation generated in  interpolator.setInterpolatedTime(t)
---analyzing modificationPoint position: 556
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...]
---analyzing modificationPoint position: 553
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [y]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1420
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] lns = new double[2] ` -topatch--> `double invy = 1.0 / y` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1420, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] lns = new double[2] ` -topatch--> `double invy = 1.0 / y` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 318, #gens: 672, #ops: 1, parent:317] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 318, errors: [FastMath.java:2610: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2610: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2610: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2610: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2610: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2610: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2610: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2610: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2611: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2611: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2611: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2611: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2613: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2614: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2614: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2615: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2615: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2615: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2615: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2616: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2616: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2616: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2616: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2616: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2625: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2625: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2625: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2625: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2625: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2625: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2630: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2632: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2632: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2632: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2633: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2633: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2634: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2634: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2635: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2635: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2636: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2636: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2637: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2637: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2649: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2649: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2674: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2674: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2674: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2674: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2674: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2674: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2674: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2675: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2675: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:2675: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:2675: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:2675: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:2675: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:2675: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:2677: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:2677: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:2678: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:2678: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:2678: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:2678: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:2679: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:2680: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:2680: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:2680: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:2680: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:2680: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:2680: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:2680: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:2681: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:2681: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:2681: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:2681: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:2681: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:2682: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:2682: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:2682: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:2682: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:2682: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:2682: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:2693: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:2693: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:2693: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:2693: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2693: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2693: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:2693: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:2693: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:2698: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2700: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2700: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2700: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2701: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2701: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2702: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(159): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] lns = new double[2] ` -topatch--> `double invy = 1.0 / y` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (317(f=2.0), 318(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (317(f=2.0), )
----------Running generation: 160, population size: 1

***** Generation 160 : 0
**Parent Variant: [Variant id: 319, #gens: 671, #ops: 0, parent:-]

--Child created id: 320
--Creating new operations for variant [Variant id: 320, #gens: 671, #ops: 0, parent:319]
---analyzing modificationPoint position: 462
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 0 not mutation generated in  interpolatedDerivatives = new double[dimension]
---analyzing modificationPoint position: 145
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 1 not mutation generated in  final double twoTheta = 2 * theta
---analyzing modificationPoint position: 65
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [g0Positive, g0]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: g0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java112
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = true ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 112, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = true ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 320, #gens: 671, #ops: 1, parent:319] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 320, errors: [EventState.java:200: error: illegal start of expression
	 * Evaluate the impact of the proposed step on the event handler.
	 ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	           ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                      ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                             ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                           ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                  ^, EventState.java:200: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                                ^, EventState.java:202: error: <identifier> expected
	 * @param interpolator
	                      ^, EventState.java:203: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                 ^, EventState.java:203: error: '(' expected
	 * 		step interpolator for the proposed step
	   		                     ^, EventState.java:203: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                                  ^, EventState.java:204: error: <identifier> expected
	 * @return true if the event handler triggers an event before
	    ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	               ^, EventState.java:204: error: not a statement
	 * @return true if the event handler triggers an event before
	                   ^, EventState.java:204: error: ')' expected
	 * @return true if the event handler triggers an event before
	                      ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                    ^, EventState.java:204: error: variable declaration not allowed here
	 * @return true if the event handler triggers an event before
	                             ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                ^, EventState.java:204: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                             ^, EventState.java:205: error: ';' expected
	the end of the proposed step
	       ^, EventState.java:205: error: ';' expected
	the end of the proposed step
	              ^, EventState.java:205: error: ';' expected
	the end of the proposed step
	                            ^, EventState.java:206: error: <identifier> expected
	 * @exception ConvergenceException
	                                  ^, EventState.java:207: error: '(' expected
	 * 		if an event cannot be located
	   		  ^, EventState.java:207: error: ')' expected
	 * 		if an event cannot be located
	   		     ^, EventState.java:207: error: ';' expected
	 * 		if an event cannot be located
	   		                  ^, EventState.java:207: error: variable declaration not allowed here
	 * 		if an event cannot be located
	   		            ^, EventState.java:207: error: ';' expected
	 * 		if an event cannot be located
	   		                             ^, EventState.java:208: error: illegal start of expression
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	^, EventState.java:208: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                           ^, EventState.java:208: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                    ^, EventState.java:208: error: not a statement
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                              ^, EventState.java:208: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                                                   ^, EventState.java:286: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	^, EventState.java:286: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	                          ^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                        ^, EventState.java:300: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                        ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(160): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = true ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (319(f=2.0), 320(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (319(f=2.0), )
----------Running generation: 161, population size: 1

***** Generation 161 : 0
**Parent Variant: [Variant id: 321, #gens: 671, #ops: 0, parent:-]

--Child created id: 322
--Creating new operations for variant [Variant id: 322, #gens: 671, #ops: 0, parent:321]
---analyzing modificationPoint position: 517
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (y == x) { 	return y; }
---analyzing modificationPoint position: 100
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...]
---analyzing modificationPoint position: 131
---modifPoint 2 not mutation generated in  final double yDot10 = yDotK[9][i]
---analyzing modificationPoint position: 275
Templates availables22
Attempts Base Ingredients  1 total 22
vars from patch [isLastStep]
--> var from patch: isLastStep spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java281
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// estimate the error at the end of the step error = estimateError(yDotK, y, yTmp, stepSize) ` -topatch--> `// main integration loop isLastStep = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 281, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// estimate the error at the end of the step error = estimateError(yDotK, y, yTmp, stepSize) ` -topatch--> `// main integration loop isLastStep = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 322, #gens: 671, #ops: 1, parent:321] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 322
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-322/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(161): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// estimate the error at the end of the step error = estimateError(yDotK, y, yTmp, stepSize) ` -topatch--> `// main integration loop isLastStep = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (322(f=1.0), 321(f=2.0), )
Selected to next generation: IDs2--> (322(f=1.0), )
----------Running generation: 162, population size: 1

***** Generation 162 : 0
**Parent Variant: [Variant id: 323, #gens: 671, #ops: 0, parent:-]

--Child created id: 324
--Creating new operations for variant [Variant id: 324, #gens: 671, #ops: 0, parent:323]
---analyzing modificationPoint position: 444
---modifPoint 0 not mutation generated in  final int n = primary.getDimension()
---analyzing modificationPoint position: 85
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 1 not mutation generated in  double ga = g0
---analyzing modificationPoint position: 436
Templates availables8
Attempts Base Ingredients  1 total 8
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 2 not mutation generated in  // lazy evaluation of the state if (dirtyState) { 	final double oneMinusThetaH = globalCurrentTime -[...]
---analyzing modificationPoint position: 446
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 3 not mutation generated in  this.primaryMapper = new org.apache.commons.math.ode.EquationsMapper(0, n)
---analyzing modificationPoint position: 138
location: DormandPrince853StepInterpolator.java344
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[0][i] = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_01 * yDot1)[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 324, #gens: 670, #ops: 1, parent:323] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 324
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-324/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(162): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[0][i] = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_01 * yDot1)[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (324(f=1.0), 323(f=2.0), )
Selected to next generation: IDs2--> (324(f=1.0), )
----------Running generation: 163, population size: 1

***** Generation 163 : 0
**Parent Variant: [Variant id: 325, #gens: 671, #ops: 0, parent:-]

--Child created id: 326
--Creating new operations for variant [Variant id: 326, #gens: 671, #ops: 0, parent:325]
---analyzing modificationPoint position: 330
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  this.integrator = rkIntegrator
---analyzing modificationPoint position: 476
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  // the step is not finalized anymore finalized = false
---analyzing modificationPoint position: 334
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [softPreviousTime, java.lang.Double.NaN]
--> var from patch: softPreviousTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = interpolator.softCurrentTime ` -topatch--> `softPreviousTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = interpolator.softCurrentTime ` -topatch--> `softPreviousTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 326, #gens: 671, #ops: 1, parent:325] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 326
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-326/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(163): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = interpolator.softCurrentTime ` -topatch--> `softPreviousTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (326(f=1.0), 325(f=2.0), )
Selected to next generation: IDs2--> (326(f=1.0), )
----------Running generation: 164, population size: 1

***** Generation 164 : 0
**Parent Variant: [Variant id: 327, #gens: 671, #ops: 0, parent:-]

--Child created id: 328
--Creating new operations for variant [Variant id: 328, #gens: 671, #ops: 0, parent:327]
---analyzing modificationPoint position: 207
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  double den = error1 + (0.01 * error2)
---analyzing modificationPoint position: 240
location: EmbeddedRungeKuttaIntegrator.java314
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `hNew = filterStep(scaledH, forward, nextIsLast) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 328, #gens: 670, #ops: 1, parent:327] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 328
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-328/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(164): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `hNew = filterStep(scaledH, forward, nextIsLast) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (328(f=1.0), 327(f=2.0), )
Selected to next generation: IDs2--> (328(f=1.0), )
----------Running generation: 165, population size: 1

***** Generation 165 : 0
**Parent Variant: [Variant id: 329, #gens: 671, #ops: 0, parent:-]

--Child created id: 330
--Creating new operations for variant [Variant id: 330, #gens: 671, #ops: 0, parent:329]
---analyzing modificationPoint position: 226
Templates availables77
Attempts Base Ingredients  1 total 77
---modifPoint 0 not mutation generated in  y += 1.0
---analyzing modificationPoint position: 495
---modifPoint 1 not mutation generated in  return relativeAccuracy
---analyzing modificationPoint position: 579
location: FastMath.java1255
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Multiply a = y * x */ aa = ya * xa ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 330, #gens: 670, #ops: 1, parent:329] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 330, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(165): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Multiply a = y * x */ aa = ya * xa ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (329(f=2.0), 330(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (329(f=2.0), )
----------Running generation: 166, population size: 1

***** Generation 166 : 0
**Parent Variant: [Variant id: 331, #gens: 671, #ops: 0, parent:-]

--Child created id: 332
--Creating new operations for variant [Variant id: 332, #gens: 671, #ops: 0, parent:331]
---analyzing modificationPoint position: 182
location: BracketingNthOrderBrentSolver.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[0] = getMin() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 332, #gens: 670, #ops: 1, parent:331] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 332
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-332/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(166): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[0] = getMin() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (332(f=1.0), 331(f=2.0), )
Selected to next generation: IDs2--> (332(f=1.0), )
----------Running generation: 167, population size: 1

***** Generation 167 : 0
**Parent Variant: [Variant id: 333, #gens: 671, #ops: 0, parent:-]

--Child created id: 334
--Creating new operations for variant [Variant id: 334, #gens: 671, #ops: 0, parent:333]
---analyzing modificationPoint position: 315
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 0 not mutation generated in  if (initialStep > 0) { 	// use the user provided value 	return forward ? initialStep : -initialStep;[...]
---analyzing modificationPoint position: 513
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  evaluations.resetCount()
---analyzing modificationPoint position: 313
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 2 not mutation generated in  vecAbsoluteTolerance = null
---analyzing modificationPoint position: 310
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 3 not mutation generated in  initialStep = -1
---analyzing modificationPoint position: 528
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 4 not mutation generated in  /* Handle special case x<0 */ if (x < 0) { 	// y is an even integer in this case 	if ((y >= org.apac[...]
---analyzing modificationPoint position: 49
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [previousEventTime, root, convergence, pendingEventTime, pendingEvent, ta, tb, ga, gb]
--> var from patch: previousEventTime spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: root spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: convergence spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pendingEventTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: pendingEvent spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: ta spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: tb spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ga spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: gb spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java225
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 225, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 334, #gens: 672, #ops: 1, parent:333] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 334, errors: [EventState.java:286: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	^, EventState.java:286: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	                          ^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                        ^, EventState.java:300: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                        ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(167): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (333(f=2.0), 334(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (333(f=2.0), )
----------Running generation: 168, population size: 1

***** Generation 168 : 0
**Parent Variant: [Variant id: 335, #gens: 671, #ops: 0, parent:-]

--Child created id: 336
--Creating new operations for variant [Variant id: 336, #gens: 671, #ops: 0, parent:335]
---analyzing modificationPoint position: 613
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  maximalCount = max
---analyzing modificationPoint position: 367
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [globalCurrentTime, java.lang.Double.NaN]
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java114
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `globalCurrentTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 114, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `globalCurrentTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 336, #gens: 672, #ops: 1, parent:335] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 336
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-336/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(168): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `globalCurrentTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (336(f=1.0), 335(f=2.0), )
Selected to next generation: IDs2--> (336(f=1.0), )
----------Running generation: 169, population size: 1

***** Generation 169 : 0
**Parent Variant: [Variant id: 337, #gens: 671, #ops: 0, parent:-]

--Child created id: 338
--Creating new operations for variant [Variant id: 338, #gens: 671, #ops: 0, parent:337]
---analyzing modificationPoint position: 199
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  final double errSum1 = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.E1_01 [...]
---analyzing modificationPoint position: 188
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java161
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 161, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 338, #gens: 672, #ops: 1, parent:337] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 338, errors: [BracketingNthOrderBrentSolver.java:170: error: illegal start of type
		if ((y[0] * y[1]) < 0) {
		^, BracketingNthOrderBrentSolver.java:170: error: illegal start of type
		if ((y[0] * y[1]) < 0) {
		    ^, BracketingNthOrderBrentSolver.java:170: error: ')' expected
		if ((y[0] * y[1]) < 0) {
		     ^, BracketingNthOrderBrentSolver.java:170: error: ']' expected
		if ((y[0] * y[1]) < 0) {
		       ^, BracketingNthOrderBrentSolver.java:170: error: illegal start of type
		if ((y[0] * y[1]) < 0) {
		        ^, BracketingNthOrderBrentSolver.java:170: error: <identifier> expected
		if ((y[0] * y[1]) < 0) {
		         ^, BracketingNthOrderBrentSolver.java:170: error: ';' expected
		if ((y[0] * y[1]) < 0) {
		           ^, BracketingNthOrderBrentSolver.java:170: error: illegal start of type
		if ((y[0] * y[1]) < 0) {
		             ^, BracketingNthOrderBrentSolver.java:170: error: <identifier> expected
		if ((y[0] * y[1]) < 0) {
		              ^, BracketingNthOrderBrentSolver.java:170: error: ';' expected
		if ((y[0] * y[1]) < 0) {
		               ^, BracketingNthOrderBrentSolver.java:170: error: illegal start of type
		if ((y[0] * y[1]) < 0) {
		                ^, BracketingNthOrderBrentSolver.java:170: error: <identifier> expected
		if ((y[0] * y[1]) < 0) {
		                 ^, BracketingNthOrderBrentSolver.java:170: error: ';' expected
		if ((y[0] * y[1]) < 0) {
		                   ^, BracketingNthOrderBrentSolver.java:170: error: illegal start of type
		if ((y[0] * y[1]) < 0) {
		                     ^, BracketingNthOrderBrentSolver.java:170: error: <identifier> expected
		if ((y[0] * y[1]) < 0) {
		                      ^, BracketingNthOrderBrentSolver.java:170: error: ';' expected
		if ((y[0] * y[1]) < 0) {
		                        ^, BracketingNthOrderBrentSolver.java:173: error: illegal start of type
			nbPoints = 2;
			         ^, BracketingNthOrderBrentSolver.java:173: error: <identifier> expected
			nbPoints = 2;
			          ^, BracketingNthOrderBrentSolver.java:174: error: <identifier> expected
			signChangeIndex = 1;
			               ^, BracketingNthOrderBrentSolver.java:176: error: class, interface, or enum expected
		} else {
		  ^, BracketingNthOrderBrentSolver.java:180: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:183: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:188: error: class, interface, or enum expected
				signChangeIndex = 2;
				^, BracketingNthOrderBrentSolver.java:189: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:191: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:196: error: class, interface, or enum expected
		final double[] tmpX = new double[x.length];
		      ^, BracketingNthOrderBrentSolver.java:199: error: class, interface, or enum expected
		double xA = x[signChangeIndex - 1];
		^, BracketingNthOrderBrentSolver.java:200: error: class, interface, or enum expected
		double yA = y[signChangeIndex - 1];
		^, BracketingNthOrderBrentSolver.java:201: error: class, interface, or enum expected
		double absYA = org.apache.commons.math.util.FastMath.abs(yA);
		^, BracketingNthOrderBrentSolver.java:202: error: class, interface, or enum expected
		int agingA = 0;
		^, BracketingNthOrderBrentSolver.java:203: error: class, interface, or enum expected
		double xB = x[signChangeIndex];
		^, BracketingNthOrderBrentSolver.java:204: error: class, interface, or enum expected
		double yB = y[signChangeIndex];
		^, BracketingNthOrderBrentSolver.java:205: error: class, interface, or enum expected
		double absYB = org.apache.commons.math.util.FastMath.abs(yB);
		^, BracketingNthOrderBrentSolver.java:206: error: class, interface, or enum expected
		int agingB = 0;
		^, BracketingNthOrderBrentSolver.java:209: error: class, interface, or enum expected
		while (true) {
		^, BracketingNthOrderBrentSolver.java:212: error: class, interface, or enum expected
			final double xTol = getAbsoluteAccuracy() + 
			      ^, BracketingNthOrderBrentSolver.java:214: error: class, interface, or enum expected
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			^, BracketingNthOrderBrentSolver.java:218: error: class, interface, or enum expected
					case LEFT_SIDE :
					^, BracketingNthOrderBrentSolver.java:220: error: class, interface, or enum expected
					case RIGHT_SIDE :
					^, BracketingNthOrderBrentSolver.java:222: error: class, interface, or enum expected
					case BELOW_SIDE :
					^, BracketingNthOrderBrentSolver.java:224: error: class, interface, or enum expected
					case ABOVE_SIDE :
					^, BracketingNthOrderBrentSolver.java:226: error: class, interface, or enum expected
					default :
					        ^, BracketingNthOrderBrentSolver.java:228: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}
						                                                                    ^, BracketingNthOrderBrentSolver.java:234: error: class, interface, or enum expected
			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(169): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (337(f=2.0), 338(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (337(f=2.0), )
----------Running generation: 170, population size: 1

***** Generation 170 : 0
**Parent Variant: [Variant id: 339, #gens: 671, #ops: 0, parent:-]

--Child created id: 340
--Creating new operations for variant [Variant id: 340, #gens: 671, #ops: 0, parent:339]
---analyzing modificationPoint position: 88
location: EventState.java213
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setInterpolatedTime(tb) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 340, #gens: 670, #ops: 1, parent:339] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 340
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-340/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(170): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setInterpolatedTime(tb) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (340(f=1.0), 339(f=2.0), )
Selected to next generation: IDs2--> (340(f=1.0), )
----------Running generation: 171, population size: 1

***** Generation 171 : 0
**Parent Variant: [Variant id: 341, #gens: 671, #ops: 0, parent:-]

--Child created id: 342
--Creating new operations for variant [Variant id: 342, #gens: 671, #ops: 0, parent:341]
---analyzing modificationPoint position: 542
---modifPoint 0 not mutation generated in  final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb)
---analyzing modificationPoint position: 359
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  finalized = true
---analyzing modificationPoint position: 66
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 2 not mutation generated in  pendingEvent = false
---analyzing modificationPoint position: 652
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  a = c
---analyzing modificationPoint position: 606
location: FastMath.java3542
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return b ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 342, #gens: 670, #ops: 1, parent:341] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 342, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(171): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return b ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (341(f=2.0), 342(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (341(f=2.0), )
----------Running generation: 172, population size: 1

***** Generation 172 : 0
**Parent Variant: [Variant id: 343, #gens: 671, #ops: 0, parent:-]

--Child created id: 344
--Creating new operations for variant [Variant id: 344, #gens: 671, #ops: 0, parent:343]
---analyzing modificationPoint position: 233
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  if (!isLastStep) {  	// prepare next step 	interpolator.storeTime(stepStart);  	if (fsal) { 		// sav[...]
---analyzing modificationPoint position: 630
---modifPoint 1 not mutation generated in  return result
---analyzing modificationPoint position: 63
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [g0Positive]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
location: EventState.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// some dummy values ... t0 = java.lang.Double.NaN ` -topatch--> `g0Positive = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 110, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// some dummy values ... t0 = java.lang.Double.NaN ` -topatch--> `g0Positive = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 344, #gens: 671, #ops: 1, parent:343] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 344
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-344/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(172): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// some dummy values ... t0 = java.lang.Double.NaN ` -topatch--> `g0Positive = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (344(f=1.0), 343(f=2.0), )
Selected to next generation: IDs2--> (344(f=1.0), )
----------Running generation: 173, population size: 1

***** Generation 173 : 0
**Parent Variant: [Variant id: 345, #gens: 671, #ops: 0, parent:-]

--Child created id: 346
--Creating new operations for variant [Variant id: 346, #gens: 671, #ops: 0, parent:345]
---analyzing modificationPoint position: 648
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  a = c
---analyzing modificationPoint position: 619
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  /* epsilon is the difference in x from the nearest multiple of 2^-10.  It has a value in the range 0[...]
---analyzing modificationPoint position: 520
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  this.functionValueAccuracy = functionValueAccuracy
---analyzing modificationPoint position: 253
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java293
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...] ` -topatch--> `setMinReduction(0.2)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 293, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...] ` -topatch--> `setMinReduction(0.2)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 346, #gens: 671, #ops: 1, parent:345] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 346
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-346/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->86798
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 86798
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(173): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...] ` -topatch--> `setMinReduction(0.2)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (345(f=2.0), 346(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (345(f=2.0), )
----------Running generation: 174, population size: 1

***** Generation 174 : 0
**Parent Variant: [Variant id: 347, #gens: 671, #ops: 0, parent:-]

--Child created id: 348
--Creating new operations for variant [Variant id: 348, #gens: 671, #ops: 0, parent:347]
---analyzing modificationPoint position: 251
location: EmbeddedRungeKuttaIntegrator.java128
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMinReduction(0.2) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 348, #gens: 670, #ops: 1, parent:347] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 348
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-348/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(174): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMinReduction(0.2) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (348(f=1.0), 347(f=2.0), )
Selected to next generation: IDs2--> (348(f=1.0), )
----------Running generation: 175, population size: 1

***** Generation 175 : 0
**Parent Variant: [Variant id: 349, #gens: 671, #ops: 0, parent:-]

--Child created id: 350
--Creating new operations for variant [Variant id: 350, #gens: 671, #ops: 0, parent:349]
---analyzing modificationPoint position: 563
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L)
---analyzing modificationPoint position: 168
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  yTmp[j] = currentState[j] + (h * s)
---analyzing modificationPoint position: 40
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [g0Positive, increasing]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: increasing spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java303
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// force the sign to its value "just after the event" previousEventTime = t ` -topatch--> `g0Positive = increasing` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 303, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// force the sign to its value "just after the event" previousEventTime = t ` -topatch--> `g0Positive = increasing` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 350, #gens: 672, #ops: 1, parent:349] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 350
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-350/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(175): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// force the sign to its value "just after the event" previousEventTime = t ` -topatch--> `g0Positive = increasing` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (350(f=1.0), 349(f=2.0), )
Selected to next generation: IDs2--> (350(f=1.0), )
----------Running generation: 176, population size: 1

***** Generation 176 : 0
**Parent Variant: [Variant id: 351, #gens: 671, #ops: 0, parent:-]

--Child created id: 352
--Creating new operations for variant [Variant id: 352, #gens: 671, #ops: 0, parent:351]
---analyzing modificationPoint position: 657
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  b = b + d
---analyzing modificationPoint position: 149
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  final double dot2 = theta * (2 - (3 * theta))
---analyzing modificationPoint position: 363
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  yDotK = null
---analyzing modificationPoint position: 103
---modifPoint 3 not mutation generated in  double absYA = org.apache.commons.math.util.FastMath.abs(yA)
---analyzing modificationPoint position: 184
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 4 not mutation generated in  x[2] = getMax()
---analyzing modificationPoint position: 314
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 5 not mutation generated in  vecRelativeTolerance = null
---analyzing modificationPoint position: 523
location: FastMath.java920
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + tempA ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 352, #gens: 670, #ops: 1, parent:351] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 352, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(176): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + tempA ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (351(f=2.0), 352(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (351(f=2.0), )
----------Running generation: 177, population size: 1

***** Generation 177 : 0
**Parent Variant: [Variant id: 353, #gens: 671, #ops: 0, parent:-]

--Child created id: 354
--Creating new operations for variant [Variant id: 354, #gens: 671, #ops: 0, parent:353]
---analyzing modificationPoint position: 443
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: AbstractStepInterpolator.java415
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return interpolatedPrimaryState ` -topatch--> `// create the new independent instance return doCopy()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 415, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return interpolatedPrimaryState ` -topatch--> `// create the new independent instance return doCopy()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 354, #gens: 671, #ops: 1, parent:353] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 354, errors: [AbstractStepInterpolator.java:416: error: incompatible types: org.apache.commons.math.ode.sampling.StepInterpolator cannot be converted to double[]
		return doCopy();
		             ^]
Ingredient counter is Zero
---Undoing: gnrtn(177): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return interpolatedPrimaryState ` -topatch--> `// create the new independent instance return doCopy()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (353(f=2.0), 354(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (353(f=2.0), )
----------Running generation: 178, population size: 1

***** Generation 178 : 0
**Parent Variant: [Variant id: 355, #gens: 671, #ops: 0, parent:-]

--Child created id: 356
--Creating new operations for variant [Variant id: 356, #gens: 671, #ops: 0, parent:355]
---analyzing modificationPoint position: 39
---modifPoint 0 not mutation generated in  return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]
---analyzing modificationPoint position: 443
---modifPoint 1 not mutation generated in  return interpolatedPrimaryState
---analyzing modificationPoint position: 316
---modifPoint 2 not mutation generated in  double filteredH = h
---analyzing modificationPoint position: 318
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 3 not mutation generated in  if (interpolator.currentState != null) { 	final int dimension = currentState.length;  	yDotK = new d[...]
---analyzing modificationPoint position: 594
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 4 not mutation generated in  if ((x < 0) && (y != x)) { 	y--; }
---analyzing modificationPoint position: 661
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1132
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Extract the exponent */ int exp = ((int) (bits >> 52)) - 1023 ` -topatch--> `boolean negate = false` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1132, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Extract the exponent */ int exp = ((int) (bits >> 52)) - 1023 ` -topatch--> `boolean negate = false` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 356, #gens: 671, #ops: 1, parent:355] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 356, errors: [FastMath.java:1149: error: cannot find symbol
				exp--;
				^
  symbol:   variable exp
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1155: error: cannot find symbol
		if ((exp == (-1)) || (exp == 0)) {
		     ^
  symbol:   variable exp
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1155: error: cannot find symbol
		if ((exp == (-1)) || (exp == 0)) {
		                      ^
  symbol:   variable exp
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1293: error: cannot find symbol
		double a = org.apache.commons.math.util.FastMath.LN_2_A * exp;
		                                                          ^
  symbol:   variable exp
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1305: error: cannot find symbol
		c = a + (org.apache.commons.math.util.FastMath.LN_2_B * exp);
		                                                        ^
  symbol:   variable exp
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1306: error: cannot find symbol
		d = -((c - a) - (org.apache.commons.math.util.FastMath.LN_2_B * exp));
		                                                                ^
  symbol:   variable exp
  location: class org.apache.commons.math.util.FastMath, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(178): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Extract the exponent */ int exp = ((int) (bits >> 52)) - 1023 ` -topatch--> `boolean negate = false` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (355(f=2.0), 356(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (355(f=2.0), )
----------Running generation: 179, population size: 1

***** Generation 179 : 0
**Parent Variant: [Variant id: 357, #gens: 671, #ops: 0, parent:-]

--Child created id: 358
--Creating new operations for variant [Variant id: 358, #gens: 671, #ops: 0, parent:357]
---analyzing modificationPoint position: 177
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...]
---analyzing modificationPoint position: 68
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 1 not mutation generated in  previousEventTime = java.lang.Double.NaN
---analyzing modificationPoint position: 375
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [interpolatedTime, java.lang.Double.NaN]
--> var from patch: interpolatedTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java122
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = null ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 122, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = null ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 358, #gens: 672, #ops: 1, parent:357] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 358, errors: [AbstractStepInterpolator.java:649: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:649: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:651: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:651: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:652: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:652: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:652: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:652: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:652: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:652: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:653: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:653: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:653: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:653: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:653: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:653: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:654: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:654: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:655: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:655: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:656: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:657: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:657: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:655: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:658: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:658: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:658: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:659: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:659: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:660: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:660: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:660: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:660: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:660: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:672: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:672: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:676: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:676: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:680: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:680: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:685: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:685: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:690: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:690: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:692: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:692: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:694: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:694: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:694: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:694: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:696: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:696: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:707: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:707: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:707: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:707: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:707: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:707: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:709: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:709: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:709: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:712: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:712: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:714: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:714: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:716: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:716: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:716: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:718: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:718: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:718: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:753: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:753: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:756: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:756: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(179): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = null ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (357(f=2.0), 358(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (357(f=2.0), )
----------Running generation: 180, population size: 1

***** Generation 180 : 0
**Parent Variant: [Variant id: 359, #gens: 671, #ops: 0, parent:-]

--Child created id: 360
--Creating new operations for variant [Variant id: 360, #gens: 671, #ops: 0, parent:359]
---analyzing modificationPoint position: 238
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [t, equations]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java312
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double nextT = stepStart + scaledH ` -topatch--> `final boolean forward = t > equations.getTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 312, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double nextT = stepStart + scaledH ` -topatch--> `final boolean forward = t > equations.getTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 360, #gens: 671, #ops: 1, parent:359] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 360, errors: [EmbeddedRungeKuttaIntegrator.java:312: error: variable forward is already defined in method integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double)
				final double scaledH = stepSize * factor; 				final boolean forward = t > equations.getTime();
				                                          				              ^, EmbeddedRungeKuttaIntegrator.java:314: error: cannot find symbol
				final boolean nextIsLast = (forward) ? nextT >= t : nextT <= t;
				                                       ^
  symbol:   variable nextT
  location: class org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator, EmbeddedRungeKuttaIntegrator.java:314: error: cannot find symbol
				final boolean nextIsLast = (forward) ? nextT >= t : nextT <= t;
				                                                    ^
  symbol:   variable nextT
  location: class org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator]
Ingredient counter is Zero
---Undoing: gnrtn(180): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double nextT = stepStart + scaledH ` -topatch--> `final boolean forward = t > equations.getTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (359(f=2.0), 360(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (359(f=2.0), )
----------Running generation: 181, population size: 1

***** Generation 181 : 0
**Parent Variant: [Variant id: 361, #gens: 671, #ops: 0, parent:-]

--Child created id: 362
--Creating new operations for variant [Variant id: 362, #gens: 671, #ops: 0, parent:361]
---analyzing modificationPoint position: 262
Templates availables22
Attempts Base Ingredients  1 total 22
---modifPoint 0 not mutation generated in  stepSize = hNew
---analyzing modificationPoint position: 353
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [softCurrentTime, globalCurrentTime]
--> var from patch: softCurrentTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java258
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 258, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 362, #gens: 672, #ops: 1, parent:361] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 362, errors: [AbstractStepInterpolator.java:313: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:313: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:313: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:313: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:313: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:313: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:313: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:315: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:315: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:316: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:316: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:316: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:316: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:316: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:316: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:316: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:316: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:316: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:317: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:317: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:317: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:317: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:317: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:317: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:317: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:317: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:317: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:317: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:317: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:317: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:318: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:318: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:318: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:318: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:318: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:319: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:319: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:320: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:321: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:321: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:319: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:322: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:322: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:322: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:323: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:324: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:324: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:324: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:324: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:324: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:336: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;}
	    	^, AbstractStepInterpolator.java:336: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;}
	    	       ^, AbstractStepInterpolator.java:336: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;}
	    	                              ^, AbstractStepInterpolator.java:336: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;}
	    	                                                           ^, AbstractStepInterpolator.java:342: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() {
	    	^, AbstractStepInterpolator.java:342: error: ';' expected
	 */ 	public double getGlobalPreviousTime() {
	    	                                   ^, AbstractStepInterpolator.java:350: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() {
	    	^, AbstractStepInterpolator.java:350: error: ';' expected
	 */ 	public double getGlobalCurrentTime() {
	    	                                  ^, AbstractStepInterpolator.java:359: error: illegal start of expression
	 */ 	public double getPreviousTime() {
	    	^, AbstractStepInterpolator.java:359: error: ';' expected
	 */ 	public double getPreviousTime() {
	    	                             ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public double getCurrentTime() {
	    	^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public double getCurrentTime() {
	    	                            ^, AbstractStepInterpolator.java:374: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;
	    	^, AbstractStepInterpolator.java:374: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;
	    	                                 ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	       ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                               ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                                                 ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;
	    	^, AbstractStepInterpolator.java:385: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;
	    	                        ^, AbstractStepInterpolator.java:399: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:399: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:399: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:399: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	        ^, AbstractStepInterpolator.java:401: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	                                              ^, AbstractStepInterpolator.java:413: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:413: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	                                    ^, AbstractStepInterpolator.java:421: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:421: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(181): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (361(f=2.0), 362(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (361(f=2.0), )
----------Running generation: 182, population size: 1

***** Generation 182 : 0
**Parent Variant: [Variant id: 363, #gens: 671, #ops: 0, parent:-]

--Child created id: 364
--Creating new operations for variant [Variant id: 364, #gens: 671, #ops: 0, parent:363]
---analyzing modificationPoint position: 459
location: EquationsMapper.java80
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(complete, firstIndex, equationData, 0, dimension) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 364, #gens: 670, #ops: 1, parent:363] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 364
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-364/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(182): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(complete, firstIndex, equationData, 0, dimension) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (364(f=1.0), 363(f=2.0), )
Selected to next generation: IDs2--> (364(f=1.0), )
----------Running generation: 183, population size: 1

***** Generation 183 : 0
**Parent Variant: [Variant id: 365, #gens: 671, #ops: 0, parent:-]

--Child created id: 366
--Creating new operations for variant [Variant id: 366, #gens: 671, #ops: 0, parent:365]
---analyzing modificationPoint position: 386
---modifPoint 0 not mutation generated in  return softCurrentTime
---analyzing modificationPoint position: 363
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  yDotK = null
---analyzing modificationPoint position: 140
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 2 not mutation generated in  v[2][i] = (v[0][i] - v[1][i]) - yDotK[12][i]
---analyzing modificationPoint position: 399
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [interpolatedPrimaryState]
--> var from patch: interpolatedPrimaryState spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java350
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return globalCurrentTime ` -topatch--> `return interpolatedPrimaryState` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 350, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return globalCurrentTime ` -topatch--> `return interpolatedPrimaryState` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 366, #gens: 671, #ops: 1, parent:365] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 366, errors: [AbstractStepInterpolator.java:416: error: incompatible types: double[] cannot be converted to double
		return interpolatedPrimaryState;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(183): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return globalCurrentTime ` -topatch--> `return interpolatedPrimaryState` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (365(f=2.0), 366(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (365(f=2.0), )
----------Running generation: 184, population size: 1

***** Generation 184 : 0
**Parent Variant: [Variant id: 367, #gens: 671, #ops: 0, parent:-]

--Child created id: 368
--Creating new operations for variant [Variant id: 368, #gens: 671, #ops: 0, parent:367]
---analyzing modificationPoint position: 450
Templates availables55
Attempts Base Ingredients  1 total 55
vars from patch [components]
--> var from patch: components spoon.support.reflect.code.CtFieldReadImpl
location: ExpandableStatefulODE.java79
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.Secondar[...] ` -topatch--> `final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 79, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.Secondar[...] ` -topatch--> `final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 368, #gens: 672, #ops: 1, parent:367] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 368, errors: [ExpandableStatefulODE.java:177: error: illegal start of expression
	 * Get the current time derivative of the complete state vector.
	 ^, ExpandableStatefulODE.java:177: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	      ^, ExpandableStatefulODE.java:177: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                  ^, ExpandableStatefulODE.java:177: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                  ^, ExpandableStatefulODE.java:177: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                         ^, ExpandableStatefulODE.java:177: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                                        ^, ExpandableStatefulODE.java:177: error: <identifier> expected
	 * Get the current time derivative of the complete state vector.
	                                                                ^, ExpandableStatefulODE.java:179: error: illegal start of expression
	 * @param t
	 ^, ExpandableStatefulODE.java:179: error: illegal start of expression
	 * @param t
	   ^, ExpandableStatefulODE.java:180: error: not a statement
	 * 		current value of the independent <I>time</I> variable
	 ^, ExpandableStatefulODE.java:180: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		       ^, ExpandableStatefulODE.java:180: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		                ^, ExpandableStatefulODE.java:180: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		                                ^, ExpandableStatefulODE.java:180: error: illegal start of expression
	 * 		current value of the independent <I>time</I> variable
	   		                                    ^, ExpandableStatefulODE.java:180: error: illegal start of type
	 * 		current value of the independent <I>time</I> variable
	   		                                         ^, ExpandableStatefulODE.java:180: error: illegal start of expression
	 * 		current value of the independent <I>time</I> variable
	   		                                          ^, ExpandableStatefulODE.java:181: error: illegal start of expression
	 * @param y
	   ^, ExpandableStatefulODE.java:180: error: not a statement
	 * 		current value of the independent <I>time</I> variable
	   		                                           ^, ExpandableStatefulODE.java:182: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		     ^, ExpandableStatefulODE.java:182: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                    ^, ExpandableStatefulODE.java:182: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                  ^, ExpandableStatefulODE.java:182: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                         ^, ExpandableStatefulODE.java:182: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                                        ^, ExpandableStatefulODE.java:183: error: illegal start of expression
	 * @param yDot
	   ^, ExpandableStatefulODE.java:184: error: not a statement
	 * 		placeholder array where to put the time derivative of the complete state vector
	 ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		           ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                       ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                              ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                       ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                     ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                                  ^, ExpandableStatefulODE.java:184: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                                               ^, ExpandableStatefulODE.java:185: error: illegal start of expression
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	^, ExpandableStatefulODE.java:185: error: illegal start of expression
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	       ^, ExpandableStatefulODE.java:185: error: ';' expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                              ^, ExpandableStatefulODE.java:185: error: <identifier> expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                              ^, ExpandableStatefulODE.java:185: error: <identifier> expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                                                ^, ExpandableStatefulODE.java:185: error: ';' expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                                                                    ^, ExpandableStatefulODE.java:192: error: illegal start of expression
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	^, ExpandableStatefulODE.java:192: error: ';' expected
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	                                ^, ExpandableStatefulODE.java:192: error: ';' expected
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	                                                                                               ^, ExpandableStatefulODE.java:193: error: illegal start of expression
	 * Get an equations mapper for the primary equations set.
	 ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	      ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                   ^, ExpandableStatefulODE.java:193: error: not a statement
	 * Get an equations mapper for the primary equations set.
	                    ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                          ^, ExpandableStatefulODE.java:193: error: '(' expected
	 * Get an equations mapper for the primary equations set.
	                              ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                                          ^, ExpandableStatefulODE.java:193: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                                                    ^, ExpandableStatefulODE.java:193: error: <identifier> expected
	 * Get an equations mapper for the primary equations set.
	                                                         ^, ExpandableStatefulODE.java:195: error: illegal start of expression
	 * @return mapper for the primary set
	 ^, ExpandableStatefulODE.java:195: error: <identifier> expected
	 * @return mapper for the primary set
	    ^, ExpandableStatefulODE.java:195: error: ')' expected
	 * @return mapper for the primary set
	                 ^, ExpandableStatefulODE.java:195: error: ';' expected
	 * @return mapper for the primary set
	                                 ^, ExpandableStatefulODE.java:195: error: variable declaration not allowed here
	 * @return mapper for the primary set
	                          ^, ExpandableStatefulODE.java:196: error: illegal character: '#'
	 * @see #getSecondaryMappers()
	        ^, ExpandableStatefulODE.java:196: error: not a statement
	 * @see #getSecondaryMappers()
	 ^, ExpandableStatefulODE.java:196: error: ';' expected
	 * @see #getSecondaryMappers()
	         ^, ExpandableStatefulODE.java:196: error: -> expected
	 * @see #getSecondaryMappers()
	                              ^, ExpandableStatefulODE.java:197: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	 ^, ExpandableStatefulODE.java:197: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	    	^, ExpandableStatefulODE.java:196: error: not a statement
	 * @see #getSecondaryMappers()
	                            ^, ExpandableStatefulODE.java:197: error: ';' expected
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	    	                                                                   ^, ExpandableStatefulODE.java:202: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper[] getSecondaryMappers() { 		final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.EquationsMapper[components.size()]; 		for (int i = 0; i < mappers.length; ++i) { 			mappers[i] = components.get(i).mapper;} 		return mappers;} 	/**
	    	^, ExpandableStatefulODE.java:202: error: ';' expected
	 */ 	public org.apache.commons.math.ode.EquationsMapper[] getSecondaryMappers() { 		final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.EquationsMapper[components.size()]; 		for (int i = 0; i < mappers.length; ++i) { 			mappers[i] = components.get(i).mapper;} 		return mappers;} 	/**
	    	                                                                        ^, ExpandableStatefulODE.java:207: error: illegal start of expression
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	^, ExpandableStatefulODE.java:207: error: illegal start of expression
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	       ^, ExpandableStatefulODE.java:207: error: ';' expected
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	                   ^, ExpandableStatefulODE.java:207: error: ';' expected
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	                                     ^, ExpandableStatefulODE.java:211: error: illegal start of expression
	 */ 	public double getTime() { 		return time;} 	/**
	    	^, ExpandableStatefulODE.java:211: error: ';' expected
	 */ 	public double getTime() { 		return time;} 	/**
	    	                     ^, ExpandableStatefulODE.java:219: error: illegal start of expression
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	^, ExpandableStatefulODE.java:219: error: illegal start of expression
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	       ^, ExpandableStatefulODE.java:219: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                           ^, ExpandableStatefulODE.java:219: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                       ^, ExpandableStatefulODE.java:219: error: not a statement
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                 ^, ExpandableStatefulODE.java:219: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                                            ^, ExpandableStatefulODE.java:221: error: illegal start of expression
	 * Get primary part of the current state.
	 ^, ExpandableStatefulODE.java:221: error: ';' expected
	 * Get primary part of the current state.
	      ^, ExpandableStatefulODE.java:221: error: ';' expected
	 * Get primary part of the current state.
	                   ^, ExpandableStatefulODE.java:221: error: ';' expected
	 * Get primary part of the current state.
	                          ^, ExpandableStatefulODE.java:221: error: ';' expected
	 * Get primary part of the current state.
	                                        ^, ExpandableStatefulODE.java:223: error: <identifier> expected
	 * @return primary part of the current state
	    ^, ExpandableStatefulODE.java:223: error: ';' expected
	 * @return primary part of the current state
	                  ^, ExpandableStatefulODE.java:223: error: ';' expected
	 * @return primary part of the current state
	                          ^, ExpandableStatefulODE.java:223: error: ';' expected
	 * @return primary part of the current state
	                                      ^, ExpandableStatefulODE.java:224: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	  ^, ExpandableStatefulODE.java:224: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	^, ExpandableStatefulODE.java:224: error: ';' expected
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	                               ^, ExpandableStatefulODE.java:228: error: illegal start of expression
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	^, ExpandableStatefulODE.java:228: error: ';' expected
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	                                  ^, ExpandableStatefulODE.java:238: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	^, ExpandableStatefulODE.java:238: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	       ^, ExpandableStatefulODE.java:238: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                             ^, ExpandableStatefulODE.java:238: error: <identifier> expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                              ^, ExpandableStatefulODE.java:238: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                            ^, ExpandableStatefulODE.java:238: error: not a statement
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                      ^, ExpandableStatefulODE.java:238: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                                                 ^, ExpandableStatefulODE.java:240: error: illegal start of expression
	 * Get secondary part of the current state.
	 ^, ExpandableStatefulODE.java:240: error: ';' expected
	 * Get secondary part of the current state.
	      ^]
Ingredient counter is Zero
---Undoing: gnrtn(184): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.Secondar[...] ` -topatch--> `final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (367(f=2.0), 368(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (367(f=2.0), )
----------Running generation: 185, population size: 1

***** Generation 185 : 0
**Parent Variant: [Variant id: 369, #gens: 671, #ops: 0, parent:-]

--Child created id: 370
--Creating new operations for variant [Variant id: 370, #gens: 671, #ops: 0, parent:369]
---analyzing modificationPoint position: 299
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [equations, y]
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (firstTime || (!fsal)) { 	// first stage 	computeDerivatives(stepStart, y, yDotK[0]); } ` -topatch--> `equations.setCompleteState(y)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 233, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (firstTime || (!fsal)) { 	// first stage 	computeDerivatives(stepStart, y, yDotK[0]); } ` -topatch--> `equations.setCompleteState(y)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 370, #gens: 672, #ops: 1, parent:369] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 370, errors: [EmbeddedRungeKuttaIntegrator.java:339: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;
	    	^, EmbeddedRungeKuttaIntegrator.java:339: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:347: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	^, EmbeddedRungeKuttaIntegrator.java:347: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:347: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                           ^, EmbeddedRungeKuttaIntegrator.java:347: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                                                     ^, EmbeddedRungeKuttaIntegrator.java:353: error: illegal start of expression
	 */ 	public double getMaxGrowth() { 		return maxGrowth;
	    	^, EmbeddedRungeKuttaIntegrator.java:353: error: ';' expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;
	    	                          ^, EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	^, EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                        ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                                               ^, EmbeddedRungeKuttaIntegrator.java:375: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	^, EmbeddedRungeKuttaIntegrator.java:375: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                       ^, EmbeddedRungeKuttaIntegrator.java:375: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                         ^, EmbeddedRungeKuttaIntegrator.java:375: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                 ^, EmbeddedRungeKuttaIntegrator.java:375: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                     ^, EmbeddedRungeKuttaIntegrator.java:375: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                           ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                            ^, EmbeddedRungeKuttaIntegrator.java:375: error: reached end of file while parsing
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(185): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (firstTime || (!fsal)) { 	// first stage 	computeDerivatives(stepStart, y, yDotK[0]); } ` -topatch--> `equations.setCompleteState(y)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (369(f=2.0), 370(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (369(f=2.0), )
----------Running generation: 186, population size: 1

***** Generation 186 : 0
**Parent Variant: [Variant id: 371, #gens: 671, #ops: 0, parent:-]

--Child created id: 372
--Creating new operations for variant [Variant id: 372, #gens: 671, #ops: 0, parent:371]
---analyzing modificationPoint position: 98
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)[...]
---analyzing modificationPoint position: 151
---modifPoint 1 not mutation generated in  final double dot3 = twoTheta * (1 + (theta * (twoTheta - 3)))
---analyzing modificationPoint position: 649
location: FastMath.java1307
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 372, #gens: 670, #ops: 1, parent:371] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 372, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(186): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (371(f=2.0), 372(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (371(f=2.0), )
----------Running generation: 187, population size: 1

***** Generation 187 : 0
**Parent Variant: [Variant id: 373, #gens: 671, #ops: 0, parent:-]

--Child created id: 374
--Creating new operations for variant [Variant id: 374, #gens: 671, #ops: 0, parent:373]
---analyzing modificationPoint position: 265
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  double sum = a[k - 1][0] * yDotK[0][j]
---analyzing modificationPoint position: 167
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  s = ((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K14_01 * yDotK[0][[...]
---analyzing modificationPoint position: 552
---modifPoint 2 not mutation generated in  // result = result + result * z; return result
---analyzing modificationPoint position: 56
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 3 not mutation generated in  isLastStep = isLastStep || state.stop()
---analyzing modificationPoint position: 280
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [mainSetDimension]
--> var from patch: mainSetDimension spoon.support.reflect.code.CtFieldReadImpl
location: EmbeddedRungeKuttaIntegrator.java198
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean forward = t > equations.getTime() ` -topatch--> `final double[] scale = new double[mainSetDimension]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 198, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean forward = t > equations.getTime() ` -topatch--> `final double[] scale = new double[mainSetDimension]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 374, #gens: 672, #ops: 1, parent:373] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 374, errors: [EmbeddedRungeKuttaIntegrator.java:255: error: <identifier> expected
				stepSize = hNew;
				        ^, EmbeddedRungeKuttaIntegrator.java:258: error: illegal start of type
				for (int k = 1; k < stages; ++k) {
				^, EmbeddedRungeKuttaIntegrator.java:258: error: ')' expected
				for (int k = 1; k < stages; ++k) {
				          ^, EmbeddedRungeKuttaIntegrator.java:258: error: illegal start of type
				for (int k = 1; k < stages; ++k) {
				             ^, EmbeddedRungeKuttaIntegrator.java:258: error: <identifier> expected
				for (int k = 1; k < stages; ++k) {
				              ^, EmbeddedRungeKuttaIntegrator.java:258: error: ';' expected
				for (int k = 1; k < stages; ++k) {
				               ^, EmbeddedRungeKuttaIntegrator.java:258: error: > expected
				for (int k = 1; k < stages; ++k) {
				                          ^, EmbeddedRungeKuttaIntegrator.java:258: error: <identifier> expected
				for (int k = 1; k < stages; ++k) {
				                           ^, EmbeddedRungeKuttaIntegrator.java:258: error: '(' expected
				for (int k = 1; k < stages; ++k) {
				                              ^, EmbeddedRungeKuttaIntegrator.java:258: error: illegal start of type
				for (int k = 1; k < stages; ++k) {
				                               ^, EmbeddedRungeKuttaIntegrator.java:258: error: <identifier> expected
				for (int k = 1; k < stages; ++k) {
				                                ^, EmbeddedRungeKuttaIntegrator.java:258: error: ';' expected
				for (int k = 1; k < stages; ++k) {
				                                  ^, EmbeddedRungeKuttaIntegrator.java:260: error: illegal start of type
					for (int j = 0; j < y0.length; ++j) {
					    ^, EmbeddedRungeKuttaIntegrator.java:260: error: <identifier> expected
					for (int j = 0; j < y0.length; ++j) {
					     ^, EmbeddedRungeKuttaIntegrator.java:260: error: ';' expected
					for (int j = 0; j < y0.length; ++j) {
					        ^, EmbeddedRungeKuttaIntegrator.java:260: error: illegal start of type
					for (int j = 0; j < y0.length; ++j) {
					           ^, EmbeddedRungeKuttaIntegrator.java:260: error: <identifier> expected
					for (int j = 0; j < y0.length; ++j) {
					            ^, EmbeddedRungeKuttaIntegrator.java:260: error: > expected
					for (int j = 0; j < y0.length; ++j) {
					                             ^, EmbeddedRungeKuttaIntegrator.java:260: error: ';' expected
					for (int j = 0; j < y0.length; ++j) {
					                              ^, EmbeddedRungeKuttaIntegrator.java:260: error: <identifier> expected
					for (int j = 0; j < y0.length; ++j) {
					                                  ^, EmbeddedRungeKuttaIntegrator.java:268: error: invalid method declaration; return type required
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					^, EmbeddedRungeKuttaIntegrator.java:268: error: <identifier> expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                            ^, EmbeddedRungeKuttaIntegrator.java:268: error: ';' expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                              ^, EmbeddedRungeKuttaIntegrator.java:268: error: ']' expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                  ^, EmbeddedRungeKuttaIntegrator.java:268: error: ';' expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                   ^, EmbeddedRungeKuttaIntegrator.java:268: error: <identifier> expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                                   ^, EmbeddedRungeKuttaIntegrator.java:268: error: illegal start of type
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                                    ^, EmbeddedRungeKuttaIntegrator.java:268: error: ']' expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                                                  ^, EmbeddedRungeKuttaIntegrator.java:268: error: illegal start of type
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                                                   ^, EmbeddedRungeKuttaIntegrator.java:268: error: <identifier> expected
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]);
					                                                                    ^, EmbeddedRungeKuttaIntegrator.java:273: error: class, interface, or enum expected
				for (int j = 0; j < y0.length; ++j) {
				^, EmbeddedRungeKuttaIntegrator.java:273: error: class, interface, or enum expected
				for (int j = 0; j < y0.length; ++j) {
				                ^, EmbeddedRungeKuttaIntegrator.java:273: error: class, interface, or enum expected
				for (int j = 0; j < y0.length; ++j) {
				                               ^, EmbeddedRungeKuttaIntegrator.java:275: error: class, interface, or enum expected
					for (int l = 1; l < stages; ++l) {
					^, EmbeddedRungeKuttaIntegrator.java:275: error: class, interface, or enum expected
					for (int l = 1; l < stages; ++l) {
					                ^, EmbeddedRungeKuttaIntegrator.java:275: error: class, interface, or enum expected
					for (int l = 1; l < stages; ++l) {
					                            ^, EmbeddedRungeKuttaIntegrator.java:277: error: class, interface, or enum expected
					}
					^, EmbeddedRungeKuttaIntegrator.java:279: error: class, interface, or enum expected
				}
				^, EmbeddedRungeKuttaIntegrator.java:283: error: class, interface, or enum expected
				if (error >= 1.0) {
				^, EmbeddedRungeKuttaIntegrator.java:285: error: class, interface, or enum expected
					final double factor = 
					      ^, EmbeddedRungeKuttaIntegrator.java:288: error: class, interface, or enum expected
					hNew = filterStep(stepSize * factor, forward, false);
					^, EmbeddedRungeKuttaIntegrator.java:289: error: class, interface, or enum expected
				}
				^, EmbeddedRungeKuttaIntegrator.java:295: error: class, interface, or enum expected
			java.lang.System.arraycopy(yTmp, 0, y, 0, y0.length);
			^, EmbeddedRungeKuttaIntegrator.java:296: error: class, interface, or enum expected
			java.lang.System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length);
			^, EmbeddedRungeKuttaIntegrator.java:297: error: class, interface, or enum expected
			stepStart = acceptStep(interpolator, y, yDotTmp, t);
			^, EmbeddedRungeKuttaIntegrator.java:299: error: class, interface, or enum expected
			if (!isLastStep) {
			^, EmbeddedRungeKuttaIntegrator.java:304: error: class, interface, or enum expected
				if (fsal) {
				^, EmbeddedRungeKuttaIntegrator.java:307: error: class, interface, or enum expected
				}
				^, EmbeddedRungeKuttaIntegrator.java:310: error: class, interface, or enum expected
				final double factor = 
				      ^, EmbeddedRungeKuttaIntegrator.java:312: error: class, interface, or enum expected
				final double scaledH = stepSize * factor;
				      ^, EmbeddedRungeKuttaIntegrator.java:313: error: class, interface, or enum expected
				final double nextT = stepStart + scaledH;
				      ^, EmbeddedRungeKuttaIntegrator.java:314: error: class, interface, or enum expected
				final boolean nextIsLast = (forward) ? nextT >= t : nextT <= t;
				      ^, EmbeddedRungeKuttaIntegrator.java:315: error: class, interface, or enum expected
				hNew = filterStep(scaledH, forward, nextIsLast);
				^, EmbeddedRungeKuttaIntegrator.java:317: error: class, interface, or enum expected
				final double filteredNextT = stepStart + hNew;
				      ^, EmbeddedRungeKuttaIntegrator.java:318: error: class, interface, or enum expected
				final boolean filteredNextIsLast = (forward) ? filteredNextT >= t : filteredNextT <= t;
				      ^, EmbeddedRungeKuttaIntegrator.java:319: error: class, interface, or enum expected
				if (filteredNextIsLast) {
				^, EmbeddedRungeKuttaIntegrator.java:321: error: class, interface, or enum expected
				}
				^, EmbeddedRungeKuttaIntegrator.java:328: error: class, interface, or enum expected
		equations.setTime(stepStart);
		^, EmbeddedRungeKuttaIntegrator.java:329: error: class, interface, or enum expected
		equations.setCompleteState(y);
		^, EmbeddedRungeKuttaIntegrator.java:331: error: class, interface, or enum expected
		resetInternalState();
		^, EmbeddedRungeKuttaIntegrator.java:333: error: class, interface, or enum expected
	}
	^, EmbeddedRungeKuttaIntegrator.java:339: error: class, interface, or enum expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	       ^, EmbeddedRungeKuttaIntegrator.java:340: error: class, interface, or enum expected
	}
	^, EmbeddedRungeKuttaIntegrator.java:347: error: class, interface, or enum expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:347: error: class, interface, or enum expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                                  ^, EmbeddedRungeKuttaIntegrator.java:347: error: class, interface, or enum expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                                                         		                                 ^, EmbeddedRungeKuttaIntegrator.java:353: error: class, interface, or enum expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;
	    	       ^, EmbeddedRungeKuttaIntegrator.java:354: error: class, interface, or enum expected
	}
	^, EmbeddedRungeKuttaIntegrator.java:361: error: class, interface, or enum expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:361: error: class, interface, or enum expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                               ^, EmbeddedRungeKuttaIntegrator.java:361: error: class, interface, or enum expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                                                   		                           ^, EmbeddedRungeKuttaIntegrator.java:375: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(187): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean forward = t > equations.getTime() ` -topatch--> `final double[] scale = new double[mainSetDimension]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (373(f=2.0), 374(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (373(f=2.0), )
----------Running generation: 188, population size: 1

***** Generation 188 : 0
**Parent Variant: [Variant id: 375, #gens: 671, #ops: 0, parent:-]

--Child created id: 376
--Creating new operations for variant [Variant id: 376, #gens: 671, #ops: 0, parent:375]
---analyzing modificationPoint position: 326
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch [stepSize, minStep, maxStep]
--> var from patch: stepSize spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: minStep spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: maxStep spoon.support.reflect.code.CtFieldReadImpl
location: AdaptiveStepsizeIntegrator.java225
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 225, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 376, #gens: 672, #ops: 1, parent:375] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 376, errors: [AdaptiveStepsizeIntegrator.java:378: error: illegal start of expression
	 * Filter the integration step.
	 ^, AdaptiveStepsizeIntegrator.java:378: error: ';' expected
	 * Filter the integration step.
	         ^, AdaptiveStepsizeIntegrator.java:378: error: ';' expected
	 * Filter the integration step.
	                         ^, AdaptiveStepsizeIntegrator.java:378: error: <identifier> expected
	 * Filter the integration step.
	                               ^, AdaptiveStepsizeIntegrator.java:380: error: illegal start of expression
	 * @param h
	 ^, AdaptiveStepsizeIntegrator.java:380: error: illegal start of expression
	 * @param h
	   ^, AdaptiveStepsizeIntegrator.java:381: error: not a statement
	 * 		signed step
	 ^, AdaptiveStepsizeIntegrator.java:381: error: ';' expected
	 * 		signed step
	   		      ^, AdaptiveStepsizeIntegrator.java:382: error: illegal start of expression
	 * @param forward
	   ^, AdaptiveStepsizeIntegrator.java:383: error: not a statement
	 * 		forward integration indicator
	 ^, AdaptiveStepsizeIntegrator.java:383: error: ';' expected
	 * 		forward integration indicator
	   		       ^, AdaptiveStepsizeIntegrator.java:383: error: ';' expected
	 * 		forward integration indicator
	   		                             ^, AdaptiveStepsizeIntegrator.java:384: error: <identifier> expected
	 * @param acceptSmall
	                     ^, AdaptiveStepsizeIntegrator.java:385: error: '(' expected
	 * 		if true, steps smaller than the minimal value
	   		  ^, AdaptiveStepsizeIntegrator.java:385: error: ')' expected
	 * 		if true, steps smaller than the minimal value
	   		       ^, AdaptiveStepsizeIntegrator.java:385: error: ';' expected
	 * 		if true, steps smaller than the minimal value
	   		              ^, AdaptiveStepsizeIntegrator.java:385: error: variable declaration not allowed here
	 * 		if true, steps smaller than the minimal value
	   		         ^, AdaptiveStepsizeIntegrator.java:385: error: ';' expected
	 * 		if true, steps smaller than the minimal value
	   		                           ^, AdaptiveStepsizeIntegrator.java:385: error: ';' expected
	 * 		if true, steps smaller than the minimal value
	   		                                       ^, AdaptiveStepsizeIntegrator.java:386: error: not a statement
	 * 		are silently increased up to this value, if false such small
	 ^, AdaptiveStepsizeIntegrator.java:386: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		   ^, AdaptiveStepsizeIntegrator.java:386: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                      ^, AdaptiveStepsizeIntegrator.java:386: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                            ^, AdaptiveStepsizeIntegrator.java:386: error: not a statement
	 * 		are silently increased up to this value, if false such small
	   		                                  ^, AdaptiveStepsizeIntegrator.java:386: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                                       ^, AdaptiveStepsizeIntegrator.java:386: error: '(' expected
	 * 		are silently increased up to this value, if false such small
	   		                                           ^, AdaptiveStepsizeIntegrator.java:386: error: ')' expected
	 * 		are silently increased up to this value, if false such small
	   		                                                 ^, AdaptiveStepsizeIntegrator.java:386: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                                                            ^, AdaptiveStepsizeIntegrator.java:386: error: variable declaration not allowed here
	 * 		are silently increased up to this value, if false such small
	   		                                                       ^, AdaptiveStepsizeIntegrator.java:387: error: ';' expected
	 * 		steps generate an exception
	   		              ^, AdaptiveStepsizeIntegrator.java:387: error: ';' expected
	 * 		steps generate an exception
	   		                           ^, AdaptiveStepsizeIntegrator.java:388: error: <identifier> expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	    ^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	            ^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                ^, AdaptiveStepsizeIntegrator.java:388: error: ')' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                        ^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                    ^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                 ^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                           ^, AdaptiveStepsizeIntegrator.java:388: error: not a statement
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                            ^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                                 ^, AdaptiveStepsizeIntegrator.java:389: error: <identifier> expected
	 * @exception NumberIsTooSmallException
	                                       ^, AdaptiveStepsizeIntegrator.java:390: error: '(' expected
	 * 		if the step is too small and acceptSmall is false
	   		  ^, AdaptiveStepsizeIntegrator.java:390: error: ')' expected
	 * 		if the step is too small and acceptSmall is false
	   		      ^, AdaptiveStepsizeIntegrator.java:390: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		              ^, AdaptiveStepsizeIntegrator.java:390: error: variable declaration not allowed here
	 * 		if the step is too small and acceptSmall is false
	   		            ^, AdaptiveStepsizeIntegrator.java:390: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		                        ^, AdaptiveStepsizeIntegrator.java:390: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		                                        ^, AdaptiveStepsizeIntegrator.java:390: error: not a statement
	 * 		if the step is too small and acceptSmall is false
	   		                                         ^, AdaptiveStepsizeIntegrator.java:390: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		                                           ^, AdaptiveStepsizeIntegrator.java:391: error: illegal start of expression
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	^, AdaptiveStepsizeIntegrator.java:391: error: ';' expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                           ^, AdaptiveStepsizeIntegrator.java:391: error: <identifier> expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                           ^, AdaptiveStepsizeIntegrator.java:391: error: <identifier> expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                  ^, AdaptiveStepsizeIntegrator.java:391: error: ';' expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                                            ^, AdaptiveStepsizeIntegrator.java:391: error: not a statement
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                                                                                      ^, AdaptiveStepsizeIntegrator.java:391: error: ';' expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                                                                                                                ^, AdaptiveStepsizeIntegrator.java:393: error: illegal start of expression
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	^, AdaptiveStepsizeIntegrator.java:393: error: class, interface, or enum expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                ^, AdaptiveStepsizeIntegrator.java:393: error: ';' expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                              ^, AdaptiveStepsizeIntegrator.java:393: error: <identifier> expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                           ^, AdaptiveStepsizeIntegrator.java:393: error: not a statement
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                   ^, AdaptiveStepsizeIntegrator.java:393: error: ';' expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                    ^, AdaptiveStepsizeIntegrator.java:393: error: not a statement
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                                                              ^, AdaptiveStepsizeIntegrator.java:393: error: ';' expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                                                                                        ^, AdaptiveStepsizeIntegrator.java:393: error: not a statement
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                                                                                                                           ^, AdaptiveStepsizeIntegrator.java:395: error: ';' expected
	 */ 	@java.lang.Override 	public double getCurrentStepStart() { 		return stepStart;} 	/**
	    	                    	                                 ^, AdaptiveStepsizeIntegrator.java:397: error: illegal start of expression
	 */ 	protected void resetInternalState() { 		stepStart = java.lang.Double.NaN; 		stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep);} 	/**
	    	^, AdaptiveStepsizeIntegrator.java:397: error: illegal start of expression
	 */ 	protected void resetInternalState() { 		stepStart = java.lang.Double.NaN; 		stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep);} 	/**
	    	          ^, AdaptiveStepsizeIntegrator.java:397: error: ';' expected
	 */ 	protected void resetInternalState() { 		stepStart = java.lang.Double.NaN; 		stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep);} 	/**
	    	                                 ^, AdaptiveStepsizeIntegrator.java:401: error: illegal start of expression
	 */ 	public double getMinStep() { 		return minStep;} 	/**
	    	^, AdaptiveStepsizeIntegrator.java:401: error: ';' expected
	 */ 	public double getMinStep() { 		return minStep;} 	/**
	    	                        ^, AdaptiveStepsizeIntegrator.java:405: error: illegal start of expression
	 */ 	public double getMaxStep() { 		return maxStep;}}
	    	^, AdaptiveStepsizeIntegrator.java:405: error: ';' expected
	 */ 	public double getMaxStep() { 		return maxStep;}}
	    	                        ^, AdaptiveStepsizeIntegrator.java:405: error: reached end of file while parsing
	 */ 	public double getMaxStep() { 		return maxStep;}}
	    	                             		                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(188): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (375(f=2.0), 376(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (375(f=2.0), )
----------Running generation: 189, population size: 1

***** Generation 189 : 0
**Parent Variant: [Variant id: 377, #gens: 671, #ops: 0, parent:-]

--Child created id: 378
--Creating new operations for variant [Variant id: 378, #gens: 671, #ops: 0, parent:377]
---analyzing modificationPoint position: 559
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1222
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ab = epsilon - aa ` -topatch--> `// cosh[z] = (exp(z) + exp(-z))/2  // for numbers with magnitude 20 or so, // exp(-z) can be ignored[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1222, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ab = epsilon - aa ` -topatch--> `// cosh[z] = (exp(z) + exp(-z))/2  // for numbers with magnitude 20 or so, // exp(-z) can be ignored[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 378, #gens: 672, #ops: 1, parent:377] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 378, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(189): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ab = epsilon - aa ` -topatch--> `// cosh[z] = (exp(z) + exp(-z))/2  // for numbers with magnitude 20 or so, // exp(-z) can be ignored[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (377(f=2.0), 378(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (377(f=2.0), )
----------Running generation: 190, population size: 1

***** Generation 190 : 0
**Parent Variant: [Variant id: 379, #gens: 671, #ops: 0, parent:-]

--Child created id: 380
--Creating new operations for variant [Variant id: 380, #gens: 671, #ops: 0, parent:379]
---analyzing modificationPoint position: 527
location: FastMath.java1503
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.NEGATIVE_INFINITY) {  	if ((x * x) == 1.0) { 		return java.lang.Double.NaN[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 380, #gens: 670, #ops: 1, parent:379] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 380, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(190): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.NEGATIVE_INFINITY) {  	if ((x * x) == 1.0) { 		return java.lang.Double.NaN[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (379(f=2.0), 380(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (379(f=2.0), )
----------Running generation: 191, population size: 1

***** Generation 191 : 0
**Parent Variant: [Variant id: 381, #gens: 671, #ops: 0, parent:-]

--Child created id: 382
--Creating new operations for variant [Variant id: 382, #gens: 671, #ops: 0, parent:381]
---analyzing modificationPoint position: 256
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [stepStart, y, yDotK]
--> var from patch: stepStart spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yDotK spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java235
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// first stage computeDerivatives(stepStart, y, yDotK[0]) ` -topatch--> `// first stage computeDerivatives(stepStart, y, yDotK[0])` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 235, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// first stage computeDerivatives(stepStart, y, yDotK[0]) ` -topatch--> `// first stage computeDerivatives(stepStart, y, yDotK[0])` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 382, #gens: 671, #ops: 1, parent:381] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 382
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-382/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(191): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// first stage computeDerivatives(stepStart, y, yDotK[0]) ` -topatch--> `// first stage computeDerivatives(stepStart, y, yDotK[0])` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (382(f=1.0), 381(f=2.0), )
Selected to next generation: IDs2--> (382(f=1.0), )
----------Running generation: 192, population size: 1

***** Generation 192 : 0
**Parent Variant: [Variant id: 383, #gens: 671, #ops: 0, parent:-]

--Child created id: 384
--Creating new operations for variant [Variant id: 384, #gens: 671, #ops: 0, parent:383]
---analyzing modificationPoint position: 93
location: EventState.java274
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no event during the whole step pendingEvent = false ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 384, #gens: 670, #ops: 1, parent:383] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 384
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-384/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(192): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no event during the whole step pendingEvent = false ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (384(f=1.0), 383(f=2.0), )
Selected to next generation: IDs2--> (384(f=1.0), )
----------Running generation: 193, population size: 1

***** Generation 193 : 0
**Parent Variant: [Variant id: 385, #gens: 671, #ops: 0, parent:-]

--Child created id: 386
--Creating new operations for variant [Variant id: 386, #gens: 671, #ops: 0, parent:385]
---analyzing modificationPoint position: 49
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [handler]
--> var from patch: handler spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java225
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `return handler` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 225, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `return handler` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 386, #gens: 672, #ops: 1, parent:385] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 386, errors: [EventState.java:225: error: incompatible types: org.apache.commons.math.ode.events.EventHandler cannot be converted to boolean
				final double root; 				return handler;
				                   				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(193): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `return handler` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (385(f=2.0), 386(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (385(f=2.0), )
----------Running generation: 194, population size: 1

***** Generation 194 : 0
**Parent Variant: [Variant id: 387, #gens: 671, #ops: 0, parent:-]

--Child created id: 388
--Creating new operations for variant [Variant id: 388, #gens: 671, #ops: 0, parent:387]
---analyzing modificationPoint position: 486
location: AbstractIntegrator.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 388, #gens: 670, #ops: 1, parent:387] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 388
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-388/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(194): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (388(f=1.0), 387(f=2.0), )
Selected to next generation: IDs2--> (388(f=1.0), )
----------Running generation: 195, population size: 1

***** Generation 195 : 0
**Parent Variant: [Variant id: 389, #gens: 671, #ops: 0, parent:-]

--Child created id: 390
--Creating new operations for variant [Variant id: 390, #gens: 671, #ops: 0, parent:389]
---analyzing modificationPoint position: 185
location: BracketingNthOrderBrentSolver.java151
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 390, #gens: 670, #ops: 1, parent:389] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 390
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-390/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(195): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (390(f=1.0), 389(f=2.0), )
Selected to next generation: IDs2--> (390(f=1.0), )
----------Running generation: 196, population size: 1

***** Generation 196 : 0
**Parent Variant: [Variant id: 391, #gens: 671, #ops: 0, parent:-]

--Child created id: 392
--Creating new operations for variant [Variant id: 392, #gens: 671, #ops: 0, parent:391]
---analyzing modificationPoint position: 554
location: FastMath.java1422
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y == 0.0) { 	return 1.0; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 392, #gens: 670, #ops: 1, parent:391] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 392, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(196): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y == 0.0) { 	return 1.0; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (391(f=2.0), 392(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (391(f=2.0), )
----------Running generation: 197, population size: 1

***** Generation 197 : 0
**Parent Variant: [Variant id: 393, #gens: 671, #ops: 0, parent:-]

--Child created id: 394
--Creating new operations for variant [Variant id: 394, #gens: 671, #ops: 0, parent:393]
---analyzing modificationPoint position: 554
location: FastMath.java1422
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y == 0.0) { 	return 1.0; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 394, #gens: 670, #ops: 1, parent:393] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 394, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(197): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y == 0.0) { 	return 1.0; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (393(f=2.0), 394(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (393(f=2.0), )
----------Running generation: 198, population size: 1

***** Generation 198 : 0
**Parent Variant: [Variant id: 395, #gens: 671, #ops: 0, parent:-]

--Child created id: 396
--Creating new operations for variant [Variant id: 396, #gens: 671, #ops: 0, parent:395]
---analyzing modificationPoint position: 335
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  h = interpolator.h
---analyzing modificationPoint position: 333
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 1 not mutation generated in  softPreviousTime = interpolator.softPreviousTime
---analyzing modificationPoint position: 105
---modifPoint 2 not mutation generated in  double xB = x[signChangeIndex]
---analyzing modificationPoint position: 393
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 3 not mutation generated in  // search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...]
---analyzing modificationPoint position: 123
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 4 not mutation generated in  if (v == null) { 	v = new double[7][]; 	for (int k = 0; k < 7; ++k) { 		v[k] = new double[interpolat[...]
---analyzing modificationPoint position: 578
location: FastMath.java1251
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yb = (aa - ya) + ab ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 396, #gens: 670, #ops: 1, parent:395] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 396, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(198): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yb = (aa - ya) + ab ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (395(f=2.0), 396(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (395(f=2.0), )
----------Running generation: 199, population size: 1

***** Generation 199 : 0
**Parent Variant: [Variant id: 397, #gens: 671, #ops: 0, parent:-]

--Child created id: 398
--Creating new operations for variant [Variant id: 398, #gens: 671, #ops: 0, parent:397]
---analyzing modificationPoint position: 194
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [yDotKLast]
--> var from patch: yDotKLast spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java249
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `v = null ` -topatch--> `// read the local attributes yDotKLast = new double[3][]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 249, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `v = null ` -topatch--> `// read the local attributes yDotKLast = new double[3][]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 398, #gens: 672, #ops: 1, parent:397] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 398, errors: [DormandPrince853StepInterpolator.java:477: error: illegal start of expression
	 * {@inheritDoc }
	 ^, DormandPrince853StepInterpolator.java:477: error: illegal start of expression
	 * {@inheritDoc }
	   ^, DormandPrince853StepInterpolator.java:477: error: illegal start of type
	 * {@inheritDoc }
	                ^, DormandPrince853StepInterpolator.java:477: error: ';' expected
	 * {@inheritDoc }
	                 ^, DormandPrince853StepInterpolator.java:478: error: illegal start of expression
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	  ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	   ^, DormandPrince853StepInterpolator.java:478: error: not a statement
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	          ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                   ^, DormandPrince853StepInterpolator.java:478: error: illegal start of expression
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	      ^, DormandPrince853StepInterpolator.java:478: error: illegal start of expression
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                         ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                              ^, DormandPrince853StepInterpolator.java:478: error: illegal start of expression
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                   ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                      ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                     ^, DormandPrince853StepInterpolator.java:478: error: not a statement
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                                     ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                                                 ^, DormandPrince853StepInterpolator.java:478: error: not a statement
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                                                            ^, DormandPrince853StepInterpolator.java:478: error: ';' expected
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                                                                                   ^, DormandPrince853StepInterpolator.java:478: error: reached end of file while parsing
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                                                                                     ^, DormandPrince853StepInterpolator.java:478: error: reached end of file while parsing
	 */ 	@java.lang.Override 	public void readExternal(final java.io.ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// read the local attributes 		yDotKLast = new double[3][]; 		final int dimension = in.readInt(); 		yDotKLast[0] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[1] = (dimension < 0) ? null : new double[dimension]; 		yDotKLast[2] = (dimension < 0) ? null : new double[dimension]; 		for (int i = 0; i < dimension; ++i) { 			yDotKLast[0][i] = in.readDouble(); 			yDotKLast[1][i] = in.readDouble(); 			yDotKLast[2][i] = in.readDouble();} 		// read the base state 		super.readExternal(in);}}
	    	                    	                                                                                                                      		                             		                             		                                    		                                                               		                                                               		                                                               		                                      			                                   			                                   			                                    		                       		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(199): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `v = null ` -topatch--> `// read the local attributes yDotKLast = new double[3][]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (397(f=2.0), 398(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (397(f=2.0), )
----------Running generation: 200, population size: 1

***** Generation 200 : 0
**Parent Variant: [Variant id: 399, #gens: 671, #ops: 0, parent:-]

--Child created id: 400
--Creating new operations for variant [Variant id: 400, #gens: 671, #ops: 0, parent:399]
---analyzing modificationPoint position: 641
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  b = b + d
---analyzing modificationPoint position: 398
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 1 not mutation generated in  return globalPreviousTime
---analyzing modificationPoint position: 69
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  increasing = true
---analyzing modificationPoint position: 460
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java200
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (y0.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionM[...] ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 200, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (y0.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionM[...] ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 400, #gens: 672, #ops: 1, parent:399] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 400
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-400/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(200): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (y0.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionM[...] ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (400(f=1.0), 399(f=2.0), )
Selected to next generation: IDs2--> (400(f=1.0), )
----------Running generation: 201, population size: 1

***** Generation 201 : 0
**Parent Variant: [Variant id: 401, #gens: 671, #ops: 0, parent:-]

--Child created id: 402
--Creating new operations for variant [Variant id: 402, #gens: 671, #ops: 0, parent:401]
---analyzing modificationPoint position: 560
---modifPoint 0 not mutation generated in  double xa = aa
---analyzing modificationPoint position: 547
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  z = (z * lnb) + (1.0 / 6.0)
---analyzing modificationPoint position: 497
---modifPoint 2 not mutation generated in  return absoluteAccuracy
---analyzing modificationPoint position: 551
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch [y]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1574
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double invy = 1.0 / y` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1574, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double invy = 1.0 / y` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 402, #gens: 671, #ops: 1, parent:401] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 402, errors: [FastMath.java:2603: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2603: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2603: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2603: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2603: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2603: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2603: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2603: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2604: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2604: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2604: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2604: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2606: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2607: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2607: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2608: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2608: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2608: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2608: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2609: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2609: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2609: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2609: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2609: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2618: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2618: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2618: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2618: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2618: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2618: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2623: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2625: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2625: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2625: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2626: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2626: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2627: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2627: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2628: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2628: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2629: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2629: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2630: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2630: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2642: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2642: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2667: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2667: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2667: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2667: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2667: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2667: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2667: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2668: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2668: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:2668: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:2668: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:2668: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:2668: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:2668: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:2670: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:2670: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:2671: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:2671: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:2671: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:2671: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:2672: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:2673: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:2673: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:2673: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:2673: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:2673: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:2673: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:2673: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:2674: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:2674: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:2674: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:2674: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:2674: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:2675: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:2675: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:2675: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:2675: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:2675: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:2675: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:2686: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:2686: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:2686: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:2686: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2686: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2686: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:2686: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:2686: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:2691: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2693: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2693: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2693: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2694: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2694: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2695: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(201): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double invy = 1.0 / y` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (401(f=2.0), 402(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (401(f=2.0), )
----------Running generation: 202, population size: 1

***** Generation 202 : 0
**Parent Variant: [Variant id: 403, #gens: 671, #ops: 0, parent:-]

--Child created id: 404
--Creating new operations for variant [Variant id: 404, #gens: 671, #ops: 0, parent:403]
---analyzing modificationPoint position: 10
location: EventState.java336
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = false ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 404, #gens: 670, #ops: 1, parent:403] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 404
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-404/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(202): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = false ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (404(f=1.0), 403(f=2.0), )
Selected to next generation: IDs2--> (404(f=1.0), )
----------Running generation: 203, population size: 1

***** Generation 203 : 0
**Parent Variant: [Variant id: 405, #gens: 671, #ops: 0, parent:-]

--Child created id: 406
--Creating new operations for variant [Variant id: 406, #gens: 671, #ops: 0, parent:405]
---analyzing modificationPoint position: 192
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  if (interpolator.currentState == null) {  	yDotKLast = null; 	v = null; 	vectorsInitialized = false;[...]
---analyzing modificationPoint position: 258
---modifPoint 1 not mutation generated in  final double[] scale = new double[mainSetDimension]
---analyzing modificationPoint position: 402
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 2 not mutation generated in  for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.stepAccepted[...]
---analyzing modificationPoint position: 626
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB)
---analyzing modificationPoint position: 348
location: AbstractStepInterpolator.java253
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 406, #gens: 670, #ops: 1, parent:405] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 406
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-406/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(203): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (406(f=1.0), 405(f=2.0), )
Selected to next generation: IDs2--> (406(f=1.0), )
----------Running generation: 204, population size: 1

***** Generation 204 : 0
**Parent Variant: [Variant id: 407, #gens: 671, #ops: 0, parent:-]

--Child created id: 408
--Creating new operations for variant [Variant id: 408, #gens: 671, #ops: 0, parent:407]
---analyzing modificationPoint position: 586
Templates availables117
Attempts Base Ingredients  1 total 117
---modifPoint 0 not mutation generated in  return b
---analyzing modificationPoint position: 63
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [pendingEvent]
--> var from patch: pendingEvent spoon.support.reflect.code.CtFieldWriteImpl
location: EventState.java110
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// some dummy values ... t0 = java.lang.Double.NaN ` -topatch--> `// no event during the whole step pendingEvent = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 110, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// some dummy values ... t0 = java.lang.Double.NaN ` -topatch--> `// no event during the whole step pendingEvent = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 408, #gens: 672, #ops: 1, parent:407] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 408, errors: [EventState.java:297: error: illegal start of expression
	 * Evaluate the impact of the proposed step on the event handler.
	 ^, EventState.java:297: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	           ^, EventState.java:297: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                      ^, EventState.java:297: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                             ^, EventState.java:297: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                           ^, EventState.java:297: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                  ^, EventState.java:297: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                                ^, EventState.java:299: error: <identifier> expected
	 * @param interpolator
	                      ^, EventState.java:300: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                 ^, EventState.java:300: error: '(' expected
	 * 		step interpolator for the proposed step
	   		                     ^, EventState.java:300: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                                  ^, EventState.java:301: error: <identifier> expected
	 * @return true if the event handler triggers an event before
	    ^, EventState.java:301: error: ';' expected
	 * @return true if the event handler triggers an event before
	               ^, EventState.java:301: error: not a statement
	 * @return true if the event handler triggers an event before
	                   ^, EventState.java:301: error: ')' expected
	 * @return true if the event handler triggers an event before
	                      ^, EventState.java:301: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                    ^, EventState.java:301: error: variable declaration not allowed here
	 * @return true if the event handler triggers an event before
	                             ^, EventState.java:301: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                ^, EventState.java:301: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                             ^, EventState.java:302: error: ';' expected
	the end of the proposed step
	       ^, EventState.java:302: error: ';' expected
	the end of the proposed step
	              ^, EventState.java:302: error: ';' expected
	the end of the proposed step
	                            ^, EventState.java:303: error: <identifier> expected
	 * @exception ConvergenceException
	                                  ^, EventState.java:304: error: '(' expected
	 * 		if an event cannot be located
	   		  ^, EventState.java:304: error: ')' expected
	 * 		if an event cannot be located
	   		     ^, EventState.java:304: error: ';' expected
	 * 		if an event cannot be located
	   		                  ^, EventState.java:304: error: variable declaration not allowed here
	 * 		if an event cannot be located
	   		            ^, EventState.java:304: error: ';' expected
	 * 		if an event cannot be located
	   		                             ^, EventState.java:305: error: illegal start of expression
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	^, EventState.java:305: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                           ^, EventState.java:305: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                    ^, EventState.java:305: error: not a statement
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                              ^, EventState.java:305: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                                                   ^, EventState.java:308: error: illegal start of expression
	 * Get the occurrence time of the event triggered in the current step.
	 ^, EventState.java:308: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	      ^, EventState.java:308: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                     ^, EventState.java:308: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                             ^, EventState.java:308: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                       ^, EventState.java:308: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                    ^, EventState.java:308: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                ^, EventState.java:308: error: <identifier> expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                      ^, EventState.java:310: error: illegal start of expression
	 * @return occurrence time of the event triggered in the current
	 ^, EventState.java:310: error: <identifier> expected
	 * @return occurrence time of the event triggered in the current
	    ^, EventState.java:310: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                     ^, EventState.java:310: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                 ^, EventState.java:310: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                 ^, EventState.java:310: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                        ^, EventState.java:311: error: ';' expected
	step or infinity if no events are triggered
	    ^, EventState.java:311: error: ';' expected
	step or infinity if no events are triggered
	                ^, EventState.java:311: error: '(' expected
	step or infinity if no events are triggered
	                   ^, EventState.java:311: error: ')' expected
	step or infinity if no events are triggered
	                      ^, EventState.java:311: error: ';' expected
	step or infinity if no events are triggered
	                                 ^, EventState.java:311: error: variable declaration not allowed here
	step or infinity if no events are triggered
	                              ^, EventState.java:312: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	  ^, EventState.java:312: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	^, EventState.java:312: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	                          ^, EventState.java:321: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	^, EventState.java:321: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	       ^, EventState.java:321: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                        ^, EventState.java:321: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                        ^, EventState.java:321: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                                         ^, EventState.java:322: error: illegal start of expression
	 * Check if the integration should be stopped at the end of the
	 ^, EventState.java:322: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	        ^, EventState.java:322: error: '(' expected
	 * Check if the integration should be stopped at the end of the
	           ^, EventState.java:322: error: ')' expected
	 * Check if the integration should be stopped at the end of the
	               ^, EventState.java:322: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                  ^, EventState.java:322: error: variable declaration not allowed here
	 * Check if the integration should be stopped at the end of the
	                            ^, EventState.java:322: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                             ^, EventState.java:322: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                    ^, EventState.java:322: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                           ^, EventState.java:323: error: not a statement
	 * current step.
	 ^, EventState.java:323: error: ';' expected
	 * current step.
	          ^, EventState.java:323: error: <identifier> expected
	 * current step.
	                ^, EventState.java:325: error: illegal start of expression
	 * @return true if the integration should be stopped
	 ^, EventState.java:325: error: <identifier> expected
	 * @return true if the integration should be stopped
	    ^, EventState.java:325: error: ';' expected
	 * @return true if the integration should be stopped
	               ^, EventState.java:325: error: ';' expected
	 * @return true if the integration should be stopped
	                                  ^, EventState.java:325: error: ';' expected
	 * @return true if the integration should be stopped
	                                            ^, EventState.java:326: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	  ^, EventState.java:326: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	^, EventState.java:326: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;} 	/**
	    	                   ^, EventState.java:336: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);}
	    	^, EventState.java:336: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);}
	    	                    ^, EventState.java:336: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);}
	    	                                    ^, EventState.java:336: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;} 		if (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) { 			handler.resetState(t, y);}
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(204): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// some dummy values ... t0 = java.lang.Double.NaN ` -topatch--> `// no event during the whole step pendingEvent = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (407(f=2.0), 408(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (407(f=2.0), )
----------Running generation: 205, population size: 1

***** Generation 205 : 0
**Parent Variant: [Variant id: 409, #gens: 671, #ops: 0, parent:-]

--Child created id: 410
--Creating new operations for variant [Variant id: 410, #gens: 671, #ops: 0, parent:409]
---analyzing modificationPoint position: 586
---modifPoint 0 not mutation generated in  return b
---analyzing modificationPoint position: 399
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  return globalCurrentTime
---analyzing modificationPoint position: 421
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 2 not mutation generated in  final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...]
---analyzing modificationPoint position: 535
---modifPoint 3 not mutation generated in  double lna = lns[0]
---analyzing modificationPoint position: 461
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 4 not mutation generated in  interpolatedState = new double[dimension]
---analyzing modificationPoint position: 241
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java316
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double filteredNextT = stepStart + hNew ` -topatch--> `setMinReduction(0.2)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 316, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double filteredNextT = stepStart + hNew ` -topatch--> `setMinReduction(0.2)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 410, #gens: 672, #ops: 1, parent:409] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 410
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-410/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(205): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double filteredNextT = stepStart + hNew ` -topatch--> `setMinReduction(0.2)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (410(f=1.0), 409(f=2.0), )
Selected to next generation: IDs2--> (410(f=1.0), )
----------Running generation: 206, population size: 1

***** Generation 206 : 0
**Parent Variant: [Variant id: 411, #gens: 671, #ops: 0, parent:-]

--Child created id: 412
--Creating new operations for variant [Variant id: 412, #gens: 671, #ops: 0, parent:411]
---analyzing modificationPoint position: 607
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: Incrementor.java150
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) > maximalCount) { 	maxCountCallback.trigger(maximalCount); } ` -topatch--> `incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.util.Incrementor line: 150, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) > maximalCount) { 	maxCountCallback.trigger(maximalCount); } ` -topatch--> `incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 412, #gens: 672, #ops: 1, parent:411] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 412
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-412/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(206): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) > maximalCount) { 	maxCountCallback.trigger(maximalCount); } ` -topatch--> `incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (411(f=2.0), 412(f=2.0), )
Selected to next generation: IDs2--> (411(f=2.0), )
----------Running generation: 207, population size: 1

***** Generation 207 : 0
**Parent Variant: [Variant id: 413, #gens: 671, #ops: 0, parent:-]

--Child created id: 414
--Creating new operations for variant [Variant id: 414, #gens: 671, #ops: 0, parent:413]
---analyzing modificationPoint position: 573
location: FastMath.java1243
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yb = (aa - ya) + ab ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 414, #gens: 670, #ops: 1, parent:413] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 414, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(207): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yb = (aa - ya) + ab ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (413(f=2.0), 414(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (413(f=2.0), )
----------Running generation: 208, population size: 1

***** Generation 208 : 0
**Parent Variant: [Variant id: 415, #gens: 671, #ops: 0, parent:-]

--Child created id: 416
--Creating new operations for variant [Variant id: 416, #gens: 671, #ops: 0, parent:415]
---analyzing modificationPoint position: 670
---modifPoint 0 not mutation generated in  return x < 0.0 ? -x : x == 0.0 ? 0.0 : x// -0.0 => +0.0 
---analyzing modificationPoint position: 344
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  globalCurrentTime = java.lang.Double.NaN
---analyzing modificationPoint position: 660
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch []
location: FastMath.java826
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `/* Lookup exp(floor(x)). intPartA will have the upper 22 bits, intPartB will have the lower 52 bits.[...] ` -topatch--> `/* Square root */ double y` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 826, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `/* Lookup exp(floor(x)). intPartA will have the upper 22 bits, intPartB will have the lower 52 bits.[...] ` -topatch--> `/* Square root */ double y` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 416, #gens: 672, #ops: 1, parent:415] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 416, errors: [FastMath.java:2776: error: illegal start of expression
	 * Compute exp(x) - 1
	 ^, FastMath.java:2776: error: ';' expected
	 * Compute exp(x) - 1
	          ^, FastMath.java:2778: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2778: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2776: error: not a statement
	 * Compute exp(x) - 1
	                  ^, FastMath.java:2779: error: ';' expected
	 * 		number to compute shifted exponential
	   		      ^, FastMath.java:2779: error: ';' expected
	 * 		number to compute shifted exponential
	   		                 ^, FastMath.java:2779: error: ';' expected
	 * 		number to compute shifted exponential
	   		                                     ^, FastMath.java:2780: error: <identifier> expected
	 * @return exp(x) - 1
	    ^, FastMath.java:2780: error: ';' expected
	 * @return exp(x) - 1
	              ^, FastMath.java:2780: error: not a statement
	 * @return exp(x) - 1
	               ^, FastMath.java:2780: error: ';' expected
	 * @return exp(x) - 1
	                ^, FastMath.java:2781: error: illegal start of expression
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	^, FastMath.java:2781: error: illegal start of expression
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	       ^, FastMath.java:2781: error: ';' expected
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	             ^, FastMath.java:2781: error: '.class' expected
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	                                  ^, FastMath.java:2781: error: ';' expected
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	                                   ^, FastMath.java:2789: error: illegal start of expression
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	^, FastMath.java:2789: error: illegal start of expression
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	        ^, FastMath.java:2789: error: ';' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	              ^, FastMath.java:2789: error: '.class' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	                                   ^, FastMath.java:2789: error: ';' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	                                    ^, FastMath.java:2789: error: ';' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	                                                        ^, FastMath.java:2791: error: illegal start of expression
	 * Natural logarithm.
	 ^, FastMath.java:2791: error: ';' expected
	 * Natural logarithm.
	          ^, FastMath.java:2791: error: <identifier> expected
	 * Natural logarithm.
	                     ^, FastMath.java:2793: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2793: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2794: error: not a statement
	 * 		a double
	 ^, FastMath.java:2794: error: ';' expected
	 * 		a double
	   		 ^, FastMath.java:2794: error: not a statement
	 * 		a double
	   		  ^, FastMath.java:2794: error: ';' expected
	 * 		a double
	   		        ^, FastMath.java:2795: error: <identifier> expected
	 * @return log(x)
	    ^, FastMath.java:2795: error: ';' expected
	 * @return log(x)
	              ^, FastMath.java:2795: error: not a statement
	 * @return log(x)
	               ^, FastMath.java:2795: error: ';' expected
	 * @return log(x)
	                ^, FastMath.java:2796: error: illegal start of expression
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	^, FastMath.java:2796: error: illegal start of expression
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	       ^, FastMath.java:2796: error: ';' expected
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	             ^, FastMath.java:2796: error: illegal start of expression
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                         ^, FastMath.java:2796: error: ';' expected
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                              ^, FastMath.java:2796: error: not a statement
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                                      ^, FastMath.java:2796: error: ';' expected
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                                       ^, FastMath.java:2804: error: illegal start of expression
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	^, FastMath.java:2804: error: illegal start of expression
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	        ^, FastMath.java:2804: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	              ^, FastMath.java:2804: error: illegal start of expression
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                          ^, FastMath.java:2804: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                               ^, FastMath.java:2804: error: not a statement
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                                       ^, FastMath.java:2804: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                                        ^, FastMath.java:2804: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                                                               ^, FastMath.java:2814: error: illegal start of expression
		 */ 		// y is the most significant 10 bits of the mantissa 		// double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L); 		// double epsilon = (x - y) / y; 		double epsilon = (bits & 0x3ffffffffffL) / (org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L)); 		double lnza = 0.0; 		double lnzb = 0.0; 		if (hiPrec != null) { 			/* split epsilon -> x */ 			double tmp = epsilon * org.apache.commons.math.util.FastMath.HEX_40000000; 			double aa = (epsilon + tmp) - tmp; 			double ab = epsilon - aa; 			double xa = aa; 			double xb = ab; 			/* Need a more accurate epsilon, so adjust the division. */ 			double numer = bits & 0x3ffffffffffL; 			double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L); 			aa = (numer - (xa * denom)) - (xb * denom); 			xb += aa / denom; 			/* Remez polynomial evaluation */ 			double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][0]; 			double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][1]; 			for (int i = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 2; i >= 0; i--) { 				/* Multiply a = y * x */ 				aa = ya * xa; 				ab = ((ya * xb) + (yb * xa)) + (yb * xb); 				/* split, so now y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab; 				/* Add  a = y + lnHiPrecCoef */ 				aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]; 				ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]; 				/* Split y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab;} 			/* Multiply a = y * x */ 			aa = ya * xa; 			ab = ((ya * xb) + (yb * xa)) + (yb * xb); 			/* split, so now lnz = a */ 			/* tmp = aa * 1073741824.0;
		 ^, FastMath.java:2814: error: illegal start of expression
		 */ 		// y is the most significant 10 bits of the mantissa 		// double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L); 		// double epsilon = (x - y) / y; 		double epsilon = (bits & 0x3ffffffffffL) / (org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L)); 		double lnza = 0.0; 		double lnzb = 0.0; 		if (hiPrec != null) { 			/* split epsilon -> x */ 			double tmp = epsilon * org.apache.commons.math.util.FastMath.HEX_40000000; 			double aa = (epsilon + tmp) - tmp; 			double ab = epsilon - aa; 			double xa = aa; 			double xb = ab; 			/* Need a more accurate epsilon, so adjust the division. */ 			double numer = bits & 0x3ffffffffffL; 			double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L); 			aa = (numer - (xa * denom)) - (xb * denom); 			xb += aa / denom; 			/* Remez polynomial evaluation */ 			double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][0]; 			double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][1]; 			for (int i = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 2; i >= 0; i--) { 				/* Multiply a = y * x */ 				aa = ya * xa; 				ab = ((ya * xb) + (yb * xa)) + (yb * xb); 				/* split, so now y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab; 				/* Add  a = y + lnHiPrecCoef */ 				aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]; 				ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]; 				/* Split y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab;} 			/* Multiply a = y * x */ 			aa = ya * xa; 			ab = ((ya * xb) + (yb * xa)) + (yb * xb); 			/* split, so now lnz = a */ 			/* tmp = aa * 1073741824.0;
		  ^, FastMath.java:2817: error: illegal start of expression
			 */ 			lnza = aa + ab; 			lnzb = -((lnza - aa) - ab);} else { 			/* High precision not required.  Eval Remez polynomial
			 ^, FastMath.java:2817: error: illegal start of expression
			 */ 			lnza = aa + ab; 			lnzb = -((lnza - aa) - ab);} else { 			/* High precision not required.  Eval Remez polynomial
			  ^, FastMath.java:2817: error: 'else' without 'if'
			 */ 			lnza = aa + ab; 			lnzb = -((lnza - aa) - ab);} else { 			/* High precision not required.  Eval Remez polynomial
			    			                			                             ^, FastMath.java:2829: error: illegal start of expression
	 * Compute log(1 + x).
	 ^, FastMath.java:2829: error: ';' expected
	 * Compute log(1 + x).
	          ^, FastMath.java:2829: error: <identifier> expected
	 * Compute log(1 + x).
	                      ^, FastMath.java:2831: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2831: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2832: error: not a statement
	 * 		a number
	 ^, FastMath.java:2832: error: ';' expected
	 * 		a number
	   		 ^, FastMath.java:2833: error: <identifier> expected
	 * @return log(1 + x)
	    ^, FastMath.java:2833: error: not a statement
	 * @return log(1 + x)
	 ^, FastMath.java:2833: error: ';' expected
	 * @return log(1 + x)
	              ^, FastMath.java:2833: error: not a statement
	 * @return log(1 + x)
	                 ^, FastMath.java:2833: error: ';' expected
	 * @return log(1 + x)
	                    ^, FastMath.java:2834: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	^, FastMath.java:2834: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	       ^, FastMath.java:2834: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	             ^, FastMath.java:2834: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                           ^, FastMath.java:2834: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                ^, FastMath.java:2834: error: not a statement
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                        ^, FastMath.java:2834: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                         ^, FastMath.java:2843: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	^, FastMath.java:2843: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	       ^, FastMath.java:2843: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	             ^, FastMath.java:2843: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                           ^, FastMath.java:2843: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                ^, FastMath.java:2843: error: not a statement
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                        ^, FastMath.java:2843: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                         ^, FastMath.java:2861: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	^, FastMath.java:2861: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	       ^, FastMath.java:2861: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	             ^, FastMath.java:2861: error: '.class' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                ^, FastMath.java:2861: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                    ^, FastMath.java:2861: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                              ^, FastMath.java:2869: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	^, FastMath.java:2869: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	       ^, FastMath.java:2869: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	             ^, FastMath.java:2869: error: '.class' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                ^, FastMath.java:2869: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                 ^, FastMath.java:2869: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                           ^, FastMath.java:2884: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	^, FastMath.java:2884: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	        ^, FastMath.java:2884: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	              ^, FastMath.java:2884: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                               ^, FastMath.java:2884: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                    ^, FastMath.java:2884: error: not a statement
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(208): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `/* Lookup exp(floor(x)). intPartA will have the upper 22 bits, intPartB will have the lower 52 bits.[...] ` -topatch--> `/* Square root */ double y` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (415(f=2.0), 416(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (415(f=2.0), )
----------Running generation: 209, population size: 1

***** Generation 209 : 0
**Parent Variant: [Variant id: 417, #gens: 671, #ops: 0, parent:-]

--Child created id: 418
--Creating new operations for variant [Variant id: 418, #gens: 671, #ops: 0, parent:417]
---analyzing modificationPoint position: 652
location: FastMath.java1311
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = c ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 418, #gens: 670, #ops: 1, parent:417] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 418, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(209): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = c ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (417(f=2.0), 418(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (417(f=2.0), )
----------Running generation: 210, population size: 1

***** Generation 210 : 0
**Parent Variant: [Variant id: 419, #gens: 671, #ops: 0, parent:-]

--Child created id: 420
--Creating new operations for variant [Variant id: 420, #gens: 671, #ops: 0, parent:419]
---analyzing modificationPoint position: 542
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb)
---analyzing modificationPoint position: 214
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  yDotKLast[k] = new double[dimension]
---analyzing modificationPoint position: 326
location: AdaptiveStepsizeIntegrator.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 420, #gens: 670, #ops: 1, parent:419] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 420
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-420/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(210): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (420(f=1.0), 419(f=2.0), )
Selected to next generation: IDs2--> (420(f=1.0), )
----------Running generation: 211, population size: 1

***** Generation 211 : 0
**Parent Variant: [Variant id: 421, #gens: 671, #ops: 0, parent:-]

--Child created id: 422
--Creating new operations for variant [Variant id: 422, #gens: 671, #ops: 0, parent:421]
---analyzing modificationPoint position: 80
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [convergence]
--> var from patch: convergence spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java197
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = org.apache.commons.math.util.FastMath.max(1, ((int) (org.apache.commons.math.util.Fast[...] ` -topatch--> `return convergence` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 197, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = org.apache.commons.math.util.FastMath.max(1, ((int) (org.apache.commons.math.util.Fast[...] ` -topatch--> `return convergence` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 422, #gens: 672, #ops: 1, parent:421] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 422, errors: [EventState.java:197: error: incompatible types: double cannot be converted to boolean
		} 		return convergence;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(211): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = org.apache.commons.math.util.FastMath.max(1, ((int) (org.apache.commons.math.util.Fast[...] ` -topatch--> `return convergence` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (421(f=2.0), 422(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (421(f=2.0), )
----------Running generation: 212, population size: 1

***** Generation 212 : 0
**Parent Variant: [Variant id: 423, #gens: 671, #ops: 0, parent:-]

--Child created id: 424
--Creating new operations for variant [Variant id: 424, #gens: 671, #ops: 0, parent:423]
---analyzing modificationPoint position: 363
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: RungeKuttaStepInterpolator.java59
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotK = null ` -topatch--> `// we do not save any reference to the equations` (spoon.support.reflect.code.CtCommentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator line: 59, pointed element: CtCommentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotK = null ` -topatch--> `// we do not save any reference to the equations` (spoon.support.reflect.code.CtCommentImpl) 

--Summary Creation: for variant [Variant id: 424, #gens: 672, #ops: 1, parent:423] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 424, errors: [RungeKuttaStepInterpolator.java:156: error: illegal start of expression
	 * Copy constructor.
	 ^, RungeKuttaStepInterpolator.java:156: error: ';' expected
	 * Copy constructor.
	       ^, RungeKuttaStepInterpolator.java:156: error: <identifier> expected
	 * Copy constructor.
	                    ^, RungeKuttaStepInterpolator.java:158: error: illegal start of expression
	 * <p>The copied interpolator should have been finalized before the
	 ^, RungeKuttaStepInterpolator.java:158: error: illegal start of expression
	 * <p>The copied interpolator should have been finalized before the
	      ^, RungeKuttaStepInterpolator.java:158: error: ';' expected
	 * <p>The copied interpolator should have been finalized before the
	                             ^, RungeKuttaStepInterpolator.java:158: error: ';' expected
	 * <p>The copied interpolator should have been finalized before the
	                                         ^, RungeKuttaStepInterpolator.java:158: error: ';' expected
	 * <p>The copied interpolator should have been finalized before the
	                                                        ^, RungeKuttaStepInterpolator.java:158: error: ';' expected
	 * <p>The copied interpolator should have been finalized before the
	                                                                   ^, RungeKuttaStepInterpolator.java:159: error: not a statement
	 * copy, otherwise the copy will not be able to perform correctly any
	   ^, RungeKuttaStepInterpolator.java:159: error: ';' expected
	 * copy, otherwise the copy will not be able to perform correctly any
	       ^, RungeKuttaStepInterpolator.java:159: error: ';' expected
	 * copy, otherwise the copy will not be able to perform correctly any
	                      ^, RungeKuttaStepInterpolator.java:159: error: ';' expected
	 * copy, otherwise the copy will not be able to perform correctly any
	                                ^, RungeKuttaStepInterpolator.java:159: error: ';' expected
	 * copy, otherwise the copy will not be able to perform correctly any
	                                       ^, RungeKuttaStepInterpolator.java:159: error: ';' expected
	 * copy, otherwise the copy will not be able to perform correctly any
	                                               ^, RungeKuttaStepInterpolator.java:159: error: ';' expected
	 * copy, otherwise the copy will not be able to perform correctly any
	                                                                 ^, RungeKuttaStepInterpolator.java:160: error: not a statement
	 * interpolation and will throw a {@link NullPointerException}
	 ^, RungeKuttaStepInterpolator.java:160: error: ';' expected
	 * interpolation and will throw a {@link NullPointerException}
	                ^, RungeKuttaStepInterpolator.java:160: error: ';' expected
	 * interpolation and will throw a {@link NullPointerException}
	                         ^, RungeKuttaStepInterpolator.java:160: error: ';' expected
	 * interpolation and will throw a {@link NullPointerException}
	                                 ^, RungeKuttaStepInterpolator.java:160: error: <identifier> expected
	 * interpolation and will throw a {@link NullPointerException}
	                                                             ^, RungeKuttaStepInterpolator.java:161: error: illegal start of expression
	 * later. Since we don't want this constructor to throw the
	 ^, RungeKuttaStepInterpolator.java:161: error: ';' expected
	 * later. Since we don't want this constructor to throw the
	        ^, RungeKuttaStepInterpolator.java:161: error: ';' expected
	 * later. Since we don't want this constructor to throw the
	                  ^, RungeKuttaStepInterpolator.java:161: error: unclosed character literal
	 * later. Since we don't want this constructor to throw the
	                      ^, RungeKuttaStepInterpolator.java:161: error: not a statement
	 * later. Since we don't want this constructor to throw the
	                   ^, RungeKuttaStepInterpolator.java:161: error: not a statement
	 * later. Since we don't want this constructor to throw the
	                         ^, RungeKuttaStepInterpolator.java:161: error: ';' expected
	 * later. Since we don't want this constructor to throw the
	                             ^, RungeKuttaStepInterpolator.java:161: error: ';' expected
	 * later. Since we don't want this constructor to throw the
	                                                 ^, RungeKuttaStepInterpolator.java:162: error: ';' expected
	 * exceptions finalization may involve and since we don't want this
	             ^, RungeKuttaStepInterpolator.java:162: error: ';' expected
	 * exceptions finalization may involve and since we don't want this
	                              ^, RungeKuttaStepInterpolator.java:162: error: ';' expected
	 * exceptions finalization may involve and since we don't want this
	                                          ^, RungeKuttaStepInterpolator.java:162: error: ';' expected
	 * exceptions finalization may involve and since we don't want this
	                                                   ^, RungeKuttaStepInterpolator.java:162: error: unclosed character literal
	 * exceptions finalization may involve and since we don't want this
	                                                       ^, RungeKuttaStepInterpolator.java:162: error: not a statement
	 * exceptions finalization may involve and since we don't want this
	                                                    ^, RungeKuttaStepInterpolator.java:162: error: not a statement
	 * exceptions finalization may involve and since we don't want this
	                                                          ^, RungeKuttaStepInterpolator.java:162: error: ';' expected
	 * exceptions finalization may involve and since we don't want this
	                                                              ^, RungeKuttaStepInterpolator.java:163: error: ';' expected
	 * method to modify the state of the copied interpolator,
	            ^, RungeKuttaStepInterpolator.java:163: error: ';' expected
	 * method to modify the state of the copied interpolator,
	                       ^, RungeKuttaStepInterpolator.java:163: error: ';' expected
	 * method to modify the state of the copied interpolator,
	                                ^, RungeKuttaStepInterpolator.java:163: error: ';' expected
	 * method to modify the state of the copied interpolator,
	                                           ^, RungeKuttaStepInterpolator.java:163: error: not a statement
	 * method to modify the state of the copied interpolator,
	                                            ^, RungeKuttaStepInterpolator.java:163: error: ';' expected
	 * method to modify the state of the copied interpolator,
	                                                        ^, RungeKuttaStepInterpolator.java:164: error: ';' expected
	 * finalization is <strong>not</strong> done automatically, it
	                  ^, RungeKuttaStepInterpolator.java:164: error: illegal start of expression
	 * finalization is <strong>not</strong> done automatically, it
	                           ^, RungeKuttaStepInterpolator.java:164: error: illegal start of type
	 * finalization is <strong>not</strong> done automatically, it
	                               ^, RungeKuttaStepInterpolator.java:164: error: illegal start of expression
	 * finalization is <strong>not</strong> done automatically, it
	                                ^, RungeKuttaStepInterpolator.java:164: error: not a statement
	 * finalization is <strong>not</strong> done automatically, it
	                                      ^, RungeKuttaStepInterpolator.java:164: error: ';' expected
	 * finalization is <strong>not</strong> done automatically, it
	                                            ^, RungeKuttaStepInterpolator.java:164: error: not a statement
	 * finalization is <strong>not</strong> done automatically, it
	                                             ^, RungeKuttaStepInterpolator.java:164: error: ';' expected
	 * finalization is <strong>not</strong> done automatically, it
	                                                          ^, RungeKuttaStepInterpolator.java:165: error: not a statement
	 * remains under user control.</p>
	 ^, RungeKuttaStepInterpolator.java:165: error: ';' expected
	 * remains under user control.</p>
	          ^, RungeKuttaStepInterpolator.java:165: error: ';' expected
	 * remains under user control.</p>
	                     ^, RungeKuttaStepInterpolator.java:165: error: illegal start of type
	 * remains under user control.</p>
	                               ^, RungeKuttaStepInterpolator.java:165: error: illegal start of expression
	 * remains under user control.</p>
	                                 ^, RungeKuttaStepInterpolator.java:167: error: illegal start of expression
	 * <p>The copy is a deep copy: its arrays are separated from the
	 ^, RungeKuttaStepInterpolator.java:167: error: illegal start of expression
	 * <p>The copy is a deep copy: its arrays are separated from the
	      ^, RungeKuttaStepInterpolator.java:167: error: ';' expected
	 * <p>The copy is a deep copy: its arrays are separated from the
	                 ^, RungeKuttaStepInterpolator.java:167: error: ';' expected
	 * <p>The copy is a deep copy: its arrays are separated from the
	                        ^, RungeKuttaStepInterpolator.java:167: error: not a statement
	 * <p>The copy is a deep copy: its arrays are separated from the
	                               ^, RungeKuttaStepInterpolator.java:167: error: ';' expected
	 * <p>The copy is a deep copy: its arrays are separated from the
	                                  ^, RungeKuttaStepInterpolator.java:167: error: ';' expected
	 * <p>The copy is a deep copy: its arrays are separated from the
	                                             ^, RungeKuttaStepInterpolator.java:167: error: ';' expected
	 * <p>The copy is a deep copy: its arrays are separated from the
	                                                            ^, RungeKuttaStepInterpolator.java:168: error: not a statement
	 * original arrays of the instance.</p>
	 ^, RungeKuttaStepInterpolator.java:168: error: ';' expected
	 * original arrays of the instance.</p>
	           ^, RungeKuttaStepInterpolator.java:168: error: ';' expected
	 * original arrays of the instance.</p>
	                     ^, RungeKuttaStepInterpolator.java:168: error: ';' expected
	 * original arrays of the instance.</p>
	                                  ^, RungeKuttaStepInterpolator.java:168: error: illegal start of type
	 * original arrays of the instance.</p>
	                                    ^, RungeKuttaStepInterpolator.java:168: error: illegal start of expression
	 * original arrays of the instance.</p>
	                                     ^, RungeKuttaStepInterpolator.java:169: error: illegal start of expression
	 *
	 ^, RungeKuttaStepInterpolator.java:170: error: illegal start of expression
	 * @param interpolator
	 ^, RungeKuttaStepInterpolator.java:170: error: illegal start of expression
	 * @param interpolator
	   ^, RungeKuttaStepInterpolator.java:168: error: not a statement
	 * original arrays of the instance.</p>
	                                      ^, RungeKuttaStepInterpolator.java:171: error: ';' expected
	 * 		interpolator to copy from.
	   		            ^, RungeKuttaStepInterpolator.java:171: error: ';' expected
	 * 		interpolator to copy from.
	   		                    ^, RungeKuttaStepInterpolator.java:171: error: <identifier> expected
	 * 		interpolator to copy from.
	   		                          ^, RungeKuttaStepInterpolator.java:172: error: illegal start of expression
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	  ^, RungeKuttaStepInterpolator.java:172: error: illegal start of expression
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	    	^, RungeKuttaStepInterpolator.java:172: error: illegal start of expression
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	    	                                  ^, RungeKuttaStepInterpolator.java:172: error: ';' expected
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	    	                                       ^, RungeKuttaStepInterpolator.java:172: error: illegal start of expression
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	    	                                           ^, RungeKuttaStepInterpolator.java:172: error: ';' expected
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	    	                                                  ^, RungeKuttaStepInterpolator.java:172: error: ';' expected
	 */ 	public RungeKuttaStepInterpolator(final org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator interpolator) { 		super(interpolator); 		if (interpolator.currentState != null) { 			final int dimension = currentState.length; 			yDotK = new double[interpolator.yDotK.length][]; 			for (int k = 0; k < interpolator.yDotK.length; ++k) { 				yDotK[k] = new double[dimension]; 				java.lang.System.arraycopy(interpolator.yDotK[k], 0, yDotK[k], 0, dimension);}} else { 			yDotK = null;} 		// we cannot keep any reference to the equations in the copy 		// the interpolator should have been finalized before 		integrator = null;} 	/**
	    	                                                                                                                    ^, RungeKuttaStepInterpolator.java:173: error: illegal start of expression
	 * Reinitialize the instance
	 ^, RungeKuttaStepInterpolator.java:173: error: ';' expected
	 * Reinitialize the instance
	               ^, RungeKuttaStepInterpolator.java:173: error: ';' expected
	 * Reinitialize the instance
	                            ^, RungeKuttaStepInterpolator.java:174: error: illegal start of expression
	 * <p>Some Runge-Kutta integrators need fewer functions evaluations
	      ^, RungeKuttaStepInterpolator.java:174: error: not a statement
	 * <p>Some Runge-Kutta integrators need fewer functions evaluations
	                ^, RungeKuttaStepInterpolator.java:174: error: ';' expected
	 * <p>Some Runge-Kutta integrators need fewer functions evaluations
	                      ^, RungeKuttaStepInterpolator.java:174: error: ';' expected
	 * <p>Some Runge-Kutta integrators need fewer functions evaluations
	                                       ^, RungeKuttaStepInterpolator.java:174: error: ';' expected
	 * <p>Some Runge-Kutta integrators need fewer functions evaluations
	                                                       ^, RungeKuttaStepInterpolator.java:175: error: not a statement
	 * than their counterpart step interpolators. So the interpolator
	 ^, RungeKuttaStepInterpolator.java:175: error: ';' expected
	 * than their counterpart step interpolators. So the interpolator
	       ^, RungeKuttaStepInterpolator.java:175: error: ';' expected
	 * than their counterpart step interpolators. So the interpolator
	                         ^, RungeKuttaStepInterpolator.java:175: error: ';' expected
	 * than their counterpart step interpolators. So the interpolator
	                                            ^, RungeKuttaStepInterpolator.java:175: error: ';' expected
	 * than their counterpart step interpolators. So the interpolator
	                                                    ^, RungeKuttaStepInterpolator.java:176: error: not a statement
	 * should perform the last evaluations they need by themselves. The
	 ^, RungeKuttaStepInterpolator.java:176: error: ';' expected
	 * should perform the last evaluations they need by themselves. The
	         ^, RungeKuttaStepInterpolator.java:176: error: ';' expected
	 * should perform the last evaluations they need by themselves. The
	                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(212): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotK = null ` -topatch--> `// we do not save any reference to the equations` (spoon.support.reflect.code.CtCommentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (423(f=2.0), 424(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (423(f=2.0), )
----------Running generation: 213, population size: 1

***** Generation 213 : 0
**Parent Variant: [Variant id: 425, #gens: 671, #ops: 0, parent:-]

--Child created id: 426
--Creating new operations for variant [Variant id: 426, #gens: 671, #ops: 0, parent:425]
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [interpolator, currentT]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: currentT spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java341
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(eventT, y, yDot) ` -topatch--> `interpolator.setInterpolatedTime(currentT)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 341, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(eventT, y, yDot) ` -topatch--> `interpolator.setInterpolatedTime(currentT)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 426, #gens: 671, #ops: 1, parent:425] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 426, errors: [AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(213): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(eventT, y, yDot) ` -topatch--> `interpolator.setInterpolatedTime(currentT)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (425(f=2.0), 426(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (425(f=2.0), )
----------Running generation: 214, population size: 1

***** Generation 214 : 0
**Parent Variant: [Variant id: 427, #gens: 671, #ops: 0, parent:-]

--Child created id: 428
--Creating new operations for variant [Variant id: 428, #gens: 671, #ops: 0, parent:427]
---analyzing modificationPoint position: 126
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [theta]
--> var from patch: theta spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853StepInterpolator.java332
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot1 = yDotK[0][i] ` -topatch--> `final double twoTheta = 2 * theta` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 332, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot1 = yDotK[0][i] ` -topatch--> `final double twoTheta = 2 * theta` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 428, #gens: 672, #ops: 1, parent:427] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 428
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-428/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(214): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot1 = yDotK[0][i] ` -topatch--> `final double twoTheta = 2 * theta` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (428(f=1.0), 427(f=2.0), )
Selected to next generation: IDs2--> (428(f=1.0), )
----------Running generation: 215, population size: 1

***** Generation 215 : 0
**Parent Variant: [Variant id: 429, #gens: 671, #ops: 0, parent:-]

--Child created id: 430
--Creating new operations for variant [Variant id: 430, #gens: 671, #ops: 0, parent:429]
---analyzing modificationPoint position: 193
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  yDotKLast = null
---analyzing modificationPoint position: 283
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 1 not mutation generated in  final int stages = c.length + 1
---analyzing modificationPoint position: 49
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [dt, convergence]
--> var from patch: dt spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: convergence spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java225
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 225, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 430, #gens: 671, #ops: 1, parent:429] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 430, errors: [EventState.java:248: error: variable root might not have been initialized
				(org.apache.commons.math.util.FastMath.abs(root - ta) <= convergence)) && 
				                                           ^, EventState.java:256: error: variable root might not have been initialized
				(org.apache.commons.math.util.FastMath.abs(previousEventTime - root) > convergence)) {
				                                                               ^, EventState.java:257: error: variable root might not have been initialized
					pendingEventTime = root;
					                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(215): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (solver instanceof org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<?>) { 	[...] ` -topatch--> `if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 	// we cannot do anything on such[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (429(f=2.0), 430(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (429(f=2.0), )
----------Running generation: 216, population size: 1

***** Generation 216 : 0
**Parent Variant: [Variant id: 431, #gens: 671, #ops: 0, parent:-]

--Child created id: 432
--Creating new operations for variant [Variant id: 432, #gens: 671, #ops: 0, parent:431]
---analyzing modificationPoint position: 635
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 0 not mutation generated in  if (hiPrec != null) { 	/* split epsilon -> x */ 	double tmp = epsilon * org.apache.commons.math.util[...]
---analyzing modificationPoint position: 249
location: EmbeddedRungeKuttaIntegrator.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exp = (-1.0) / getOrder() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 432, #gens: 670, #ops: 1, parent:431] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 432, errors: [EmbeddedRungeKuttaIntegrator.java:132: error: variable exp might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(216): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exp = (-1.0) / getOrder() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (431(f=2.0), 432(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (431(f=2.0), )
----------Running generation: 217, population size: 1

***** Generation 217 : 0
**Parent Variant: [Variant id: 433, #gens: 671, #ops: 0, parent:-]

--Child created id: 434
--Creating new operations for variant [Variant id: 434, #gens: 671, #ops: 0, parent:433]
---analyzing modificationPoint position: 624
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  z = (z * epsilon) + (-3.940510424527919E-20)
---analyzing modificationPoint position: 365
location: AbstractStepInterpolator.java112
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 434, #gens: 670, #ops: 1, parent:433] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 434
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-434/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(217): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (434(f=1.0), 433(f=2.0), )
Selected to next generation: IDs2--> (434(f=1.0), )
----------Running generation: 218, population size: 1

***** Generation 218 : 0
**Parent Variant: [Variant id: 435, #gens: 671, #ops: 0, parent:-]

--Child created id: 436
--Creating new operations for variant [Variant id: 436, #gens: 671, #ops: 0, parent:435]
---analyzing modificationPoint position: 432
location: ExpandableStatefulODE.java288
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data primaryMapper.insertEquationData(primaryState, completeState) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 436, #gens: 670, #ops: 1, parent:435] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 436
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-436/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(218): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data primaryMapper.insertEquationData(primaryState, completeState) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (436(f=1.0), 435(f=2.0), )
Selected to next generation: IDs2--> (436(f=1.0), )
----------Running generation: 219, population size: 1

***** Generation 219 : 0
**Parent Variant: [Variant id: 437, #gens: 671, #ops: 0, parent:-]

--Child created id: 438
--Creating new operations for variant [Variant id: 438, #gens: 671, #ops: 0, parent:437]
---analyzing modificationPoint position: 213
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [yDotKLast]
--> var from patch: yDotKLast spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java293
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < yDotKLast.length; ++k) { 	yDotKLast[k] = new double[dimension]; } ` -topatch--> `yDotKLast = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 293, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < yDotKLast.length; ++k) { 	yDotKLast[k] = new double[dimension]; } ` -topatch--> `yDotKLast = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 438, #gens: 672, #ops: 1, parent:437] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 438
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-438/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(219): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < yDotKLast.length; ++k) { 	yDotKLast[k] = new double[dimension]; } ` -topatch--> `yDotKLast = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (438(f=1.0), 437(f=2.0), )
Selected to next generation: IDs2--> (438(f=1.0), )
----------Running generation: 220, population size: 1

***** Generation 220 : 0
**Parent Variant: [Variant id: 439, #gens: 671, #ops: 0, parent:-]

--Child created id: 440
--Creating new operations for variant [Variant id: 440, #gens: 671, #ops: 0, parent:439]
---analyzing modificationPoint position: 631
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  // lnm is a log of a number in the range of 1.0 - 2.0, so 0 <= lnm < ln(2) double[] lnm = org.apache[...]
---analyzing modificationPoint position: 551
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [lns]
--> var from patch: lns spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1574
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double lna = lns[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1574, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double lna = lns[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 440, #gens: 672, #ops: 1, parent:439] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 440, errors: [FastMath.java:1575: error: variable lna is already defined in method pow(double,double)
		final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null); 		double lna = lns[0];
		                                                                               		       ^, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(220): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double result = org.apache.commons.math.util.FastMath.exp(lna, z, null) ` -topatch--> `double lna = lns[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (439(f=2.0), 440(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (439(f=2.0), )
----------Running generation: 221, population size: 1

***** Generation 221 : 0
**Parent Variant: [Variant id: 441, #gens: 671, #ops: 0, parent:-]

--Child created id: 442
--Creating new operations for variant [Variant id: 442, #gens: 671, #ops: 0, parent:441]
---analyzing modificationPoint position: 8
location: EventState.java329
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergenc[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 442, #gens: 670, #ops: 1, parent:441] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 442
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-442/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(221): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergenc[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (442(f=1.0), 441(f=2.0), )
Selected to next generation: IDs2--> (442(f=1.0), )
----------Running generation: 222, population size: 1

***** Generation 222 : 0
**Parent Variant: [Variant id: 443, #gens: 671, #ops: 0, parent:-]

--Child created id: 444
--Creating new operations for variant [Variant id: 444, #gens: 671, #ops: 0, parent:443]
---analyzing modificationPoint position: 18
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  // the event occurs during the current step occuringEvents.add(state)
---analyzing modificationPoint position: 50
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [interpolator, currentT]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: currentT spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java285
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `state.reinitializeBegin(interpolator) ` -topatch--> `interpolator.setInterpolatedTime(currentT)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 285, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `state.reinitializeBegin(interpolator) ` -topatch--> `interpolator.setInterpolatedTime(currentT)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 444, #gens: 672, #ops: 1, parent:443] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 444, errors: [AbstractIntegrator.java:361: error: illegal start of expression
			 * {@inheritDoc }
			 ^, AbstractIntegrator.java:361: error: illegal start of expression
			 * {@inheritDoc }
			   ^, AbstractIntegrator.java:361: error: illegal start of type
			 * {@inheritDoc }
			                ^, AbstractIntegrator.java:361: error: ';' expected
			 * {@inheritDoc }
			                 ^, AbstractIntegrator.java:362: error: illegal start of expression
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			  ^, AbstractIntegrator.java:362: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			   ^, AbstractIntegrator.java:362: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                  ^, AbstractIntegrator.java:362: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                         ^, AbstractIntegrator.java:362: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                       ^, AbstractIntegrator.java:362: error: illegal start of type
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                         ^, AbstractIntegrator.java:362: error: illegal start of type
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		^, AbstractIntegrator.java:362: error: ')' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		                                                              ^, AbstractIntegrator.java:362: error: <identifier> expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		                                                                             ^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(222): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `state.reinitializeBegin(interpolator) ` -topatch--> `interpolator.setInterpolatedTime(currentT)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (443(f=2.0), 444(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (443(f=2.0), )
----------Running generation: 223, population size: 1

***** Generation 223 : 0
**Parent Variant: [Variant id: 445, #gens: 671, #ops: 0, parent:-]

--Child created id: 446
--Creating new operations for variant [Variant id: 446, #gens: 671, #ops: 0, parent:445]
---analyzing modificationPoint position: 232
location: EmbeddedRungeKuttaIntegrator.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepStart = acceptStep(interpolator, y, yDotTmp, t) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 446, #gens: 670, #ops: 1, parent:445] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 446
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-446/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->86836
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 86836
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(223): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stepStart = acceptStep(interpolator, y, yDotTmp, t) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (445(f=2.0), 446(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (445(f=2.0), )
----------Running generation: 224, population size: 1

***** Generation 224 : 0
**Parent Variant: [Variant id: 447, #gens: 671, #ops: 0, parent:-]

--Child created id: 448
--Creating new operations for variant [Variant id: 448, #gens: 671, #ops: 0, parent:447]
---analyzing modificationPoint position: 85
---modifPoint 0 not mutation generated in  double ga = g0
---analyzing modificationPoint position: 601
Templates availables54
Attempts Base Ingredients  1 total 54
---modifPoint 1 not mutation generated in  // Make lexicographically ordered as a two's-complement integer. if (xInt < 0) { 	xInt = org.apache.[...]
---analyzing modificationPoint position: 95
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [interpolator, t0]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: t0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java276
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `interpolator.setInterpolatedTime(t0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 276, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `interpolator.setInterpolatedTime(t0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 448, #gens: 672, #ops: 1, parent:447] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 448
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-448/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(224): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `interpolator.setInterpolatedTime(t0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (448(f=1.0), 447(f=2.0), )
Selected to next generation: IDs2--> (448(f=1.0), )
----------Running generation: 225, population size: 1

***** Generation 225 : 0
**Parent Variant: [Variant id: 449, #gens: 671, #ops: 0, parent:-]

--Child created id: 450
--Creating new operations for variant [Variant id: 450, #gens: 671, #ops: 0, parent:449]
---analyzing modificationPoint position: 104
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java201
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 201, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 450, #gens: 672, #ops: 1, parent:449] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 450
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-450/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(225): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (450(f=1.0), 449(f=2.0), )
Selected to next generation: IDs2--> (450(f=1.0), )
----------Running generation: 226, population size: 1

***** Generation 226 : 0
**Parent Variant: [Variant id: 451, #gens: 671, #ops: 0, parent:-]

--Child created id: 452
--Creating new operations for variant [Variant id: 452, #gens: 671, #ops: 0, parent:451]
---analyzing modificationPoint position: 28
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  currentEvent.stepAccepted(eventT, eventY)
---analyzing modificationPoint position: 349
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [this.secondaryMappers]
--> var from patch: this.secondaryMappers spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java254
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = y ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 254, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = y ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 452, #gens: 671, #ops: 1, parent:451] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 452
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-452/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(226): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = y ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (452(f=1.0), 451(f=2.0), )
Selected to next generation: IDs2--> (452(f=1.0), )
----------Running generation: 227, population size: 1

***** Generation 227 : 0
**Parent Variant: [Variant id: 453, #gens: 671, #ops: 0, parent:-]

--Child created id: 454
--Creating new operations for variant [Variant id: 454, #gens: 671, #ops: 0, parent:453]
---analyzing modificationPoint position: 517
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (y == x) { 	return y; }
---analyzing modificationPoint position: 574
Templates availables275
Attempts Base Ingredients  1 total 275
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableWriteImpl
location: FastMath.java1246
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Add  a = y + lnHiPrecCoef */ aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0[...] ` -topatch--> `x = -x` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1246, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Add  a = y + lnHiPrecCoef */ aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0[...] ` -topatch--> `x = -x` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 454, #gens: 671, #ops: 1, parent:453] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 454, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(227): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Add  a = y + lnHiPrecCoef */ aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0[...] ` -topatch--> `x = -x` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (453(f=2.0), 454(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (453(f=2.0), )
----------Running generation: 228, population size: 1

***** Generation 228 : 0
**Parent Variant: [Variant id: 455, #gens: 671, #ops: 0, parent:-]

--Child created id: 456
--Creating new operations for variant [Variant id: 456, #gens: 671, #ops: 0, parent:455]
---analyzing modificationPoint position: 160
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }
---analyzing modificationPoint position: 359
location: AbstractStepInterpolator.java484
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `finalized = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 456, #gens: 670, #ops: 1, parent:455] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 456
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-456/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(228): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `finalized = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (456(f=1.0), 455(f=2.0), )
Selected to next generation: IDs2--> (456(f=1.0), )
----------Running generation: 229, population size: 1

***** Generation 229 : 0
**Parent Variant: [Variant id: 457, #gens: 671, #ops: 0, parent:-]

--Child created id: 458
--Creating new operations for variant [Variant id: 458, #gens: 671, #ops: 0, parent:457]
---analyzing modificationPoint position: 594
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if ((x < 0) && (y != x)) { 	y--; }
---analyzing modificationPoint position: 509
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java177
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `searchMax = max ` -topatch--> `return evaluations.getMaximalCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 177, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `searchMax = max ` -topatch--> `return evaluations.getMaximalCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 458, #gens: 672, #ops: 1, parent:457] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 458, errors: [BaseAbstractUnivariateRealSolver.java:178: error: incompatible types: unexpected return value
		searchMax = max; 		return evaluations.getMaximalCount();
		                 		                                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(229): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `searchMax = max ` -topatch--> `return evaluations.getMaximalCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (457(f=2.0), 458(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (457(f=2.0), )
----------Running generation: 230, population size: 1

***** Generation 230 : 0
**Parent Variant: [Variant id: 459, #gens: 671, #ops: 0, parent:-]

--Child created id: 460
--Creating new operations for variant [Variant id: 460, #gens: 671, #ops: 0, parent:459]
---analyzing modificationPoint position: 210
---modifPoint 0 not mutation generated in  return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...]
---analyzing modificationPoint position: 487
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  statesInitialized = false
---analyzing modificationPoint position: 335
location: AbstractStepInterpolator.java177
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `h = interpolator.h ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 460, #gens: 670, #ops: 1, parent:459] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 460
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-460/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(230): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `h = interpolator.h ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (460(f=1.0), 459(f=2.0), )
Selected to next generation: IDs2--> (460(f=1.0), )
----------Running generation: 231, population size: 1

***** Generation 231 : 0
**Parent Variant: [Variant id: 461, #gens: 671, #ops: 0, parent:-]

--Child created id: 462
--Creating new operations for variant [Variant id: 462, #gens: 671, #ops: 0, parent:461]
---analyzing modificationPoint position: 426
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  // prepare expandable stateful equations final org.apache.commons.math.ode.ExpandableStatefulODE exp[...]
---analyzing modificationPoint position: 56
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch []
location: AbstractIntegrator.java363
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = isLastStep || state.stop() ` -topatch--> `setMaxEvaluations(-1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 363, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = isLastStep || state.stop() ` -topatch--> `setMaxEvaluations(-1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 462, #gens: 672, #ops: 1, parent:461] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 462
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-462/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(231): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = isLastStep || state.stop() ` -topatch--> `setMaxEvaluations(-1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (462(f=1.0), 461(f=2.0), )
Selected to next generation: IDs2--> (462(f=1.0), )
----------Running generation: 232, population size: 1

***** Generation 232 : 0
**Parent Variant: [Variant id: 463, #gens: 671, #ops: 0, parent:-]

--Child created id: 464
--Creating new operations for variant [Variant id: 464, #gens: 671, #ops: 0, parent:463]
---analyzing modificationPoint position: 86
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  for (int i = 0; i < n; ++i) {  	// evaluate handler value at the end of the substep 	final double tb[...]
---analyzing modificationPoint position: 593
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  y = ((long) (x))
---analyzing modificationPoint position: 236
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 2 not mutation generated in  // stepsize control for next step final double factor =  org.apache.commons.math.util.FastMath.min(m[...]
---analyzing modificationPoint position: 194
location: DormandPrince853StepInterpolator.java249
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 464, #gens: 670, #ops: 1, parent:463] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 464
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-464/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(232): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (464(f=1.0), 463(f=2.0), )
Selected to next generation: IDs2--> (464(f=1.0), )
----------Running generation: 233, population size: 1

***** Generation 233 : 0
**Parent Variant: [Variant id: 465, #gens: 671, #ops: 0, parent:-]

--Child created id: 466
--Creating new operations for variant [Variant id: 466, #gens: 671, #ops: 0, parent:465]
---analyzing modificationPoint position: 540
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableWriteImpl
location: FastMath.java1558
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `lna = tmp2 ` -topatch--> `x = -x` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1558, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `lna = tmp2 ` -topatch--> `x = -x` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 466, #gens: 672, #ops: 1, parent:465] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 466, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(233): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `lna = tmp2 ` -topatch--> `x = -x` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (465(f=2.0), 466(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (465(f=2.0), )
----------Running generation: 234, population size: 1

***** Generation 234 : 0
**Parent Variant: [Variant id: 467, #gens: 671, #ops: 0, parent:-]

--Child created id: 468
--Creating new operations for variant [Variant id: 468, #gens: 671, #ops: 0, parent:467]
---analyzing modificationPoint position: 345
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [interpolatedTime, java.lang.Double.NaN]
--> var from patch: interpolatedTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java250
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 250, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 468, #gens: 672, #ops: 1, parent:467] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 468, errors: [AbstractStepInterpolator.java:605: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:607: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:608: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:608: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:608: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:608: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:608: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:609: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:609: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:609: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:609: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:609: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:610: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:611: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:611: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:612: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:613: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:613: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:611: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:614: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:614: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:614: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:615: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:615: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:616: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:616: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:628: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:628: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:628: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:628: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:632: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:632: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:636: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:636: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:641: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:641: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:646: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:646: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:648: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:648: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:650: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:650: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:650: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:650: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:652: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:652: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:663: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:663: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:663: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:663: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:663: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:663: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:665: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:665: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:665: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:668: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:668: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:670: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:670: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:672: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:674: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:674: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:674: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:709: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:709: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:712: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:712: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(234): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (467(f=2.0), 468(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (467(f=2.0), )
----------Running generation: 235, population size: 1

***** Generation 235 : 0
**Parent Variant: [Variant id: 469, #gens: 671, #ops: 0, parent:-]

--Child created id: 470
--Creating new operations for variant [Variant id: 470, #gens: 671, #ops: 0, parent:469]
---analyzing modificationPoint position: 425
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  if (y.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionMi[...]
---analyzing modificationPoint position: 32
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 1 not mutation generated in  this.softCurrentTime = softCurrentTime
---analyzing modificationPoint position: 438
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 2 not mutation generated in  final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h
---analyzing modificationPoint position: 71
location: EventState.java154
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = interpolator.getPreviousTime() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 470, #gens: 670, #ops: 1, parent:469] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 470
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-470/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(235): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = interpolator.getPreviousTime() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (469(f=2.0), 470(f=2.0), )
Selected to next generation: IDs2--> (469(f=2.0), )
----------Running generation: 236, population size: 1

***** Generation 236 : 0
**Parent Variant: [Variant id: 471, #gens: 671, #ops: 0, parent:-]

--Child created id: 472
--Creating new operations for variant [Variant id: 472, #gens: 671, #ops: 0, parent:471]
---analyzing modificationPoint position: 117
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, signChangeIndex, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java252
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextX = guessX(targetY, tmpX, y, start, end) ` -topatch--> `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 252, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextX = guessX(targetY, tmpX, y, start, end) ` -topatch--> `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 472, #gens: 672, #ops: 1, parent:471] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 472, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                           ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                      ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                            ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                           ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                      ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                                           ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                                                     ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(236): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextX = guessX(targetY, tmpX, y, start, end) ` -topatch--> `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (471(f=2.0), 472(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (471(f=2.0), )
----------Running generation: 237, population size: 1

***** Generation 237 : 0
**Parent Variant: [Variant id: 473, #gens: 671, #ops: 0, parent:-]

--Child created id: 474
--Creating new operations for variant [Variant id: 474, #gens: 671, #ops: 0, parent:473]
---analyzing modificationPoint position: 31
location: AbstractIntegrator.java331
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 474, #gens: 670, #ops: 1, parent:473] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 474
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-474/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(237): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (474(f=1.0), 473(f=2.0), )
Selected to next generation: IDs2--> (474(f=1.0), )
----------Running generation: 238, population size: 1

***** Generation 238 : 0
**Parent Variant: [Variant id: 475, #gens: 671, #ops: 0, parent:-]

--Child created id: 476
--Creating new operations for variant [Variant id: 476, #gens: 671, #ops: 0, parent:475]
---analyzing modificationPoint position: 370
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  interpolatedTime = java.lang.Double.NaN
---analyzing modificationPoint position: 579
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  /* Multiply a = y * x */ aa = ya * xa
---analyzing modificationPoint position: 84
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [this.solver]
--> var from patch: this.solver spoon.support.reflect.code.CtFieldWriteImpl
location: EventState.java207
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ta = t0 ` -topatch--> `this.solver = solver` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 207, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ta = t0 ` -topatch--> `this.solver = solver` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 476, #gens: 672, #ops: 1, parent:475] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 476, errors: [EventState.java:206: error: cannot assign a value to final variable solver
		}; 		this.solver = solver;
		   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(238): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ta = t0 ` -topatch--> `this.solver = solver` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (475(f=2.0), 476(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (475(f=2.0), )
----------Running generation: 239, population size: 1

***** Generation 239 : 0
**Parent Variant: [Variant id: 477, #gens: 671, #ops: 0, parent:-]

--Child created id: 478
--Creating new operations for variant [Variant id: 478, #gens: 671, #ops: 0, parent:477]
---analyzing modificationPoint position: 456
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [resetOccurred]
--> var from patch: resetOccurred spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java386
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t) ` -topatch--> `resetOccurred = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 386, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t) ` -topatch--> `resetOccurred = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 478, #gens: 672, #ops: 1, parent:477] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 478
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-478/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(239): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dt = org.apache.commons.math.util.FastMath.abs(equations.getTime() - t) ` -topatch--> `resetOccurred = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (478(f=1.0), 477(f=2.0), )
Selected to next generation: IDs2--> (478(f=1.0), )
----------Running generation: 240, population size: 1

***** Generation 240 : 0
**Parent Variant: [Variant id: 479, #gens: 671, #ops: 0, parent:-]

--Child created id: 480
--Creating new operations for variant [Variant id: 480, #gens: 671, #ops: 0, parent:479]
---analyzing modificationPoint position: 71
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  t0 = interpolator.getPreviousTime()
---analyzing modificationPoint position: 304
location: AdaptiveStepsizeIntegrator.java331
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filteredH > maxStep) { 	filteredH = maxStep; } else if (filteredH < (-maxStep)) { 	filteredH = -[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 480, #gens: 670, #ops: 1, parent:479] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 480
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-480/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(240): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filteredH > maxStep) { 	filteredH = maxStep; } else if (filteredH < (-maxStep)) { 	filteredH = -[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (480(f=1.0), 479(f=2.0), )
Selected to next generation: IDs2--> (480(f=1.0), )
----------Running generation: 241, population size: 1

***** Generation 241 : 0
**Parent Variant: [Variant id: 481, #gens: 671, #ops: 0, parent:-]

--Child created id: 482
--Creating new operations for variant [Variant id: 482, #gens: 671, #ops: 0, parent:481]
---analyzing modificationPoint position: 404
location: AbstractIntegrator.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 482, #gens: 670, #ops: 1, parent:481] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 482
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-482/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(241): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (482(f=1.0), 481(f=2.0), )
Selected to next generation: IDs2--> (482(f=1.0), )
----------Running generation: 242, population size: 1

***** Generation 242 : 0
**Parent Variant: [Variant id: 483, #gens: 671, #ops: 0, parent:-]

--Child created id: 484
--Creating new operations for variant [Variant id: 484, #gens: 671, #ops: 0, parent:483]
---analyzing modificationPoint position: 93
location: EventState.java274
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no event during the whole step pendingEvent = false ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 484, #gens: 670, #ops: 1, parent:483] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 484
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-484/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(242): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// no event during the whole step pendingEvent = false ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (484(f=1.0), 483(f=2.0), )
Selected to next generation: IDs2--> (484(f=1.0), )
----------Running generation: 243, population size: 1

***** Generation 243 : 0
**Parent Variant: [Variant id: 485, #gens: 671, #ops: 0, parent:-]

--Child created id: 486
--Creating new operations for variant [Variant id: 486, #gens: 671, #ops: 0, parent:485]
---analyzing modificationPoint position: 118
location: BracketingNthOrderBrentSolver.java254
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 486, #gens: 670, #ops: 1, parent:485] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 486
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-486/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(243): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (486(f=1.0), 485(f=2.0), )
Selected to next generation: IDs2--> (486(f=1.0), )
----------Running generation: 244, population size: 1

***** Generation 244 : 0
**Parent Variant: [Variant id: 487, #gens: 671, #ops: 0, parent:-]

--Child created id: 488
--Creating new operations for variant [Variant id: 488, #gens: 671, #ops: 0, parent:487]
---analyzing modificationPoint position: 276
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [this.maxGrowth]
--> var from patch: this.maxGrowth spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java282
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...] ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 282, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...] ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 488, #gens: 672, #ops: 1, parent:487] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 488, errors: [EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 * Get the minimal reduction factor for stepsize control.
	 ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	      ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                  ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                                   ^, EmbeddedRungeKuttaIntegrator.java:361: error: '(' expected
	 * Get the minimal reduction factor for stepsize control.
	                                       ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 * Get the minimal reduction factor for stepsize control.
	                                                        ^, EmbeddedRungeKuttaIntegrator.java:363: error: illegal start of expression
	 * @return minimal reduction factor
	 ^, EmbeddedRungeKuttaIntegrator.java:363: error: <identifier> expected
	 * @return minimal reduction factor
	    ^, EmbeddedRungeKuttaIntegrator.java:363: error: ';' expected
	 * @return minimal reduction factor
	                  ^, EmbeddedRungeKuttaIntegrator.java:364: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	  ^, EmbeddedRungeKuttaIntegrator.java:364: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:364: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:364: error: variable declaration not allowed here
	 */ 	public double getMinReduction() { 		return minReduction;} 	/**
	    	              ^, EmbeddedRungeKuttaIntegrator.java:369: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:369: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	       ^, EmbeddedRungeKuttaIntegrator.java:369: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	                           ^, EmbeddedRungeKuttaIntegrator.java:369: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;} 	/**
	    	                                                     ^, EmbeddedRungeKuttaIntegrator.java:373: error: illegal start of expression
	 */ 	public double getMaxGrowth() { 		return maxGrowth;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:373: error: ';' expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;} 	/**
	    	                          ^, EmbeddedRungeKuttaIntegrator.java:378: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	^, EmbeddedRungeKuttaIntegrator.java:378: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	       ^, EmbeddedRungeKuttaIntegrator.java:378: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	                        ^, EmbeddedRungeKuttaIntegrator.java:378: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;} 	/**
	    	                                               ^, EmbeddedRungeKuttaIntegrator.java:390: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	^, EmbeddedRungeKuttaIntegrator.java:390: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                       ^, EmbeddedRungeKuttaIntegrator.java:390: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                         ^, EmbeddedRungeKuttaIntegrator.java:390: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                 ^, EmbeddedRungeKuttaIntegrator.java:390: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                     ^, EmbeddedRungeKuttaIntegrator.java:390: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                   ^, EmbeddedRungeKuttaIntegrator.java:390: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                           ^, EmbeddedRungeKuttaIntegrator.java:390: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                            ^, EmbeddedRungeKuttaIntegrator.java:390: error: reached end of file while parsing
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(244): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...] ` -topatch--> `this.maxGrowth = maxGrowth` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (487(f=2.0), 488(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (487(f=2.0), )
----------Running generation: 245, population size: 1

***** Generation 245 : 0
**Parent Variant: [Variant id: 489, #gens: 671, #ops: 0, parent:-]

--Child created id: 490
--Creating new operations for variant [Variant id: 490, #gens: 671, #ops: 0, parent:489]
---analyzing modificationPoint position: 36
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [g0Positive, g0]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: g0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java256
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 256, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 490, #gens: 671, #ops: 1, parent:489] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 490
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-490/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(245): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `g0Positive = g0 >= 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (489(f=2.0), 490(f=2.0), )
Selected to next generation: IDs2--> (489(f=2.0), )
----------Running generation: 246, population size: 1

***** Generation 246 : 0
**Parent Variant: [Variant id: 491, #gens: 671, #ops: 0, parent:-]

--Child created id: 492
--Creating new operations for variant [Variant id: 492, #gens: 671, #ops: 0, parent:491]
---analyzing modificationPoint position: 327
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...]
---analyzing modificationPoint position: 25
location: AbstractStepInterpolator.java320
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.softPreviousTime = softPreviousTime ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 492, #gens: 670, #ops: 1, parent:491] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 492
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-492/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(246): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.softPreviousTime = softPreviousTime ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (492(f=1.0), 491(f=2.0), )
Selected to next generation: IDs2--> (492(f=1.0), )
----------Running generation: 247, population size: 1

***** Generation 247 : 0
**Parent Variant: [Variant id: 493, #gens: 671, #ops: 0, parent:-]

--Child created id: 494
--Creating new operations for variant [Variant id: 494, #gens: 671, #ops: 0, parent:493]
---analyzing modificationPoint position: 210
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: DormandPrince853Integrator.java283
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...] ` -topatch--> `double error2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator line: 283, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...] ` -topatch--> `double error2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 494, #gens: 672, #ops: 1, parent:493] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 494, errors: [DormandPrince853Integrator.java:282: error: variable error2 is already defined in method estimateError(double[][],double[],double[],double)
		} 		double error2 = 0;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(247): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...] ` -topatch--> `double error2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (493(f=2.0), 494(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (493(f=2.0), )
----------Running generation: 248, population size: 1

***** Generation 248 : 0
**Parent Variant: [Variant id: 495, #gens: 671, #ops: 0, parent:-]

--Child created id: 496
--Creating new operations for variant [Variant id: 496, #gens: 671, #ops: 0, parent:495]
---analyzing modificationPoint position: 164
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  final double[] yTmp = new double[currentState.length]
---analyzing modificationPoint position: 393
---modifPoint 1 not mutation generated in  // search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...]
---analyzing modificationPoint position: 106
---modifPoint 2 not mutation generated in  double yB = y[signChangeIndex]
---analyzing modificationPoint position: 304
location: AdaptiveStepsizeIntegrator.java331
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filteredH > maxStep) { 	filteredH = maxStep; } else if (filteredH < (-maxStep)) { 	filteredH = -[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 496, #gens: 670, #ops: 1, parent:495] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 496
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-496/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(248): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filteredH > maxStep) { 	filteredH = maxStep; } else if (filteredH < (-maxStep)) { 	filteredH = -[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (496(f=1.0), 495(f=2.0), )
Selected to next generation: IDs2--> (496(f=1.0), )
----------Running generation: 249, population size: 1

***** Generation 249 : 0
**Parent Variant: [Variant id: 497, #gens: 671, #ops: 0, parent:-]

--Child created id: 498
--Creating new operations for variant [Variant id: 498, #gens: 671, #ops: 0, parent:497]
---analyzing modificationPoint position: 482
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  this.name = name
---analyzing modificationPoint position: 376
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [interpolatedDerivatives]
--> var from patch: interpolatedDerivatives spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java123
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `interpolatedDerivatives = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 123, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `interpolatedDerivatives = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 498, #gens: 671, #ops: 1, parent:497] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 498
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-498/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(249): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `interpolatedDerivatives = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (498(f=1.0), 497(f=2.0), )
Selected to next generation: IDs2--> (498(f=1.0), )
----------Running generation: 250, population size: 1

***** Generation 250 : 0
**Parent Variant: [Variant id: 499, #gens: 671, #ops: 0, parent:-]

--Child created id: 500
--Creating new operations for variant [Variant id: 500, #gens: 671, #ops: 0, parent:499]
---analyzing modificationPoint position: 485
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  stepSize = java.lang.Double.NaN
---analyzing modificationPoint position: 623
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [hiPrec]
--> var from patch: hiPrec spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java902
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * epsilon) + 1.0 ` -topatch--> `double ya = hiPrec[0] + hiPrec[1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 902, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * epsilon) + 1.0 ` -topatch--> `double ya = hiPrec[0] + hiPrec[1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 500, #gens: 672, #ops: 1, parent:499] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 500, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(250): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * epsilon) + 1.0 ` -topatch--> `double ya = hiPrec[0] + hiPrec[1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (499(f=2.0), 500(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (499(f=2.0), )
----------Running generation: 251, population size: 1

***** Generation 251 : 0
**Parent Variant: [Variant id: 501, #gens: 671, #ops: 0, parent:-]

--Child created id: 502
--Creating new operations for variant [Variant id: 502, #gens: 671, #ops: 0, parent:501]
---analyzing modificationPoint position: 528
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [java.lang.Double.POSITIVE_INFINITY]
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: FastMath.java1517
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `/* Handle special case x<0 */ if (x < 0) { 	// y is an even integer in this case 	if ((y >= org.apac[...] ` -topatch--> `return java.lang.Double.POSITIVE_INFINITY` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1517, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `/* Handle special case x<0 */ if (x < 0) { 	// y is an even integer in this case 	if ((y >= org.apac[...] ` -topatch--> `return java.lang.Double.POSITIVE_INFINITY` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 502, #gens: 672, #ops: 1, parent:501] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 502, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(251): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `/* Handle special case x<0 */ if (x < 0) { 	// y is an even integer in this case 	if ((y >= org.apac[...] ` -topatch--> `return java.lang.Double.POSITIVE_INFINITY` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (501(f=2.0), 502(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (501(f=2.0), )
----------Running generation: 252, population size: 1

***** Generation 252 : 0
**Parent Variant: [Variant id: 503, #gens: 671, #ops: 0, parent:-]

--Child created id: 504
--Creating new operations for variant [Variant id: 504, #gens: 671, #ops: 0, parent:503]
---analyzing modificationPoint position: 327
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch []
location: AdaptiveStepsizeIntegrator.java229
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `resetInternalState()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 229, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `resetInternalState()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 504, #gens: 672, #ops: 1, parent:503] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 504
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-504/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(252): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `resetInternalState()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (504(f=1.0), 503(f=2.0), )
Selected to next generation: IDs2--> (504(f=1.0), )
----------Running generation: 253, population size: 1

***** Generation 253 : 0
**Parent Variant: [Variant id: 505, #gens: 671, #ops: 0, parent:-]

--Child created id: 506
--Creating new operations for variant [Variant id: 506, #gens: 671, #ops: 0, parent:505]
---analyzing modificationPoint position: 556
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...]
---analyzing modificationPoint position: 272
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [this.safety]
--> var from patch: this.safety spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java274
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < stages; ++l) { 	sum += b[l] * yDotK[l][j]; } ` -topatch--> `this.safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 274, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < stages; ++l) { 	sum += b[l] * yDotK[l][j]; } ` -topatch--> `this.safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 506, #gens: 672, #ops: 1, parent:505] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 506
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-506/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(253): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < stages; ++l) { 	sum += b[l] * yDotK[l][j]; } ` -topatch--> `this.safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (506(f=1.0), 505(f=2.0), )
Selected to next generation: IDs2--> (506(f=1.0), )
----------Running generation: 254, population size: 1

***** Generation 254 : 0
**Parent Variant: [Variant id: 507, #gens: 671, #ops: 0, parent:-]

--Child created id: 508
--Creating new operations for variant [Variant id: 508, #gens: 671, #ops: 0, parent:507]
---analyzing modificationPoint position: 558
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1221
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double aa = (epsilon + tmp) - tmp ` -topatch--> `// Accurracy suffers between 1.5 and PI/2 final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1221, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double aa = (epsilon + tmp) - tmp ` -topatch--> `// Accurracy suffers between 1.5 and PI/2 final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 508, #gens: 671, #ops: 1, parent:507] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 508, errors: [FastMath.java:2409: error: illegal start of expression
	 * Compute log(1 + x).
	 ^, FastMath.java:2409: error: ';' expected
	 * Compute log(1 + x).
	          ^, FastMath.java:2409: error: <identifier> expected
	 * Compute log(1 + x).
	                      ^, FastMath.java:2411: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2411: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2412: error: not a statement
	 * 		a number
	 ^, FastMath.java:2412: error: ';' expected
	 * 		a number
	   		 ^, FastMath.java:2413: error: <identifier> expected
	 * @return log(1 + x)
	    ^, FastMath.java:2413: error: not a statement
	 * @return log(1 + x)
	 ^, FastMath.java:2413: error: ';' expected
	 * @return log(1 + x)
	              ^, FastMath.java:2413: error: not a statement
	 * @return log(1 + x)
	                 ^, FastMath.java:2413: error: ';' expected
	 * @return log(1 + x)
	                    ^, FastMath.java:2414: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	^, FastMath.java:2414: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	       ^, FastMath.java:2414: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	             ^, FastMath.java:2414: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                           ^, FastMath.java:2414: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                ^, FastMath.java:2414: error: not a statement
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                        ^, FastMath.java:2414: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                         ^, FastMath.java:2423: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	^, FastMath.java:2423: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	       ^, FastMath.java:2423: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	             ^, FastMath.java:2423: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                           ^, FastMath.java:2423: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                ^, FastMath.java:2423: error: not a statement
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                        ^, FastMath.java:2423: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                         ^, FastMath.java:2441: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	^, FastMath.java:2441: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	       ^, FastMath.java:2441: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	             ^, FastMath.java:2441: error: '.class' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                ^, FastMath.java:2441: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                    ^, FastMath.java:2441: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                              ^, FastMath.java:2449: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	^, FastMath.java:2449: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	       ^, FastMath.java:2449: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	             ^, FastMath.java:2449: error: '.class' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                ^, FastMath.java:2449: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                 ^, FastMath.java:2449: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                           ^, FastMath.java:2464: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	^, FastMath.java:2464: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	        ^, FastMath.java:2464: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	              ^, FastMath.java:2464: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                               ^, FastMath.java:2464: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                    ^, FastMath.java:2464: error: not a statement
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                            ^, FastMath.java:2464: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                             ^, FastMath.java:2465: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2465: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2465: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2465: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2465: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2465: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2465: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2465: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2466: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2466: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2466: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2466: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2468: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2469: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2469: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2470: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2470: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2470: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2470: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2471: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2471: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2471: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2471: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2471: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2480: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2480: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2480: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2480: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2480: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2480: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2485: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2487: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2487: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2487: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2488: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2488: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2489: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2489: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2490: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2490: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2491: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2491: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2492: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2492: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2504: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2504: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2529: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2529: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2529: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2529: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2529: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2529: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2529: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2530: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2530: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^]
Ingredient counter is Zero
---Undoing: gnrtn(254): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double aa = (epsilon + tmp) - tmp ` -topatch--> `// Accurracy suffers between 1.5 and PI/2 final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (507(f=2.0), 508(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (507(f=2.0), )
----------Running generation: 255, population size: 1

***** Generation 255 : 0
**Parent Variant: [Variant id: 509, #gens: 671, #ops: 0, parent:-]

--Child created id: 510
--Creating new operations for variant [Variant id: 510, #gens: 671, #ops: 0, parent:509]
---analyzing modificationPoint position: 29
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [eventT]
--> var from patch: eventT spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java324
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = currentEvent.stop() ` -topatch--> `return eventT` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 324, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = currentEvent.stop() ` -topatch--> `return eventT` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 510, #gens: 672, #ops: 1, parent:509] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 510, errors: [AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(255): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = currentEvent.stop() ` -topatch--> `return eventT` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (509(f=2.0), 510(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (509(f=2.0), )
----------Running generation: 256, population size: 1

***** Generation 256 : 0
**Parent Variant: [Variant id: 511, #gens: 671, #ops: 0, parent:-]

--Child created id: 512
--Creating new operations for variant [Variant id: 512, #gens: 671, #ops: 0, parent:511]
---analyzing modificationPoint position: 252
location: EmbeddedRungeKuttaIntegrator.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxGrowth(10.0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 512, #gens: 670, #ops: 1, parent:511] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 512
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-512/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(256): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxGrowth(10.0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (512(f=1.0), 511(f=2.0), )
Selected to next generation: IDs2--> (512(f=1.0), )
----------Running generation: 257, population size: 1

***** Generation 257 : 0
**Parent Variant: [Variant id: 513, #gens: 671, #ops: 0, parent:-]

--Child created id: 514
--Creating new operations for variant [Variant id: 514, #gens: 671, #ops: 0, parent:513]
---analyzing modificationPoint position: 165
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  final double pT = getGlobalPreviousTime()
---analyzing modificationPoint position: 536
---modifPoint 1 not mutation generated in  double lnb = lns[1]
---analyzing modificationPoint position: 476
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [secondaryMappers]
--> var from patch: secondaryMappers spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java305
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the step is not finalized anymore finalized = false ` -topatch--> `secondaryMappers = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 305, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the step is not finalized anymore finalized = false ` -topatch--> `secondaryMappers = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 514, #gens: 672, #ops: 1, parent:513] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 514
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-514/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(257): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the step is not finalized anymore finalized = false ` -topatch--> `secondaryMappers = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (514(f=1.0), 513(f=2.0), )
Selected to next generation: IDs2--> (514(f=1.0), )
----------Running generation: 258, population size: 1

***** Generation 258 : 0
**Parent Variant: [Variant id: 515, #gens: 671, #ops: 0, parent:-]

--Child created id: 516
--Creating new operations for variant [Variant id: 516, #gens: 671, #ops: 0, parent:515]
---analyzing modificationPoint position: 574
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  /* Add  a = y + lnHiPrecCoef */ aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0[...]
---analyzing modificationPoint position: 155
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  final double dot5 = theta2 * (3 + (theta * ((-12) + (theta * (15 - (6 * theta))))))
---analyzing modificationPoint position: 473
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 2 not mutation generated in  softCurrentTime = globalCurrentTime
---analyzing modificationPoint position: 503
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [searchMax]
--> var from patch: searchMax spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMax ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 116, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMax ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 516, #gens: 671, #ops: 1, parent:515] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 516
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-516/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(258): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMax ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (516(f=1.0), 515(f=2.0), )
Selected to next generation: IDs2--> (516(f=1.0), )
----------Running generation: 259, population size: 1

***** Generation 259 : 0
**Parent Variant: [Variant id: 517, #gens: 671, #ops: 0, parent:-]

--Child created id: 518
--Creating new operations for variant [Variant id: 518, #gens: 671, #ops: 0, parent:517]
---analyzing modificationPoint position: 444
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  final int n = primary.getDimension()
---analyzing modificationPoint position: 158
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  interpolatedState[i] = currentState[i] -  (oneMinusThetaH * (v[0][i] -  (theta * (v[1][i] +  (theta [...]
---analyzing modificationPoint position: 109
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java211
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 211, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 518, #gens: 672, #ops: 1, parent:517] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 518, errors: [BracketingNthOrderBrentSolver.java:213: error: variable y is already defined in method doSolve()
			(getRelativeAccuracy() * org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(xA), org.apache.commons.math.util.FastMath.abs(xB))); 			final double[] y = new double[maximalOrder + 1];
			                                                                                                                                                                   			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(259): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (517(f=2.0), 518(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (517(f=2.0), )
----------Running generation: 260, population size: 1

***** Generation 260 : 0
**Parent Variant: [Variant id: 519, #gens: 671, #ops: 0, parent:-]

--Child created id: 520
--Creating new operations for variant [Variant id: 520, #gens: 671, #ops: 0, parent:519]
---analyzing modificationPoint position: 68
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  previousEventTime = java.lang.Double.NaN
---analyzing modificationPoint position: 594
location: FastMath.java3346
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((x < 0) && (y != x)) { 	y--; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 520, #gens: 670, #ops: 1, parent:519] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 520, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(260): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((x < 0) && (y != x)) { 	y--; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (519(f=2.0), 520(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (519(f=2.0), )
----------Running generation: 261, population size: 1

***** Generation 261 : 0
**Parent Variant: [Variant id: 521, #gens: 671, #ops: 0, parent:-]

--Child created id: 522
--Creating new operations for variant [Variant id: 522, #gens: 671, #ops: 0, parent:521]
---analyzing modificationPoint position: 530
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  double tmp1 = y * org.apache.commons.math.util.FastMath.HEX_40000000
---analyzing modificationPoint position: 536
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1552
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnb = lns[1] ` -topatch--> `double[] hiPrec = new double[2]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1552, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnb = lns[1] ` -topatch--> `double[] hiPrec = new double[2]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 522, #gens: 671, #ops: 1, parent:521] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 522, errors: [FastMath.java:1558: error: cannot find symbol
		lnb += lna - tmp2;
		^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1563: error: cannot find symbol
		final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
		                                 ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1563: error: cannot find symbol
		final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
		                                               ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1566: error: cannot find symbol
		lnb = -((lna - aa) - ab);
		^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1569: error: cannot find symbol
		z = (z * lnb) + (1.0 / 24.0);
		         ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1570: error: cannot find symbol
		z = (z * lnb) + (1.0 / 6.0);
		         ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1571: error: cannot find symbol
		z = (z * lnb) + 0.5;
		         ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1572: error: cannot find symbol
		z = (z * lnb) + 1.0;
		         ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1573: error: cannot find symbol
		z = z * lnb;
		        ^
  symbol:   variable lnb
  location: class org.apache.commons.math.util.FastMath, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(261): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnb = lns[1] ` -topatch--> `double[] hiPrec = new double[2]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (521(f=2.0), 522(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (521(f=2.0), )
----------Running generation: 262, population size: 1

***** Generation 262 : 0
**Parent Variant: [Variant id: 523, #gens: 671, #ops: 0, parent:-]

--Child created id: 524
--Creating new operations for variant [Variant id: 524, #gens: 671, #ops: 0, parent:523]
---analyzing modificationPoint position: 261
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [stepStart, y, yDotK]
--> var from patch: stepStart spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yDotK spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java251
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `firstTime = false ` -topatch--> `// first stage computeDerivatives(stepStart, y, yDotK[0])` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 251, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `firstTime = false ` -topatch--> `// first stage computeDerivatives(stepStart, y, yDotK[0])` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 524, #gens: 672, #ops: 1, parent:523] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 524
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-524/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(262): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `firstTime = false ` -topatch--> `// first stage computeDerivatives(stepStart, y, yDotK[0])` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (524(f=1.0), 523(f=2.0), )
Selected to next generation: IDs2--> (524(f=1.0), )
----------Running generation: 263, population size: 1

***** Generation 263 : 0
**Parent Variant: [Variant id: 525, #gens: 671, #ops: 0, parent:-]

--Child created id: 526
--Creating new operations for variant [Variant id: 526, #gens: 671, #ops: 0, parent:525]
---analyzing modificationPoint position: 490
location: AbstractIntegrator.java94
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 526, #gens: 670, #ops: 1, parent:525] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 526
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-526/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(263): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (526(f=1.0), 525(f=2.0), )
Selected to next generation: IDs2--> (526(f=1.0), )
----------Running generation: 264, population size: 1

***** Generation 264 : 0
**Parent Variant: [Variant id: 527, #gens: 671, #ops: 0, parent:-]

--Child created id: 528
--Creating new operations for variant [Variant id: 528, #gens: 671, #ops: 0, parent:527]
---analyzing modificationPoint position: 45
location: BracketingNthOrderBrentSolver.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 528, #gens: 670, #ops: 1, parent:527] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 528, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex might not have been initialized
		double xA = x[signChangeIndex - 1];
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(264): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (527(f=2.0), 528(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (527(f=2.0), )
----------Running generation: 265, population size: 1

***** Generation 265 : 0
**Parent Variant: [Variant id: 529, #gens: 671, #ops: 0, parent:-]

--Child created id: 530
--Creating new operations for variant [Variant id: 530, #gens: 671, #ops: 0, parent:529]
---analyzing modificationPoint position: 628
Templates availables198
Attempts Base Ingredients  1 total 198
Name Conflict [x]
---modifPoint 0 not mutation generated in  if (extra != 0.0) { 	result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + [...]
---analyzing modificationPoint position: 6
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [resetOccurred]
--> var from patch: resetOccurred spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java342
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 342, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 530, #gens: 671, #ops: 1, parent:529] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 530
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-530/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(265): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (530(f=1.0), 529(f=2.0), )
Selected to next generation: IDs2--> (530(f=1.0), )
----------Running generation: 266, population size: 1

***** Generation 266 : 0
**Parent Variant: [Variant id: 531, #gens: 671, #ops: 0, parent:-]

--Child created id: 532
--Creating new operations for variant [Variant id: 532, #gens: 671, #ops: 0, parent:531]
---analyzing modificationPoint position: 43
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  eventsStates.add(new org.apache.commons.math.ode.events.EventState(handler, maxCheckInterval, conver[...]
---analyzing modificationPoint position: 170
location: DormandPrince853StepInterpolator.java410
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// k15 for (int j = 0; j < currentState.length; ++j) { 	s = (((((((((org.apache.commons.math.ode.non[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 532, #gens: 670, #ops: 1, parent:531] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 532
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-532/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(266): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// k15 for (int j = 0; j < currentState.length; ++j) { 	s = (((((((((org.apache.commons.math.ode.non[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (532(f=1.0), 531(f=2.0), )
Selected to next generation: IDs2--> (532(f=1.0), )
----------Running generation: 267, population size: 1

***** Generation 267 : 0
**Parent Variant: [Variant id: 533, #gens: 671, #ops: 0, parent:-]

--Child created id: 534
--Creating new operations for variant [Variant id: 534, #gens: 671, #ops: 0, parent:533]
---analyzing modificationPoint position: 447
location: ExpandableStatefulODE.java76
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.time = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 534, #gens: 670, #ops: 1, parent:533] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 534
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-534/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(267): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.time = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (534(f=1.0), 533(f=2.0), )
Selected to next generation: IDs2--> (534(f=1.0), )
----------Running generation: 268, population size: 1

***** Generation 268 : 0
**Parent Variant: [Variant id: 535, #gens: 671, #ops: 0, parent:-]

--Child created id: 536
--Creating new operations for variant [Variant id: 536, #gens: 671, #ops: 0, parent:535]
---analyzing modificationPoint position: 435
---modifPoint 0 not mutation generated in  return primaryMapper
---analyzing modificationPoint position: 46
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 1
---modifPoint 1 not mutation generated in  interpolator.setInterpolatedTime(t)
---analyzing modificationPoint position: 146
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 2 not mutation generated in  final double theta2 = theta * theta
---analyzing modificationPoint position: 209
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 3 not mutation generated in  if (den <= 0.0) { 	den = 1.0; }
---analyzing modificationPoint position: 111
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java233
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 233, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 536, #gens: 671, #ops: 1, parent:535] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 536, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(268): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (535(f=2.0), 536(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (535(f=2.0), )
----------Running generation: 269, population size: 1

***** Generation 269 : 0
**Parent Variant: [Variant id: 537, #gens: 671, #ops: 0, parent:-]

--Child created id: 538
--Creating new operations for variant [Variant id: 538, #gens: 671, #ops: 0, parent:537]
---analyzing modificationPoint position: 358
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  doFinalize()
---analyzing modificationPoint position: 422
Templates availables1
Attempts Base Ingredients  1 total 1
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; }
---analyzing modificationPoint position: 217
Templates availables27
Attempts Base Ingredients  1 total 27
vars from patch [v]
--> var from patch: v spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java299
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 299, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 538, #gens: 671, #ops: 1, parent:537] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 538
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-538/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(269): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (538(f=1.0), 537(f=2.0), )
Selected to next generation: IDs2--> (538(f=1.0), )
----------Running generation: 270, population size: 1

***** Generation 270 : 0
**Parent Variant: [Variant id: 539, #gens: 671, #ops: 0, parent:-]

--Child created id: 540
--Creating new operations for variant [Variant id: 540, #gens: 671, #ops: 0, parent:539]
---analyzing modificationPoint position: 370
location: AbstractStepInterpolator.java117
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 540, #gens: 670, #ops: 1, parent:539] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 540
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-540/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(270): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (540(f=1.0), 539(f=2.0), )
Selected to next generation: IDs2--> (540(f=1.0), )
----------Running generation: 271, population size: 1

***** Generation 271 : 0
**Parent Variant: [Variant id: 541, #gens: 671, #ops: 0, parent:-]

--Child created id: 542
--Creating new operations for variant [Variant id: 542, #gens: 671, #ops: 0, parent:541]
---analyzing modificationPoint position: 379
location: AbstractStepInterpolator.java214
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedDerivatives = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 542, #gens: 670, #ops: 1, parent:541] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 542
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-542/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(271): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedDerivatives = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (542(f=1.0), 541(f=2.0), )
Selected to next generation: IDs2--> (542(f=1.0), )
----------Running generation: 272, population size: 1

***** Generation 272 : 0
**Parent Variant: [Variant id: 543, #gens: 671, #ops: 0, parent:-]

--Child created id: 544
--Creating new operations for variant [Variant id: 544, #gens: 671, #ops: 0, parent:543]
---analyzing modificationPoint position: 294
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java221
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 221, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 544, #gens: 671, #ops: 1, parent:543] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 544
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-544/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(272): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (544(f=1.0), 543(f=2.0), )
Selected to next generation: IDs2--> (544(f=1.0), )
----------Running generation: 273, population size: 1

***** Generation 273 : 0
**Parent Variant: [Variant id: 545, #gens: 671, #ops: 0, parent:-]

--Child created id: 546
--Creating new operations for variant [Variant id: 546, #gens: 671, #ops: 0, parent:545]
---analyzing modificationPoint position: 407
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [this.secondaryMappers]
--> var from patch: this.secondaryMappers spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java384
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return forward ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 384, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return forward ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 546, #gens: 672, #ops: 1, parent:545] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 546
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-546/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(273): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return forward ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (546(f=1.0), 545(f=2.0), )
Selected to next generation: IDs2--> (546(f=1.0), )
----------Running generation: 274, population size: 1

***** Generation 274 : 0
**Parent Variant: [Variant id: 547, #gens: 671, #ops: 0, parent:-]

--Child created id: 548
--Creating new operations for variant [Variant id: 548, #gens: 671, #ops: 0, parent:547]
---analyzing modificationPoint position: 30
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [eventsStates, state, interpolator]
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: state spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java327
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 327, pointed element: CtForEachImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 548, #gens: 671, #ops: 1, parent:547] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 548
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-548/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(274): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (548(f=1.0), 547(f=2.0), )
Selected to next generation: IDs2--> (548(f=1.0), )
----------Running generation: 275, population size: 1

***** Generation 275 : 0
**Parent Variant: [Variant id: 549, #gens: 671, #ops: 0, parent:-]

--Child created id: 550
--Creating new operations for variant [Variant id: 550, #gens: 671, #ops: 0, parent:549]
---analyzing modificationPoint position: 331
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 0 not mutation generated in  globalPreviousTime = interpolator.globalPreviousTime
---analyzing modificationPoint position: 562
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  /* Need a more accurate epsilon, so adjust the division. */ double numer = bits & 0x3ffffffffffL
---analyzing modificationPoint position: 425
location: AbstractIntegrator.java203
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionMi[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 550, #gens: 670, #ops: 1, parent:549] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 550
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-550/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(275): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (y.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionMi[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (550(f=1.0), 549(f=2.0), )
Selected to next generation: IDs2--> (550(f=1.0), )
----------Running generation: 276, population size: 1

***** Generation 276 : 0
**Parent Variant: [Variant id: 551, #gens: 671, #ops: 0, parent:-]

--Child created id: 552
--Creating new operations for variant [Variant id: 552, #gens: 671, #ops: 0, parent:551]
---analyzing modificationPoint position: 157
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  for (int i = 0; i < interpolatedState.length; ++i) { 	interpolatedState[i] = currentState[i] -  	(on[...]
---analyzing modificationPoint position: 130
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [yDotKLast]
--> var from patch: yDotKLast spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java336
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot9 = yDotK[8][i] ` -topatch--> `yDotKLast = new double[3][]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 336, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot9 = yDotK[8][i] ` -topatch--> `yDotKLast = new double[3][]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 552, #gens: 672, #ops: 1, parent:551] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 552
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-552/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(276): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double yDot9 = yDotK[8][i] ` -topatch--> `yDotKLast = new double[3][]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (552(f=1.0), 551(f=2.0), )
Selected to next generation: IDs2--> (552(f=1.0), )
----------Running generation: 277, population size: 1

***** Generation 277 : 0
**Parent Variant: [Variant id: 553, #gens: 671, #ops: 0, parent:-]

--Child created id: 554
--Creating new operations for variant [Variant id: 554, #gens: 671, #ops: 0, parent:553]
---analyzing modificationPoint position: 235
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java303
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `resetInternalState()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 303, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `resetInternalState()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 554, #gens: 672, #ops: 1, parent:553] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 554, errors: [EmbeddedRungeKuttaIntegrator.java:339: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;
	    	^, EmbeddedRungeKuttaIntegrator.java:339: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:347: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	^, EmbeddedRungeKuttaIntegrator.java:347: error: illegal start of expression
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:347: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                           ^, EmbeddedRungeKuttaIntegrator.java:347: error: ';' expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                                                     ^, EmbeddedRungeKuttaIntegrator.java:353: error: illegal start of expression
	 */ 	public double getMaxGrowth() { 		return maxGrowth;
	    	^, EmbeddedRungeKuttaIntegrator.java:353: error: ';' expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;
	    	                          ^, EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	^, EmbeddedRungeKuttaIntegrator.java:361: error: illegal start of expression
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                        ^, EmbeddedRungeKuttaIntegrator.java:361: error: ';' expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                                               ^, EmbeddedRungeKuttaIntegrator.java:375: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	^, EmbeddedRungeKuttaIntegrator.java:375: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                       ^, EmbeddedRungeKuttaIntegrator.java:375: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                         ^, EmbeddedRungeKuttaIntegrator.java:375: error: illegal start of expression
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                 ^, EmbeddedRungeKuttaIntegrator.java:375: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                     ^, EmbeddedRungeKuttaIntegrator.java:375: error: <identifier> expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: not a statement
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                           ^, EmbeddedRungeKuttaIntegrator.java:375: error: ';' expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                            ^, EmbeddedRungeKuttaIntegrator.java:375: error: reached end of file while parsing
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(277): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `resetInternalState()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (553(f=2.0), 554(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (553(f=2.0), )
----------Running generation: 278, population size: 1

***** Generation 278 : 0
**Parent Variant: [Variant id: 555, #gens: 671, #ops: 0, parent:-]

--Child created id: 556
--Creating new operations for variant [Variant id: 556, #gens: 671, #ops: 0, parent:555]
---analyzing modificationPoint position: 75
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [pendingEvent, pendingEventTime, forward, java.lang.Double.POSITIVE_INFINITY, java.lang.Double.NEGATIVE_INFINITY]
--> var from patch: pendingEvent spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pendingEventTime spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: forward spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NEGATIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java177
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 177, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 556, #gens: 672, #ops: 1, parent:555] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 556, errors: [EventState.java:300: error: illegal start of expression
	 * Get the occurrence time of the event triggered in the current step.
	 ^, EventState.java:300: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	      ^, EventState.java:300: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                     ^, EventState.java:300: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                             ^, EventState.java:300: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                       ^, EventState.java:300: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                    ^, EventState.java:300: error: ';' expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                ^, EventState.java:300: error: <identifier> expected
	 * Get the occurrence time of the event triggered in the current step.
	                                                                      ^, EventState.java:302: error: illegal start of expression
	 * @return occurrence time of the event triggered in the current
	 ^, EventState.java:302: error: <identifier> expected
	 * @return occurrence time of the event triggered in the current
	    ^, EventState.java:302: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                     ^, EventState.java:302: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                 ^, EventState.java:302: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                 ^, EventState.java:302: error: ';' expected
	 * @return occurrence time of the event triggered in the current
	                                                        ^, EventState.java:303: error: ';' expected
	step or infinity if no events are triggered
	    ^, EventState.java:303: error: ';' expected
	step or infinity if no events are triggered
	                ^, EventState.java:303: error: '(' expected
	step or infinity if no events are triggered
	                   ^, EventState.java:303: error: ')' expected
	step or infinity if no events are triggered
	                      ^, EventState.java:303: error: ';' expected
	step or infinity if no events are triggered
	                                 ^, EventState.java:303: error: variable declaration not allowed here
	step or infinity if no events are triggered
	                              ^, EventState.java:304: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	  ^, EventState.java:304: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	^, EventState.java:304: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? pendingEventTime : forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;} 	/**
	    	                          ^, EventState.java:313: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	^, EventState.java:313: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	       ^, EventState.java:313: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                        ^, EventState.java:313: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                        ^, EventState.java:313: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y); 		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) { 			// force the sign to its value "just after the event" 			previousEventTime = t; 			g0Positive = increasing; 			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));} else { 			g0Positive = g0 >= 0; 			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;}} 	/**
	    	                                                         ^, EventState.java:314: error: illegal start of expression
	 * Check if the integration should be stopped at the end of the
	 ^, EventState.java:314: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	        ^, EventState.java:314: error: '(' expected
	 * Check if the integration should be stopped at the end of the
	           ^, EventState.java:314: error: ')' expected
	 * Check if the integration should be stopped at the end of the
	               ^, EventState.java:314: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                  ^, EventState.java:314: error: variable declaration not allowed here
	 * Check if the integration should be stopped at the end of the
	                            ^, EventState.java:314: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                             ^, EventState.java:314: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                    ^, EventState.java:314: error: ';' expected
	 * Check if the integration should be stopped at the end of the
	                                                           ^, EventState.java:315: error: not a statement
	 * current step.
	 ^, EventState.java:315: error: ';' expected
	 * current step.
	          ^, EventState.java:315: error: <identifier> expected
	 * current step.
	                ^, EventState.java:317: error: illegal start of expression
	 * @return true if the integration should be stopped
	 ^, EventState.java:317: error: <identifier> expected
	 * @return true if the integration should be stopped
	    ^, EventState.java:317: error: ';' expected
	 * @return true if the integration should be stopped
	               ^, EventState.java:317: error: ';' expected
	 * @return true if the integration should be stopped
	                                  ^, EventState.java:317: error: ';' expected
	 * @return true if the integration should be stopped
	                                            ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	  ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(278): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (555(f=2.0), 556(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (555(f=2.0), )
----------Running generation: 279, population size: 1

***** Generation 279 : 0
**Parent Variant: [Variant id: 557, #gens: 671, #ops: 0, parent:-]

--Child created id: 558
--Creating new operations for variant [Variant id: 558, #gens: 671, #ops: 0, parent:557]
---analyzing modificationPoint position: 371
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [softCurrentTime, globalCurrentTime]
--> var from patch: softCurrentTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java118
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = null ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 118, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = null ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 558, #gens: 672, #ops: 1, parent:557] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 558, errors: [AbstractStepInterpolator.java:357: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:359: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:360: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:360: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:360: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:360: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:360: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:361: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:361: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:361: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:361: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:361: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:362: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:363: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:363: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:364: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:365: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:365: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:363: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:367: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:380: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:380: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:380: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:380: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:384: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:384: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:388: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:388: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:393: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:393: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:398: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:398: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:400: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:400: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:402: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:402: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:402: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:402: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:404: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:404: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:415: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:415: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:415: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:415: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:415: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:415: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:417: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:417: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:417: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:420: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:422: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, 
	    	^, AbstractStepInterpolator.java:422: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, 
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(279): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = null ` -topatch--> `softCurrentTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (557(f=2.0), 558(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (557(f=2.0), )
----------Running generation: 280, population size: 1

***** Generation 280 : 0
**Parent Variant: [Variant id: 559, #gens: 671, #ops: 0, parent:-]

--Child created id: 560
--Creating new operations for variant [Variant id: 560, #gens: 671, #ops: 0, parent:559]
---analyzing modificationPoint position: 141
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [theta]
--> var from patch: theta spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853StepInterpolator.java349
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; [...] ` -topatch--> `final double eta = 1 - theta` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 349, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; [...] ` -topatch--> `final double eta = 1 - theta` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 560, #gens: 672, #ops: 1, parent:559] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 560
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-560/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(280): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; [...] ` -topatch--> `final double eta = 1 - theta` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (560(f=1.0), 559(f=2.0), )
Selected to next generation: IDs2--> (560(f=1.0), )
----------Running generation: 281, population size: 1

***** Generation 281 : 0
**Parent Variant: [Variant id: 561, #gens: 671, #ops: 0, parent:-]

--Child created id: 562
--Creating new operations for variant [Variant id: 562, #gens: 671, #ops: 0, parent:561]
---analyzing modificationPoint position: 325
location: AdaptiveStepsizeIntegrator.java223
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `mainSetDimension = equations.getPrimaryMapper().getDimension() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 562, #gens: 670, #ops: 1, parent:561] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 562
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-562/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(281): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `mainSetDimension = equations.getPrimaryMapper().getDimension() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (562(f=1.0), 561(f=2.0), )
Selected to next generation: IDs2--> (562(f=1.0), )
----------Running generation: 282, population size: 1

***** Generation 282 : 0
**Parent Variant: [Variant id: 563, #gens: 671, #ops: 0, parent:-]

--Child created id: 564
--Creating new operations for variant [Variant id: 564, #gens: 671, #ops: 0, parent:563]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  double ta = t0
---analyzing modificationPoint position: 401
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  final double[] currentY = interpolator.getInterpolatedState()
---analyzing modificationPoint position: 326
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch []
location: AdaptiveStepsizeIntegrator.java225
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `double yOnScale2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 225, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `double yOnScale2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 564, #gens: 672, #ops: 1, parent:563] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 564, errors: [AdaptiveStepsizeIntegrator.java:281: error: cannot find symbol
		for (int j = 0; j < y0.length; ++j) { 			y1[j] = y0[j] + (h * yDot0[j]);} 		computeDerivatives(t0 + h, y1, yDot1); 		// estimate the second derivative of the solution 		double yDDotOnScale = 0;
		                                      			                 ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:281: error: cannot find symbol
		for (int j = 0; j < y0.length; ++j) { 			y1[j] = y0[j] + (h * yDot0[j]);} 		computeDerivatives(t0 + h, y1, yDot1); 		// estimate the second derivative of the solution 		double yDDotOnScale = 0;
		                                      			                                 		                        ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:283: error: cannot find symbol
			ratio = (yDot1[j] - yDot0[j]) / scale[j];
			^
  symbol:   variable ratio
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:284: error: cannot find symbol
			yDDotOnScale += ratio * ratio;
			^
  symbol:   variable yDDotOnScale
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:284: error: cannot find symbol
			yDDotOnScale += ratio * ratio;
			                ^
  symbol:   variable ratio
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:284: error: cannot find symbol
			yDDotOnScale += ratio * ratio;
			                        ^
  symbol:   variable ratio
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:286: error: cannot find symbol
		yDDotOnScale = org.apache.commons.math.util.FastMath.sqrt(yDDotOnScale) / h;
		^
  symbol:   variable yDDotOnScale
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:286: error: cannot find symbol
		yDDotOnScale = org.apache.commons.math.util.FastMath.sqrt(yDDotOnScale) / h;
		                                                          ^
  symbol:   variable yDDotOnScale
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:286: error: cannot find symbol
		yDDotOnScale = org.apache.commons.math.util.FastMath.sqrt(yDDotOnScale) / h;
		                                                                          ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:290: error: cannot find symbol
		final double maxInv2 = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.sqrt(yDotOnScale2), yDDotOnScale);
		                                                                                                            ^
  symbol:   variable yDotOnScale2
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:290: error: cannot find symbol
		final double maxInv2 = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.sqrt(yDotOnScale2), yDDotOnScale);
		                                                                                                                           ^
  symbol:   variable yDDotOnScale
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:292: error: cannot find symbol
		org.apache.commons.math.util.FastMath.max(1.0E-6, 0.001 * org.apache.commons.math.util.FastMath.abs(h)) : 
		                                                                                                    ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:294: error: cannot find symbol
		h = org.apache.commons.math.util.FastMath.min(100.0 * org.apache.commons.math.util.FastMath.abs(h), h1);
		^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:294: error: cannot find symbol
		h = org.apache.commons.math.util.FastMath.min(100.0 * org.apache.commons.math.util.FastMath.abs(h), h1);
		                                                                                                ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:295: error: cannot find symbol
		h = org.apache.commons.math.util.FastMath.max(h, 1.0E-12 * org.apache.commons.math.util.FastMath.abs(t0));// avoids cancellation when computing t1 - t0
		^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:295: error: cannot find symbol
		h = org.apache.commons.math.util.FastMath.max(h, 1.0E-12 * org.apache.commons.math.util.FastMath.abs(t0));// avoids cancellation when computing t1 - t0
		                                              ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:296: error: cannot find symbol
		if (h < getMinStep()) {
		    ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:297: error: cannot find symbol
			h = getMinStep();
			^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:299: error: cannot find symbol
		if (h > getMaxStep()) {
		    ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:300: error: cannot find symbol
			h = getMaxStep();
			^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:303: error: cannot find symbol
			h = -h;
			^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:303: error: cannot find symbol
			h = -h;
			     ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:306: error: cannot find symbol
		return h;
		       ^
  symbol:   variable h
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator]
Ingredient counter is Zero
---Undoing: gnrtn(282): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `double yOnScale2 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (563(f=2.0), 564(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (563(f=2.0), )
----------Running generation: 283, population size: 1

***** Generation 283 : 0
**Parent Variant: [Variant id: 565, #gens: 671, #ops: 0, parent:-]

--Child created id: 566
--Creating new operations for variant [Variant id: 566, #gens: 671, #ops: 0, parent:565]
---analyzing modificationPoint position: 39
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [convergence]
--> var from patch: convergence spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java285
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...] ` -topatch--> `return convergence` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 285, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...] ` -topatch--> `return convergence` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 566, #gens: 671, #ops: 1, parent:565] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 566
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-566/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->86916
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 86916
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(283): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...] ` -topatch--> `return convergence` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (565(f=2.0), 566(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (565(f=2.0), )
----------Running generation: 284, population size: 1

***** Generation 284 : 0
**Parent Variant: [Variant id: 567, #gens: 671, #ops: 0, parent:-]

--Child created id: 568
--Creating new operations for variant [Variant id: 568, #gens: 671, #ops: 0, parent:567]
---analyzing modificationPoint position: 645
location: FastMath.java1302
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 568, #gens: 670, #ops: 1, parent:567] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 568, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(284): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = b + d ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (567(f=2.0), 568(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (567(f=2.0), )
----------Running generation: 285, population size: 1

***** Generation 285 : 0
**Parent Variant: [Variant id: 569, #gens: 671, #ops: 0, parent:-]

--Child created id: 570
--Creating new operations for variant [Variant id: 570, #gens: 671, #ops: 0, parent:569]
---analyzing modificationPoint position: 17
---modifPoint 0 not mutation generated in  return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime())
---analyzing modificationPoint position: 301
location: EmbeddedRungeKuttaIntegrator.java345
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.minReduction = minReduction ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 570, #gens: 670, #ops: 1, parent:569] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 570
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-570/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(285): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.minReduction = minReduction ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (570(f=1.0), 569(f=2.0), )
Selected to next generation: IDs2--> (570(f=1.0), )
----------Running generation: 286, population size: 1

***** Generation 286 : 0
**Parent Variant: [Variant id: 571, #gens: 671, #ops: 0, parent:-]

--Child created id: 572
--Creating new operations for variant [Variant id: 572, #gens: 671, #ops: 0, parent:571]
---analyzing modificationPoint position: 28
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [interpolator, eventT]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: eventT spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java323
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `currentEvent.stepAccepted(eventT, eventY) ` -topatch--> `interpolator.setSoftPreviousTime(eventT)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 323, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `currentEvent.stepAccepted(eventT, eventY) ` -topatch--> `interpolator.setSoftPreviousTime(eventT)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 572, #gens: 671, #ops: 1, parent:571] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 572, errors: [AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(286): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `currentEvent.stepAccepted(eventT, eventY) ` -topatch--> `interpolator.setSoftPreviousTime(eventT)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (571(f=2.0), 572(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (571(f=2.0), )
----------Running generation: 287, population size: 1

***** Generation 287 : 0
**Parent Variant: [Variant id: 573, #gens: 671, #ops: 0, parent:-]

--Child created id: 574
--Creating new operations for variant [Variant id: 574, #gens: 671, #ops: 0, parent:573]
---analyzing modificationPoint position: 481
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [this.firstIndex]
--> var from patch: this.firstIndex spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 















































int firstIndex
SameName: final 















































int firstIndex
Transforming shadowed variable in firstIndex = firstIndex
location: EquationsMapper.java51
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimension = dimension ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.EquationsMapper line: 51, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimension = dimension ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 574, #gens: 671, #ops: 1, parent:573] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 574, errors: [EquationsMapper.java:53: error: final parameter firstIndex may not be assigned
	 */ 	public EquationsMapper(final int firstIndex, final int dimension) { 		this.firstIndex = firstIndex; 		firstIndex = firstIndex;}
	    	                                                                    		                              		^, EquationsMapper.java:53: error: variable dimension might not have been initialized
	 */ 	public EquationsMapper(final int firstIndex, final int dimension) { 		this.firstIndex = firstIndex; 		firstIndex = firstIndex;}
	    	                                                                    		                              		                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(287): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimension = dimension ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (573(f=2.0), 574(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (573(f=2.0), )
----------Running generation: 288, population size: 1

***** Generation 288 : 0
**Parent Variant: [Variant id: 575, #gens: 671, #ops: 0, parent:-]

--Child created id: 576
--Creating new operations for variant [Variant id: 576, #gens: 671, #ops: 0, parent:575]
---analyzing modificationPoint position: 96
location: EventState.java298
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 576, #gens: 670, #ops: 1, parent:575] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 576
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-576/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(288): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (575(f=2.0), 576(f=2.0), )
Selected to next generation: IDs2--> (575(f=2.0), )
----------Running generation: 289, population size: 1

***** Generation 289 : 0
**Parent Variant: [Variant id: 577, #gens: 671, #ops: 0, parent:-]

--Child created id: 578
--Creating new operations for variant [Variant id: 578, #gens: 671, #ops: 0, parent:577]
---analyzing modificationPoint position: 143
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  vectorsInitialized = true
---analyzing modificationPoint position: 486
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [resetOccurred]
--> var from patch: resetOccurred spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java90
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>() ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 90, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>() ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 578, #gens: 671, #ops: 1, parent:577] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 578, errors: [AbstractIntegrator.java:381: error: illegal start of expression
	 * Integrate a set of differential equations up to the given time.
	 ^, AbstractIntegrator.java:381: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	            ^, AbstractIntegrator.java:381: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                  ^, AbstractIntegrator.java:381: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                  ^, AbstractIntegrator.java:381: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                               ^, AbstractIntegrator.java:381: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                                      ^, AbstractIntegrator.java:381: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                                                 ^, AbstractIntegrator.java:382: error: illegal start of expression
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	      ^, AbstractIntegrator.java:382: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                        ^, AbstractIntegrator.java:382: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                   ^, AbstractIntegrator.java:382: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                 ^, AbstractIntegrator.java:382: error: not a statement
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                   ^, AbstractIntegrator.java:382: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                      ^, AbstractIntegrator.java:382: error: illegal start of type
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                         ^, AbstractIntegrator.java:382: error: illegal start of expression
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                          ^, AbstractIntegrator.java:383: error: illegal start of expression
	 * <p>The set of differential equations is composed of a main set, which
	 ^, AbstractIntegrator.java:383: error: illegal start of expression
	 * <p>The set of differential equations is composed of a main set, which
	      ^, AbstractIntegrator.java:382: error: not a statement
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                           ^, AbstractIntegrator.java:383: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                ^, AbstractIntegrator.java:383: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                       ^, AbstractIntegrator.java:383: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                   ^, AbstractIntegrator.java:383: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                        ^, AbstractIntegrator.java:383: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                                        ^, AbstractIntegrator.java:384: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	         ^, AbstractIntegrator.java:384: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                     ^, AbstractIntegrator.java:384: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                               ^, AbstractIntegrator.java:384: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                                            ^, AbstractIntegrator.java:384: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                                                               ^, AbstractIntegrator.java:385: error: not a statement
	 * equations must be already set up with initial time and partial states.
	 ^, AbstractIntegrator.java:385: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	            ^, AbstractIntegrator.java:385: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                    ^, AbstractIntegrator.java:385: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                ^, AbstractIntegrator.java:385: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                        ^, AbstractIntegrator.java:385: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                                     ^, AbstractIntegrator.java:385: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                                                 ^, AbstractIntegrator.java:385: error: <identifier> expected
	 * equations must be already set up with initial time and partial states.
	                                                                         ^, AbstractIntegrator.java:386: error: not a statement
	 * At integration completion, the final time and partial states will be
	 ^, AbstractIntegrator.java:386: error: ';' expected
	 * At integration completion, the final time and partial states will be
	     ^, AbstractIntegrator.java:386: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                 ^, AbstractIntegrator.java:386: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                ^, AbstractIntegrator.java:386: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                               ^, AbstractIntegrator.java:386: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                                       ^, AbstractIntegrator.java:387: error: ';' expected
	 * available in the same object.</p>
	               ^, AbstractIntegrator.java:387: error: ';' expected
	 * available in the same object.</p>
	                        ^, AbstractIntegrator.java:387: error: illegal start of type
	 * available in the same object.</p>
	                                 ^, AbstractIntegrator.java:387: error: illegal start of expression
	 * available in the same object.</p>
	                                   ^, AbstractIntegrator.java:388: error: illegal start of expression
	 * <p>Since this method stores some internal state variables made
	      ^, AbstractIntegrator.java:388: error: not a statement
	 * <p>Since this method stores some internal state variables made
	 ^, AbstractIntegrator.java:388: error: not a statement
	 * <p>Since this method stores some internal state variables made
	            ^, AbstractIntegrator.java:388: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                ^, AbstractIntegrator.java:388: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                              ^, AbstractIntegrator.java:388: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                                            ^, AbstractIntegrator.java:388: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                                                            ^, AbstractIntegrator.java:389: error: not a statement
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	 ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	            ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                   ^, AbstractIntegrator.java:389: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                    ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                          ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                       ^, AbstractIntegrator.java:389: error: illegal character: '#'
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                ^, AbstractIntegrator.java:389: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                         ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                          ^, AbstractIntegrator.java:389: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                            ^, AbstractIntegrator.java:389: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                             ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                 ^, AbstractIntegrator.java:389: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                            ^, AbstractIntegrator.java:389: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                             ^, AbstractIntegrator.java:389: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                              ^, AbstractIntegrator.java:389: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                               ^, AbstractIntegrator.java:389: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                                 ^, AbstractIntegrator.java:391: error: illegal start of expression
	 * @param equations
	 ^, AbstractIntegrator.java:391: error: illegal start of expression
	 * @param equations
	   ^, AbstractIntegrator.java:389: error: not a statement
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                ^, AbstractIntegrator.java:392: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		        ^, AbstractIntegrator.java:392: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		               ^, AbstractIntegrator.java:392: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		                                      ^, AbstractIntegrator.java:392: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		                                                   ^, AbstractIntegrator.java:393: error: <identifier> expected
	 * @param t
	           ^, AbstractIntegrator.java:394: error: ';' expected
	 * 		target time for the integration
	   		           ^, AbstractIntegrator.java:394: error: '(' expected
	 * 		target time for the integration
	   		               ^, AbstractIntegrator.java:394: error: ';' expected
	 * 		target time for the integration
	   		                               ^, AbstractIntegrator.java:395: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	 ^, AbstractIntegrator.java:395: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	  ^, AbstractIntegrator.java:395: error: not a statement
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		 ^, AbstractIntegrator.java:395: error: ')' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		    ^, AbstractIntegrator.java:395: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		           ^, AbstractIntegrator.java:395: error: variable declaration not allowed here
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		        ^, AbstractIntegrator.java:395: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                ^, AbstractIntegrator.java:395: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                              ^, AbstractIntegrator.java:395: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                            ^, AbstractIntegrator.java:395: error: illegal start of type
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                             ^, AbstractIntegrator.java:395: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                              ^, AbstractIntegrator.java:395: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                    ^, AbstractIntegrator.java:395: error: not a statement
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                  ^, AbstractIntegrator.java:395: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                                            ^, AbstractIntegrator.java:396: error: <identifier> expected
	 * @throws MathIllegalStateException
	    ^, AbstractIntegrator.java:396: error: ';' expected
	 * @throws MathIllegalStateException
	                                    ^, AbstractIntegrator.java:397: error: '(' expected
	 * 		if the integrator cannot perform integration
	   		  ^, AbstractIntegrator.java:397: error: ')' expected
	 * 		if the integrator cannot perform integration
	   		      ^, AbstractIntegrator.java:397: error: ';' expected
	 * 		if the integrator cannot perform integration
	   		                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(289): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>() ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (577(f=2.0), 578(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (577(f=2.0), )
----------Running generation: 290, population size: 1

***** Generation 290 : 0
**Parent Variant: [Variant id: 579, #gens: 671, #ops: 0, parent:-]

--Child created id: 580
--Creating new operations for variant [Variant id: 580, #gens: 671, #ops: 0, parent:579]
---analyzing modificationPoint position: 32
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  this.softCurrentTime = softCurrentTime
---analyzing modificationPoint position: 346
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [h, java.lang.Double.NaN]
--> var from patch: h spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java251
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `h = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 251, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `h = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 580, #gens: 671, #ops: 1, parent:579] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 580
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-580/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(290): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `h = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (580(f=1.0), 579(f=2.0), )
Selected to next generation: IDs2--> (580(f=1.0), )
----------Running generation: 291, population size: 1

***** Generation 291 : 0
**Parent Variant: [Variant id: 581, #gens: 671, #ops: 0, parent:-]

--Child created id: 582
--Creating new operations for variant [Variant id: 582, #gens: 671, #ops: 0, parent:581]
---analyzing modificationPoint position: 6
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [eventT, y, yDot]
--> var from patch: eventT spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yDot spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java342
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `computeDerivatives(eventT, y, yDot)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 342, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `computeDerivatives(eventT, y, yDot)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 582, #gens: 672, #ops: 1, parent:581] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 582
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-582/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(291): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `resetOccurred = true ` -topatch--> `computeDerivatives(eventT, y, yDot)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (582(f=1.0), 581(f=2.0), )
Selected to next generation: IDs2--> (582(f=1.0), )
----------Running generation: 292, population size: 1

***** Generation 292 : 0
**Parent Variant: [Variant id: 583, #gens: 671, #ops: 0, parent:-]

--Child created id: 584
--Creating new operations for variant [Variant id: 584, #gens: 671, #ops: 0, parent:583]
---analyzing modificationPoint position: 183
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  x[1] = getStartValue()
---analyzing modificationPoint position: 390
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  // initialize the events states if needed if (!statesInitialized) { 	for (org.apache.commons.math.od[...]
---analyzing modificationPoint position: 66
location: EventState.java113
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = false ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 584, #gens: 670, #ops: 1, parent:583] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 584
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-584/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(292): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = false ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (584(f=1.0), 583(f=2.0), )
Selected to next generation: IDs2--> (584(f=1.0), )
----------Running generation: 293, population size: 1

***** Generation 293 : 0
**Parent Variant: [Variant id: 585, #gens: 671, #ops: 0, parent:-]

--Child created id: 586
--Creating new operations for variant [Variant id: 586, #gens: 671, #ops: 0, parent:585]
---analyzing modificationPoint position: 555
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (x != x) { 	// X is NaN 	return x; }
---analyzing modificationPoint position: 338
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  finalized = interpolator.finalized
---analyzing modificationPoint position: 46
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 2 not mutation generated in  interpolator.setInterpolatedTime(t)
---analyzing modificationPoint position: 269
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [interpolator, stepStart]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: stepStart spoon.support.reflect.code.CtFieldReadImpl
location: EmbeddedRungeKuttaIntegrator.java267
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `// prepare next step interpolator.storeTime(stepStart)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 267, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `// prepare next step interpolator.storeTime(stepStart)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 586, #gens: 671, #ops: 1, parent:585] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 586
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-586/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(293): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `// prepare next step interpolator.storeTime(stepStart)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (586(f=1.0), 585(f=2.0), )
Selected to next generation: IDs2--> (586(f=1.0), )
----------Running generation: 294, population size: 1

***** Generation 294 : 0
**Parent Variant: [Variant id: 587, #gens: 671, #ops: 0, parent:-]

--Child created id: 588
--Creating new operations for variant [Variant id: 588, #gens: 671, #ops: 0, parent:587]
---analyzing modificationPoint position: 540
location: FastMath.java1558
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lna = tmp2 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 588, #gens: 670, #ops: 1, parent:587] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 588, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(294): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lna = tmp2 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (587(f=2.0), 588(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (587(f=2.0), )
----------Running generation: 295, population size: 1

***** Generation 295 : 0
**Parent Variant: [Variant id: 589, #gens: 671, #ops: 0, parent:-]

--Child created id: 590
--Creating new operations for variant [Variant id: 590, #gens: 671, #ops: 0, parent:589]
---analyzing modificationPoint position: 318
location: RungeKuttaStepInterpolator.java84
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (interpolator.currentState != null) { 	final int dimension = currentState.length;  	yDotK = new d[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 590, #gens: 670, #ops: 1, parent:589] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 590
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-590/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(295): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (interpolator.currentState != null) { 	final int dimension = currentState.length;  	yDotK = new d[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (590(f=1.0), 589(f=2.0), )
Selected to next generation: IDs2--> (590(f=1.0), )
----------Running generation: 296, population size: 1

***** Generation 296 : 0
**Parent Variant: [Variant id: 591, #gens: 671, #ops: 0, parent:-]

--Child created id: 592
--Creating new operations for variant [Variant id: 592, #gens: 671, #ops: 0, parent:591]
---analyzing modificationPoint position: 412
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [relativeAccuracy]
--> var from patch: relativeAccuracy spoon.support.reflect.code.CtVariableReadImpl
location: BaseAbstractUnivariateRealSolver.java195
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return solve(maxEval, f, min, max, min + (0.5 * (max - min))) ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 195, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return solve(maxEval, f, min, max, min + (0.5 * (max - min))) ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 592, #gens: 672, #ops: 1, parent:591] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 592, errors: [BaseAbstractUnivariateRealSolver.java:196: error: unreachable statement
	 */ 	public double solve(int maxEval, FUNC f, double min, double max) { 		return relativeAccuracy; 		return solve(maxEval, f, min, max, min + (0.5 * (max - min)));
	    	                                                                   		                         		^]
Ingredient counter is Zero
---Undoing: gnrtn(296): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return solve(maxEval, f, min, max, min + (0.5 * (max - min))) ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (591(f=2.0), 592(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (591(f=2.0), )
----------Running generation: 297, population size: 1

***** Generation 297 : 0
**Parent Variant: [Variant id: 593, #gens: 671, #ops: 0, parent:-]

--Child created id: 594
--Creating new operations for variant [Variant id: 594, #gens: 671, #ops: 0, parent:593]
---analyzing modificationPoint position: 508
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [functionValueAccuracy]
--> var from patch: functionValueAccuracy spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java176
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// Reset. searchMin = min ` -topatch--> `return functionValueAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 176, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// Reset. searchMin = min ` -topatch--> `return functionValueAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 594, #gens: 672, #ops: 1, parent:593] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 594, errors: [BaseAbstractUnivariateRealSolver.java:177: error: incompatible types: unexpected return value
		searchMin = min; 		return functionValueAccuracy;
		                 		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(297): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// Reset. searchMin = min ` -topatch--> `return functionValueAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (593(f=2.0), 594(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (593(f=2.0), )
----------Running generation: 298, population size: 1

***** Generation 298 : 0
**Parent Variant: [Variant id: 595, #gens: 671, #ops: 0, parent:-]

--Child created id: 596
--Creating new operations for variant [Variant id: 596, #gens: 671, #ops: 0, parent:595]
---analyzing modificationPoint position: 141
location: DormandPrince853StepInterpolator.java349
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 596, #gens: 670, #ops: 1, parent:595] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 596
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-596/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(298): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (596(f=1.0), 595(f=2.0), )
Selected to next generation: IDs2--> (596(f=1.0), )
----------Running generation: 299, population size: 1

***** Generation 299 : 0
**Parent Variant: [Variant id: 597, #gens: 671, #ops: 0, parent:-]

--Child created id: 598
--Creating new operations for variant [Variant id: 598, #gens: 671, #ops: 0, parent:597]
---analyzing modificationPoint position: 98
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)[...]
---analyzing modificationPoint position: 628
location: FastMath.java919
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (extra != 0.0) { 	result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 598, #gens: 670, #ops: 1, parent:597] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 598, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(299): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (extra != 0.0) { 	result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (597(f=2.0), 598(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (597(f=2.0), )
----------Running generation: 300, population size: 1

***** Generation 300 : 0
**Parent Variant: [Variant id: 599, #gens: 671, #ops: 0, parent:-]

--Child created id: 600
--Creating new operations for variant [Variant id: 600, #gens: 671, #ops: 0, parent:599]
---analyzing modificationPoint position: 229
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java305
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// save the last evaluation for the next step java.lang.System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0[...] ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 305, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// save the last evaluation for the next step java.lang.System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0[...] ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 600, #gens: 671, #ops: 1, parent:599] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 600
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-600/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 2] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2490secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-600/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
-Killed id: pid->86938
The Process that runs JUnit test cases did not terminate within waitTime of 2490 seconds
Killed the Process that runs JUnit test cases 86938
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(300): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// save the last evaluation for the next step java.lang.System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0[...] ` -topatch--> `setStateInitialized(false)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (599(f=2.0), 600(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (599(f=2.0), )
----------Running generation: 301, population size: 1

***** Generation 301 : 0
**Parent Variant: [Variant id: 601, #gens: 671, #ops: 0, parent:-]

--Child created id: 602
--Creating new operations for variant [Variant id: 602, #gens: 671, #ops: 0, parent:601]
---analyzing modificationPoint position: 574
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  /* Add  a = y + lnHiPrecCoef */ aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0[...]
---analyzing modificationPoint position: 522
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [lower, upper]
--> var from patch: lower spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: upper spoon.support.reflect.code.CtVariableReadImpl
location: UnivariateRealSolverUtils.java336
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (lower >= upper) { 	throw new org.apache.commons.math.exception.NumberIsTooLargeException(org.apa[...] ` -topatch--> `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, upper)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils line: 336, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (lower >= upper) { 	throw new org.apache.commons.math.exception.NumberIsTooLargeException(org.apa[...] ` -topatch--> `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, upper)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 602, #gens: 672, #ops: 1, parent:601] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 602
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-602/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(301): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (lower >= upper) { 	throw new org.apache.commons.math.exception.NumberIsTooLargeException(org.apa[...] ` -topatch--> `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, upper)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (601(f=2.0), 602(f=2.0), )
Selected to next generation: IDs2--> (601(f=2.0), )
----------Running generation: 302, population size: 1

***** Generation 302 : 0
**Parent Variant: [Variant id: 603, #gens: 671, #ops: 0, parent:-]

--Child created id: 604
--Creating new operations for variant [Variant id: 604, #gens: 671, #ops: 0, parent:603]
---analyzing modificationPoint position: 576
location: FastMath.java1249
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Split y = a */ tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 604, #gens: 670, #ops: 1, parent:603] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 604, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(302): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `/* Split y = a */ tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (603(f=2.0), 604(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (603(f=2.0), )
----------Running generation: 303, population size: 1

***** Generation 303 : 0
**Parent Variant: [Variant id: 605, #gens: 671, #ops: 0, parent:-]

--Child created id: 606
--Creating new operations for variant [Variant id: 606, #gens: 671, #ops: 0, parent:605]
---analyzing modificationPoint position: 139
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  v[1][i] = yDot1 - v[0][i]
---analyzing modificationPoint position: 490
location: AbstractIntegrator.java94
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 606, #gens: 670, #ops: 1, parent:605] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 606
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-606/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(303): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (606(f=1.0), 605(f=2.0), )
Selected to next generation: IDs2--> (606(f=1.0), )
----------Running generation: 304, population size: 1

***** Generation 304 : 0
**Parent Variant: [Variant id: 607, #gens: 671, #ops: 0, parent:-]

--Child created id: 608
--Creating new operations for variant [Variant id: 608, #gens: 671, #ops: 0, parent:607]
---analyzing modificationPoint position: 500
Templates availables117
Attempts Base Ingredients  1 total 117
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java3370
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return y ` -topatch--> `return org.apache.commons.math.util.FastMath.exp(x) / 2.0` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.FastMath line: 3370, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return y ` -topatch--> `return org.apache.commons.math.util.FastMath.exp(x) / 2.0` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 608, #gens: 671, #ops: 1, parent:607] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 608, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(304): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return y ` -topatch--> `return org.apache.commons.math.util.FastMath.exp(x) / 2.0` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (607(f=2.0), 608(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (607(f=2.0), )
----------Running generation: 305, population size: 1

***** Generation 305 : 0
**Parent Variant: [Variant id: 609, #gens: 671, #ops: 0, parent:-]

--Child created id: 610
--Creating new operations for variant [Variant id: 610, #gens: 671, #ops: 0, parent:609]
---analyzing modificationPoint position: 441
location: AbstractStepInterpolator.java412
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateCompleteInterpolatedState() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 610, #gens: 670, #ops: 1, parent:609] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 610
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-610/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(305): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateCompleteInterpolatedState() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (610(f=1.0), 609(f=2.0), )
Selected to next generation: IDs2--> (610(f=1.0), )
----------Running generation: 306, population size: 1

***** Generation 306 : 0
**Parent Variant: [Variant id: 611, #gens: 671, #ops: 0, parent:-]

--Child created id: 612
--Creating new operations for variant [Variant id: 612, #gens: 671, #ops: 0, parent:611]
---analyzing modificationPoint position: 367
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
vars from patch [primaryMapper]
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java114
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 114, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 612, #gens: 671, #ops: 1, parent:611] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 612
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-612/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(306): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (612(f=1.0), 611(f=2.0), )
Selected to next generation: IDs2--> (612(f=1.0), )
----------Running generation: 307, population size: 1

***** Generation 307 : 0
**Parent Variant: [Variant id: 613, #gens: 671, #ops: 0, parent:-]

--Child created id: 614
--Creating new operations for variant [Variant id: 614, #gens: 671, #ops: 0, parent:613]
---analyzing modificationPoint position: 364
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  integrator = null
---analyzing modificationPoint position: 426
---modifPoint 1 not mutation generated in  // prepare expandable stateful equations final org.apache.commons.math.ode.ExpandableStatefulODE exp[...]
---analyzing modificationPoint position: 136
---modifPoint 2 not mutation generated in  final double yDot15 = yDotKLast[1][i]
---analyzing modificationPoint position: 560
---modifPoint 3 not mutation generated in  double xa = aa
---analyzing modificationPoint position: 43
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 4 not mutation generated in  eventsStates.add(new org.apache.commons.math.ode.events.EventState(handler, maxCheckInterval, conver[...]
---analyzing modificationPoint position: 200
---modifPoint 5 not mutation generated in  final double errSum2 = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.E2_01 [...]
---analyzing modificationPoint position: 402
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [stepHandlers, handler, interpolator, isLastStep]
--> var from patch: stepHandlers spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: handler spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: isLastStep spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java361
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.stepAccepted[...] ` -topatch--> `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 361, pointed element: CtForEachImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.stepAccepted[...] ` -topatch--> `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 614, #gens: 671, #ops: 1, parent:613] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 614
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-614/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(307): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.stepAccepted[...] ` -topatch--> `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (614(f=1.0), 613(f=2.0), )
Selected to next generation: IDs2--> (614(f=1.0), )
----------Running generation: 308, population size: 1

***** Generation 308 : 0
**Parent Variant: [Variant id: 615, #gens: 671, #ops: 0, parent:-]

--Child created id: 616
--Creating new operations for variant [Variant id: 616, #gens: 671, #ops: 0, parent:615]
---analyzing modificationPoint position: 77
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [((org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analysis.UnivariateRealFunction>) (solver))]
--> var from patch: ((org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analysis.UnivariateRealFunction>) (solver)) spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java191
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double t1 = interpolator.getCurrentTime() ` -topatch--> `@java.lang.SuppressWarnings("unchecked") org.apache.commons.math.analysis.solvers.BracketedUnivariat[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 191, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double t1 = interpolator.getCurrentTime() ` -topatch--> `@java.lang.SuppressWarnings("unchecked") org.apache.commons.math.analysis.solvers.BracketedUnivariat[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 616, #gens: 672, #ops: 1, parent:615] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 616, errors: [EventState.java:266: error: 'else' without 'if'
			} else {
			  ^, EventState.java:275: error: <identifier> expected
		pendingEvent = false;
		            ^, EventState.java:276: error: <identifier> expected
		pendingEventTime = java.lang.Double.NaN;
		                ^, EventState.java:277: error: illegal start of type
		return false;
		^, EventState.java:277: error: ';' expected
		return false;
		      ^, EventState.java:286: error: class, interface, or enum expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	       ^, EventState.java:289: error: class, interface, or enum expected
	}
	^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                               ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                               ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                             		        		^, EventState.java:302: error: class, interface, or enum expected
		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) {
		^, EventState.java:305: error: class, interface, or enum expected
			g0Positive = increasing;
			^, EventState.java:306: error: class, interface, or enum expected
			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));
			^, EventState.java:307: error: class, interface, or enum expected
		} else {
		^, EventState.java:309: error: class, interface, or enum expected
			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;
			^, EventState.java:310: error: class, interface, or enum expected
		}
		^, EventState.java:318: error: class, interface, or enum expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	       ^, EventState.java:319: error: class, interface, or enum expected
	}
	^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	       ^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                           ^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                           ^, EventState.java:332: error: class, interface, or enum expected
		}
		^, EventState.java:336: error: class, interface, or enum expected
		}
		^, EventState.java:338: error: class, interface, or enum expected
		pendingEventTime = java.lang.Double.NaN;
		^, EventState.java:340: error: class, interface, or enum expected
		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || 
		^, EventState.java:343: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(308): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double t1 = interpolator.getCurrentTime() ` -topatch--> `@java.lang.SuppressWarnings("unchecked") org.apache.commons.math.analysis.solvers.BracketedUnivariat[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (615(f=2.0), 616(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (615(f=2.0), )
----------Running generation: 309, population size: 1

***** Generation 309 : 0
**Parent Variant: [Variant id: 617, #gens: 671, #ops: 0, parent:-]

--Child created id: 618
--Creating new operations for variant [Variant id: 618, #gens: 671, #ops: 0, parent:617]
---analyzing modificationPoint position: 157
location: DormandPrince853StepInterpolator.java371
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < interpolatedState.length; ++i) { 	interpolatedState[i] = currentState[i] -  	(on[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 618, #gens: 670, #ops: 1, parent:617] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 618
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-618/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(309): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < interpolatedState.length; ++i) { 	interpolatedState[i] = currentState[i] -  	(on[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (618(f=1.0), 617(f=2.0), )
Selected to next generation: IDs2--> (618(f=1.0), )
----------Running generation: 310, population size: 1

***** Generation 310 : 0
**Parent Variant: [Variant id: 619, #gens: 671, #ops: 0, parent:-]

--Child created id: 620
--Creating new operations for variant [Variant id: 620, #gens: 671, #ops: 0, parent:619]
---analyzing modificationPoint position: 97
location: EventState.java299
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t, y) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 620, #gens: 670, #ops: 1, parent:619] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 620
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-620/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(310): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t, y) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (620(f=1.0), 619(f=2.0), )
Selected to next generation: IDs2--> (620(f=1.0), )
----------Running generation: 311, population size: 1

***** Generation 311 : 0
**Parent Variant: [Variant id: 621, #gens: 671, #ops: 0, parent:-]

--Child created id: 622
--Creating new operations for variant [Variant id: 622, #gens: 671, #ops: 0, parent:621]
---analyzing modificationPoint position: 374
location: AbstractStepInterpolator.java121
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dirtyState = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 622, #gens: 670, #ops: 1, parent:621] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 622
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-622/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(311): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dirtyState = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (622(f=1.0), 621(f=2.0), )
Selected to next generation: IDs2--> (622(f=1.0), )
----------Running generation: 312, population size: 1

***** Generation 312 : 0
**Parent Variant: [Variant id: 623, #gens: 671, #ops: 0, parent:-]

--Child created id: 624
--Creating new operations for variant [Variant id: 624, #gens: 671, #ops: 0, parent:623]
---analyzing modificationPoint position: 131
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double yDot10 = yDotK[9][i]
---analyzing modificationPoint position: 290
Templates availables22
Attempts Base Ingredients  1 total 22
vars from patch [stepStart, interpolator, y, yDotTmp, t]
--> var from patch: stepStart spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yDotTmp spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java215
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set up integration control objects stepStart = equations.getTime() ` -topatch--> `stepStart = acceptStep(interpolator, y, yDotTmp, t)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 215, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set up integration control objects stepStart = equations.getTime() ` -topatch--> `stepStart = acceptStep(interpolator, y, yDotTmp, t)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 624, #gens: 671, #ops: 1, parent:623] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 624, errors: [EmbeddedRungeKuttaIntegrator.java:325: error: class, interface, or enum expected
		} while (!isLastStep );
		  ^, EmbeddedRungeKuttaIntegrator.java:328: error: class, interface, or enum expected
		equations.setTime(stepStart);
		^, EmbeddedRungeKuttaIntegrator.java:329: error: class, interface, or enum expected
		equations.setCompleteState(y);
		^, EmbeddedRungeKuttaIntegrator.java:331: error: class, interface, or enum expected
		resetInternalState();
		^, EmbeddedRungeKuttaIntegrator.java:333: error: class, interface, or enum expected
	}
	^, EmbeddedRungeKuttaIntegrator.java:339: error: class, interface, or enum expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	       ^, EmbeddedRungeKuttaIntegrator.java:340: error: class, interface, or enum expected
	}
	^, EmbeddedRungeKuttaIntegrator.java:347: error: class, interface, or enum expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:347: error: class, interface, or enum expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                                  ^, EmbeddedRungeKuttaIntegrator.java:347: error: class, interface, or enum expected
	 */ 	public void setMinReduction(final double minReduction) { 		this.minReduction = minReduction;}
	    	                                                         		                                 ^, EmbeddedRungeKuttaIntegrator.java:353: error: class, interface, or enum expected
	 */ 	public double getMaxGrowth() { 		return maxGrowth;
	    	       ^, EmbeddedRungeKuttaIntegrator.java:354: error: class, interface, or enum expected
	}
	^, EmbeddedRungeKuttaIntegrator.java:361: error: class, interface, or enum expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	       ^, EmbeddedRungeKuttaIntegrator.java:361: error: class, interface, or enum expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                               ^, EmbeddedRungeKuttaIntegrator.java:361: error: class, interface, or enum expected
	 */ 	public void setMaxGrowth(final double maxGrowth) { 		this.maxGrowth = maxGrowth;}
	    	                                                   		                           ^, EmbeddedRungeKuttaIntegrator.java:375: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                   ^, EmbeddedRungeKuttaIntegrator.java:375: error: class, interface, or enum expected
	 */ 	protected abstract double estimateError(double[][] yDotK, double[] y0, double[] y1, double h);}
	    	                                                                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(312): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set up integration control objects stepStart = equations.getTime() ` -topatch--> `stepStart = acceptStep(interpolator, y, yDotTmp, t)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (623(f=2.0), 624(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (623(f=2.0), )
----------Running generation: 313, population size: 1

***** Generation 313 : 0
**Parent Variant: [Variant id: 625, #gens: 671, #ops: 0, parent:-]

--Child created id: 626
--Creating new operations for variant [Variant id: 626, #gens: 671, #ops: 0, parent:625]
---analyzing modificationPoint position: 107
---modifPoint 0 not mutation generated in  double absYB = org.apache.commons.math.util.FastMath.abs(yB)
---analyzing modificationPoint position: 424
location: AbstractIntegrator.java192
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 626, #gens: 670, #ops: 1, parent:625] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 626
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-626/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(313): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (626(f=1.0), 625(f=2.0), )
Selected to next generation: IDs2--> (626(f=1.0), )
----------Running generation: 314, population size: 1

***** Generation 314 : 0
**Parent Variant: [Variant id: 627, #gens: 671, #ops: 0, parent:-]

--Child created id: 628
--Creating new operations for variant [Variant id: 628, #gens: 671, #ops: 0, parent:627]
---analyzing modificationPoint position: 47
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 0 not mutation generated in  return handler.g(t, interpolator.getInterpolatedState())
---analyzing modificationPoint position: 185
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  verifySequence(x[0], x[1], x[2])
---analyzing modificationPoint position: 58
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [solver]
--> var from patch: solver spoon.support.reflect.code.CtFieldReadImpl
SameName: final 




































































































org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver
SameName: final 




































































































org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver
Transforming shadowed variable in org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analysis.UnivariateRealFunction> bracketing = 
new org.apache.commons.math.analysis.solvers.PegasusSolver(solver.getRelativeAccuracy(), solver.getAbsoluteAccuracy())
location: EventState.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.handler = handler ` -topatch--> `org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analy[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 103, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.handler = handler ` -topatch--> `org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analy[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 628, #gens: 672, #ops: 1, parent:627] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 628, errors: [EventState.java:240: error: illegal start of expression
	 * Get the underlying event handler.
	 ^, EventState.java:240: error: ';' expected
	 * Get the underlying event handler.
	      ^, EventState.java:240: error: ';' expected
	 * Get the underlying event handler.
	                     ^, EventState.java:240: error: ';' expected
	 * Get the underlying event handler.
	                                   ^, EventState.java:242: error: <identifier> expected
	 * @return underlying event handler
	    ^, EventState.java:242: error: ';' expected
	 * @return underlying event handler
	                     ^, EventState.java:242: error: ';' expected
	 * @return underlying event handler
	                                   ^, EventState.java:243: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.events.EventHandler getEventHandler() { 		return handler;} 	/**
	    	^, EventState.java:243: error: ';' expected
	 */ 	public org.apache.commons.math.ode.events.EventHandler getEventHandler() { 		return handler;} 	/**
	    	                                                                      ^, EventState.java:247: error: illegal start of expression
	 */ 	public double getMaxCheckInterval() { 		return maxCheckInterval;} 	/**
	    	^, EventState.java:247: error: ';' expected
	 */ 	public double getMaxCheckInterval() { 		return maxCheckInterval;} 	/**
	    	                                 ^, EventState.java:251: error: illegal start of expression
	 */ 	public double getConvergence() { 		return convergence;} 	/**
	    	^, EventState.java:251: error: ';' expected
	 */ 	public double getConvergence() { 		return convergence;} 	/**
	    	                            ^, EventState.java:255: error: illegal start of expression
	 */ 	public int getMaxIterationCount() { 		return maxIterationCount;} 	/**
	    	^, EventState.java:255: error: ';' expected
	 */ 	public int getMaxIterationCount() { 		return maxIterationCount;} 	/**
	    	                               ^, EventState.java:260: error: illegal start of expression
	 */ 	public void reinitializeBegin(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) { 		t0 = interpolator.getPreviousTime(); 		interpolator.setInterpolatedTime(t0); 		g0 = handler.g(t0, interpolator.getInterpolatedState()); 		if (g0 == 0) { 			// excerpt from MATH-421 issue: 			// If an ODE solver is setup with an EventHandler that return STOP 			// when the even is triggered, the integrator stops (which is exactly 			// the expected behavior). If however the user wants to restart the 			// solver from the final state reached at the event with the same 			// configuration (expecting the event to be triggered again at a 			// later time), then the integrator may fail to start. It can get stuck 			// at the previous event. The use case for the bug MATH-421 is fairly 			// general, so events occurring exactly at start in the first step should 			// be ignored. 			// extremely rare case: there is a zero EXACTLY at interval start 			// we will use the sign slightly after step beginning to force ignoring this zero 			final double epsilon = org.apache.commons.math.util.FastMath.max(solver.getAbsoluteAccuracy(), org.apache.commons.math.util.FastMath.abs(solver.getRelativeAccuracy() * t0)); 			final double tStart = t0 + (0.5 * epsilon); 			interpolator.setInterpolatedTime(tStart); 			g0 = handler.g(tStart, interpolator.getInterpolatedState());} 		g0Positive = g0 >= 0;} 	/**
	    	^, EventState.java:260: error: illegal start of expression
	 */ 	public void reinitializeBegin(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) { 		t0 = interpolator.getPreviousTime(); 		interpolator.setInterpolatedTime(t0); 		g0 = handler.g(t0, interpolator.getInterpolatedState()); 		if (g0 == 0) { 			// excerpt from MATH-421 issue: 			// If an ODE solver is setup with an EventHandler that return STOP 			// when the even is triggered, the integrator stops (which is exactly 			// the expected behavior). If however the user wants to restart the 			// solver from the final state reached at the event with the same 			// configuration (expecting the event to be triggered again at a 			// later time), then the integrator may fail to start. It can get stuck 			// at the previous event. The use case for the bug MATH-421 is fairly 			// general, so events occurring exactly at start in the first step should 			// be ignored. 			// extremely rare case: there is a zero EXACTLY at interval start 			// we will use the sign slightly after step beginning to force ignoring this zero 			final double epsilon = org.apache.commons.math.util.FastMath.max(solver.getAbsoluteAccuracy(), org.apache.commons.math.util.FastMath.abs(solver.getRelativeAccuracy() * t0)); 			final double tStart = t0 + (0.5 * epsilon); 			interpolator.setInterpolatedTime(tStart); 			g0 = handler.g(tStart, interpolator.getInterpolatedState());} 		g0Positive = g0 >= 0;} 	/**
	    	       ^, EventState.java:260: error: ';' expected
	 */ 	public void reinitializeBegin(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) { 		t0 = interpolator.getPreviousTime(); 		interpolator.setInterpolatedTime(t0); 		g0 = handler.g(t0, interpolator.getInterpolatedState()); 		if (g0 == 0) { 			// excerpt from MATH-421 issue: 			// If an ODE solver is setup with an EventHandler that return STOP 			// when the even is triggered, the integrator stops (which is exactly 			// the expected behavior). If however the user wants to restart the 			// solver from the final state reached at the event with the same 			// configuration (expecting the event to be triggered again at a 			// later time), then the integrator may fail to start. It can get stuck 			// at the previous event. The use case for the bug MATH-421 is fairly 			// general, so events occurring exactly at start in the first step should 			// be ignored. 			// extremely rare case: there is a zero EXACTLY at interval start 			// we will use the sign slightly after step beginning to force ignoring this zero 			final double epsilon = org.apache.commons.math.util.FastMath.max(solver.getAbsoluteAccuracy(), org.apache.commons.math.util.FastMath.abs(solver.getRelativeAccuracy() * t0)); 			final double tStart = t0 + (0.5 * epsilon); 			interpolator.setInterpolatedTime(tStart); 			g0 = handler.g(tStart, interpolator.getInterpolatedState());} 		g0Positive = g0 >= 0;} 	/**
	    	                             ^, EventState.java:260: error: ';' expected
	 */ 	public void reinitializeBegin(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) { 		t0 = interpolator.getPreviousTime(); 		interpolator.setInterpolatedTime(t0); 		g0 = handler.g(t0, interpolator.getInterpolatedState()); 		if (g0 == 0) { 			// excerpt from MATH-421 issue: 			// If an ODE solver is setup with an EventHandler that return STOP 			// when the even is triggered, the integrator stops (which is exactly 			// the expected behavior). If however the user wants to restart the 			// solver from the final state reached at the event with the same 			// configuration (expecting the event to be triggered again at a 			// later time), then the integrator may fail to start. It can get stuck 			// at the previous event. The use case for the bug MATH-421 is fairly 			// general, so events occurring exactly at start in the first step should 			// be ignored. 			// extremely rare case: there is a zero EXACTLY at interval start 			// we will use the sign slightly after step beginning to force ignoring this zero 			final double epsilon = org.apache.commons.math.util.FastMath.max(solver.getAbsoluteAccuracy(), org.apache.commons.math.util.FastMath.abs(solver.getRelativeAccuracy() * t0)); 			final double tStart = t0 + (0.5 * epsilon); 			interpolator.setInterpolatedTime(tStart); 			g0 = handler.g(tStart, interpolator.getInterpolatedState());} 		g0Positive = g0 >= 0;} 	/**
	    	                                                                                                      ^, EventState.java:261: error: illegal start of expression
	 * Evaluate the impact of the proposed step on the event handler.
	 ^, EventState.java:261: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	           ^, EventState.java:261: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                      ^, EventState.java:261: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                             ^, EventState.java:261: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                           ^, EventState.java:261: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                  ^, EventState.java:261: error: ';' expected
	 * Evaluate the impact of the proposed step on the event handler.
	                                                                ^, EventState.java:263: error: <identifier> expected
	 * @param interpolator
	                      ^, EventState.java:264: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                 ^, EventState.java:264: error: '(' expected
	 * 		step interpolator for the proposed step
	   		                     ^, EventState.java:264: error: ';' expected
	 * 		step interpolator for the proposed step
	   		                                  ^, EventState.java:265: error: <identifier> expected
	 * @return true if the event handler triggers an event before
	    ^, EventState.java:265: error: ';' expected
	 * @return true if the event handler triggers an event before
	               ^, EventState.java:265: error: not a statement
	 * @return true if the event handler triggers an event before
	                   ^, EventState.java:265: error: ')' expected
	 * @return true if the event handler triggers an event before
	                      ^, EventState.java:265: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                    ^, EventState.java:265: error: variable declaration not allowed here
	 * @return true if the event handler triggers an event before
	                             ^, EventState.java:265: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                ^, EventState.java:265: error: ';' expected
	 * @return true if the event handler triggers an event before
	                                                             ^, EventState.java:266: error: ';' expected
	the end of the proposed step
	       ^, EventState.java:266: error: ';' expected
	the end of the proposed step
	              ^, EventState.java:266: error: ';' expected
	the end of the proposed step
	                            ^, EventState.java:267: error: <identifier> expected
	 * @exception ConvergenceException
	                                  ^, EventState.java:268: error: '(' expected
	 * 		if an event cannot be located
	   		  ^, EventState.java:268: error: ')' expected
	 * 		if an event cannot be located
	   		     ^, EventState.java:268: error: ';' expected
	 * 		if an event cannot be located
	   		                  ^, EventState.java:268: error: variable declaration not allowed here
	 * 		if an event cannot be located
	   		            ^, EventState.java:268: error: ';' expected
	 * 		if an event cannot be located
	   		                             ^, EventState.java:269: error: illegal start of expression
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	^, EventState.java:269: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                           ^, EventState.java:269: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                    ^, EventState.java:269: error: not a statement
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                              ^, EventState.java:269: error: ';' expected
	 */ 	public boolean evaluateStep(final org.apache.commons.math.ode.sampling.StepInterpolator interpolator) throws org.apache.commons.math.exception.ConvergenceException { 		forward = interpolator.isForward(); 		final double t1 = interpolator.getCurrentTime(); 		final double dt = t1 - t0; 		if (org.apache.commons.math.util.FastMath.abs(dt) < convergence) { 			// we cannot do anything on such a small step, don't trigger any events
	    	                                                                                                                                                                   ^, EventState.java:286: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	^, EventState.java:286: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	                          ^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                        ^, EventState.java:300: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                        ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(314): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.handler = handler ` -topatch--> `org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver<org.apache.commons.math.analy[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (627(f=2.0), 628(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (627(f=2.0), )
----------Running generation: 315, population size: 1

***** Generation 315 : 0
**Parent Variant: [Variant id: 629, #gens: 671, #ops: 0, parent:-]

--Child created id: 630
--Creating new operations for variant [Variant id: 630, #gens: 671, #ops: 0, parent:629]
---analyzing modificationPoint position: 265
---modifPoint 0 not mutation generated in  double sum = a[k - 1][0] * yDotK[0][j]
---analyzing modificationPoint position: 654
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  c = a + lnzb
---analyzing modificationPoint position: 594
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  if ((x < 0) && (y != x)) { 	y--; }
---analyzing modificationPoint position: 416
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [stepHandlers]
--> var from patch: stepHandlers spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java250
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `expandable.computeDerivatives(t, y, yDot) ` -topatch--> `stepHandlers = new java.util.ArrayList<org.apache.commons.math.ode.sampling.StepHandler>()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 250, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `expandable.computeDerivatives(t, y, yDot) ` -topatch--> `stepHandlers = new java.util.ArrayList<org.apache.commons.math.ode.sampling.StepHandler>()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 630, #gens: 672, #ops: 1, parent:629] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 630
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-630/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(315): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `expandable.computeDerivatives(t, y, yDot) ` -topatch--> `stepHandlers = new java.util.ArrayList<org.apache.commons.math.ode.sampling.StepHandler>()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (630(f=1.0), 629(f=2.0), )
Selected to next generation: IDs2--> (630(f=1.0), )
----------Running generation: 316, population size: 1

***** Generation 316 : 0
**Parent Variant: [Variant id: 631, #gens: 671, #ops: 0, parent:-]

--Child created id: 632
--Creating new operations for variant [Variant id: 632, #gens: 671, #ops: 0, parent:631]
---analyzing modificationPoint position: 385
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  // perform integration integrate(expandableODE, t)
---analyzing modificationPoint position: 603
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  final boolean isEqual = org.apache.commons.math.util.FastMath.abs(xInt - yInt) <= maxUlps
---analyzing modificationPoint position: 229
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 2 not mutation generated in  // save the last evaluation for the next step java.lang.System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0[...]
---analyzing modificationPoint position: 449
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 3 not mutation generated in  this.primaryStateDot = new double[n]
---analyzing modificationPoint position: 39
---modifPoint 4 not mutation generated in  return pendingEvent ?  pendingEventTime :  forward ? java.lang.Double.POSITIVE_INFINITY : java.lang.[...]
---analyzing modificationPoint position: 515
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 5 not mutation generated in  if (x != x) { 	// NaN 	return x; }
---analyzing modificationPoint position: 558
Templates availables301
Attempts Base Ingredients  1 total 301
---modifPoint 6 not mutation generated in  double aa = (epsilon + tmp) - tmp
---analyzing modificationPoint position: 358
location: AbstractStepInterpolator.java483
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `doFinalize() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 632, #gens: 670, #ops: 1, parent:631] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 632
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-632/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(316): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `doFinalize() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (632(f=1.0), 631(f=2.0), )
Selected to next generation: IDs2--> (632(f=1.0), )
----------Running generation: 317, population size: 1

***** Generation 317 : 0
**Parent Variant: [Variant id: 633, #gens: 671, #ops: 0, parent:-]

--Child created id: 634
--Creating new operations for variant [Variant id: 634, #gens: 671, #ops: 0, parent:633]
---analyzing modificationPoint position: 193
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch []
location: DormandPrince853StepInterpolator.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `double s` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 248, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `double s` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 634, #gens: 672, #ops: 1, parent:633] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 634
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-634/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(317): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `double s` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (634(f=1.0), 633(f=2.0), )
Selected to next generation: IDs2--> (634(f=1.0), )
----------Running generation: 318, population size: 1

***** Generation 318 : 0
**Parent Variant: [Variant id: 635, #gens: 671, #ops: 0, parent:-]

--Child created id: 636
--Creating new operations for variant [Variant id: 636, #gens: 671, #ops: 0, parent:635]
---analyzing modificationPoint position: 168
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  yTmp[j] = currentState[j] + (h * s)
---analyzing modificationPoint position: 109
---modifPoint 1 not mutation generated in  // check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]
---analyzing modificationPoint position: 367
location: AbstractStepInterpolator.java114
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 636, #gens: 670, #ops: 1, parent:635] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 636
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-636/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(318): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (636(f=1.0), 635(f=2.0), )
Selected to next generation: IDs2--> (636(f=1.0), )
----------Running generation: 319, population size: 1

***** Generation 319 : 0
**Parent Variant: [Variant id: 637, #gens: 671, #ops: 0, parent:-]

--Child created id: 638
--Creating new operations for variant [Variant id: 638, #gens: 671, #ops: 0, parent:637]
---analyzing modificationPoint position: 181
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 0 not mutation generated in  final double[] y = new double[maximalOrder + 1]
---analyzing modificationPoint position: 333
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  softPreviousTime = interpolator.softPreviousTime
---analyzing modificationPoint position: 506
location: BaseAbstractUnivariateRealSolver.java294
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluations.incrementCount() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 638, #gens: 670, #ops: 1, parent:637] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 638
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-638/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(319): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluations.incrementCount() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (638(f=1.0), 637(f=2.0), )
Selected to next generation: IDs2--> (638(f=1.0), )
----------Running generation: 320, population size: 1

***** Generation 320 : 0
**Parent Variant: [Variant id: 639, #gens: 671, #ops: 0, parent:-]

--Child created id: 640
--Creating new operations for variant [Variant id: 640, #gens: 671, #ops: 0, parent:639]
---analyzing modificationPoint position: 226
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  y += 1.0
---analyzing modificationPoint position: 37
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [this.solver]
--> var from patch: this.solver spoon.support.reflect.code.CtFieldWriteImpl
location: EventState.java257
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = true ` -topatch--> `this.solver = solver` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 257, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = true ` -topatch--> `this.solver = solver` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 640, #gens: 672, #ops: 1, parent:639] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 640, errors: [EventState.java:258: error: cannot assign a value to final variable solver
					pendingEvent = true; 					this.solver = solver;
					                     					    ^]
Ingredient counter is Zero
---Undoing: gnrtn(320): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEvent = true ` -topatch--> `this.solver = solver` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (639(f=2.0), 640(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (639(f=2.0), )
----------Running generation: 321, population size: 1

***** Generation 321 : 0
**Parent Variant: [Variant id: 641, #gens: 671, #ops: 0, parent:-]

--Child created id: 642
--Creating new operations for variant [Variant id: 642, #gens: 671, #ops: 0, parent:641]
---analyzing modificationPoint position: 138
location: DormandPrince853StepInterpolator.java344
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[0][i] = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_01 * yDot1)[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 642, #gens: 670, #ops: 1, parent:641] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 642
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-642/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(321): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[0][i] = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_01 * yDot1)[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (642(f=1.0), 641(f=2.0), )
Selected to next generation: IDs2--> (642(f=1.0), )
----------Running generation: 322, population size: 1

***** Generation 322 : 0
**Parent Variant: [Variant id: 643, #gens: 671, #ops: 0, parent:-]

--Child created id: 644
--Creating new operations for variant [Variant id: 644, #gens: 671, #ops: 0, parent:643]
---analyzing modificationPoint position: 415
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 0 not mutation generated in  // Add contribution for secondary equations for (final org.apache.commons.math.ode.ExpandableStatefu[...]
---analyzing modificationPoint position: 173
location: DormandPrince853StepInterpolator.java417
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 644, #gens: 670, #ops: 1, parent:643] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 644
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-644/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(322): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (644(f=1.0), 643(f=2.0), )
Selected to next generation: IDs2--> (644(f=1.0), )
----------Running generation: 323, population size: 1

***** Generation 323 : 0
**Parent Variant: [Variant id: 645, #gens: 671, #ops: 0, parent:-]

--Child created id: 646
--Creating new operations for variant [Variant id: 646, #gens: 671, #ops: 0, parent:645]
---analyzing modificationPoint position: 385
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch []
location: AbstractIntegrator.java213
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// perform integration integrate(expandableODE, t) ` -topatch--> `final java.util.List<org.apache.commons.math.ode.events.EventHandler> list = new java.util.ArrayList[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 213, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// perform integration integrate(expandableODE, t) ` -topatch--> `final java.util.List<org.apache.commons.math.ode.events.EventHandler> list = new java.util.ArrayList[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 646, #gens: 672, #ops: 1, parent:645] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 646
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-646/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(323): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// perform integration integrate(expandableODE, t) ` -topatch--> `final java.util.List<org.apache.commons.math.ode.events.EventHandler> list = new java.util.ArrayList[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (646(f=1.0), 645(f=2.0), )
Selected to next generation: IDs2--> (646(f=1.0), )
----------Running generation: 324, population size: 1

***** Generation 324 : 0
**Parent Variant: [Variant id: 647, #gens: 671, #ops: 0, parent:-]

--Child created id: 648
--Creating new operations for variant [Variant id: 648, #gens: 671, #ops: 0, parent:647]
---analyzing modificationPoint position: 410
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [absoluteAccuracy]
--> var from patch: absoluteAccuracy spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 122, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 648, #gens: 671, #ops: 1, parent:647] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 648
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-648/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(324): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (647(f=2.0), 648(f=2.0), )
Selected to next generation: IDs2--> (647(f=2.0), )
----------Running generation: 325, population size: 1

***** Generation 325 : 0
**Parent Variant: [Variant id: 649, #gens: 671, #ops: 0, parent:-]

--Child created id: 650
--Creating new operations for variant [Variant id: 650, #gens: 671, #ops: 0, parent:649]
---analyzing modificationPoint position: 141
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  for (int k = 0; k < org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.D.length; [...]
---analyzing modificationPoint position: 541
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  // y*ln(x) = (aa+ab) final double aa = lna * ya
---analyzing modificationPoint position: 537
Templates availables301
Attempts Base Ingredients  1 total 301
---modifPoint 2 not mutation generated in  /* resplit lns */ double tmp1 = lna * org.apache.commons.math.util.FastMath.HEX_40000000
---analyzing modificationPoint position: 109
---modifPoint 3 not mutation generated in  // check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]
---analyzing modificationPoint position: 324
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 4 not mutation generated in  allocateInterpolatedArrays(-1)
---analyzing modificationPoint position: 134
---modifPoint 5 not mutation generated in  final double yDot13 = yDotK[12][i]
---analyzing modificationPoint position: 540
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 6 not mutation generated in  lna = tmp2
---analyzing modificationPoint position: 422
location: ExpandableStatefulODE.java164
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 650, #gens: 670, #ops: 1, parent:649] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 650
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-650/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(325): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (650(f=1.0), 649(f=2.0), )
Selected to next generation: IDs2--> (650(f=1.0), )
----------Running generation: 326, population size: 1

***** Generation 326 : 0
**Parent Variant: [Variant id: 651, #gens: 671, #ops: 0, parent:-]

--Child created id: 652
--Creating new operations for variant [Variant id: 652, #gens: 671, #ops: 0, parent:651]
---analyzing modificationPoint position: 312
location: AdaptiveStepsizeIntegrator.java162
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scalRelativeTolerance = relativeTolerance ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 652, #gens: 670, #ops: 1, parent:651] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 652
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-652/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(326): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scalRelativeTolerance = relativeTolerance ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (652(f=1.0), 651(f=2.0), )
Selected to next generation: IDs2--> (652(f=1.0), )
----------Running generation: 327, population size: 1

***** Generation 327 : 0
**Parent Variant: [Variant id: 653, #gens: 671, #ops: 0, parent:-]

--Child created id: 654
--Creating new operations for variant [Variant id: 654, #gens: 671, #ops: 0, parent:653]
---analyzing modificationPoint position: 556
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x, bits, ((long) (y)), yi, java.lang.Double.NEGATIVE_INFINITY, java.lang.Double.POSITIVE_INFINITY, java.lang.Double.NaN]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: bits spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ((long) (y)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yi spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.NEGATIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: FastMath.java1431
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...] ` -topatch--> `if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1431, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...] ` -topatch--> `if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 654, #gens: 672, #ops: 1, parent:653] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 654, errors: [FastMath.java:1588: error: illegal start of expression
	 */ 	private static double polySine(final double x) {
	    	^, FastMath.java:1588: error: illegal start of expression
	 */ 	private static double polySine(final double x) {
	    	        ^, FastMath.java:1588: error: ';' expected
	 */ 	private static double polySine(final double x) {
	    	              ^, FastMath.java:1588: error: illegal start of expression
	 */ 	private static double polySine(final double x) {
	    	                               ^, FastMath.java:1588: error: ';' expected
	 */ 	private static double polySine(final double x) {
	    	                                    ^, FastMath.java:1588: error: not a statement
	 */ 	private static double polySine(final double x) {
	    	                                            ^, FastMath.java:1588: error: ';' expected
	 */ 	private static double polySine(final double x) {
	    	                                             ^, FastMath.java:1609: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x;
	    	^, FastMath.java:1609: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x;
	    	        ^, FastMath.java:1609: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x;
	    	              ^, FastMath.java:1609: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x;
	    	                                        ^, FastMath.java:1609: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x;
	    	                                         ^, FastMath.java:1629: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	^, FastMath.java:1629: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	        ^, FastMath.java:1629: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	              ^, FastMath.java:1629: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                  ^, FastMath.java:1629: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                    ^, FastMath.java:1629: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                               ^, FastMath.java:1753: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17;
	    	^, FastMath.java:1753: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17;
	    	        ^, FastMath.java:1753: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17;
	    	              ^, FastMath.java:1753: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17;
	    	                                  ^, FastMath.java:1753: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17;
	    	                                    ^, FastMath.java:1753: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17;
	    	                                               ^, FastMath.java:1773: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	^, FastMath.java:1773: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	        ^, FastMath.java:1773: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	              ^, FastMath.java:1773: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                  ^, FastMath.java:1773: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                    ^, FastMath.java:1773: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                                ^, FastMath.java:1773: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                                         ^, FastMath.java:1773: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125;
	    	                                                                  ^, FastMath.java:1920: error: illegal start of expression
	 */ 	private static void reducePayneHanek(double x, double[] result) { 		/* Convert input double to bits */
	    	^, FastMath.java:1920: error: illegal start of expression
	 */ 	private static void reducePayneHanek(double x, double[] result) { 		/* Convert input double to bits */
	    	        ^, FastMath.java:1920: error: ';' expected
	 */ 	private static void reducePayneHanek(double x, double[] result) { 		/* Convert input double to bits */
	    	              ^, FastMath.java:1920: error: '.class' expected
	 */ 	private static void reducePayneHanek(double x, double[] result) { 		/* Convert input double to bits */
	    	                                            ^, FastMath.java:1920: error: ';' expected
	 */ 	private static void reducePayneHanek(double x, double[] result) { 		/* Convert input double to bits */
	    	                                             ^, FastMath.java:1920: error: ';' expected
	 */ 	private static void reducePayneHanek(double x, double[] result) { 		/* Convert input double to bits */
	    	                                                              ^, FastMath.java:2136: error: illegal start of expression
	 */ 	public static double sin(double x) { 		boolean negative = false;
	    	^, FastMath.java:2136: error: illegal start of expression
	 */ 	public static double sin(double x) { 		boolean negative = false;
	    	       ^, FastMath.java:2136: error: ';' expected
	 */ 	public static double sin(double x) { 		boolean negative = false;
	    	             ^, FastMath.java:2136: error: '.class' expected
	 */ 	public static double sin(double x) { 		boolean negative = false;
	    	                                ^, FastMath.java:2136: error: ';' expected
	 */ 	public static double sin(double x) { 		boolean negative = false;
	    	                                 ^, FastMath.java:2234: error: illegal start of expression
	 */ 	public static double cos(double x) { 		int quadrant = 0;
	    	^, FastMath.java:2234: error: illegal start of expression
	 */ 	public static double cos(double x) { 		int quadrant = 0;
	    	       ^, FastMath.java:2234: error: ';' expected
	 */ 	public static double cos(double x) { 		int quadrant = 0;
	    	             ^, FastMath.java:2234: error: '.class' expected
	 */ 	public static double cos(double x) { 		int quadrant = 0;
	    	                                ^, FastMath.java:2234: error: ';' expected
	 */ 	public static double cos(double x) { 		int quadrant = 0;
	    	                                 ^, FastMath.java:2319: error: illegal start of expression
	 */ 	public static double tan(double x) { 		boolean negative = false;
	    	^, FastMath.java:2319: error: illegal start of expression
	 */ 	public static double tan(double x) { 		boolean negative = false;
	    	       ^, FastMath.java:2319: error: ';' expected
	 */ 	public static double tan(double x) { 		boolean negative = false;
	    	             ^, FastMath.java:2319: error: '.class' expected
	 */ 	public static double tan(double x) { 		boolean negative = false;
	    	                                ^, FastMath.java:2319: error: ';' expected
	 */ 	public static double tan(double x) { 		boolean negative = false;
	    	                                 ^, FastMath.java:2427: error: illegal start of expression
	 */ 	public static double atan(double x) { 		return org.apache.commons.math.util.FastMath.atan(x, 0.0, false);
	    	^, FastMath.java:2427: error: illegal start of expression
	 */ 	public static double atan(double x) { 		return org.apache.commons.math.util.FastMath.atan(x, 0.0, false);
	    	       ^, FastMath.java:2427: error: ';' expected
	 */ 	public static double atan(double x) { 		return org.apache.commons.math.util.FastMath.atan(x, 0.0, false);
	    	             ^, FastMath.java:2427: error: '.class' expected
	 */ 	public static double atan(double x) { 		return org.apache.commons.math.util.FastMath.atan(x, 0.0, false);
	    	                                 ^, FastMath.java:2427: error: ';' expected
	 */ 	public static double atan(double x) { 		return org.apache.commons.math.util.FastMath.atan(x, 0.0, false);
	    	                                  ^, FastMath.java:2440: error: illegal start of expression
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	^, FastMath.java:2440: error: illegal start of expression
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	        ^, FastMath.java:2440: error: ';' expected
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	              ^, FastMath.java:2440: error: '.class' expected
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	                                  ^, FastMath.java:2440: error: ';' expected
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	                                    ^, FastMath.java:2440: error: <identifier> expected
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	                                                ^, FastMath.java:2440: error: not a statement
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	                                                         ^, FastMath.java:2440: error: ';' expected
	 */ 	private static double atan(double xa, double xb, boolean leftPlane) { 		boolean negate = false; 		int idx; 		if (xa == 0.0) { 			// Matches +/- 0.0; return correct sign
	    	                                                                  ^, FastMath.java:2588: error: illegal start of expression
	 */ 	public static double atan2(double y, double x) { 		if ((x != x) || (y != y)) { 			return java.lang.Double.NaN;
	    	^, FastMath.java:2588: error: illegal start of expression
	 */ 	public static double atan2(double y, double x) { 		if ((x != x) || (y != y)) { 			return java.lang.Double.NaN;
	    	       ^, FastMath.java:2588: error: ';' expected
	 */ 	public static double atan2(double y, double x) { 		if ((x != x) || (y != y)) { 			return java.lang.Double.NaN;
	    	             ^, FastMath.java:2588: error: '.class' expected
	 */ 	public static double atan2(double y, double x) { 		if ((x != x) || (y != y)) { 			return java.lang.Double.NaN;
	    	                                  ^, FastMath.java:2588: error: ';' expected
	 */ 	public static double atan2(double y, double x) { 		if ((x != x) || (y != y)) { 			return java.lang.Double.NaN;
	    	                                   ^, FastMath.java:2588: error: ';' expected
	 */ 	public static double atan2(double y, double x) { 		if ((x != x) || (y != y)) { 			return java.lang.Double.NaN;
	    	                                             ^, FastMath.java:2709: error: illegal start of expression
	 */ 	public static double asin(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	^, FastMath.java:2709: error: illegal start of expression
	 */ 	public static double asin(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	       ^, FastMath.java:2709: error: ';' expected
	 */ 	public static double asin(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	             ^, FastMath.java:2709: error: '.class' expected
	 */ 	public static double asin(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	                                 ^, FastMath.java:2709: error: ';' expected
	 */ 	public static double asin(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	                                  ^, FastMath.java:2785: error: illegal start of expression
	 */ 	public static double acos(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	^, FastMath.java:2785: error: illegal start of expression
	 */ 	public static double acos(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	       ^, FastMath.java:2785: error: ';' expected
	 */ 	public static double acos(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	             ^, FastMath.java:2785: error: '.class' expected
	 */ 	public static double acos(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	                                 ^, FastMath.java:2785: error: ';' expected
	 */ 	public static double acos(double x) { 		if (x != x) { 			return java.lang.Double.NaN;
	    	                                  ^, FastMath.java:2867: error: illegal start of expression
	 */ 	public static double cbrt(double x) { 		/* Convert input double to bits */ 		long inbits = java.lang.Double.doubleToLongBits(x);
	    	^, FastMath.java:2867: error: illegal start of expression
	 */ 	public static double cbrt(double x) { 		/* Convert input double to bits */ 		long inbits = java.lang.Double.doubleToLongBits(x);
	    	       ^, FastMath.java:2867: error: ';' expected
	 */ 	public static double cbrt(double x) { 		/* Convert input double to bits */ 		long inbits = java.lang.Double.doubleToLongBits(x);
	    	             ^, FastMath.java:2867: error: '.class' expected
	 */ 	public static double cbrt(double x) { 		/* Convert input double to bits */ 		long inbits = java.lang.Double.doubleToLongBits(x);
	    	                                 ^, FastMath.java:2867: error: ';' expected
	 */ 	public static double cbrt(double x) { 		/* Convert input double to bits */ 		long inbits = java.lang.Double.doubleToLongBits(x);
	    	                                  ^, FastMath.java:2951: error: illegal start of expression
	 */ 	public static double toRadians(double x) {
	    	^, FastMath.java:2951: error: illegal start of expression
	 */ 	public static double toRadians(double x) {
	    	       ^, FastMath.java:2951: error: ';' expected
	 */ 	public static double toRadians(double x) {
	    	             ^, FastMath.java:2951: error: '.class' expected
	 */ 	public static double toRadians(double x) {
	    	                                      ^, FastMath.java:2951: error: ';' expected
	 */ 	public static double toRadians(double x) {
	    	                                       ^, FastMath.java:2976: error: illegal start of expression
	 */ 	public static double toDegrees(double x) {
	    	^, FastMath.java:2976: error: illegal start of expression
	 */ 	public static double toDegrees(double x) {
	    	       ^, FastMath.java:2976: error: ';' expected
	 */ 	public static double toDegrees(double x) {
	    	             ^, FastMath.java:2976: error: '.class' expected
	 */ 	public static double toDegrees(double x) {
	    	                                      ^, FastMath.java:2976: error: ';' expected
	 */ 	public static double toDegrees(double x) {
	    	                                       ^, FastMath.java:2997: error: illegal start of expression
	 */ 	public static int abs(final int x) { 		return x < 0 ? -x : x;
	    	^, FastMath.java:2997: error: illegal start of expression
	 */ 	public static int abs(final int x) { 		return x < 0 ? -x : x;
	    	       ^, FastMath.java:2997: error: ';' expected
	 */ 	public static int abs(final int x) { 		return x < 0 ? -x : x;
	    	             ^]
Ingredient counter is Zero
---Undoing: gnrtn(327): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...] ` -topatch--> `if (x == 0) { 	long bits = java.lang.Double.doubleToLongBits(x); 	if ((bits & 0x8000000000000000L) ![...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (653(f=2.0), 654(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (653(f=2.0), )
----------Running generation: 328, population size: 1

***** Generation 328 : 0
**Parent Variant: [Variant id: 655, #gens: 671, #ops: 0, parent:-]

--Child created id: 656
--Creating new operations for variant [Variant id: 656, #gens: 671, #ops: 0, parent:655]
---analyzing modificationPoint position: 562
---modifPoint 0 not mutation generated in  /* Need a more accurate epsilon, so adjust the division. */ double numer = bits & 0x3ffffffffffL
---analyzing modificationPoint position: 354
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  this.secondaryMappers = secondary.clone()
---analyzing modificationPoint position: 583
location: FastMath.java1320
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[0] = a ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 656, #gens: 670, #ops: 1, parent:655] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 656, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(328): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[0] = a ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (655(f=2.0), 656(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (655(f=2.0), )
----------Running generation: 329, population size: 1

***** Generation 329 : 0
**Parent Variant: [Variant id: 657, #gens: 671, #ops: 0, parent:-]

--Child created id: 658
--Creating new operations for variant [Variant id: 658, #gens: 671, #ops: 0, parent:657]
---analyzing modificationPoint position: 82
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: EventState.java200
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analys[...] ` -topatch--> `// find the event time making sure we select a solution just at or past the exact root final double [...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 200, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analys[...] ` -topatch--> `// find the event time making sure we select a solution just at or past the exact root final double [...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 658, #gens: 671, #ops: 1, parent:657] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 658, errors: [EventState.java:266: error: 'else' without 'if'
			} else {
			  ^, EventState.java:275: error: <identifier> expected
		pendingEvent = false;
		            ^, EventState.java:276: error: <identifier> expected
		pendingEventTime = java.lang.Double.NaN;
		                ^, EventState.java:277: error: illegal start of type
		return false;
		^, EventState.java:277: error: ';' expected
		return false;
		      ^, EventState.java:286: error: class, interface, or enum expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	       ^, EventState.java:289: error: class, interface, or enum expected
	}
	^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                               ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                               ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                             		        		^, EventState.java:302: error: class, interface, or enum expected
		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) {
		^, EventState.java:305: error: class, interface, or enum expected
			g0Positive = increasing;
			^, EventState.java:306: error: class, interface, or enum expected
			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));
			^, EventState.java:307: error: class, interface, or enum expected
		} else {
		^, EventState.java:309: error: class, interface, or enum expected
			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;
			^, EventState.java:310: error: class, interface, or enum expected
		}
		^, EventState.java:318: error: class, interface, or enum expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	       ^, EventState.java:319: error: class, interface, or enum expected
	}
	^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	       ^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                           ^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                           ^, EventState.java:332: error: class, interface, or enum expected
		}
		^, EventState.java:336: error: class, interface, or enum expected
		}
		^, EventState.java:338: error: class, interface, or enum expected
		pendingEventTime = java.lang.Double.NaN;
		^, EventState.java:340: error: class, interface, or enum expected
		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || 
		^, EventState.java:343: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(329): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analys[...] ` -topatch--> `// find the event time making sure we select a solution just at or past the exact root final double [...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (657(f=2.0), 658(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (657(f=2.0), )
----------Running generation: 330, population size: 1

***** Generation 330 : 0
**Parent Variant: [Variant id: 659, #gens: 671, #ops: 0, parent:-]

--Child created id: 660
--Creating new operations for variant [Variant id: 660, #gens: 671, #ops: 0, parent:659]
---analyzing modificationPoint position: 346
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [softPreviousTime]
--> var from patch: softPreviousTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java251
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `return softPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 251, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `return softPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 660, #gens: 672, #ops: 1, parent:659] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 660, errors: [AbstractStepInterpolator.java:381: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:381: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:381: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:381: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:381: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:381: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:381: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:383: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:383: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:384: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:384: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:384: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:384: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:384: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:384: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:385: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:385: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:385: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:385: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:385: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:385: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:385: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:385: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:385: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:386: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:386: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:386: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:386: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:386: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:387: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:387: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:388: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:389: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:389: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:387: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:390: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:390: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:390: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:391: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:391: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:392: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:392: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:392: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:392: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:392: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:404: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:404: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:404: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:404: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:408: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:408: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:412: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:412: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:417: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:417: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:422: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:422: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:424: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:424: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:426: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:426: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:426: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:426: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:428: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:428: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:439: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:439: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:439: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:439: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:439: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:439: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:441: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:441: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:441: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:444: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:444: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:446: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:446: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:448: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:448: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:448: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:450: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:450: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:450: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:485: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;
	    	^, AbstractStepInterpolator.java:485: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;
	    	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(330): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `return softPreviousTime` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (659(f=2.0), 660(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (659(f=2.0), )
----------Running generation: 331, population size: 1

***** Generation 331 : 0
**Parent Variant: [Variant id: 661, #gens: 671, #ops: 0, parent:-]

--Child created id: 662
--Creating new operations for variant [Variant id: 662, #gens: 671, #ops: 0, parent:661]
---analyzing modificationPoint position: 458
location: EquationsMapper.java77
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 662, #gens: 670, #ops: 1, parent:661] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 662
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-662/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(331): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (662(f=1.0), 661(f=2.0), )
Selected to next generation: IDs2--> (662(f=1.0), )
----------Running generation: 332, population size: 1

***** Generation 332 : 0
**Parent Variant: [Variant id: 663, #gens: 671, #ops: 0, parent:-]

--Child created id: 664
--Creating new operations for variant [Variant id: 664, #gens: 671, #ops: 0, parent:663]
---analyzing modificationPoint position: 316
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 0 not mutation generated in  double filteredH = h
---analyzing modificationPoint position: 290
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 1 not mutation generated in  // set up integration control objects stepStart = equations.getTime()
---analyzing modificationPoint position: 601
location: Precision.java271
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// Make lexicographically ordered as a two's-complement integer. if (xInt < 0) { 	xInt = org.apache.[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 664, #gens: 670, #ops: 1, parent:663] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 664
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-664/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(332): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// Make lexicographically ordered as a two's-complement integer. if (xInt < 0) { 	xInt = org.apache.[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (664(f=1.0), 663(f=2.0), )
Selected to next generation: IDs2--> (664(f=1.0), )
----------Running generation: 333, population size: 1

***** Generation 333 : 0
**Parent Variant: [Variant id: 665, #gens: 671, #ops: 0, parent:-]

--Child created id: 666
--Creating new operations for variant [Variant id: 666, #gens: 671, #ops: 0, parent:665]
---analyzing modificationPoint position: 467
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  interpolatedSecondaryDerivatives = new double[secondaryMappers.length][]
---analyzing modificationPoint position: 14
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  addEventHandler(handler, maxCheckInterval, convergence,  maxIterationCount,  new org.apache.commons.[...]
---analyzing modificationPoint position: 51
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 2 not mutation generated in  if (state.evaluateStep(interpolator)) { 	// the event occurs during the current step 	occuringEvents[...]
---analyzing modificationPoint position: 533
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1546
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Compute ln(x) */ final double lores = org.apache.commons.math.util.FastMath.log(x, lns) ` -topatch--> `// Accurracy suffers between 1.5 and PI/2 final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1546, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Compute ln(x) */ final double lores = org.apache.commons.math.util.FastMath.log(x, lns) ` -topatch--> `// Accurracy suffers between 1.5 and PI/2 final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 666, #gens: 671, #ops: 1, parent:665] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 666, errors: [FastMath.java:2404: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2404: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2404: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2404: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2404: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2404: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2404: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2404: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2405: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2405: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2405: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2405: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2407: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2408: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2408: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2409: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2409: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2409: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2409: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2410: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2410: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2410: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2410: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2410: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2419: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2419: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2419: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2419: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2419: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2419: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2424: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2426: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2426: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2426: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2427: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2427: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2428: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2428: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2429: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2429: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2430: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2430: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2431: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2431: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2443: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2443: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2468: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2468: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2468: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2468: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2468: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2468: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2468: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2469: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2469: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:2469: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:2469: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:2469: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:2469: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:2469: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:2471: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:2471: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:2472: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:2472: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:2472: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:2472: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:2473: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:2474: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:2474: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:2474: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:2474: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:2474: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:2474: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:2474: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:2475: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:2475: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:2475: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:2475: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:2475: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:2476: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:2476: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:2476: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:2476: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:2476: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:2476: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:2487: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:2487: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:2487: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:2487: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2487: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2487: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:2487: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:2487: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:2492: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2494: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2494: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2494: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2495: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2495: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2496: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(333): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Compute ln(x) */ final double lores = org.apache.commons.math.util.FastMath.log(x, lns) ` -topatch--> `// Accurracy suffers between 1.5 and PI/2 final double pi2a = 1.5707963267948966` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (665(f=2.0), 666(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (665(f=2.0), )
----------Running generation: 334, population size: 1

***** Generation 334 : 0
**Parent Variant: [Variant id: 667, #gens: 671, #ops: 0, parent:-]

--Child created id: 668
--Creating new operations for variant [Variant id: 668, #gens: 671, #ops: 0, parent:667]
---analyzing modificationPoint position: 345
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [interpolatedState]
--> var from patch: interpolatedState spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java250
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `interpolatedState = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 250, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `interpolatedState = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 668, #gens: 671, #ops: 1, parent:667] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 668
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-668/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(334): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `interpolatedState = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (668(f=1.0), 667(f=2.0), )
Selected to next generation: IDs2--> (668(f=1.0), )
----------Running generation: 335, population size: 1

***** Generation 335 : 0
**Parent Variant: [Variant id: 669, #gens: 671, #ops: 0, parent:-]

--Child created id: 670
--Creating new operations for variant [Variant id: 670, #gens: 671, #ops: 0, parent:669]
---analyzing modificationPoint position: 125
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  // compute the interpolation vectors for this time step for (int i = 0; i < interpolatedState.length[...]
---analyzing modificationPoint position: 663
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  if ((exp == (-1)) || (exp == 0)) { 	if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) { 		/* The n[...]
---analyzing modificationPoint position: 566
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  /* Remez polynomial evaluation */ double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[[...]
---analyzing modificationPoint position: 457
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 3 not mutation generated in  if (dt <= threshold) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.ap[...]
---analyzing modificationPoint position: 504
location: BaseAbstractUnivariateRealSolver.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementEvaluationCount() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 670, #gens: 670, #ops: 1, parent:669] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 670
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-670/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(335): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementEvaluationCount() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (670(f=1.0), 669(f=2.0), )
Selected to next generation: IDs2--> (670(f=1.0), )
----------Running generation: 336, population size: 1

***** Generation 336 : 0
**Parent Variant: [Variant id: 671, #gens: 671, #ops: 0, parent:-]

--Child created id: 672
--Creating new operations for variant [Variant id: 672, #gens: 671, #ops: 0, parent:671]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return eventT
---analyzing modificationPoint position: 577
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  ya = (aa + tmp) - tmp
---analyzing modificationPoint position: 552
Templates availables117
Attempts Base Ingredients  1 total 117
vars from patch []
location: FastMath.java1576
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// result = result + result * z; return result ` -topatch--> `return 1.0` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1576, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// result = result + result * z; return result ` -topatch--> `return 1.0` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 672, #gens: 671, #ops: 1, parent:671] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 672, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(336): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// result = result + result * z; return result ` -topatch--> `return 1.0` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (671(f=2.0), 672(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (671(f=2.0), )
----------Running generation: 337, population size: 1

***** Generation 337 : 0
**Parent Variant: [Variant id: 673, #gens: 671, #ops: 0, parent:-]

--Child created id: 674
--Creating new operations for variant [Variant id: 674, #gens: 671, #ops: 0, parent:673]
---analyzing modificationPoint position: 434
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [primaryStateDot]
--> var from patch: primaryStateDot spoon.support.reflect.code.CtFieldReadImpl
location: ExpandableStatefulODE.java293
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return completeState ` -topatch--> `return primaryStateDot.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 293, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return completeState ` -topatch--> `return primaryStateDot.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 674, #gens: 671, #ops: 1, parent:673] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 674
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-674/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(337): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return completeState ` -topatch--> `return primaryStateDot.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (674(f=1.0), 673(f=2.0), )
Selected to next generation: IDs2--> (674(f=1.0), )
----------Running generation: 338, population size: 1

***** Generation 338 : 0
**Parent Variant: [Variant id: 675, #gens: 671, #ops: 0, parent:-]

--Child created id: 676
--Creating new operations for variant [Variant id: 676, #gens: 671, #ops: 0, parent:675]
---analyzing modificationPoint position: 328
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  reinitialize(y, forward, primaryMapper, secondaryMappers)
---analyzing modificationPoint position: 209
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [den]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853Integrator.java279
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (den <= 0.0) { 	den = 1.0; } ` -topatch--> `if (den <= 0.0) { 	den = 1.0; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator line: 279, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (den <= 0.0) { 	den = 1.0; } ` -topatch--> `if (den <= 0.0) { 	den = 1.0; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 676, #gens: 671, #ops: 1, parent:675] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 676
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-676/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(338): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (den <= 0.0) { 	den = 1.0; } ` -topatch--> `if (den <= 0.0) { 	den = 1.0; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (676(f=1.0), 675(f=2.0), )
Selected to next generation: IDs2--> (676(f=1.0), )
----------Running generation: 339, population size: 1

***** Generation 339 : 0
**Parent Variant: [Variant id: 677, #gens: 671, #ops: 0, parent:-]

--Child created id: 678
--Creating new operations for variant [Variant id: 678, #gens: 671, #ops: 0, parent:677]
---analyzing modificationPoint position: 545
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1567
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double z = 1.0 / 120.0 ` -topatch--> `if (x == 1.0) { 	return 0.0; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1567, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double z = 1.0 / 120.0 ` -topatch--> `if (x == 1.0) { 	return 0.0; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 678, #gens: 672, #ops: 1, parent:677] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 678, errors: [FastMath.java:2807: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2807: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2807: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2807: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2807: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2807: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2807: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2807: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2808: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2808: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2808: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2808: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2810: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2811: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2811: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2812: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2812: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2812: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2812: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2813: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2813: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2813: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2813: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2813: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2822: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2822: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2822: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2822: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2822: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2822: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2827: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2829: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2829: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2829: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2830: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2830: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2831: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2831: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2832: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2832: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2833: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2833: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2834: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2834: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2846: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2846: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2871: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2871: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2871: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2871: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2871: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2871: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2871: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2872: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2872: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:2872: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:2872: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:2872: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:2872: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:2872: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:2874: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:2874: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:2875: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:2875: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:2875: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:2875: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:2876: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:2877: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:2877: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:2877: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:2877: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:2877: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:2877: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:2877: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:2878: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:2878: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:2878: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:2878: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:2878: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:2879: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:2879: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:2879: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:2879: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:2879: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:2879: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:2890: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:2890: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:2890: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:2890: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2890: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2890: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:2890: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:2890: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:2895: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2897: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2897: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2897: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2898: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2898: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2899: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(339): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double z = 1.0 / 120.0 ` -topatch--> `if (x == 1.0) { 	return 0.0; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (677(f=2.0), 678(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (677(f=2.0), )
----------Running generation: 340, population size: 1

***** Generation 340 : 0
**Parent Variant: [Variant id: 679, #gens: 671, #ops: 0, parent:-]

--Child created id: 680
--Creating new operations for variant [Variant id: 680, #gens: 671, #ops: 0, parent:679]
---analyzing modificationPoint position: 1
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch [vecRelativeTolerance]
--> var from patch: vecRelativeTolerance spoon.support.reflect.code.CtFieldWriteImpl
location: AdaptiveStepsizeIntegrator.java212
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialStep = initialStepSize ` -topatch--> `vecRelativeTolerance = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 212, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialStep = initialStepSize ` -topatch--> `vecRelativeTolerance = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 680, #gens: 672, #ops: 1, parent:679] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 680
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-680/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(340): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialStep = initialStepSize ` -topatch--> `vecRelativeTolerance = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (680(f=1.0), 679(f=2.0), )
Selected to next generation: IDs2--> (680(f=1.0), )
----------Running generation: 341, population size: 1

***** Generation 341 : 0
**Parent Variant: [Variant id: 681, #gens: 671, #ops: 0, parent:-]

--Child created id: 682
--Creating new operations for variant [Variant id: 682, #gens: 671, #ops: 0, parent:681]
---analyzing modificationPoint position: 495
---modifPoint 0 not mutation generated in  return relativeAccuracy
---analyzing modificationPoint position: 300
Templates availables22
Attempts Base Ingredients  1 total 22
vars from patch [this.safety]
--> var from patch: this.safety spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 
























































































































































































double safety
SameName: final 
























































































































































































double safety
Transforming shadowed variable in safety = safety
location: EmbeddedRungeKuttaIntegrator.java187
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.safety = safety ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 187, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.safety = safety ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 682, #gens: 671, #ops: 1, parent:681] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 682, errors: [EmbeddedRungeKuttaIntegrator.java:189: error: final parameter safety may not be assigned
	 */ 	public void setSafety(final double safety) { 		safety = safety;}
	    	                                             		^]
Ingredient counter is Zero
---Undoing: gnrtn(341): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.safety = safety ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (681(f=2.0), 682(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (681(f=2.0), )
----------Running generation: 342, population size: 1

***** Generation 342 : 0
**Parent Variant: [Variant id: 683, #gens: 671, #ops: 0, parent:-]

--Child created id: 684
--Creating new operations for variant [Variant id: 684, #gens: 671, #ops: 0, parent:683]
---analyzing modificationPoint position: 5
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java341
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(eventT, y, yDot) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 341, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(eventT, y, yDot) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 684, #gens: 671, #ops: 1, parent:683] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 684
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-684/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(342): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(eventT, y, yDot) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (684(f=1.0), 683(f=2.0), )
Selected to next generation: IDs2--> (684(f=1.0), )
----------Running generation: 343, population size: 1

***** Generation 343 : 0
**Parent Variant: [Variant id: 685, #gens: 671, #ops: 0, parent:-]

--Child created id: 686
--Creating new operations for variant [Variant id: 686, #gens: 671, #ops: 0, parent:685]
---analyzing modificationPoint position: 564
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  aa = (numer - (xa * denom)) - (xb * denom)
---analyzing modificationPoint position: 414
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 1 not mutation generated in  primaryMapper.insertEquationData(primaryStateDot, yDot)
---analyzing modificationPoint position: 410
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 122, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 686, #gens: 671, #ops: 1, parent:685] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 686
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-686/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(343): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (685(f=2.0), 686(f=2.0), )
Selected to next generation: IDs2--> (685(f=2.0), )
----------Running generation: 344, population size: 1

***** Generation 344 : 0
**Parent Variant: [Variant id: 687, #gens: 671, #ops: 0, parent:-]

--Child created id: 688
--Creating new operations for variant [Variant id: 688, #gens: 671, #ops: 0, parent:687]
---analyzing modificationPoint position: 466
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 0 not mutation generated in  interpolatedSecondaryState = new double[secondaryMappers.length][]
---analyzing modificationPoint position: 36
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [ta, tb]
--> var from patch: ta spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: tb spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java256
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `// no sign change: there is no event for now ta = tb` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 256, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `// no sign change: there is no event for now ta = tb` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 688, #gens: 671, #ops: 1, parent:687] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 688
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-688/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(344): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `pendingEventTime = root ` -topatch--> `// no sign change: there is no event for now ta = tb` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (687(f=2.0), 688(f=2.0), )
Selected to next generation: IDs2--> (687(f=2.0), )
----------Running generation: 345, population size: 1

***** Generation 345 : 0
**Parent Variant: [Variant id: 689, #gens: 671, #ops: 0, parent:-]

--Child created id: 690
--Creating new operations for variant [Variant id: 690, #gens: 671, #ops: 0, parent:689]
---analyzing modificationPoint position: 298
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java231
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (error >= 1.0) {  	if (firstTime || (!fsal)) { 		// first stage 		computeDerivatives(stepStart[...] ` -topatch--> `double hNew = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 231, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (error >= 1.0) {  	if (firstTime || (!fsal)) { 		// first stage 		computeDerivatives(stepStart[...] ` -topatch--> `double hNew = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 690, #gens: 672, #ops: 1, parent:689] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 690, errors: [EmbeddedRungeKuttaIntegrator.java:291: error: variable hNew is already defined in method integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double)
			} 			double hNew = 0;
			  			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(345): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtWhileImpl) `while (error >= 1.0) {  	if (firstTime || (!fsal)) { 		// first stage 		computeDerivatives(stepStart[...] ` -topatch--> `double hNew = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (689(f=2.0), 690(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (689(f=2.0), )
----------Running generation: 346, population size: 1

***** Generation 346 : 0
**Parent Variant: [Variant id: 691, #gens: 671, #ops: 0, parent:-]

--Child created id: 692
--Creating new operations for variant [Variant id: 692, #gens: 671, #ops: 0, parent:691]
---analyzing modificationPoint position: 387
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [stepHandlers, handler, interpolator, isLastStep]
--> var from patch: stepHandlers spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: handler spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: isLastStep spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java278
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double previousT = interpolator.getGlobalPreviousTime() ` -topatch--> `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 278, pointed element: CtForEachImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double previousT = interpolator.getGlobalPreviousTime() ` -topatch--> `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 692, #gens: 672, #ops: 1, parent:691] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 692, errors: [AbstractIntegrator.java:373: error: illegal start of expression
			 * {@inheritDoc }
			 ^, AbstractIntegrator.java:373: error: illegal start of expression
			 * {@inheritDoc }
			   ^, AbstractIntegrator.java:373: error: illegal start of type
			 * {@inheritDoc }
			                ^, AbstractIntegrator.java:373: error: ';' expected
			 * {@inheritDoc }
			                 ^, AbstractIntegrator.java:374: error: illegal start of expression
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			  ^, AbstractIntegrator.java:374: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			   ^, AbstractIntegrator.java:374: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                  ^, AbstractIntegrator.java:374: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                         ^, AbstractIntegrator.java:374: error: ';' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                       ^, AbstractIntegrator.java:374: error: illegal start of type
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                         ^, AbstractIntegrator.java:374: error: illegal start of type
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		^, AbstractIntegrator.java:374: error: ')' expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		                                                              ^, AbstractIntegrator.java:374: error: <identifier> expected
			 */ 			public int compare(org.apache.commons.math.ode.events.EventState es0, org.apache.commons.math.ode.events.EventState es1) { 				return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime());}}); 		for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 			if (state.evaluateStep(interpolator)) { 				// the event occurs during the current step 				occuringEvents.add(state);}} 		while (!occuringEvents.isEmpty()) { 			// handle the chronologically first event 			final java.util.Iterator<org.apache.commons.math.ode.events.EventState> iterator = occuringEvents.iterator(); 			final org.apache.commons.math.ode.events.EventState currentEvent = iterator.next(); 			iterator.remove(); 			// restrict the interpolator to the first part of the step, up to the event 			final double eventT = currentEvent.getEventTime(); 			interpolator.setSoftPreviousTime(previousT); 			interpolator.setSoftCurrentTime(eventT); 			// trigger the event 			interpolator.setInterpolatedTime(eventT); 			final double[] eventY = interpolator.getInterpolatedState(); 			currentEvent.stepAccepted(eventT, eventY); 			isLastStep = currentEvent.stop(); 			// handle the first part of the step, up to the event
			    			                                                                                                                           				                                                                                            		                                                                             ^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(346): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double previousT = interpolator.getGlobalPreviousTime() ` -topatch--> `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (691(f=2.0), 692(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (691(f=2.0), )
----------Running generation: 347, population size: 1

***** Generation 347 : 0
**Parent Variant: [Variant id: 693, #gens: 671, #ops: 0, parent:-]

--Child created id: 694
--Creating new operations for variant [Variant id: 694, #gens: 671, #ops: 0, parent:693]
---analyzing modificationPoint position: 269
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [this.a]
--> var from patch: this.a spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java267
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `this.a = a` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 267, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `this.a = a` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 694, #gens: 672, #ops: 1, parent:693] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 694, errors: [EmbeddedRungeKuttaIntegrator.java:268: error: cannot assign a value to final variable a
					computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]); 					this.a = a;
					                                                                       					    ^]
Ingredient counter is Zero
---Undoing: gnrtn(347): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `computeDerivatives(stepStart + (c[k - 1] * stepSize), yTmp, yDotK[k]) ` -topatch--> `this.a = a` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (693(f=2.0), 694(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (693(f=2.0), )
----------Running generation: 348, population size: 1

***** Generation 348 : 0
**Parent Variant: [Variant id: 695, #gens: 671, #ops: 0, parent:-]

--Child created id: 696
--Creating new operations for variant [Variant id: 696, #gens: 671, #ops: 0, parent:695]
---analyzing modificationPoint position: 281
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java201
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// create some internal working arrays final double[] y0 = equations.getCompleteState() ` -topatch--> `setMaxGrowth(10.0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 201, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// create some internal working arrays final double[] y0 = equations.getCompleteState() ` -topatch--> `setMaxGrowth(10.0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 696, #gens: 672, #ops: 1, parent:695] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 696
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-696/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(348): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// create some internal working arrays final double[] y0 = equations.getCompleteState() ` -topatch--> `setMaxGrowth(10.0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (696(f=1.0), 695(f=2.0), )
Selected to next generation: IDs2--> (696(f=1.0), )
----------Running generation: 349, population size: 1

***** Generation 349 : 0
**Parent Variant: [Variant id: 697, #gens: 671, #ops: 0, parent:-]

--Child created id: 698
--Creating new operations for variant [Variant id: 698, #gens: 671, #ops: 0, parent:697]
---analyzing modificationPoint position: 374
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  this.dirtyState = true
---analyzing modificationPoint position: 177
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [vectorsInitialized]
--> var from patch: vectorsInitialized spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java427
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `vectorsInitialized = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 427, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `vectorsInitialized = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 698, #gens: 672, #ops: 1, parent:697] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 698
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-698/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(349): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...] ` -topatch--> `vectorsInitialized = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (698(f=1.0), 697(f=2.0), )
Selected to next generation: IDs2--> (698(f=1.0), )
----------Running generation: 350, population size: 1

***** Generation 350 : 0
**Parent Variant: [Variant id: 699, #gens: 671, #ops: 0, parent:-]

--Child created id: 700
--Creating new operations for variant [Variant id: 700, #gens: 671, #ops: 0, parent:699]
---analyzing modificationPoint position: 435
---modifPoint 0 not mutation generated in  return primaryMapper
---analyzing modificationPoint position: 256
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 1 not mutation generated in  // first stage computeDerivatives(stepStart, y, yDotK[0])
---analyzing modificationPoint position: 119
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java275
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 275, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 700, #gens: 671, #ops: 1, parent:699] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 700
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-700/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(350): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (700(f=1.0), 699(f=2.0), )
Selected to next generation: IDs2--> (700(f=1.0), )
----------Running generation: 351, population size: 1

***** Generation 351 : 0
**Parent Variant: [Variant id: 701, #gens: 671, #ops: 0, parent:-]

--Child created id: 702
--Creating new operations for variant [Variant id: 702, #gens: 671, #ops: 0, parent:701]
---analyzing modificationPoint position: 446
location: ExpandableStatefulODE.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = new org.apache.commons.math.ode.EquationsMapper(0, n) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 702, #gens: 670, #ops: 1, parent:701] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 702, errors: [ExpandableStatefulODE.java:81: error: variable primaryMapper might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(351): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = new org.apache.commons.math.ode.EquationsMapper(0, n) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (701(f=2.0), 702(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (701(f=2.0), )
----------Running generation: 352, population size: 1

***** Generation 352 : 0
**Parent Variant: [Variant id: 703, #gens: 671, #ops: 0, parent:-]

--Child created id: 704
--Creating new operations for variant [Variant id: 704, #gens: 671, #ops: 0, parent:703]
---analyzing modificationPoint position: 216
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  for (int k = 0; k < v.length; ++k) { 	v[k] = new double[dimension]; }
---analyzing modificationPoint position: 146
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  final double theta2 = theta * theta
---analyzing modificationPoint position: 153
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [theta]
--> var from patch: theta spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853StepInterpolator.java367
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8))) ` -topatch--> `final double twoTheta = 2 * theta` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 367, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8))) ` -topatch--> `final double twoTheta = 2 * theta` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 704, #gens: 672, #ops: 1, parent:703] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 704, errors: [DormandPrince853StepInterpolator.java:367: error: variable twoTheta is already defined in method computeInterpolatedStateAndDerivatives(double,double)
		final double dot3 = twoTheta * (1 + (theta * (twoTheta - 3))); 		final double twoTheta = 2 * theta;
		                                                               		             ^]
Ingredient counter is Zero
---Undoing: gnrtn(352): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8))) ` -topatch--> `final double twoTheta = 2 * theta` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (703(f=2.0), 704(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (703(f=2.0), )
----------Running generation: 353, population size: 1

***** Generation 353 : 0
**Parent Variant: [Variant id: 705, #gens: 671, #ops: 0, parent:-]

--Child created id: 706
--Creating new operations for variant [Variant id: 706, #gens: 671, #ops: 0, parent:705]
---analyzing modificationPoint position: 158
Templates availables27
Attempts Base Ingredients  1 total 27
---modifPoint 0 not mutation generated in  interpolatedState[i] = currentState[i] -  (oneMinusThetaH * (v[0][i] -  (theta * (v[1][i] +  (theta [...]
---analyzing modificationPoint position: 582
Templates availables275
Attempts Base Ingredients  1 total 275
vars from patch [yb]
--> var from patch: yb spoon.support.reflect.code.CtVariableWriteImpl
location: FastMath.java1265
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `lnzb = -((lnza - aa) - ab) ` -topatch--> `/* yb = -0.09001346640161823; yb = yb * epsA2 + 0.11110718400605211; yb = yb * epsA2 + -0.1428571349[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1265, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `lnzb = -((lnza - aa) - ab) ` -topatch--> `/* yb = -0.09001346640161823; yb = yb * epsA2 + 0.11110718400605211; yb = yb * epsA2 + -0.1428571349[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 706, #gens: 671, #ops: 1, parent:705] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 706, errors: [FastMath.java:2540: error: illegal start of expression
	 * Compute log(1 + x).
	 ^, FastMath.java:2540: error: ';' expected
	 * Compute log(1 + x).
	          ^, FastMath.java:2540: error: <identifier> expected
	 * Compute log(1 + x).
	                      ^, FastMath.java:2542: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2542: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2543: error: not a statement
	 * 		a number
	 ^, FastMath.java:2543: error: ';' expected
	 * 		a number
	   		 ^, FastMath.java:2544: error: <identifier> expected
	 * @return log(1 + x)
	    ^, FastMath.java:2544: error: not a statement
	 * @return log(1 + x)
	 ^, FastMath.java:2544: error: ';' expected
	 * @return log(1 + x)
	              ^, FastMath.java:2544: error: not a statement
	 * @return log(1 + x)
	                 ^, FastMath.java:2544: error: ';' expected
	 * @return log(1 + x)
	                    ^, FastMath.java:2545: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	^, FastMath.java:2545: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	       ^, FastMath.java:2545: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	             ^, FastMath.java:2545: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                           ^, FastMath.java:2545: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                ^, FastMath.java:2545: error: not a statement
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                        ^, FastMath.java:2545: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                         ^, FastMath.java:2554: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	^, FastMath.java:2554: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	       ^, FastMath.java:2554: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	             ^, FastMath.java:2554: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                           ^, FastMath.java:2554: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                ^, FastMath.java:2554: error: not a statement
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                        ^, FastMath.java:2554: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                         ^, FastMath.java:2572: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	^, FastMath.java:2572: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	       ^, FastMath.java:2572: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	             ^, FastMath.java:2572: error: '.class' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                ^, FastMath.java:2572: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                    ^, FastMath.java:2572: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                              ^, FastMath.java:2580: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	^, FastMath.java:2580: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	       ^, FastMath.java:2580: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	             ^, FastMath.java:2580: error: '.class' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                ^, FastMath.java:2580: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                 ^, FastMath.java:2580: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                           ^, FastMath.java:2595: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	^, FastMath.java:2595: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	        ^, FastMath.java:2595: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	              ^, FastMath.java:2595: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                               ^, FastMath.java:2595: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                    ^, FastMath.java:2595: error: not a statement
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                            ^, FastMath.java:2595: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                             ^, FastMath.java:2596: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2596: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2596: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2596: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2596: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2596: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2596: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2596: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2597: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2597: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2597: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2597: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2599: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2600: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2600: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2601: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2601: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2601: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2601: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2602: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2602: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2602: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2602: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2602: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2611: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2611: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2611: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2611: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2611: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2611: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2616: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2618: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2618: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2618: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2619: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2619: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2620: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2620: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2621: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2621: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2622: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2622: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2623: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2623: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2635: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2635: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2660: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2660: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2660: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2660: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2660: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2660: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2660: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2661: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2661: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^]
Ingredient counter is Zero
---Undoing: gnrtn(353): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `lnzb = -((lnza - aa) - ab) ` -topatch--> `/* yb = -0.09001346640161823; yb = yb * epsA2 + 0.11110718400605211; yb = yb * epsA2 + -0.1428571349[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (705(f=2.0), 706(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (705(f=2.0), )
----------Running generation: 354, population size: 1

***** Generation 354 : 0
**Parent Variant: [Variant id: 707, #gens: 671, #ops: 0, parent:-]

--Child created id: 708
--Creating new operations for variant [Variant id: 708, #gens: 671, #ops: 0, parent:707]
---analyzing modificationPoint position: 66
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  pendingEvent = false
---analyzing modificationPoint position: 565
location: FastMath.java1230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `xb += aa / denom ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 708, #gens: 670, #ops: 1, parent:707] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 708, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(354): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `xb += aa / denom ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (707(f=2.0), 708(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (707(f=2.0), )
----------Running generation: 355, population size: 1

***** Generation 355 : 0
**Parent Variant: [Variant id: 709, #gens: 671, #ops: 0, parent:-]

--Child created id: 710
--Creating new operations for variant [Variant id: 710, #gens: 671, #ops: 0, parent:709]
---analyzing modificationPoint position: 11
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch []
location: AbstractIntegrator.java337
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (currentEvent.reset(eventT, eventY)) { 	// some event handler has triggered changes that 	// inva[...] ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 337, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (currentEvent.reset(eventT, eventY)) { 	// some event handler has triggered changes that 	// inva[...] ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 710, #gens: 672, #ops: 1, parent:709] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 710
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-710/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(355): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (currentEvent.reset(eventT, eventY)) { 	// some event handler has triggered changes that 	// inva[...] ` -topatch--> `resetEvaluations()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (710(f=1.0), 709(f=2.0), )
Selected to next generation: IDs2--> (710(f=1.0), )
----------Running generation: 356, population size: 1

***** Generation 356 : 0
**Parent Variant: [Variant id: 711, #gens: 671, #ops: 0, parent:-]

--Child created id: 712
--Creating new operations for variant [Variant id: 712, #gens: 671, #ops: 0, parent:711]
---analyzing modificationPoint position: 17
---modifPoint 0 not mutation generated in  return orderingSign * java.lang.Double.compare(es0.getEventTime(), es1.getEventTime())
---analyzing modificationPoint position: 479
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [dimension]
--> var from patch: dimension spoon.support.reflect.code.CtFieldReadImpl
location: EquationsMapper.java65
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return dimension ` -topatch--> `return dimension` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.EquationsMapper line: 65, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return dimension ` -topatch--> `return dimension` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 712, #gens: 671, #ops: 1, parent:711] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 712
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-712/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(356): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return dimension ` -topatch--> `return dimension` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (712(f=1.0), 711(f=2.0), )
Selected to next generation: IDs2--> (712(f=1.0), )
----------Running generation: 357, population size: 1

***** Generation 357 : 0
**Parent Variant: [Variant id: 713, #gens: 671, #ops: 0, parent:-]

--Child created id: 714
--Creating new operations for variant [Variant id: 714, #gens: 671, #ops: 0, parent:713]
---analyzing modificationPoint position: 380
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  interpolatedPrimaryState = null
---analyzing modificationPoint position: 480
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [firstIndex]
--> var from patch: firstIndex spoon.support.reflect.code.CtVariableReadImpl
location: EquationsMapper.java50
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.firstIndex = firstIndex ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.EquationsMapper line: 50, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.firstIndex = firstIndex ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 714, #gens: 671, #ops: 1, parent:713] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 714, errors: [EquationsMapper.java:53: error: final parameter firstIndex may not be assigned
	 */ 	public EquationsMapper(final int firstIndex, final int dimension) { 		firstIndex = firstIndex; 		this.dimension = dimension;}
	    	                                                                    		^, EquationsMapper.java:53: error: variable firstIndex might not have been initialized
	 */ 	public EquationsMapper(final int firstIndex, final int dimension) { 		firstIndex = firstIndex; 		this.dimension = dimension;}
	    	                                                                    		                         		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(357): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.firstIndex = firstIndex ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (713(f=2.0), 714(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (713(f=2.0), )
----------Running generation: 358, population size: 1

***** Generation 358 : 0
**Parent Variant: [Variant id: 715, #gens: 671, #ops: 0, parent:-]

--Child created id: 716
--Creating new operations for variant [Variant id: 716, #gens: 671, #ops: 0, parent:715]
---analyzing modificationPoint position: 308
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch [initialStep]
--> var from patch: initialStep spoon.support.reflect.code.CtFieldWriteImpl
location: AdaptiveStepsizeIntegrator.java157
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `minStep = org.apache.commons.math.util.FastMath.abs(minimalStep) ` -topatch--> `initialStep = -1.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 157, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `minStep = org.apache.commons.math.util.FastMath.abs(minimalStep) ` -topatch--> `initialStep = -1.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 716, #gens: 672, #ops: 1, parent:715] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 716, errors: [AdaptiveStepsizeIntegrator.java:268: error: cannot find symbol
		double h = ((yOnScale2 < 1.0E-10) || (yDotOnScale2 < 1.0E-10)) ? 
		             ^
  symbol:   variable yOnScale2
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:268: error: cannot find symbol
		double h = ((yOnScale2 < 1.0E-10) || (yDotOnScale2 < 1.0E-10)) ? 
		                                      ^
  symbol:   variable yDotOnScale2
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:269: error: cannot find symbol
		1.0E-6 : 0.01 * org.apache.commons.math.util.FastMath.sqrt(yOnScale2 / yDotOnScale2);
		                                                           ^
  symbol:   variable yOnScale2
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:269: error: cannot find symbol
		1.0E-6 : 0.01 * org.apache.commons.math.util.FastMath.sqrt(yOnScale2 / yDotOnScale2);
		                                                                       ^
  symbol:   variable yDotOnScale2
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:283: error: cannot find symbol
			ratio = (yDot1[j] - yDot0[j]) / scale[j];
			^
  symbol:   variable ratio
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:284: error: cannot find symbol
			yDDotOnScale += ratio * ratio;
			                ^
  symbol:   variable ratio
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:284: error: cannot find symbol
			yDDotOnScale += ratio * ratio;
			                        ^
  symbol:   variable ratio
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator, AdaptiveStepsizeIntegrator.java:290: error: cannot find symbol
		final double maxInv2 = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.sqrt(yDotOnScale2), yDDotOnScale);
		                                                                                                            ^
  symbol:   variable yDotOnScale2
  location: class org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator]
Ingredient counter is Zero
---Undoing: gnrtn(358): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `minStep = org.apache.commons.math.util.FastMath.abs(minimalStep) ` -topatch--> `initialStep = -1.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (715(f=2.0), 716(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (715(f=2.0), )
----------Running generation: 359, population size: 1

***** Generation 359 : 0
**Parent Variant: [Variant id: 717, #gens: 671, #ops: 0, parent:-]

--Child created id: 718
--Creating new operations for variant [Variant id: 718, #gens: 671, #ops: 0, parent:717]
---analyzing modificationPoint position: 320
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  // we cannot keep any reference to the equations in the copy // the interpolator should have been fi[...]
---analyzing modificationPoint position: 504
location: BaseAbstractUnivariateRealSolver.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementEvaluationCount() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 718, #gens: 670, #ops: 1, parent:717] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 718
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-718/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(359): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementEvaluationCount() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (718(f=1.0), 717(f=2.0), )
Selected to next generation: IDs2--> (718(f=1.0), )
----------Running generation: 360, population size: 1

***** Generation 360 : 0
**Parent Variant: [Variant id: 719, #gens: 671, #ops: 0, parent:-]

--Child created id: 720
--Creating new operations for variant [Variant id: 720, #gens: 671, #ops: 0, parent:719]
---analyzing modificationPoint position: 115
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java247
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `verifySequence(x[0], x[1], x[2])` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 247, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `verifySequence(x[0], x[1], x[2])` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 720, #gens: 672, #ops: 1, parent:719] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 720
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-720/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(360): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `verifySequence(x[0], x[1], x[2])` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (720(f=1.0), 719(f=2.0), )
Selected to next generation: IDs2--> (720(f=1.0), )
----------Running generation: 361, population size: 1

***** Generation 361 : 0
**Parent Variant: [Variant id: 721, #gens: 671, #ops: 0, parent:-]

--Child created id: 722
--Creating new operations for variant [Variant id: 722, #gens: 671, #ops: 0, parent:721]
---analyzing modificationPoint position: 217
location: DormandPrince853StepInterpolator.java299
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 722, #gens: 670, #ops: 1, parent:721] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 722
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-722/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(361): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (722(f=1.0), 721(f=2.0), )
Selected to next generation: IDs2--> (722(f=1.0), )
----------Running generation: 362, population size: 1

***** Generation 362 : 0
**Parent Variant: [Variant id: 723, #gens: 671, #ops: 0, parent:-]

--Child created id: 724
--Creating new operations for variant [Variant id: 724, #gens: 671, #ops: 0, parent:723]
---analyzing modificationPoint position: 109
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java211
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 211, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 724, #gens: 672, #ops: 1, parent:723] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 724
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-724/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(362): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (724(f=1.0), 723(f=2.0), )
Selected to next generation: IDs2--> (724(f=1.0), )
----------Running generation: 363, population size: 1

***** Generation 363 : 0
**Parent Variant: [Variant id: 725, #gens: 671, #ops: 0, parent:-]

--Child created id: 726
--Creating new operations for variant [Variant id: 726, #gens: 671, #ops: 0, parent:725]
---analyzing modificationPoint position: 71
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  t0 = interpolator.getPreviousTime()
---analyzing modificationPoint position: 184
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java150
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 150, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 726, #gens: 671, #ops: 1, parent:725] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 726
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-726/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(363): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (726(f=1.0), 725(f=2.0), )
Selected to next generation: IDs2--> (726(f=1.0), )
----------Running generation: 364, population size: 1

***** Generation 364 : 0
**Parent Variant: [Variant id: 727, #gens: 671, #ops: 0, parent:-]

--Child created id: 728
--Creating new operations for variant [Variant id: 728, #gens: 671, #ops: 0, parent:727]
---analyzing modificationPoint position: 276
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  if (error >= 1.0) { 	// reject the step and attempt to reduce error by stepsize control 	final doubl[...]
---analyzing modificationPoint position: 529
location: FastMath.java1534
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y < 8.0E298) && (y > (-8.0E298))) { 	double tmp1 = y * org.apache.commons.math.util.FastMath.HE[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 728, #gens: 670, #ops: 1, parent:727] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 728, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(364): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y < 8.0E298) && (y > (-8.0E298))) { 	double tmp1 = y * org.apache.commons.math.util.FastMath.HE[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (727(f=2.0), 728(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (727(f=2.0), )
----------Running generation: 365, population size: 1

***** Generation 365 : 0
**Parent Variant: [Variant id: 729, #gens: 671, #ops: 0, parent:-]

--Child created id: 730
--Creating new operations for variant [Variant id: 730, #gens: 671, #ops: 0, parent:729]
---analyzing modificationPoint position: 393
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [eventsStates, state, interpolator]
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: state spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java291
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 291, pointed element: CtForEachImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 730, #gens: 672, #ops: 1, parent:729] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 730
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-730/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 2] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2490secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-730/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 3119] ,[]
-Valid?: |false|3|3119|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(365): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// search for next events that may occur during the step final int orderingSign = (interpolator.isFo[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (729(f=2.0), 730(f=3.0), )
Selected to next generation: IDs2--> (729(f=2.0), )
----------Running generation: 366, population size: 1

***** Generation 366 : 0
**Parent Variant: [Variant id: 731, #gens: 671, #ops: 0, parent:-]

--Child created id: 732
--Creating new operations for variant [Variant id: 732, #gens: 671, #ops: 0, parent:731]
---analyzing modificationPoint position: 188
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // evaluate first  endpoint y[0] = computeObjectiveValue(x[0])
---analyzing modificationPoint position: 547
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  z = (z * lnb) + (1.0 / 6.0)
---analyzing modificationPoint position: 549
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  z = (z * lnb) + 1.0
---analyzing modificationPoint position: 235
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [interpolator]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java303
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `interpolator.shift()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 303, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `interpolator.shift()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 732, #gens: 672, #ops: 1, parent:731] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 732
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-732/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(366): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (fsal) { 	// save the last evaluation for the next step 	java.lang.System.arraycopy(yDotTmp, 0, y[...] ` -topatch--> `interpolator.shift()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (732(f=1.0), 731(f=2.0), )
Selected to next generation: IDs2--> (732(f=1.0), )
----------Running generation: 367, population size: 1

***** Generation 367 : 0
**Parent Variant: [Variant id: 733, #gens: 671, #ops: 0, parent:-]

--Child created id: 734
--Creating new operations for variant [Variant id: 734, #gens: 671, #ops: 0, parent:733]
---analyzing modificationPoint position: 407
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: AbstractStepInterpolator.java384
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return forward ` -topatch--> `// create the new independent instance return doCopy()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 384, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return forward ` -topatch--> `// create the new independent instance return doCopy()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 734, #gens: 671, #ops: 1, parent:733] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 734, errors: [AbstractStepInterpolator.java:386: error: incompatible types: org.apache.commons.math.ode.sampling.StepInterpolator cannot be converted to boolean
		return doCopy();}
		             ^]
Ingredient counter is Zero
---Undoing: gnrtn(367): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return forward ` -topatch--> `// create the new independent instance return doCopy()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (733(f=2.0), 734(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (733(f=2.0), )
----------Running generation: 368, population size: 1

***** Generation 368 : 0
**Parent Variant: [Variant id: 735, #gens: 671, #ops: 0, parent:-]

--Child created id: 736
--Creating new operations for variant [Variant id: 736, #gens: 671, #ops: 0, parent:735]
---analyzing modificationPoint position: 127
---modifPoint 0 not mutation generated in  final double yDot6 = yDotK[5][i]
---analyzing modificationPoint position: 442
Templates availables26
Attempts Base Ingredients  1 total 26
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
vars from patch [primaryMapper, interpolatedDerivatives, interpolatedPrimaryDerivatives]
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: interpolatedDerivatives spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: interpolatedPrimaryDerivatives spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java413
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `primaryMapper.extractEquationData(interpolatedState,  interpolatedPrimaryState) ` -topatch--> `primaryMapper.extractEquationData(interpolatedDerivatives,  interpolatedPrimaryDerivatives)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 413, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `primaryMapper.extractEquationData(interpolatedState,  interpolatedPrimaryState) ` -topatch--> `primaryMapper.extractEquationData(interpolatedDerivatives,  interpolatedPrimaryDerivatives)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 736, #gens: 671, #ops: 1, parent:735] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 736
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-736/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(368): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `primaryMapper.extractEquationData(interpolatedState,  interpolatedPrimaryState) ` -topatch--> `primaryMapper.extractEquationData(interpolatedDerivatives,  interpolatedPrimaryDerivatives)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (736(f=1.0), 735(f=2.0), )
Selected to next generation: IDs2--> (736(f=1.0), )
----------Running generation: 369, population size: 1

***** Generation 369 : 0
**Parent Variant: [Variant id: 737, #gens: 671, #ops: 0, parent:-]

--Child created id: 738
--Creating new operations for variant [Variant id: 738, #gens: 671, #ops: 0, parent:737]
---analyzing modificationPoint position: 584
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [java.lang.Double.POSITIVE_INFINITY]
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: FastMath.java1321
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[1] = b ` -topatch--> `return java.lang.Double.POSITIVE_INFINITY` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1321, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[1] = b ` -topatch--> `return java.lang.Double.POSITIVE_INFINITY` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 738, #gens: 672, #ops: 1, parent:737] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 738, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(369): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[1] = b ` -topatch--> `return java.lang.Double.POSITIVE_INFINITY` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (737(f=2.0), 738(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (737(f=2.0), )
----------Running generation: 370, population size: 1

***** Generation 370 : 0
**Parent Variant: [Variant id: 739, #gens: 671, #ops: 0, parent:-]

--Child created id: 740
--Creating new operations for variant [Variant id: 740, #gens: 671, #ops: 0, parent:739]
---analyzing modificationPoint position: 326
location: AdaptiveStepsizeIntegrator.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 740, #gens: 670, #ops: 1, parent:739] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 740
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-740/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(370): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (740(f=1.0), 739(f=2.0), )
Selected to next generation: IDs2--> (740(f=1.0), )
----------Running generation: 371, population size: 1

***** Generation 371 : 0
**Parent Variant: [Variant id: 741, #gens: 671, #ops: 0, parent:-]

--Child created id: 742
--Creating new operations for variant [Variant id: 742, #gens: 671, #ops: 0, parent:741]
---analyzing modificationPoint position: 191
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 217
location: DormandPrince853StepInterpolator.java299
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 742, #gens: 670, #ops: 1, parent:741] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 742
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-742/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(371): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `v[k] = new double[dimension] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (742(f=1.0), 741(f=2.0), )
Selected to next generation: IDs2--> (742(f=1.0), )
----------Running generation: 372, population size: 1

***** Generation 372 : 0
**Parent Variant: [Variant id: 743, #gens: 671, #ops: 0, parent:-]

--Child created id: 744
--Creating new operations for variant [Variant id: 744, #gens: 671, #ops: 0, parent:743]
---analyzing modificationPoint position: 538
---modifPoint 0 not mutation generated in  double tmp2 = (lna + tmp1) - tmp1
---analyzing modificationPoint position: 290
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [this.prototype]
--> var from patch: this.prototype spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java215
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set up integration control objects stepStart = equations.getTime() ` -topatch--> `this.prototype = prototype` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 215, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set up integration control objects stepStart = equations.getTime() ` -topatch--> `this.prototype = prototype` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 744, #gens: 672, #ops: 1, parent:743] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 744, errors: [EmbeddedRungeKuttaIntegrator.java:213: error: cannot assign a value to final variable prototype
		interpolator.storeTime(equations.getTime()); 		this.prototype = prototype;
		                                             		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(372): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set up integration control objects stepStart = equations.getTime() ` -topatch--> `this.prototype = prototype` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (743(f=2.0), 744(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (743(f=2.0), )
----------Running generation: 373, population size: 1

***** Generation 373 : 0
**Parent Variant: [Variant id: 745, #gens: 671, #ops: 0, parent:-]

--Child created id: 746
--Creating new operations for variant [Variant id: 746, #gens: 671, #ops: 0, parent:745]
---analyzing modificationPoint position: 412
---modifPoint 0 not mutation generated in  return solve(maxEval, f, min, max, min + (0.5 * (max - min)))
---analyzing modificationPoint position: 15
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [t0, interpolator]
--> var from patch: t0 spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java229
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `t0 = interpolator.getPreviousTime()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 229, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `t0 = interpolator.getPreviousTime()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 746, #gens: 671, #ops: 1, parent:745] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 746, errors: [EventState.java:248: error: variable root might not have been initialized
				(org.apache.commons.math.util.FastMath.abs(root - ta) <= convergence)) && 
				                                           ^, EventState.java:256: error: variable root might not have been initialized
				(org.apache.commons.math.util.FastMath.abs(previousEventTime - root) > convergence)) {
				                                                               ^, EventState.java:257: error: variable root might not have been initialized
					pendingEventTime = root;
					                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(373): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `t0 = interpolator.getPreviousTime()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (745(f=2.0), 746(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (745(f=2.0), )
----------Running generation: 374, population size: 1

***** Generation 374 : 0
**Parent Variant: [Variant id: 747, #gens: 671, #ops: 0, parent:-]

--Child created id: 748
--Creating new operations for variant [Variant id: 748, #gens: 671, #ops: 0, parent:747]
---analyzing modificationPoint position: 424
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [resetOccurred]
--> var from patch: resetOccurred spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java192
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 192, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 748, #gens: 672, #ops: 1, parent:747] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 748, errors: [AbstractIntegrator.java:346: error: illegal start of expression
	 * Integrate a set of differential equations up to the given time.
	 ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	            ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                  ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                  ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                               ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                                      ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                                                 ^, AbstractIntegrator.java:347: error: illegal start of expression
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	      ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                        ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                   ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                 ^, AbstractIntegrator.java:347: error: not a statement
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                   ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                      ^, AbstractIntegrator.java:347: error: illegal start of type
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                         ^, AbstractIntegrator.java:347: error: illegal start of expression
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                          ^, AbstractIntegrator.java:348: error: illegal start of expression
	 * <p>The set of differential equations is composed of a main set, which
	 ^, AbstractIntegrator.java:348: error: illegal start of expression
	 * <p>The set of differential equations is composed of a main set, which
	      ^, AbstractIntegrator.java:347: error: not a statement
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                           ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                       ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                   ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                        ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                                        ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	         ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                     ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                               ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                                            ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                                                               ^, AbstractIntegrator.java:350: error: not a statement
	 * equations must be already set up with initial time and partial states.
	 ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	            ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                    ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                        ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                                     ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                                                 ^, AbstractIntegrator.java:350: error: <identifier> expected
	 * equations must be already set up with initial time and partial states.
	                                                                         ^, AbstractIntegrator.java:351: error: not a statement
	 * At integration completion, the final time and partial states will be
	 ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	     ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                 ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                               ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                                       ^, AbstractIntegrator.java:352: error: ';' expected
	 * available in the same object.</p>
	               ^, AbstractIntegrator.java:352: error: ';' expected
	 * available in the same object.</p>
	                        ^, AbstractIntegrator.java:352: error: illegal start of type
	 * available in the same object.</p>
	                                 ^, AbstractIntegrator.java:352: error: illegal start of expression
	 * available in the same object.</p>
	                                   ^, AbstractIntegrator.java:353: error: illegal start of expression
	 * <p>Since this method stores some internal state variables made
	      ^, AbstractIntegrator.java:353: error: not a statement
	 * <p>Since this method stores some internal state variables made
	 ^, AbstractIntegrator.java:353: error: not a statement
	 * <p>Since this method stores some internal state variables made
	            ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                              ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                                            ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                                                            ^, AbstractIntegrator.java:354: error: not a statement
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	 ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	            ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                   ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                    ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                          ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                       ^, AbstractIntegrator.java:354: error: illegal character: '#'
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                ^, AbstractIntegrator.java:354: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                         ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                          ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                            ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                             ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                 ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                            ^, AbstractIntegrator.java:354: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                             ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                              ^, AbstractIntegrator.java:354: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                               ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                                 ^, AbstractIntegrator.java:356: error: illegal start of expression
	 * @param equations
	 ^, AbstractIntegrator.java:356: error: illegal start of expression
	 * @param equations
	   ^, AbstractIntegrator.java:354: error: not a statement
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		        ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		               ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		                                      ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		                                                   ^, AbstractIntegrator.java:358: error: <identifier> expected
	 * @param t
	           ^, AbstractIntegrator.java:359: error: ';' expected
	 * 		target time for the integration
	   		           ^, AbstractIntegrator.java:359: error: '(' expected
	 * 		target time for the integration
	   		               ^, AbstractIntegrator.java:359: error: ';' expected
	 * 		target time for the integration
	   		                               ^, AbstractIntegrator.java:360: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	 ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	  ^, AbstractIntegrator.java:360: error: not a statement
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		 ^, AbstractIntegrator.java:360: error: ')' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		    ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		           ^, AbstractIntegrator.java:360: error: variable declaration not allowed here
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		        ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                              ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                            ^, AbstractIntegrator.java:360: error: illegal start of type
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                             ^, AbstractIntegrator.java:360: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                              ^, AbstractIntegrator.java:360: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                    ^, AbstractIntegrator.java:360: error: not a statement
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                  ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                                            ^, AbstractIntegrator.java:361: error: <identifier> expected
	 * @throws MathIllegalStateException
	    ^, AbstractIntegrator.java:361: error: ';' expected
	 * @throws MathIllegalStateException
	                                    ^, AbstractIntegrator.java:362: error: '(' expected
	 * 		if the integrator cannot perform integration
	   		  ^, AbstractIntegrator.java:362: error: ')' expected
	 * 		if the integrator cannot perform integration
	   		      ^, AbstractIntegrator.java:362: error: ';' expected
	 * 		if the integrator cannot perform integration
	   		                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(374): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (747(f=2.0), 748(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (747(f=2.0), )
----------Running generation: 375, population size: 1

***** Generation 375 : 0
**Parent Variant: [Variant id: 749, #gens: 671, #ops: 0, parent:-]

--Child created id: 750
--Creating new operations for variant [Variant id: 750, #gens: 671, #ops: 0, parent:749]
---analyzing modificationPoint position: 101
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // current tightest bracketing of the root double xA = x[signChangeIndex - 1]
---analyzing modificationPoint position: 30
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  // handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...]
---analyzing modificationPoint position: 96
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [previousEventTime, java.lang.Double.NaN]
--> var from patch: previousEventTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java298
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `previousEventTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 298, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `previousEventTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 750, #gens: 672, #ops: 1, parent:749] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 750
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-750/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(375): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `t0 = t ` -topatch--> `previousEventTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (750(f=1.0), 749(f=2.0), )
Selected to next generation: IDs2--> (750(f=1.0), )
----------Running generation: 376, population size: 1

***** Generation 376 : 0
**Parent Variant: [Variant id: 751, #gens: 671, #ops: 0, parent:-]

--Child created id: 752
--Creating new operations for variant [Variant id: 752, #gens: 671, #ops: 0, parent:751]
---analyzing modificationPoint position: 610
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (a < b) { 	return b; }
---analyzing modificationPoint position: 500
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  return y
---analyzing modificationPoint position: 337
location: AbstractStepInterpolator.java180
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (interpolator.currentState == null) { 	currentState = null; 	primaryMapper = null; 	secondaryMapp[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 752, #gens: 670, #ops: 1, parent:751] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 752
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-752/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(376): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (interpolator.currentState == null) { 	currentState = null; 	primaryMapper = null; 	secondaryMapp[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (752(f=1.0), 751(f=2.0), )
Selected to next generation: IDs2--> (752(f=1.0), )
----------Running generation: 377, population size: 1

***** Generation 377 : 0
**Parent Variant: [Variant id: 753, #gens: 671, #ops: 0, parent:-]

--Child created id: 754
--Creating new operations for variant [Variant id: 754, #gens: 671, #ops: 0, parent:753]
---analyzing modificationPoint position: 443
---modifPoint 0 not mutation generated in  return interpolatedPrimaryState
---analyzing modificationPoint position: 424
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java192
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 192, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 754, #gens: 672, #ops: 1, parent:753] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 754, errors: [AbstractIntegrator.java:194: error: incompatible types: unexpected return value
	 */ 	protected void setEquations(final org.apache.commons.math.ode.ExpandableStatefulODE equations) { 		return evaluations.getCount(); 		this.expandable = equations;}
	    	                                                                                                 		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(377): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (753(f=2.0), 754(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (753(f=2.0), )
----------Running generation: 378, population size: 1

***** Generation 378 : 0
**Parent Variant: [Variant id: 755, #gens: 671, #ops: 0, parent:-]

--Child created id: 756
--Creating new operations for variant [Variant id: 756, #gens: 671, #ops: 0, parent:755]
---analyzing modificationPoint position: 366
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [globalCurrentTime]
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java113
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `return globalCurrentTime` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 113, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `return globalCurrentTime` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 756, #gens: 672, #ops: 1, parent:755] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 756, errors: [AbstractStepInterpolator.java:416: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:416: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:416: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:416: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:416: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:416: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:416: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:418: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:418: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:419: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:419: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:419: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:419: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:419: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:419: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:419: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:419: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:419: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:420: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:420: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:420: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:420: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:420: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:420: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:420: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:420: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:420: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:421: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:421: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:421: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:421: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:421: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:422: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:422: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:423: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:424: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:424: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:422: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:425: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:425: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:425: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:426: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:426: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:427: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:427: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:427: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:427: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:427: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:439: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:439: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:439: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:439: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:443: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:443: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:447: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:447: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:452: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:452: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:457: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:457: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:459: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:459: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:461: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:461: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:461: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:461: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:463: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:463: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:474: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:474: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:474: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:474: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:474: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:474: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:476: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:476: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:476: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:479: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:479: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:481: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:481: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:483: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:483: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:483: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:485: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:485: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:485: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:520: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:520: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:523: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:523: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(378): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `return globalCurrentTime` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (755(f=2.0), 756(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (755(f=2.0), )
----------Running generation: 379, population size: 1

***** Generation 379 : 0
**Parent Variant: [Variant id: 757, #gens: 671, #ops: 0, parent:-]

--Child created id: 758
--Creating new operations for variant [Variant id: 758, #gens: 671, #ops: 0, parent:757]
---analyzing modificationPoint position: 471
location: AbstractStepInterpolator.java291
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 758, #gens: 670, #ops: 1, parent:757] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 758
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-758/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(379): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (758(f=1.0), 757(f=2.0), )
Selected to next generation: IDs2--> (758(f=1.0), )
----------Running generation: 380, population size: 1

***** Generation 380 : 0
**Parent Variant: [Variant id: 759, #gens: 671, #ops: 0, parent:-]

--Child created id: 760
--Creating new operations for variant [Variant id: 760, #gens: 671, #ops: 0, parent:759]
---analyzing modificationPoint position: 298
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  while (error >= 1.0) {  	if (firstTime || (!fsal)) { 		// first stage 		computeDerivatives(stepStart[...]
---analyzing modificationPoint position: 376
location: AbstractStepInterpolator.java123
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 760, #gens: 670, #ops: 1, parent:759] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 760
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-760/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(380): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (760(f=1.0), 759(f=2.0), )
Selected to next generation: IDs2--> (760(f=1.0), )
----------Running generation: 381, population size: 1

***** Generation 381 : 0
**Parent Variant: [Variant id: 761, #gens: 671, #ops: 0, parent:-]

--Child created id: 762
--Creating new operations for variant [Variant id: 762, #gens: 671, #ops: 0, parent:761]
---analyzing modificationPoint position: 453
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  // safety checks if (primaryState.length != this.primaryState.length) { 	throw new org.apache.common[...]
---analyzing modificationPoint position: 33
---modifPoint 1 not mutation generated in  @java.lang.SuppressWarnings("unchecked") org.apache.commons.math.analysis.solvers.BracketedUnivariat[...]
---analyzing modificationPoint position: 479
---modifPoint 2 not mutation generated in  return dimension
---analyzing modificationPoint position: 660
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  /* Lookup exp(floor(x)). intPartA will have the upper 22 bits, intPartB will have the lower 52 bits.[...]
---analyzing modificationPoint position: 73
location: EventState.java156
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t0, interpolator.getInterpolatedState()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 762, #gens: 670, #ops: 1, parent:761] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 762
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-762/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(381): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = handler.g(t0, interpolator.getInterpolatedState()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (762(f=1.0), 761(f=2.0), )
Selected to next generation: IDs2--> (762(f=1.0), )
----------Running generation: 382, population size: 1

***** Generation 382 : 0
**Parent Variant: [Variant id: 763, #gens: 671, #ops: 0, parent:-]

--Child created id: 764
--Creating new operations for variant [Variant id: 764, #gens: 671, #ops: 0, parent:763]
---analyzing modificationPoint position: 447
location: ExpandableStatefulODE.java76
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.time = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 764, #gens: 670, #ops: 1, parent:763] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 764
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-764/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(382): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.time = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (764(f=1.0), 763(f=2.0), )
Selected to next generation: IDs2--> (764(f=1.0), )
----------Running generation: 383, population size: 1

***** Generation 383 : 0
**Parent Variant: [Variant id: 765, #gens: 671, #ops: 0, parent:-]

--Child created id: 766
--Creating new operations for variant [Variant id: 766, #gens: 671, #ops: 0, parent:765]
---analyzing modificationPoint position: 207
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: DormandPrince853Integrator.java278
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double den = error1 + (0.01 * error2) ` -topatch--> `double error1 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator line: 278, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double den = error1 + (0.01 * error2) ` -topatch--> `double error1 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 766, #gens: 672, #ops: 1, parent:765] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 766, errors: [DormandPrince853Integrator.java:277: error: variable error1 is already defined in method estimateError(double[][],double[],double[],double)
		} 		double error1 = 0;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(383): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double den = error1 + (0.01 * error2) ` -topatch--> `double error1 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (765(f=2.0), 766(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (765(f=2.0), )
----------Running generation: 384, population size: 1

***** Generation 384 : 0
**Parent Variant: [Variant id: 767, #gens: 671, #ops: 0, parent:-]

--Child created id: 768
--Creating new operations for variant [Variant id: 768, #gens: 671, #ops: 0, parent:767]
---analyzing modificationPoint position: 118
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xB, nextX]
--> var from patch: xB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java254
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `// the sign change occurs before the inserted point xB = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 254, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `// the sign change occurs before the inserted point xB = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 768, #gens: 672, #ops: 1, parent:767] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 768, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                           ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                      ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                            ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                           ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                      ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                                           ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	                                                                                                                                     ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(384): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `// the sign change occurs before the inserted point xB = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (767(f=2.0), 768(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (767(f=2.0), )
----------Running generation: 385, population size: 1

***** Generation 385 : 0
**Parent Variant: [Variant id: 769, #gens: 671, #ops: 0, parent:-]

--Child created id: 770
--Creating new operations for variant [Variant id: 770, #gens: 671, #ops: 0, parent:769]
---analyzing modificationPoint position: 320
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  // we cannot keep any reference to the equations in the copy // the interpolator should have been fi[...]
---analyzing modificationPoint position: 429
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  evaluations.incrementCount()
---analyzing modificationPoint position: 148
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  // compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...]
---analyzing modificationPoint position: 497
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 3 not mutation generated in  return absoluteAccuracy
---analyzing modificationPoint position: 32
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch []
location: AbstractStepInterpolator.java334
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.softCurrentTime = softCurrentTime ` -topatch--> `allocateInterpolatedArrays(-1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 334, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.softCurrentTime = softCurrentTime ` -topatch--> `allocateInterpolatedArrays(-1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 770, #gens: 672, #ops: 1, parent:769] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 770
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-770/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(385): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.softCurrentTime = softCurrentTime ` -topatch--> `allocateInterpolatedArrays(-1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (770(f=1.0), 769(f=2.0), )
Selected to next generation: IDs2--> (770(f=1.0), )
----------Running generation: 386, population size: 1

***** Generation 386 : 0
**Parent Variant: [Variant id: 771, #gens: 671, #ops: 0, parent:-]

--Child created id: 772
--Creating new operations for variant [Variant id: 772, #gens: 671, #ops: 0, parent:771]
---analyzing modificationPoint position: 668
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 0 not mutation generated in  if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }
---analyzing modificationPoint position: 174
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  // k16 for (int j = 0; j < currentState.length; ++j) { 	s = ((((((((((org.apache.commons.math.ode.no[...]
---analyzing modificationPoint position: 665
Templates availables198
Attempts Base Ingredients  1 total 198
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1112
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `/* Handle special cases of negative input, and NaN */ if (((bits & 0x8000000000000000L) != 0) || (x [...] ` -topatch--> `// cosh[z] = (exp(z) + exp(-z))/2  // for numbers with magnitude 20 or so, // exp(-z) can be ignored[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1112, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `/* Handle special cases of negative input, and NaN */ if (((bits & 0x8000000000000000L) != 0) || (x [...] ` -topatch--> `// cosh[z] = (exp(z) + exp(-z))/2  // for numbers with magnitude 20 or so, // exp(-z) can be ignored[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 772, #gens: 671, #ops: 1, parent:771] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 772, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(386): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `/* Handle special cases of negative input, and NaN */ if (((bits & 0x8000000000000000L) != 0) || (x [...] ` -topatch--> `// cosh[z] = (exp(z) + exp(-z))/2  // for numbers with magnitude 20 or so, // exp(-z) can be ignored[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (771(f=2.0), 772(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (771(f=2.0), )
----------Running generation: 387, population size: 1

***** Generation 387 : 0
**Parent Variant: [Variant id: 773, #gens: 671, #ops: 0, parent:-]

--Child created id: 774
--Creating new operations for variant [Variant id: 774, #gens: 671, #ops: 0, parent:773]
---analyzing modificationPoint position: 96
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  t0 = t
---analyzing modificationPoint position: 228
---modifPoint 1 not mutation generated in  return y
---analyzing modificationPoint position: 99
location: BracketingNthOrderBrentSolver.java385
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 774, #gens: 670, #ops: 1, parent:773] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 774
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-774/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(387): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (774(f=1.0), 773(f=2.0), )
Selected to next generation: IDs2--> (774(f=1.0), )
----------Running generation: 388, population size: 1

***** Generation 388 : 0
**Parent Variant: [Variant id: 775, #gens: 671, #ops: 0, parent:-]

--Child created id: 776
--Creating new operations for variant [Variant id: 776, #gens: 671, #ops: 0, parent:775]
---analyzing modificationPoint position: 168
Templates availables27
Attempts Base Ingredients  1 total 27
---modifPoint 0 not mutation generated in  yTmp[j] = currentState[j] + (h * s)
---analyzing modificationPoint position: 121
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE, absYA, absYB, xA, xB, org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE, yA, org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE]
--> var from patch: allowed spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: absYA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java284
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `switch (allowed) { 	case ANY_SIDE : 		return absYA < absYB ? xA : xB; 	case LEFT_SIDE : 		return xA;[...]` (spoon.support.reflect.code.CtSwitchImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 284, pointed element: CtSwitchImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `switch (allowed) { 	case ANY_SIDE : 		return absYA < absYB ? xA : xB; 	case LEFT_SIDE : 		return xA;[...]` (spoon.support.reflect.code.CtSwitchImpl) 

--Summary Creation: for variant [Variant id: 776, #gens: 672, #ops: 1, parent:775] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 776, errors: [BracketingNthOrderBrentSolver.java:285: error: unreachable statement
					throw new org.apache.commons.math.exception.MathInternalError(null);} 			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
					                                                                      			^]
Ingredient counter is Zero
---Undoing: gnrtn(388): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `switch (allowed) { 	case ANY_SIDE : 		return absYA < absYB ? xA : xB; 	case LEFT_SIDE : 		return xA;[...]` (spoon.support.reflect.code.CtSwitchImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (775(f=2.0), 776(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (775(f=2.0), )
----------Running generation: 389, population size: 1

***** Generation 389 : 0
**Parent Variant: [Variant id: 777, #gens: 671, #ops: 0, parent:-]

--Child created id: 778
--Creating new operations for variant [Variant id: 778, #gens: 671, #ops: 0, parent:777]
---analyzing modificationPoint position: 301
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  this.minReduction = minReduction
---analyzing modificationPoint position: 395
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  java.util.SortedSet<org.apache.commons.math.ode.events.EventState> occuringEvents = new java.util.Tr[...]
---analyzing modificationPoint position: 271
---modifPoint 2 not mutation generated in  double sum = b[0] * yDotK[0][j]
---analyzing modificationPoint position: 595
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 3 not mutation generated in  if (y == 0) { 	return x * y; }
---analyzing modificationPoint position: 90
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [t0, interpolator]
--> var from patch: t0 spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java217
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// check events occurrence if (g0Positive ^ (gb >= 0)) { 	// there is a sign change: an event is exp[...] ` -topatch--> `t0 = interpolator.getPreviousTime()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 217, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// check events occurrence if (g0Positive ^ (gb >= 0)) { 	// there is a sign change: an event is exp[...] ` -topatch--> `t0 = interpolator.getPreviousTime()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 778, #gens: 672, #ops: 1, parent:777] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 778
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-778/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(389): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// check events occurrence if (g0Positive ^ (gb >= 0)) { 	// there is a sign change: an event is exp[...] ` -topatch--> `t0 = interpolator.getPreviousTime()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (777(f=2.0), 778(f=2.0), )
Selected to next generation: IDs2--> (777(f=2.0), )
----------Running generation: 390, population size: 1

***** Generation 390 : 0
**Parent Variant: [Variant id: 779, #gens: 671, #ops: 0, parent:-]

--Child created id: 780
--Creating new operations for variant [Variant id: 780, #gens: 671, #ops: 0, parent:779]
---analyzing modificationPoint position: 613
location: Incrementor.java79
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `maximalCount = max ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 780, #gens: 670, #ops: 1, parent:779] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 780
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-780/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(390): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `maximalCount = max ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (780(f=1.0), 779(f=2.0), )
Selected to next generation: IDs2--> (780(f=1.0), )
----------Running generation: 391, population size: 1

***** Generation 391 : 0
**Parent Variant: [Variant id: 781, #gens: 671, #ops: 0, parent:-]

--Child created id: 782
--Creating new operations for variant [Variant id: 782, #gens: 671, #ops: 0, parent:781]
---analyzing modificationPoint position: 198
location: DormandPrince853Integrator.java258
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < mainSetDimension; ++j) { 	final double errSum1 = (((((((org.apache.commons.math.[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 782, #gens: 670, #ops: 1, parent:781] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 782
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-782/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(391): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < mainSetDimension; ++j) { 	final double errSum1 = (((((((org.apache.commons.math.[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (782(f=1.0), 781(f=2.0), )
Selected to next generation: IDs2--> (782(f=1.0), )
----------Running generation: 392, population size: 1

***** Generation 392 : 0
**Parent Variant: [Variant id: 783, #gens: 671, #ops: 0, parent:-]

--Child created id: 784
--Creating new operations for variant [Variant id: 784, #gens: 671, #ops: 0, parent:783]
---analyzing modificationPoint position: 154
location: BracketingNthOrderBrentSolver.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 784, #gens: 670, #ops: 1, parent:783] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 784
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-784/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(392): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (784(f=1.0), 783(f=2.0), )
Selected to next generation: IDs2--> (784(f=1.0), )
----------Running generation: 393, population size: 1

***** Generation 393 : 0
**Parent Variant: [Variant id: 785, #gens: 671, #ops: 0, parent:-]

--Child created id: 786
--Creating new operations for variant [Variant id: 786, #gens: 671, #ops: 0, parent:785]
---analyzing modificationPoint position: 521
Templates availables54
Attempts Base Ingredients  1 total 54
---modifPoint 0 not mutation generated in  xInt = org.apache.commons.math.util.Precision.SGN_MASK - xInt
---analyzing modificationPoint position: 530
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1535
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tmp1 = y * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `long shpiB` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1535, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tmp1 = y * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `long shpiB` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 786, #gens: 671, #ops: 1, parent:785] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 786, errors: [FastMath.java:1945: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:1945: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:1945: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:1945: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:1945: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:1945: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:1945: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:1945: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:1946: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:1946: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:1946: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:1946: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:1948: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:1949: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:1949: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:1950: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:1950: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:1950: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:1950: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:1951: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:1951: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:1951: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:1951: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:1951: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:1960: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:1960: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:1960: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:1960: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:1960: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:1960: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:1965: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:1967: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:1967: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:1967: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:1968: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:1968: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:1969: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:1969: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:1970: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:1970: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:1971: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:1971: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:1972: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:1972: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:1984: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:1984: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2009: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2009: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2009: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2009: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2009: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2009: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2009: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2010: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2010: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:2010: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:2010: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:2010: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:2010: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:2010: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:2012: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:2012: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:2013: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:2013: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:2013: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:2013: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:2014: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:2015: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:2015: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:2015: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:2015: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:2015: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:2015: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:2015: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:2016: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:2016: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:2016: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:2016: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:2016: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:2017: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:2017: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:2017: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:2017: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:2017: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:2017: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:2028: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:2028: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:2028: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:2028: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2028: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2028: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:2028: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:2028: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:2033: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2035: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2035: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2035: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2036: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2036: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2037: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(393): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tmp1 = y * org.apache.commons.math.util.FastMath.HEX_40000000 ` -topatch--> `long shpiB` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (785(f=2.0), 786(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (785(f=2.0), )
----------Running generation: 394, population size: 1

***** Generation 394 : 0
**Parent Variant: [Variant id: 787, #gens: 671, #ops: 0, parent:-]

--Child created id: 788
--Creating new operations for variant [Variant id: 788, #gens: 671, #ops: 0, parent:787]
---analyzing modificationPoint position: 341
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 0 not mutation generated in  primaryMapper = interpolator.primaryMapper
---analyzing modificationPoint position: 169
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  integrator.computeDerivatives(pT + (org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpo[...]
---analyzing modificationPoint position: 432
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [primaryMapper, primaryState, completeState]
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: primaryState spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: completeState spoon.support.reflect.code.CtVariableReadImpl
location: ExpandableStatefulODE.java288
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data primaryMapper.insertEquationData(primaryState, completeState) ` -topatch--> `// set the data primaryMapper.insertEquationData(primaryState, completeState)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 288, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data primaryMapper.insertEquationData(primaryState, completeState) ` -topatch--> `// set the data primaryMapper.insertEquationData(primaryState, completeState)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 788, #gens: 671, #ops: 1, parent:787] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 788
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-788/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(394): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data primaryMapper.insertEquationData(primaryState, completeState) ` -topatch--> `// set the data primaryMapper.insertEquationData(primaryState, completeState)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (788(f=1.0), 787(f=2.0), )
Selected to next generation: IDs2--> (788(f=1.0), )
----------Running generation: 395, population size: 1

***** Generation 395 : 0
**Parent Variant: [Variant id: 789, #gens: 671, #ops: 0, parent:-]

--Child created id: 790
--Creating new operations for variant [Variant id: 790, #gens: 671, #ops: 0, parent:789]
---analyzing modificationPoint position: 114
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [y, signChangeIndex]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java246
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 246, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 790, #gens: 671, #ops: 1, parent:789] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 790, errors: [BracketingNthOrderBrentSolver.java:246: error: variable yA is already defined in method doSolve()
			double nextX; 			double yA = y[signChangeIndex - 1];
			              			       ^, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                           ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                        ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				                                 ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:261: error: cannot find symbol
					if ((signChangeIndex - start) >= (end - signChangeIndex)) {
					                       ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:263: error: cannot find symbol
						++start;
						  ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                  ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:279: error: cannot find symbol
				start = signChangeIndex - 1;
				^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:291: error: cannot find symbol
			if ((nbPoints > 2) && ((end - start) != nbPoints)) {
			                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:295: error: cannot find symbol
				nbPoints = end - start;
				                 ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:296: error: cannot find symbol
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:297: error: cannot find symbol
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:298: error: cannot find symbol
				signChangeIndex -= start;
				                   ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(395): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (789(f=2.0), 790(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (789(f=2.0), )
----------Running generation: 396, population size: 1

***** Generation 396 : 0
**Parent Variant: [Variant id: 791, #gens: 671, #ops: 0, parent:-]

--Child created id: 792
--Creating new operations for variant [Variant id: 792, #gens: 671, #ops: 0, parent:791]
---analyzing modificationPoint position: 658
location: FastMath.java1319
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (hiPrec != null) { 	hiPrec[0] = a; 	hiPrec[1] = b; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 792, #gens: 670, #ops: 1, parent:791] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 792, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(396): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (hiPrec != null) { 	hiPrec[0] = a; 	hiPrec[1] = b; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (791(f=2.0), 792(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (791(f=2.0), )
----------Running generation: 397, population size: 1

***** Generation 397 : 0
**Parent Variant: [Variant id: 793, #gens: 671, #ops: 0, parent:-]

--Child created id: 794
--Creating new operations for variant [Variant id: 794, #gens: 671, #ops: 0, parent:793]
---analyzing modificationPoint position: 458
Templates availables1
Attempts Base Ingredients  1 total 1
---modifPoint 0 not mutation generated in  if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...]
---analyzing modificationPoint position: 391
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 1 not mutation generated in  for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]
---analyzing modificationPoint position: 498
---modifPoint 2 not mutation generated in  return functionValueAccuracy
---analyzing modificationPoint position: 170
location: DormandPrince853StepInterpolator.java410
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// k15 for (int j = 0; j < currentState.length; ++j) { 	s = (((((((((org.apache.commons.math.ode.non[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 794, #gens: 670, #ops: 1, parent:793] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 794
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-794/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(397): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// k15 for (int j = 0; j < currentState.length; ++j) { 	s = (((((((((org.apache.commons.math.ode.non[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (794(f=1.0), 793(f=2.0), )
Selected to next generation: IDs2--> (794(f=1.0), )
----------Running generation: 398, population size: 1

***** Generation 398 : 0
**Parent Variant: [Variant id: 795, #gens: 671, #ops: 0, parent:-]

--Child created id: 796
--Creating new operations for variant [Variant id: 796, #gens: 671, #ops: 0, parent:795]
---analyzing modificationPoint position: 424
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [resetOccurred]
--> var from patch: resetOccurred spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java192
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 192, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 796, #gens: 671, #ops: 1, parent:795] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 796, errors: [AbstractIntegrator.java:346: error: illegal start of expression
	 * Integrate a set of differential equations up to the given time.
	 ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	            ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                  ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                  ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                               ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                                      ^, AbstractIntegrator.java:346: error: ';' expected
	 * Integrate a set of differential equations up to the given time.
	                                                                 ^, AbstractIntegrator.java:347: error: illegal start of expression
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	      ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                        ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                   ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                 ^, AbstractIntegrator.java:347: error: not a statement
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                   ^, AbstractIntegrator.java:347: error: ';' expected
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                      ^, AbstractIntegrator.java:347: error: illegal start of type
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                         ^, AbstractIntegrator.java:347: error: illegal start of expression
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                          ^, AbstractIntegrator.java:348: error: illegal start of expression
	 * <p>The set of differential equations is composed of a main set, which
	 ^, AbstractIntegrator.java:348: error: illegal start of expression
	 * <p>The set of differential equations is composed of a main set, which
	      ^, AbstractIntegrator.java:347: error: not a statement
	 * <p>This method solves an Initial Value Problem (IVP).</p>
	                                                           ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                       ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                   ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                        ^, AbstractIntegrator.java:348: error: ';' expected
	 * <p>The set of differential equations is composed of a main set, which
	                                                                        ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	         ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                     ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                               ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                                            ^, AbstractIntegrator.java:349: error: ';' expected
	 * can be extended by some sets of secondary equations. The set of
	                                                               ^, AbstractIntegrator.java:350: error: not a statement
	 * equations must be already set up with initial time and partial states.
	 ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	            ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                    ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                        ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                                     ^, AbstractIntegrator.java:350: error: ';' expected
	 * equations must be already set up with initial time and partial states.
	                                                                 ^, AbstractIntegrator.java:350: error: <identifier> expected
	 * equations must be already set up with initial time and partial states.
	                                                                         ^, AbstractIntegrator.java:351: error: not a statement
	 * At integration completion, the final time and partial states will be
	 ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	     ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                 ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                               ^, AbstractIntegrator.java:351: error: ';' expected
	 * At integration completion, the final time and partial states will be
	                                                                       ^, AbstractIntegrator.java:352: error: ';' expected
	 * available in the same object.</p>
	               ^, AbstractIntegrator.java:352: error: ';' expected
	 * available in the same object.</p>
	                        ^, AbstractIntegrator.java:352: error: illegal start of type
	 * available in the same object.</p>
	                                 ^, AbstractIntegrator.java:352: error: illegal start of expression
	 * available in the same object.</p>
	                                   ^, AbstractIntegrator.java:353: error: illegal start of expression
	 * <p>Since this method stores some internal state variables made
	      ^, AbstractIntegrator.java:353: error: not a statement
	 * <p>Since this method stores some internal state variables made
	 ^, AbstractIntegrator.java:353: error: not a statement
	 * <p>Since this method stores some internal state variables made
	            ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                              ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                                            ^, AbstractIntegrator.java:353: error: ';' expected
	 * <p>Since this method stores some internal state variables made
	                                                            ^, AbstractIntegrator.java:354: error: not a statement
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	 ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	            ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                   ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                    ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                          ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                       ^, AbstractIntegrator.java:354: error: illegal character: '#'
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                ^, AbstractIntegrator.java:354: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                         ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                          ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                            ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                             ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                 ^, AbstractIntegrator.java:354: error: ';' expected
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                            ^, AbstractIntegrator.java:354: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                             ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                              ^, AbstractIntegrator.java:354: error: illegal start of type
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                               ^, AbstractIntegrator.java:354: error: illegal start of expression
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                                 ^, AbstractIntegrator.java:356: error: illegal start of expression
	 * @param equations
	 ^, AbstractIntegrator.java:356: error: illegal start of expression
	 * @param equations
	   ^, AbstractIntegrator.java:354: error: not a statement
	 * available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>
	                                                                                                                ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		        ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		               ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		                                      ^, AbstractIntegrator.java:357: error: ';' expected
	 * 		complete set of differential equations to integrate
	   		                                                   ^, AbstractIntegrator.java:358: error: <identifier> expected
	 * @param t
	           ^, AbstractIntegrator.java:359: error: ';' expected
	 * 		target time for the integration
	   		           ^, AbstractIntegrator.java:359: error: '(' expected
	 * 		target time for the integration
	   		               ^, AbstractIntegrator.java:359: error: ';' expected
	 * 		target time for the integration
	   		                               ^, AbstractIntegrator.java:360: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	 ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	  ^, AbstractIntegrator.java:360: error: not a statement
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		 ^, AbstractIntegrator.java:360: error: ')' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		    ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		           ^, AbstractIntegrator.java:360: error: variable declaration not allowed here
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		        ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                              ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                            ^, AbstractIntegrator.java:360: error: illegal start of type
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                             ^, AbstractIntegrator.java:360: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                              ^, AbstractIntegrator.java:360: error: illegal start of expression
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                    ^, AbstractIntegrator.java:360: error: not a statement
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                  ^, AbstractIntegrator.java:360: error: ';' expected
	 * 		(can be set to a value smaller than <code>t0</code> for backward integration)
	   		                                                                            ^, AbstractIntegrator.java:361: error: <identifier> expected
	 * @throws MathIllegalStateException
	    ^, AbstractIntegrator.java:361: error: ';' expected
	 * @throws MathIllegalStateException
	                                    ^, AbstractIntegrator.java:362: error: '(' expected
	 * 		if the integrator cannot perform integration
	   		  ^, AbstractIntegrator.java:362: error: ')' expected
	 * 		if the integrator cannot perform integration
	   		      ^, AbstractIntegrator.java:362: error: ';' expected
	 * 		if the integrator cannot perform integration
	   		                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(398): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.expandable = equations ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (795(f=2.0), 796(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (795(f=2.0), )
----------Running generation: 399, population size: 1

***** Generation 399 : 0
**Parent Variant: [Variant id: 797, #gens: 671, #ops: 0, parent:-]

--Child created id: 798
--Creating new operations for variant [Variant id: 798, #gens: 671, #ops: 0, parent:797]
---analyzing modificationPoint position: 220
location: DormandPrince853StepInterpolator.java391
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (currentState == null) { 	// we are finalizing an uninitialized instance 	return; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 798, #gens: 670, #ops: 1, parent:797] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 798
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-798/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(399): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (currentState == null) { 	// we are finalizing an uninitialized instance 	return; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (798(f=1.0), 797(f=2.0), )
Selected to next generation: IDs2--> (798(f=1.0), )
----------Running generation: 400, population size: 1

***** Generation 400 : 0
**Parent Variant: [Variant id: 799, #gens: 671, #ops: 0, parent:-]

--Child created id: 800
--Creating new operations for variant [Variant id: 800, #gens: 671, #ops: 0, parent:799]
---analyzing modificationPoint position: 65
location: EventState.java112
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 800, #gens: 670, #ops: 1, parent:799] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 800
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-800/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(400): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (800(f=1.0), 799(f=2.0), )
Selected to next generation: IDs2--> (800(f=1.0), )
----------Running generation: 401, population size: 1

***** Generation 401 : 0
**Parent Variant: [Variant id: 801, #gens: 671, #ops: 0, parent:-]

--Child created id: 802
--Creating new operations for variant [Variant id: 802, #gens: 671, #ops: 0, parent:801]
---analyzing modificationPoint position: 536
---modifPoint 0 not mutation generated in  double lnb = lns[1]
---analyzing modificationPoint position: 322
location: AbstractStepInterpolator.java182
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 802, #gens: 670, #ops: 1, parent:801] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 802
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-802/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(401): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `primaryMapper = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (802(f=1.0), 801(f=2.0), )
Selected to next generation: IDs2--> (802(f=1.0), )
----------Running generation: 402, population size: 1

***** Generation 402 : 0
**Parent Variant: [Variant id: 803, #gens: 671, #ops: 0, parent:-]

--Child created id: 804
--Creating new operations for variant [Variant id: 804, #gens: 671, #ops: 0, parent:803]
---analyzing modificationPoint position: 467
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  interpolatedSecondaryDerivatives = new double[secondaryMappers.length][]
---analyzing modificationPoint position: 468
location: AbstractStepInterpolator.java230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 804, #gens: 670, #ops: 1, parent:803] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 804
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-804/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(402): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (804(f=1.0), 803(f=2.0), )
Selected to next generation: IDs2--> (804(f=1.0), )
----------Running generation: 403, population size: 1

***** Generation 403 : 0
**Parent Variant: [Variant id: 805, #gens: 671, #ops: 0, parent:-]

--Child created id: 806
--Creating new operations for variant [Variant id: 806, #gens: 671, #ops: 0, parent:805]
---analyzing modificationPoint position: 130
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double yDot9 = yDotK[8][i]
---analyzing modificationPoint position: 338
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 1 not mutation generated in  finalized = interpolator.finalized
---analyzing modificationPoint position: 114
---modifPoint 2 not mutation generated in  int start = 0
---analyzing modificationPoint position: 404
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [stepHandlers, handler, interpolator, isLastStep]
--> var from patch: stepHandlers spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: handler spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: isLastStep spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java368
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...] ` -topatch--> `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 368, pointed element: CtForEachImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...] ` -topatch--> `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 806, #gens: 671, #ops: 1, parent:805] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 806
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-806/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(403): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...] ` -topatch--> `// handle the remaining part of the step, after all events if any for (org.apache.commons.math.ode.s[...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (806(f=1.0), 805(f=2.0), )
Selected to next generation: IDs2--> (806(f=1.0), )
----------Running generation: 404, population size: 1

***** Generation 404 : 0
**Parent Variant: [Variant id: 807, #gens: 671, #ops: 0, parent:-]

--Child created id: 808
--Creating new operations for variant [Variant id: 808, #gens: 671, #ops: 0, parent:807]
---analyzing modificationPoint position: 206
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [error1, ratio1]
--> var from patch: error1 spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ratio1 spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853Integrator.java275
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `error2 += ratio2 * ratio2 ` -topatch--> `error1 += ratio1 * ratio1` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator line: 275, pointed element: CtOperatorAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `error2 += ratio2 * ratio2 ` -topatch--> `error1 += ratio1 * ratio1` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 

--Summary Creation: for variant [Variant id: 808, #gens: 671, #ops: 1, parent:807] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 808
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-808/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(404): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `error2 += ratio2 * ratio2 ` -topatch--> `error1 += ratio1 * ratio1` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (808(f=1.0), 807(f=2.0), )
Selected to next generation: IDs2--> (808(f=1.0), )
----------Running generation: 405, population size: 1

***** Generation 405 : 0
**Parent Variant: [Variant id: 809, #gens: 671, #ops: 0, parent:-]

--Child created id: 810
--Creating new operations for variant [Variant id: 810, #gens: 671, #ops: 0, parent:809]
---analyzing modificationPoint position: 628
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 0 not mutation generated in  if (extra != 0.0) { 	result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + [...]
---analyzing modificationPoint position: 587
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  intPartA = org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[org.apache.commons.math[...]
---analyzing modificationPoint position: 199
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 2 not mutation generated in  final double errSum1 = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.E1_01 [...]
---analyzing modificationPoint position: 366
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 3 not mutation generated in  globalCurrentTime = java.lang.Double.NaN
---analyzing modificationPoint position: 315
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch [minStep]
--> var from patch: minStep spoon.support.reflect.code.CtFieldReadImpl
location: AdaptiveStepsizeIntegrator.java250
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (initialStep > 0) { 	// use the user provided value 	return forward ? initialStep : -initialStep;[...] ` -topatch--> `return minStep` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 250, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (initialStep > 0) { 	// use the user provided value 	return forward ? initialStep : -initialStep;[...] ` -topatch--> `return minStep` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 810, #gens: 672, #ops: 1, parent:809] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 810, errors: [AdaptiveStepsizeIntegrator.java:365: error: illegal start of expression
	 * Filter the integration step.
	 ^, AdaptiveStepsizeIntegrator.java:365: error: ';' expected
	 * Filter the integration step.
	         ^, AdaptiveStepsizeIntegrator.java:365: error: ';' expected
	 * Filter the integration step.
	                         ^, AdaptiveStepsizeIntegrator.java:365: error: <identifier> expected
	 * Filter the integration step.
	                               ^, AdaptiveStepsizeIntegrator.java:367: error: illegal start of expression
	 * @param h
	 ^, AdaptiveStepsizeIntegrator.java:367: error: illegal start of expression
	 * @param h
	   ^, AdaptiveStepsizeIntegrator.java:368: error: not a statement
	 * 		signed step
	 ^, AdaptiveStepsizeIntegrator.java:368: error: ';' expected
	 * 		signed step
	   		      ^, AdaptiveStepsizeIntegrator.java:369: error: illegal start of expression
	 * @param forward
	   ^, AdaptiveStepsizeIntegrator.java:370: error: not a statement
	 * 		forward integration indicator
	 ^, AdaptiveStepsizeIntegrator.java:370: error: ';' expected
	 * 		forward integration indicator
	   		       ^, AdaptiveStepsizeIntegrator.java:370: error: ';' expected
	 * 		forward integration indicator
	   		                             ^, AdaptiveStepsizeIntegrator.java:371: error: <identifier> expected
	 * @param acceptSmall
	                     ^, AdaptiveStepsizeIntegrator.java:372: error: '(' expected
	 * 		if true, steps smaller than the minimal value
	   		  ^, AdaptiveStepsizeIntegrator.java:372: error: ')' expected
	 * 		if true, steps smaller than the minimal value
	   		       ^, AdaptiveStepsizeIntegrator.java:372: error: ';' expected
	 * 		if true, steps smaller than the minimal value
	   		              ^, AdaptiveStepsizeIntegrator.java:372: error: variable declaration not allowed here
	 * 		if true, steps smaller than the minimal value
	   		         ^, AdaptiveStepsizeIntegrator.java:372: error: ';' expected
	 * 		if true, steps smaller than the minimal value
	   		                           ^, AdaptiveStepsizeIntegrator.java:372: error: ';' expected
	 * 		if true, steps smaller than the minimal value
	   		                                       ^, AdaptiveStepsizeIntegrator.java:373: error: not a statement
	 * 		are silently increased up to this value, if false such small
	 ^, AdaptiveStepsizeIntegrator.java:373: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		   ^, AdaptiveStepsizeIntegrator.java:373: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                      ^, AdaptiveStepsizeIntegrator.java:373: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                            ^, AdaptiveStepsizeIntegrator.java:373: error: not a statement
	 * 		are silently increased up to this value, if false such small
	   		                                  ^, AdaptiveStepsizeIntegrator.java:373: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                                       ^, AdaptiveStepsizeIntegrator.java:373: error: '(' expected
	 * 		are silently increased up to this value, if false such small
	   		                                           ^, AdaptiveStepsizeIntegrator.java:373: error: ')' expected
	 * 		are silently increased up to this value, if false such small
	   		                                                 ^, AdaptiveStepsizeIntegrator.java:373: error: ';' expected
	 * 		are silently increased up to this value, if false such small
	   		                                                            ^, AdaptiveStepsizeIntegrator.java:373: error: variable declaration not allowed here
	 * 		are silently increased up to this value, if false such small
	   		                                                       ^, AdaptiveStepsizeIntegrator.java:374: error: ';' expected
	 * 		steps generate an exception
	   		              ^, AdaptiveStepsizeIntegrator.java:374: error: ';' expected
	 * 		steps generate an exception
	   		                           ^, AdaptiveStepsizeIntegrator.java:375: error: <identifier> expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	    ^, AdaptiveStepsizeIntegrator.java:375: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	            ^, AdaptiveStepsizeIntegrator.java:375: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                ^, AdaptiveStepsizeIntegrator.java:375: error: ')' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                        ^, AdaptiveStepsizeIntegrator.java:375: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                    ^, AdaptiveStepsizeIntegrator.java:375: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                 ^, AdaptiveStepsizeIntegrator.java:375: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                           ^, AdaptiveStepsizeIntegrator.java:375: error: not a statement
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                            ^, AdaptiveStepsizeIntegrator.java:375: error: ';' expected
	 * @return a bounded integration step (h if no bound is reach, or a bounded value)
	                                                                                 ^, AdaptiveStepsizeIntegrator.java:376: error: <identifier> expected
	 * @exception NumberIsTooSmallException
	                                       ^, AdaptiveStepsizeIntegrator.java:377: error: '(' expected
	 * 		if the step is too small and acceptSmall is false
	   		  ^, AdaptiveStepsizeIntegrator.java:377: error: ')' expected
	 * 		if the step is too small and acceptSmall is false
	   		      ^, AdaptiveStepsizeIntegrator.java:377: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		              ^, AdaptiveStepsizeIntegrator.java:377: error: variable declaration not allowed here
	 * 		if the step is too small and acceptSmall is false
	   		            ^, AdaptiveStepsizeIntegrator.java:377: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		                        ^, AdaptiveStepsizeIntegrator.java:377: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		                                        ^, AdaptiveStepsizeIntegrator.java:377: error: not a statement
	 * 		if the step is too small and acceptSmall is false
	   		                                         ^, AdaptiveStepsizeIntegrator.java:377: error: ';' expected
	 * 		if the step is too small and acceptSmall is false
	   		                                           ^, AdaptiveStepsizeIntegrator.java:378: error: illegal start of expression
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	^, AdaptiveStepsizeIntegrator.java:378: error: ';' expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                           ^, AdaptiveStepsizeIntegrator.java:378: error: <identifier> expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                           ^, AdaptiveStepsizeIntegrator.java:378: error: <identifier> expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                  ^, AdaptiveStepsizeIntegrator.java:378: error: ';' expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                                            ^, AdaptiveStepsizeIntegrator.java:378: error: not a statement
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                                                                                      ^, AdaptiveStepsizeIntegrator.java:378: error: ';' expected
	 */ 	protected double filterStep(final double h, final boolean forward, final boolean acceptSmall) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		double filteredH = h; 		if (org.apache.commons.math.util.FastMath.abs(h) < minStep) { 			if (acceptSmall) { 				filteredH = (forward) ? minStep : -minStep;} else { 				throw new org.apache.commons.math.exception.NumberIsTooSmallException(org.apache.commons.math.exception.util.LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION, minStep, org.apache.commons.math.util.FastMath.abs(h), true);}} 		if (filteredH > maxStep) { 			filteredH = maxStep;} else if (filteredH < (-maxStep)) { 			filteredH = -maxStep;} 		return filteredH;} 	/**
	    	                                                                                                                                                                ^, AdaptiveStepsizeIntegrator.java:380: error: illegal start of expression
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	^, AdaptiveStepsizeIntegrator.java:380: error: class, interface, or enum expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                ^, AdaptiveStepsizeIntegrator.java:380: error: ';' expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                              ^, AdaptiveStepsizeIntegrator.java:380: error: <identifier> expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                           ^, AdaptiveStepsizeIntegrator.java:380: error: not a statement
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                   ^, AdaptiveStepsizeIntegrator.java:380: error: ';' expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                    ^, AdaptiveStepsizeIntegrator.java:380: error: not a statement
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                                                              ^, AdaptiveStepsizeIntegrator.java:380: error: ';' expected
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                                                                                        ^, AdaptiveStepsizeIntegrator.java:380: error: not a statement
	 */ 	public abstract void integrate(org.apache.commons.math.ode.ExpandableStatefulODE equations, double t) throws org.apache.commons.math.exception.MathIllegalStateException, org.apache.commons.math.exception.MathIllegalArgumentException; 	/**
	    	                                                                                                                                                                                                           ^, AdaptiveStepsizeIntegrator.java:382: error: ';' expected
	 */ 	@java.lang.Override 	public double getCurrentStepStart() { 		return stepStart;} 	/**
	    	                    	                                 ^, AdaptiveStepsizeIntegrator.java:384: error: illegal start of expression
	 */ 	protected void resetInternalState() { 		stepStart = java.lang.Double.NaN; 		stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep);} 	/**
	    	^, AdaptiveStepsizeIntegrator.java:384: error: illegal start of expression
	 */ 	protected void resetInternalState() { 		stepStart = java.lang.Double.NaN; 		stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep);} 	/**
	    	          ^, AdaptiveStepsizeIntegrator.java:384: error: ';' expected
	 */ 	protected void resetInternalState() { 		stepStart = java.lang.Double.NaN; 		stepSize = org.apache.commons.math.util.FastMath.sqrt(minStep * maxStep);} 	/**
	    	                                 ^, AdaptiveStepsizeIntegrator.java:388: error: illegal start of expression
	 */ 	public double getMinStep() { 		return minStep;} 	/**
	    	^, AdaptiveStepsizeIntegrator.java:388: error: ';' expected
	 */ 	public double getMinStep() { 		return minStep;} 	/**
	    	                        ^, AdaptiveStepsizeIntegrator.java:392: error: illegal start of expression
	 */ 	public double getMaxStep() { 		return maxStep;}}
	    	^, AdaptiveStepsizeIntegrator.java:392: error: ';' expected
	 */ 	public double getMaxStep() { 		return maxStep;}}
	    	                        ^, AdaptiveStepsizeIntegrator.java:392: error: reached end of file while parsing
	 */ 	public double getMaxStep() { 		return maxStep;}}
	    	                             		                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(405): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (initialStep > 0) { 	// use the user provided value 	return forward ? initialStep : -initialStep;[...] ` -topatch--> `return minStep` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (809(f=2.0), 810(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (809(f=2.0), )
----------Running generation: 406, population size: 1

***** Generation 406 : 0
**Parent Variant: [Variant id: 811, #gens: 671, #ops: 0, parent:-]

--Child created id: 812
--Creating new operations for variant [Variant id: 812, #gens: 671, #ops: 0, parent:811]
---analyzing modificationPoint position: 419
location: ExpandableStatefulODE.java96
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (components.isEmpty()) { 	// there are no secondary equations, the complete set is limited to the[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 812, #gens: 670, #ops: 1, parent:811] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 812, errors: [ExpandableStatefulODE.java:105: error: missing return statement
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(406): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (components.isEmpty()) { 	// there are no secondary equations, the complete set is limited to the[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (811(f=2.0), 812(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (811(f=2.0), )
----------Running generation: 407, population size: 1

***** Generation 407 : 0
**Parent Variant: [Variant id: 813, #gens: 671, #ops: 0, parent:-]

--Child created id: 814
--Creating new operations for variant [Variant id: 814, #gens: 671, #ops: 0, parent:813]
---analyzing modificationPoint position: 422
Templates availables55
Attempts Base Ingredients  1 total 55
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
vars from patch [primary]
--> var from patch: primary spoon.support.reflect.code.CtVariableReadImpl
location: ExpandableStatefulODE.java164
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `final int n = primary.getDimension()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 164, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `final int n = primary.getDimension()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 814, #gens: 672, #ops: 1, parent:813] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 814
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-814/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(407): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < mappers.length; ++i) { 	mappers[i] = components.get(i).mapper; } ` -topatch--> `final int n = primary.getDimension()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (814(f=1.0), 813(f=2.0), )
Selected to next generation: IDs2--> (814(f=1.0), )
----------Running generation: 408, population size: 1

***** Generation 408 : 0
**Parent Variant: [Variant id: 815, #gens: 671, #ops: 0, parent:-]

--Child created id: 816
--Creating new operations for variant [Variant id: 816, #gens: 671, #ops: 0, parent:815]
---analyzing modificationPoint position: 292
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [equations]
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java217
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean firstTime = true ` -topatch--> `// create some internal working arrays final double[] y0 = equations.getCompleteState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 217, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean firstTime = true ` -topatch--> `// create some internal working arrays final double[] y0 = equations.getCompleteState()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 816, #gens: 671, #ops: 1, parent:815] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 816, errors: [EmbeddedRungeKuttaIntegrator.java:234: error: cannot find symbol
				if (firstTime || (!fsal)) {
				    ^
  symbol:   variable firstTime
  location: class org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator, EmbeddedRungeKuttaIntegrator.java:239: error: cannot find symbol
				if (firstTime) {
				    ^
  symbol:   variable firstTime
  location: class org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator, EmbeddedRungeKuttaIntegrator.java:239: error: illegal start of type
				if (firstTime) {
				   ^, EmbeddedRungeKuttaIntegrator.java:252: error: cannot find symbol
					firstTime = false;
					^
  symbol:   variable firstTime
  location: class org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator]
Ingredient counter is Zero
---Undoing: gnrtn(408): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean firstTime = true ` -topatch--> `// create some internal working arrays final double[] y0 = equations.getCompleteState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (815(f=2.0), 816(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (815(f=2.0), )
----------Running generation: 409, population size: 1

***** Generation 409 : 0
**Parent Variant: [Variant id: 817, #gens: 671, #ops: 0, parent:-]

--Child created id: 818
--Creating new operations for variant [Variant id: 818, #gens: 671, #ops: 0, parent:817]
---analyzing modificationPoint position: 347
location: AbstractStepInterpolator.java252
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `h = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 818, #gens: 670, #ops: 1, parent:817] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 818
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-818/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(409): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `h = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (818(f=1.0), 817(f=2.0), )
Selected to next generation: IDs2--> (818(f=1.0), )
----------Running generation: 410, population size: 1

***** Generation 410 : 0
**Parent Variant: [Variant id: 819, #gens: 671, #ops: 0, parent:-]

--Child created id: 820
--Creating new operations for variant [Variant id: 820, #gens: 671, #ops: 0, parent:819]
---analyzing modificationPoint position: 471
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [globalCurrentTime]
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java291
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `return globalCurrentTime` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 291, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `return globalCurrentTime` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 820, #gens: 672, #ops: 1, parent:819] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 820, errors: [AbstractStepInterpolator.java:357: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:357: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:359: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:360: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:360: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:360: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:360: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:360: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:361: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:361: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:361: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:361: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:361: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:362: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:362: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:363: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:363: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:364: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:365: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:365: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:363: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:367: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:380: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:380: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:380: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:380: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:384: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:384: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:388: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:388: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:393: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:393: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:398: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:398: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:400: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:400: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:402: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:402: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:402: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:402: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:404: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:404: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:415: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:415: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:415: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:415: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:415: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:415: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:417: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:417: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:417: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:420: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:420: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:422: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, 
	    	^, AbstractStepInterpolator.java:422: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, 
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(410): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = globalCurrentTime ` -topatch--> `return globalCurrentTime` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (819(f=2.0), 820(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (819(f=2.0), )
----------Running generation: 411, population size: 1

***** Generation 411 : 0
**Parent Variant: [Variant id: 821, #gens: 671, #ops: 0, parent:-]

--Child created id: 822
--Creating new operations for variant [Variant id: 822, #gens: 671, #ops: 0, parent:821]
---analyzing modificationPoint position: 550
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  z = z * lnb
---analyzing modificationPoint position: 237
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 1 not mutation generated in  final double scaledH = stepSize * factor
---analyzing modificationPoint position: 340
location: AbstractStepInterpolator.java201
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `dirtyState = interpolator.dirtyState ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 822, #gens: 670, #ops: 1, parent:821] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 822
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-822/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(411): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `dirtyState = interpolator.dirtyState ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (822(f=1.0), 821(f=2.0), )
Selected to next generation: IDs2--> (822(f=1.0), )
----------Running generation: 412, population size: 1

***** Generation 412 : 0
**Parent Variant: [Variant id: 823, #gens: 671, #ops: 0, parent:-]

--Child created id: 824
--Creating new operations for variant [Variant id: 824, #gens: 671, #ops: 0, parent:823]
---analyzing modificationPoint position: 143
Templates availables27
Attempts Base Ingredients  1 total 27
---modifPoint 0 not mutation generated in  vectorsInitialized = true
---analyzing modificationPoint position: 115
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java247
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 247, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 824, #gens: 672, #ops: 1, parent:823] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 824
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-824/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(412): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (824(f=1.0), 823(f=2.0), )
Selected to next generation: IDs2--> (824(f=1.0), )
----------Running generation: 413, population size: 1

***** Generation 413 : 0
**Parent Variant: [Variant id: 825, #gens: 671, #ops: 0, parent:-]

--Child created id: 826
--Creating new operations for variant [Variant id: 826, #gens: 671, #ops: 0, parent:825]
---analyzing modificationPoint position: 619
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  /* epsilon is the difference in x from the nearest multiple of 2^-10.  It has a value in the range 0[...]
---analyzing modificationPoint position: 494
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch []
location: FastMath.java3035
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.commons.math.util.FastMath.abs(x - java.lang.Double.longBitsToDouble(java.lang.Dou[...] ` -topatch--> `double b = 0.0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 3035, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.commons.math.util.FastMath.abs(x - java.lang.Double.longBitsToDouble(java.lang.Dou[...] ` -topatch--> `double b = 0.0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 826, #gens: 672, #ops: 1, parent:825] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 826, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(413): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.commons.math.util.FastMath.abs(x - java.lang.Double.longBitsToDouble(java.lang.Dou[...] ` -topatch--> `double b = 0.0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (825(f=2.0), 826(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (825(f=2.0), )
----------Running generation: 414, population size: 1

***** Generation 414 : 0
**Parent Variant: [Variant id: 827, #gens: 671, #ops: 0, parent:-]

--Child created id: 828
--Creating new operations for variant [Variant id: 828, #gens: 671, #ops: 0, parent:827]
---analyzing modificationPoint position: 186
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java154
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 154, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 828, #gens: 672, #ops: 1, parent:827] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 828
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-828/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(414): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (828(f=1.0), 827(f=2.0), )
Selected to next generation: IDs2--> (828(f=1.0), )
----------Running generation: 415, population size: 1

***** Generation 415 : 0
**Parent Variant: [Variant id: 829, #gens: 671, #ops: 0, parent:-]

--Child created id: 830
--Creating new operations for variant [Variant id: 830, #gens: 671, #ops: 0, parent:829]
---analyzing modificationPoint position: 322
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  primaryMapper = null
---analyzing modificationPoint position: 492
location: AbstractIntegrator.java185
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluations.resetCount() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 830, #gens: 670, #ops: 1, parent:829] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 830
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-830/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(415): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluations.resetCount() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (830(f=1.0), 829(f=2.0), )
Selected to next generation: IDs2--> (830(f=1.0), )
----------Running generation: 416, population size: 1

***** Generation 416 : 0
**Parent Variant: [Variant id: 831, #gens: 671, #ops: 0, parent:-]

--Child created id: 832
--Creating new operations for variant [Variant id: 832, #gens: 671, #ops: 0, parent:831]
---analyzing modificationPoint position: 331
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 0 not mutation generated in  globalPreviousTime = interpolator.globalPreviousTime
---analyzing modificationPoint position: 632
---modifPoint 1 not mutation generated in  /* double epsilon = x / Double.longBitsToDouble(bits & 0xfffffc0000000000L);  epsilon -= 1.0;  */   [...]
---analyzing modificationPoint position: 670
Templates availables117
Attempts Base Ingredients  1 total 117
---modifPoint 2 not mutation generated in  return x < 0.0 ? -x : x == 0.0 ? 0.0 : x// -0.0 => +0.0 
---analyzing modificationPoint position: 544
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  lnb = -((lna - aa) - ab)
---analyzing modificationPoint position: 270
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [interpolator, stepStart, stepSize]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: stepStart spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: stepSize spoon.support.reflect.code.CtFieldReadImpl
location: EmbeddedRungeKuttaIntegrator.java272
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// estimate the state at the end of the step for (int j = 0; j < y0.length; ++j) { 	double sum = b[0[...] ` -topatch--> `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 272, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// estimate the state at the end of the step for (int j = 0; j < y0.length; ++j) { 	double sum = b[0[...] ` -topatch--> `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 832, #gens: 672, #ops: 1, parent:831] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 832, errors: [EmbeddedRungeKuttaIntegrator.java:333: error: while expected
	}
	 ^, EmbeddedRungeKuttaIntegrator.java:339: error: '.class' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	              ^, EmbeddedRungeKuttaIntegrator.java:339: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                             ^, EmbeddedRungeKuttaIntegrator.java:339: error: illegal start of expression
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                              ^, EmbeddedRungeKuttaIntegrator.java:339: error: ';' expected
	 */ 	public double getMinReduction() { 		return minReduction;
	    	                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(416): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// estimate the state at the end of the step for (int j = 0; j < y0.length; ++j) { 	double sum = b[0[...] ` -topatch--> `// local error is small enough: accept the step, trigger events and step handlers interpolator.store[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (831(f=2.0), 832(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (831(f=2.0), )
----------Running generation: 417, population size: 1

***** Generation 417 : 0
**Parent Variant: [Variant id: 833, #gens: 671, #ops: 0, parent:-]

--Child created id: 834
--Creating new operations for variant [Variant id: 834, #gens: 671, #ops: 0, parent:833]
---analyzing modificationPoint position: 18
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [interpolator]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java304
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// the event occurs during the current step occuringEvents.add(state) ` -topatch--> `final double[] eventY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 304, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// the event occurs during the current step occuringEvents.add(state) ` -topatch--> `final double[] eventY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 834, #gens: 672, #ops: 1, parent:833] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 834, errors: [AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	^, AbstractIntegrator.java:386: error: illegal start of expression
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	          ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                           ^, AbstractIntegrator.java:386: error: <identifier> expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                              ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                             ^, AbstractIntegrator.java:386: error: not a statement
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                       ^, AbstractIntegrator.java:386: error: ';' expected
	 */ 	protected void sanityChecks(final org.apache.commons.math.ode.ExpandableStatefulODE equations, final double t) throws org.apache.commons.math.exception.NumberIsTooSmallException { 		final double threshold = 1000 * org.apache.commons.math.util.FastMath.ulp(org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(equations.getTime()), org.apache.commons.math.util.FastMath.abs(t)));
	    	                                                                                                                                                                                 ^, AbstractIntegrator.java:395: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(417): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// the event occurs during the current step occuringEvents.add(state) ` -topatch--> `final double[] eventY = interpolator.getInterpolatedState()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (833(f=2.0), 834(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (833(f=2.0), )
----------Running generation: 418, population size: 1

***** Generation 418 : 0
**Parent Variant: [Variant id: 835, #gens: 671, #ops: 0, parent:-]

--Child created id: 836
--Creating new operations for variant [Variant id: 836, #gens: 671, #ops: 0, parent:835]
---analyzing modificationPoint position: 130
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double yDot9 = yDotK[8][i]
---analyzing modificationPoint position: 669
Templates availables117
Attempts Base Ingredients  1 total 117
---modifPoint 1 not mutation generated in  return java.lang.Math.sqrt(a)
---analyzing modificationPoint position: 193
location: DormandPrince853StepInterpolator.java248
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 836, #gens: 670, #ops: 1, parent:835] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 836
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-836/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(418): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotKLast = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (836(f=1.0), 835(f=2.0), )
Selected to next generation: IDs2--> (836(f=1.0), )
----------Running generation: 419, population size: 1

***** Generation 419 : 0
**Parent Variant: [Variant id: 837, #gens: 671, #ops: 0, parent:-]

--Child created id: 838
--Creating new operations for variant [Variant id: 838, #gens: 671, #ops: 0, parent:837]
---analyzing modificationPoint position: 118
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...]
---analyzing modificationPoint position: 442
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  primaryMapper.extractEquationData(interpolatedState,  interpolatedPrimaryState)
---analyzing modificationPoint position: 326
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 2 not mutation generated in  if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) { 	throw ne[...]
---analyzing modificationPoint position: 315
Templates availables67
Attempts Base Ingredients  1 total 67
---modifPoint 3 not mutation generated in  if (initialStep > 0) { 	// use the user provided value 	return forward ? initialStep : -initialStep;[...]
---analyzing modificationPoint position: 160
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [end, j, start, x0, x, targetY, y]
--> var from patch: end spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x0 spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: targetY spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java374
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 374, pointed element: CtForImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 838, #gens: 671, #ops: 1, parent:837] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 838
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-838/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(419): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (838(f=1.0), 837(f=2.0), )
Selected to next generation: IDs2--> (838(f=1.0), )
----------Running generation: 420, population size: 1

***** Generation 420 : 0
**Parent Variant: [Variant id: 839, #gens: 671, #ops: 0, parent:-]

--Child created id: 840
--Creating new operations for variant [Variant id: 840, #gens: 671, #ops: 0, parent:839]
---analyzing modificationPoint position: 160
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }
---analyzing modificationPoint position: 103
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java200
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double absYA = org.apache.commons.math.util.FastMath.abs(yA) ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 200, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double absYA = org.apache.commons.math.util.FastMath.abs(yA) ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 840, #gens: 672, #ops: 1, parent:839] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 840
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-840/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(420): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double absYA = org.apache.commons.math.util.FastMath.abs(yA) ` -topatch--> `x[2] = getMax()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (840(f=1.0), 839(f=2.0), )
Selected to next generation: IDs2--> (840(f=1.0), )
----------Running generation: 421, population size: 1

***** Generation 421 : 0
**Parent Variant: [Variant id: 841, #gens: 671, #ops: 0, parent:-]

--Child created id: 842
--Creating new operations for variant [Variant id: 842, #gens: 671, #ops: 0, parent:841]
---analyzing modificationPoint position: 550
location: FastMath.java1572
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = z * lnb ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 842, #gens: 670, #ops: 1, parent:841] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 842, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(421): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = z * lnb ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (841(f=2.0), 842(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (841(f=2.0), )
----------Running generation: 422, population size: 1

***** Generation 422 : 0
**Parent Variant: [Variant id: 843, #gens: 671, #ops: 0, parent:-]

--Child created id: 844
--Creating new operations for variant [Variant id: 844, #gens: 671, #ops: 0, parent:843]
---analyzing modificationPoint position: 396
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  for (final org.apache.commons.math.ode.events.EventState state : eventsStates) { 	if (state.evaluate[...]
---analyzing modificationPoint position: 292
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch []
location: EmbeddedRungeKuttaIntegrator.java217
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean firstTime = true ` -topatch--> `boolean firstTime = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 217, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean firstTime = true ` -topatch--> `boolean firstTime = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 844, #gens: 671, #ops: 1, parent:843] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 844
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-844/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(422): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean firstTime = true ` -topatch--> `boolean firstTime = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (844(f=1.0), 843(f=2.0), )
Selected to next generation: IDs2--> (844(f=1.0), )
----------Running generation: 423, population size: 1

***** Generation 423 : 0
**Parent Variant: [Variant id: 845, #gens: 671, #ops: 0, parent:-]

--Child created id: 846
--Creating new operations for variant [Variant id: 846, #gens: 671, #ops: 0, parent:845]
---analyzing modificationPoint position: 165
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double pT = getGlobalPreviousTime()
---analyzing modificationPoint position: 64
location: EventState.java111
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 846, #gens: 670, #ops: 1, parent:845] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 846
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-846/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(423): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0 = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (846(f=1.0), 845(f=2.0), )
Selected to next generation: IDs2--> (846(f=1.0), )
----------Running generation: 424, population size: 1

***** Generation 424 : 0
**Parent Variant: [Variant id: 847, #gens: 671, #ops: 0, parent:-]

--Child created id: 848
--Creating new operations for variant [Variant id: 848, #gens: 671, #ops: 0, parent:847]
---analyzing modificationPoint position: 196
---modifPoint 0 not mutation generated in  double error1 = 0
---analyzing modificationPoint position: 44
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java172
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// reduce interval if it brackets the root nbPoints = 2 ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 172, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// reduce interval if it brackets the root nbPoints = 2 ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 848, #gens: 672, #ops: 1, parent:847] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 848, errors: [BracketingNthOrderBrentSolver.java:209: error: illegal start of type
		while (true) {
		^, BracketingNthOrderBrentSolver.java:209: error: illegal start of type
		while (true) {
		       ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	        ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(424): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// reduce interval if it brackets the root nbPoints = 2 ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (847(f=2.0), 848(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (847(f=2.0), )
----------Running generation: 425, population size: 1

***** Generation 425 : 0
**Parent Variant: [Variant id: 849, #gens: 671, #ops: 0, parent:-]

--Child created id: 850
--Creating new operations for variant [Variant id: 850, #gens: 671, #ops: 0, parent:849]
---analyzing modificationPoint position: 70
Templates availables74
Attempts Base Ingredients  1 total 74
---modifPoint 0 not mutation generated in  nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE
---analyzing modificationPoint position: 353
location: AbstractStepInterpolator.java258
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 850, #gens: 670, #ops: 1, parent:849] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 850
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-850/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(425): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (850(f=1.0), 849(f=2.0), )
Selected to next generation: IDs2--> (850(f=1.0), )
----------Running generation: 426, population size: 1

***** Generation 426 : 0
**Parent Variant: [Variant id: 851, #gens: 671, #ops: 0, parent:-]

--Child created id: 852
--Creating new operations for variant [Variant id: 852, #gens: 671, #ops: 0, parent:851]
---analyzing modificationPoint position: 584
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x, java.lang.Double.POSITIVE_INFINITY]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: FastMath.java1321
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[1] = b ` -topatch--> `if ((x * x) > 1.0) { 	return java.lang.Double.POSITIVE_INFINITY; } else { 	return 0.0; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1321, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[1] = b ` -topatch--> `if ((x * x) > 1.0) { 	return java.lang.Double.POSITIVE_INFINITY; } else { 	return 0.0; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 852, #gens: 672, #ops: 1, parent:851] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 852, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(426): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `hiPrec[1] = b ` -topatch--> `if ((x * x) > 1.0) { 	return java.lang.Double.POSITIVE_INFINITY; } else { 	return 0.0; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (851(f=2.0), 852(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (851(f=2.0), )
----------Running generation: 427, population size: 1

***** Generation 427 : 0
**Parent Variant: [Variant id: 853, #gens: 671, #ops: 0, parent:-]

--Child created id: 854
--Creating new operations for variant [Variant id: 854, #gens: 671, #ops: 0, parent:853]
---analyzing modificationPoint position: 209
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [h, error1, mainSetDimension, den]
--> var from patch: h spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: error1 spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: mainSetDimension spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853Integrator.java279
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (den <= 0.0) { 	den = 1.0; } ` -topatch--> `return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator line: 279, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (den <= 0.0) { 	den = 1.0; } ` -topatch--> `return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 854, #gens: 672, #ops: 1, parent:853] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 854, errors: [DormandPrince853Integrator.java:284: error: unreachable statement
		return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMath.sqrt(mainSetDimension * den); 		return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMath.sqrt(mainSetDimension * den);
		                                                                                                                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(427): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (den <= 0.0) { 	den = 1.0; } ` -topatch--> `return (org.apache.commons.math.util.FastMath.abs(h) * error1) / org.apache.commons.math.util.FastMa[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (853(f=2.0), 854(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (853(f=2.0), )
----------Running generation: 428, population size: 1

***** Generation 428 : 0
**Parent Variant: [Variant id: 855, #gens: 671, #ops: 0, parent:-]

--Child created id: 856
--Creating new operations for variant [Variant id: 856, #gens: 671, #ops: 0, parent:855]
---analyzing modificationPoint position: 484
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  stepStart = java.lang.Double.NaN
---analyzing modificationPoint position: 623
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  z = (z * epsilon) + 1.0
---analyzing modificationPoint position: 94
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  pendingEventTime = java.lang.Double.NaN
---analyzing modificationPoint position: 442
Templates availables26
Attempts Base Ingredients  1 total 26
---modifPoint 3 not mutation generated in  primaryMapper.extractEquationData(interpolatedState,  interpolatedPrimaryState)
---analyzing modificationPoint position: 15
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [nextAction, org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE]
--> var from patch: nextAction spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java229
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 229, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 856, #gens: 672, #ops: 1, parent:855] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 856
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-856/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(428): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = (forward) ?  bracketing.solve(maxIterationCount, f, ta, tb, org.apache.commons.math.analysis.[...] ` -topatch--> `nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (856(f=1.0), 855(f=2.0), )
Selected to next generation: IDs2--> (856(f=1.0), )
----------Running generation: 429, population size: 1

***** Generation 429 : 0
**Parent Variant: [Variant id: 857, #gens: 671, #ops: 0, parent:-]

--Child created id: 858
--Creating new operations for variant [Variant id: 858, #gens: 671, #ops: 0, parent:857]
---analyzing modificationPoint position: 647
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  d = -((c - a) - (org.apache.commons.math.util.FastMath.LN_2_B * exp))
---analyzing modificationPoint position: 629
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  if (hiPrec != null) { 	// If requesting high precision 	hiPrec[0] = tempA; 	hiPrec[1] = ((((tempC * [...]
---analyzing modificationPoint position: 327
Templates availables67
Attempts Base Ingredients  1 total 67
vars from patch [minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance]
--> var from patch: minStep spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: maxStep spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: scalAbsoluteTolerance spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: scalRelativeTolerance spoon.support.reflect.code.CtVariableReadImpl
location: AdaptiveStepsizeIntegrator.java229
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `setStepSizeControl(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator line: 229, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `setStepSizeControl(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 858, #gens: 672, #ops: 1, parent:857] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 858
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-858/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(429): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) { 	throw ne[...] ` -topatch--> `setStepSizeControl(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (858(f=1.0), 857(f=2.0), )
Selected to next generation: IDs2--> (858(f=1.0), )
----------Running generation: 430, population size: 1

***** Generation 430 : 0
**Parent Variant: [Variant id: 859, #gens: 671, #ops: 0, parent:-]

--Child created id: 860
--Creating new operations for variant [Variant id: 860, #gens: 671, #ops: 0, parent:859]
---analyzing modificationPoint position: 270
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  // estimate the state at the end of the step for (int j = 0; j < y0.length; ++j) { 	double sum = b[0[...]
---analyzing modificationPoint position: 152
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); }
---analyzing modificationPoint position: 114
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java246
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 246, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 860, #gens: 671, #ops: 1, parent:859] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 860, errors: [BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                           ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                        ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				                                 ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:261: error: cannot find symbol
					if ((signChangeIndex - start) >= (end - signChangeIndex)) {
					                       ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:263: error: cannot find symbol
						++start;
						  ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                  ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:279: error: cannot find symbol
				start = signChangeIndex - 1;
				^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:291: error: cannot find symbol
			if ((nbPoints > 2) && ((end - start) != nbPoints)) {
			                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:295: error: cannot find symbol
				nbPoints = end - start;
				                 ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:296: error: cannot find symbol
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:297: error: cannot find symbol
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				                              ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:298: error: cannot find symbol
				signChangeIndex -= start;
				                   ^
  symbol:   variable start
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(430): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (859(f=2.0), 860(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (859(f=2.0), )
----------Running generation: 431, population size: 1

***** Generation 431 : 0
**Parent Variant: [Variant id: 861, #gens: 671, #ops: 0, parent:-]

--Child created id: 862
--Creating new operations for variant [Variant id: 862, #gens: 671, #ops: 0, parent:861]
---analyzing modificationPoint position: 454
Templates availables55
Attempts Base Ingredients  1 total 55
vars from patch [primaryStateDot]
--> var from patch: primaryStateDot spoon.support.reflect.code.CtFieldReadImpl
location: ExpandableStatefulODE.java197
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data java.lang.System.arraycopy(primaryState, 0, this.primaryState, 0, primaryState.lengt[...] ` -topatch--> `return primaryStateDot.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 197, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data java.lang.System.arraycopy(primaryState, 0, this.primaryState, 0, primaryState.lengt[...] ` -topatch--> `return primaryStateDot.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 862, #gens: 672, #ops: 1, parent:861] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 862, errors: [ExpandableStatefulODE.java:214: error: illegal start of expression
	 * Get primary part of the current state.
	 ^, ExpandableStatefulODE.java:214: error: ';' expected
	 * Get primary part of the current state.
	      ^, ExpandableStatefulODE.java:214: error: ';' expected
	 * Get primary part of the current state.
	                   ^, ExpandableStatefulODE.java:214: error: ';' expected
	 * Get primary part of the current state.
	                          ^, ExpandableStatefulODE.java:214: error: ';' expected
	 * Get primary part of the current state.
	                                        ^, ExpandableStatefulODE.java:216: error: <identifier> expected
	 * @return primary part of the current state
	    ^, ExpandableStatefulODE.java:216: error: ';' expected
	 * @return primary part of the current state
	                  ^, ExpandableStatefulODE.java:216: error: ';' expected
	 * @return primary part of the current state
	                          ^, ExpandableStatefulODE.java:216: error: ';' expected
	 * @return primary part of the current state
	                                      ^, ExpandableStatefulODE.java:217: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	  ^, ExpandableStatefulODE.java:217: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	^, ExpandableStatefulODE.java:217: error: ';' expected
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();} 	/**
	    	                               ^, ExpandableStatefulODE.java:221: error: illegal start of expression
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	^, ExpandableStatefulODE.java:221: error: ';' expected
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();} 	/**
	    	                                  ^, ExpandableStatefulODE.java:231: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	^, ExpandableStatefulODE.java:231: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	       ^, ExpandableStatefulODE.java:231: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                             ^, ExpandableStatefulODE.java:231: error: <identifier> expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                              ^, ExpandableStatefulODE.java:231: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                            ^, ExpandableStatefulODE.java:231: error: not a statement
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                      ^, ExpandableStatefulODE.java:231: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state 		double[] localArray = components.get(index).state; 		// safety checks
	    	                                                                                                                                                 ^, ExpandableStatefulODE.java:245: error: illegal start of expression
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();
	    	^, ExpandableStatefulODE.java:245: error: ';' expected
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();
	    	                                 ^, ExpandableStatefulODE.java:245: error: ';' expected
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();
	    	                                                 ^, ExpandableStatefulODE.java:254: error: illegal start of expression
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();
	    	^, ExpandableStatefulODE.java:254: error: ';' expected
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();
	    	                                    ^, ExpandableStatefulODE.java:254: error: ';' expected
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();
	    	                                                    ^, ExpandableStatefulODE.java:265: error: illegal start of expression
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	^, ExpandableStatefulODE.java:265: error: illegal start of expression
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	       ^, ExpandableStatefulODE.java:265: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                            ^, ExpandableStatefulODE.java:265: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                         ^, ExpandableStatefulODE.java:265: error: not a statement
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                   ^, ExpandableStatefulODE.java:265: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                                              ^, ExpandableStatefulODE.java:285: error: illegal start of expression
	 */ 	public double[] getCompleteState() { 		// allocate complete array
	    	^, ExpandableStatefulODE.java:285: error: ';' expected
	 */ 	public double[] getCompleteState() { 		// allocate complete array
	    	                                ^, ExpandableStatefulODE.java:300: error: illegal start of expression
	 */ 	private static class SecondaryComponent {
	    	^, ExpandableStatefulODE.java:300: error: illegal start of expression
	 */ 	private static class SecondaryComponent {
	    	        ^, ExpandableStatefulODE.java:300: error: ';' expected
	 */ 	private static class SecondaryComponent {
	    	              ^, ExpandableStatefulODE.java:300: error: not a statement
	 */ 	private static class SecondaryComponent {
	    	                     ^, ExpandableStatefulODE.java:300: error: ';' expected
	 */ 	private static class SecondaryComponent {
	    	                                       ^, ExpandableStatefulODE.java:303: error: illegal start of expression
		 */ 		private final org.apache.commons.math.ode.SecondaryEquations equation;
		    		^, ExpandableStatefulODE.java:306: error: illegal start of expression
		 */ 		private final org.apache.commons.math.ode.EquationsMapper mapper;
		    		^, ExpandableStatefulODE.java:309: error: illegal start of expression
		 */ 		private final double[] state;
		    		^, ExpandableStatefulODE.java:312: error: illegal start of expression
		 */ 		private final double[] stateDot;
		    		^, ExpandableStatefulODE.java:320: error: illegal start of expression
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		^, ExpandableStatefulODE.java:320: error: illegal start of expression
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		                          ^, ExpandableStatefulODE.java:320: error: ';' expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		                               ^, ExpandableStatefulODE.java:320: error: illegal start of expression
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		                                   ^, ExpandableStatefulODE.java:320: error: ';' expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		                                          ^, ExpandableStatefulODE.java:320: error: <identifier> expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		                                                                                        ^, ExpandableStatefulODE.java:320: error: ';' expected
		 */ 		public SecondaryComponent(final org.apache.commons.math.ode.SecondaryEquations equation, final int firstIndex) { 			final int n = equation.getDimension(); 			this.equation = equation; 			mapper = new org.apache.commons.math.ode.EquationsMapper(firstIndex, n);
		    		                                                                                                             ^, ExpandableStatefulODE.java:327: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(431): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the data java.lang.System.arraycopy(primaryState, 0, this.primaryState, 0, primaryState.lengt[...] ` -topatch--> `return primaryStateDot.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (861(f=2.0), 862(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (861(f=2.0), )
----------Running generation: 432, population size: 1

***** Generation 432 : 0
**Parent Variant: [Variant id: 863, #gens: 671, #ops: 0, parent:-]

--Child created id: 864
--Creating new operations for variant [Variant id: 864, #gens: 671, #ops: 0, parent:863]
---analyzing modificationPoint position: 123
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch [v]
--> var from patch: v spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java320
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	v = new double[7][]; 	for (int k = 0; k < 7; ++k) { 		v[k] = new double[interpolat[...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 320, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	v = new double[7][]; 	for (int k = 0; k < 7; ++k) { 		v[k] = new double[interpolat[...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 864, #gens: 672, #ops: 1, parent:863] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 864
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-864/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(432): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	v = new double[7][]; 	for (int k = 0; k < 7; ++k) { 		v[k] = new double[interpolat[...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (864(f=1.0), 863(f=2.0), )
Selected to next generation: IDs2--> (864(f=1.0), )
----------Running generation: 433, population size: 1

***** Generation 433 : 0
**Parent Variant: [Variant id: 865, #gens: 671, #ops: 0, parent:-]

--Child created id: 866
--Creating new operations for variant [Variant id: 866, #gens: 671, #ops: 0, parent:865]
---analyzing modificationPoint position: 526
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (x == java.lang.Double.NEGATIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	}  	if (y <[...]
---analyzing modificationPoint position: 656
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  a = c
---analyzing modificationPoint position: 471
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 2 not mutation generated in  softCurrentTime = globalCurrentTime
---analyzing modificationPoint position: 249
location: EmbeddedRungeKuttaIntegrator.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exp = (-1.0) / getOrder() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 866, #gens: 670, #ops: 1, parent:865] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 866, errors: [EmbeddedRungeKuttaIntegrator.java:132: error: variable exp might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(433): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exp = (-1.0) / getOrder() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (865(f=2.0), 866(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (865(f=2.0), )
----------Running generation: 434, population size: 1

***** Generation 434 : 0
**Parent Variant: [Variant id: 867, #gens: 671, #ops: 0, parent:-]

--Child created id: 868
--Creating new operations for variant [Variant id: 868, #gens: 671, #ops: 0, parent:867]
---analyzing modificationPoint position: 114
---modifPoint 0 not mutation generated in  int start = 0
---analyzing modificationPoint position: 432
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 1 not mutation generated in  // set the data primaryMapper.insertEquationData(primaryState, completeState)
---analyzing modificationPoint position: 171
Templates availables27
Attempts Base Ingredients  1 total 27
vars from patch [v]
--> var from patch: v spoon.support.reflect.code.CtFieldWriteImpl
location: DormandPrince853StepInterpolator.java411
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = (((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K15_01 * yDotK[0][...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 411, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = (((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K15_01 * yDotK[0][...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 868, #gens: 671, #ops: 1, parent:867] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 868, errors: [DormandPrince853StepInterpolator.java:416: error: variable s might not have been initialized
			yTmp[j] = currentState[j] + (h * s);
			                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(434): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = (((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K15_01 * yDotK[0][...] ` -topatch--> `v = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (867(f=2.0), 868(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (867(f=2.0), )
----------Running generation: 435, population size: 1

***** Generation 435 : 0
**Parent Variant: [Variant id: 869, #gens: 671, #ops: 0, parent:-]

--Child created id: 870
--Creating new operations for variant [Variant id: 870, #gens: 671, #ops: 0, parent:869]
---analyzing modificationPoint position: 168
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  yTmp[j] = currentState[j] + (h * s)
---analyzing modificationPoint position: 219
Templates availables86
Attempts Base Ingredients  1 total 86
vars from patch []
location: DormandPrince853StepInterpolator.java310
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vectorsInitialized = false ` -topatch--> `double s` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 310, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vectorsInitialized = false ` -topatch--> `double s` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 870, #gens: 672, #ops: 1, parent:869] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 870
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-870/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(435): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vectorsInitialized = false ` -topatch--> `double s` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (870(f=1.0), 869(f=2.0), )
Selected to next generation: IDs2--> (870(f=1.0), )
----------Running generation: 436, population size: 1

***** Generation 436 : 0
**Parent Variant: [Variant id: 871, #gens: 671, #ops: 0, parent:-]

--Child created id: 872
--Creating new operations for variant [Variant id: 872, #gens: 671, #ops: 0, parent:871]
---analyzing modificationPoint position: 453
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 0 not mutation generated in  // safety checks if (primaryState.length != this.primaryState.length) { 	throw new org.apache.common[...]
---analyzing modificationPoint position: 549
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  z = (z * lnb) + 1.0
---analyzing modificationPoint position: 493
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  if (java.lang.Double.isInfinite(x)) { 	return java.lang.Double.POSITIVE_INFINITY; }
---analyzing modificationPoint position: 419
Templates availables55
Attempts Base Ingredients  1 total 55
vars from patch [primaryMapper]
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldReadImpl
location: ExpandableStatefulODE.java96
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (components.isEmpty()) { 	// there are no secondary equations, the complete set is limited to the[...] ` -topatch--> `return primaryMapper` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 96, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (components.isEmpty()) { 	// there are no secondary equations, the complete set is limited to the[...] ` -topatch--> `return primaryMapper` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 872, #gens: 672, #ops: 1, parent:871] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 872, errors: [ExpandableStatefulODE.java:158: error: illegal start of expression
	 * Get the current time derivative of the complete state vector.
	 ^, ExpandableStatefulODE.java:158: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	      ^, ExpandableStatefulODE.java:158: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                  ^, ExpandableStatefulODE.java:158: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                  ^, ExpandableStatefulODE.java:158: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                         ^, ExpandableStatefulODE.java:158: error: ';' expected
	 * Get the current time derivative of the complete state vector.
	                                                        ^, ExpandableStatefulODE.java:158: error: <identifier> expected
	 * Get the current time derivative of the complete state vector.
	                                                                ^, ExpandableStatefulODE.java:160: error: illegal start of expression
	 * @param t
	 ^, ExpandableStatefulODE.java:160: error: illegal start of expression
	 * @param t
	   ^, ExpandableStatefulODE.java:161: error: not a statement
	 * 		current value of the independent <I>time</I> variable
	 ^, ExpandableStatefulODE.java:161: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		       ^, ExpandableStatefulODE.java:161: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		                ^, ExpandableStatefulODE.java:161: error: ';' expected
	 * 		current value of the independent <I>time</I> variable
	   		                                ^, ExpandableStatefulODE.java:161: error: illegal start of expression
	 * 		current value of the independent <I>time</I> variable
	   		                                    ^, ExpandableStatefulODE.java:161: error: illegal start of type
	 * 		current value of the independent <I>time</I> variable
	   		                                         ^, ExpandableStatefulODE.java:161: error: illegal start of expression
	 * 		current value of the independent <I>time</I> variable
	   		                                          ^, ExpandableStatefulODE.java:162: error: illegal start of expression
	 * @param y
	   ^, ExpandableStatefulODE.java:161: error: not a statement
	 * 		current value of the independent <I>time</I> variable
	   		                                           ^, ExpandableStatefulODE.java:163: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		     ^, ExpandableStatefulODE.java:163: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                    ^, ExpandableStatefulODE.java:163: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                  ^, ExpandableStatefulODE.java:163: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                         ^, ExpandableStatefulODE.java:163: error: ';' expected
	 * 		array containing the current value of the complete state vector
	   		                                                        ^, ExpandableStatefulODE.java:164: error: illegal start of expression
	 * @param yDot
	   ^, ExpandableStatefulODE.java:165: error: not a statement
	 * 		placeholder array where to put the time derivative of the complete state vector
	 ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		           ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                       ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                              ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                       ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                     ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                                  ^, ExpandableStatefulODE.java:165: error: ';' expected
	 * 		placeholder array where to put the time derivative of the complete state vector
	   		                                                                               ^, ExpandableStatefulODE.java:166: error: illegal start of expression
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	^, ExpandableStatefulODE.java:166: error: illegal start of expression
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	       ^, ExpandableStatefulODE.java:166: error: ';' expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                              ^, ExpandableStatefulODE.java:166: error: <identifier> expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                              ^, ExpandableStatefulODE.java:166: error: <identifier> expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                                                ^, ExpandableStatefulODE.java:166: error: ';' expected
	 */ 	public void computeDerivatives(final double t, final double[] y, final double[] yDot) { 		// compute derivatives of the primary equations 		primaryMapper.extractEquationData(y, primaryState); 		primary.computeDerivatives(t, primaryState, primaryStateDot); 		primaryMapper.insertEquationData(primaryStateDot, yDot); 		// Add contribution for secondary equations
	    	                                                                                    ^, ExpandableStatefulODE.java:173: error: illegal start of expression
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	^, ExpandableStatefulODE.java:173: error: ';' expected
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	                                ^, ExpandableStatefulODE.java:173: error: ';' expected
	 */ 	public int addSecondaryEquations(final org.apache.commons.math.ode.SecondaryEquations secondary) { 		final int firstIndex; 		if (components.isEmpty()) { 			// lazy creation of the components list 			components = new java.util.ArrayList<org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent>(); 			firstIndex = primary.getDimension();} else { 			final org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent last = components.get(components.size() - 1); 			firstIndex = last.mapper.getFirstIndex() + last.mapper.getDimension();} 		components.add(new org.apache.commons.math.ode.ExpandableStatefulODE.SecondaryComponent(secondary, firstIndex)); 		return components.size() - 1;} 	/**
	    	                                                                                               ^, ExpandableStatefulODE.java:174: error: illegal start of expression
	 * Get an equations mapper for the primary equations set.
	 ^, ExpandableStatefulODE.java:174: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	      ^, ExpandableStatefulODE.java:174: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                   ^, ExpandableStatefulODE.java:174: error: not a statement
	 * Get an equations mapper for the primary equations set.
	                    ^, ExpandableStatefulODE.java:174: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                          ^, ExpandableStatefulODE.java:174: error: '(' expected
	 * Get an equations mapper for the primary equations set.
	                              ^, ExpandableStatefulODE.java:174: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                                          ^, ExpandableStatefulODE.java:174: error: ';' expected
	 * Get an equations mapper for the primary equations set.
	                                                    ^, ExpandableStatefulODE.java:174: error: <identifier> expected
	 * Get an equations mapper for the primary equations set.
	                                                         ^, ExpandableStatefulODE.java:176: error: illegal start of expression
	 * @return mapper for the primary set
	 ^, ExpandableStatefulODE.java:176: error: <identifier> expected
	 * @return mapper for the primary set
	    ^, ExpandableStatefulODE.java:176: error: ')' expected
	 * @return mapper for the primary set
	                 ^, ExpandableStatefulODE.java:176: error: ';' expected
	 * @return mapper for the primary set
	                                 ^, ExpandableStatefulODE.java:176: error: variable declaration not allowed here
	 * @return mapper for the primary set
	                          ^, ExpandableStatefulODE.java:177: error: illegal character: '#'
	 * @see #getSecondaryMappers()
	        ^, ExpandableStatefulODE.java:177: error: not a statement
	 * @see #getSecondaryMappers()
	 ^, ExpandableStatefulODE.java:177: error: ';' expected
	 * @see #getSecondaryMappers()
	         ^, ExpandableStatefulODE.java:177: error: -> expected
	 * @see #getSecondaryMappers()
	                              ^, ExpandableStatefulODE.java:178: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	 ^, ExpandableStatefulODE.java:178: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	    	^, ExpandableStatefulODE.java:177: error: not a statement
	 * @see #getSecondaryMappers()
	                            ^, ExpandableStatefulODE.java:178: error: ';' expected
	 */ 	public org.apache.commons.math.ode.EquationsMapper getPrimaryMapper() { 		return primaryMapper;} 	/**
	    	                                                                   ^, ExpandableStatefulODE.java:183: error: illegal start of expression
	 */ 	public org.apache.commons.math.ode.EquationsMapper[] getSecondaryMappers() { 		final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.EquationsMapper[components.size()]; 		for (int i = 0; i < mappers.length; ++i) { 			mappers[i] = components.get(i).mapper;} 		return mappers;} 	/**
	    	^, ExpandableStatefulODE.java:183: error: ';' expected
	 */ 	public org.apache.commons.math.ode.EquationsMapper[] getSecondaryMappers() { 		final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.EquationsMapper[components.size()]; 		for (int i = 0; i < mappers.length; ++i) { 			mappers[i] = components.get(i).mapper;} 		return mappers;} 	/**
	    	                                                                        ^, ExpandableStatefulODE.java:188: error: illegal start of expression
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	^, ExpandableStatefulODE.java:188: error: illegal start of expression
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	       ^, ExpandableStatefulODE.java:188: error: ';' expected
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	                   ^, ExpandableStatefulODE.java:188: error: ';' expected
	 */ 	public void setTime(final double time) { 		this.time = time;} 	/**
	    	                                     ^, ExpandableStatefulODE.java:192: error: illegal start of expression
	 */ 	public double getTime() { 		return time;} 	/**
	    	^, ExpandableStatefulODE.java:192: error: ';' expected
	 */ 	public double getTime() { 		return time;} 	/**
	    	                     ^, ExpandableStatefulODE.java:200: error: illegal start of expression
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	^, ExpandableStatefulODE.java:200: error: illegal start of expression
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	       ^, ExpandableStatefulODE.java:200: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                           ^, ExpandableStatefulODE.java:200: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                       ^, ExpandableStatefulODE.java:200: error: not a statement
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                 ^, ExpandableStatefulODE.java:200: error: ';' expected
	 */ 	public void setPrimaryState(final double[] primaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                                            ^, ExpandableStatefulODE.java:206: error: illegal start of expression
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();
	    	^, ExpandableStatefulODE.java:206: error: ';' expected
	 */ 	public double[] getPrimaryState() { 		return primaryState.clone();
	    	                               ^, ExpandableStatefulODE.java:213: error: illegal start of expression
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();
	    	^, ExpandableStatefulODE.java:213: error: ';' expected
	 */ 	public double[] getPrimaryStateDot() { 		return primaryStateDot.clone();
	    	                                  ^, ExpandableStatefulODE.java:226: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	^, ExpandableStatefulODE.java:226: error: illegal start of expression
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	       ^, ExpandableStatefulODE.java:226: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	                             ^, ExpandableStatefulODE.java:226: error: <identifier> expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	                                              ^, ExpandableStatefulODE.java:226: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	                                                                            ^, ExpandableStatefulODE.java:226: error: not a statement
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	                                                                                                                      ^, ExpandableStatefulODE.java:226: error: ';' expected
	 */ 	public void setSecondaryState(final int index, final double[] secondaryState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// get either the secondary state
	    	                                                                                                                                                 ^, ExpandableStatefulODE.java:245: error: illegal start of expression
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();
	    	^, ExpandableStatefulODE.java:245: error: ';' expected
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();
	    	                                 ^, ExpandableStatefulODE.java:245: error: ';' expected
	 */ 	public double[] getSecondaryState(final int index) { 		return components.get(index).state.clone();
	    	                                                 ^, ExpandableStatefulODE.java:254: error: illegal start of expression
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();
	    	^, ExpandableStatefulODE.java:254: error: ';' expected
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();
	    	                                    ^, ExpandableStatefulODE.java:254: error: ';' expected
	 */ 	public double[] getSecondaryStateDot(final int index) { 		return components.get(index).stateDot.clone();
	    	                                                    ^, ExpandableStatefulODE.java:265: error: illegal start of expression
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	^, ExpandableStatefulODE.java:265: error: illegal start of expression
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	       ^, ExpandableStatefulODE.java:265: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                            ^, ExpandableStatefulODE.java:265: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                         ^, ExpandableStatefulODE.java:265: error: not a statement
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                   ^, ExpandableStatefulODE.java:265: error: ';' expected
	 */ 	public void setCompleteState(final double[] completeState) throws org.apache.commons.math.exception.DimensionMismatchException { 		// safety checks
	    	                                                                                                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(436): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (components.isEmpty()) { 	// there are no secondary equations, the complete set is limited to the[...] ` -topatch--> `return primaryMapper` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (871(f=2.0), 872(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (871(f=2.0), )
----------Running generation: 437, population size: 1

***** Generation 437 : 0
**Parent Variant: [Variant id: 873, #gens: 671, #ops: 0, parent:-]

--Child created id: 874
--Creating new operations for variant [Variant id: 874, #gens: 671, #ops: 0, parent:873]
---analyzing modificationPoint position: 380
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [this.softCurrentTime]
--> var from patch: this.softCurrentTime spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java215
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryState = null ` -topatch--> `this.softCurrentTime = softCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 215, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryState = null ` -topatch--> `this.softCurrentTime = softCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 874, #gens: 672, #ops: 1, parent:873] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 874, errors: [AbstractStepInterpolator.java:367: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:367: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:369: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:369: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:370: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:370: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:370: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:370: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:370: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:370: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:370: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:370: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:370: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:371: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:371: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:371: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:371: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:371: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:371: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:371: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:371: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:371: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:371: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:371: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:371: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:372: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:372: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:372: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:372: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:372: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:373: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:373: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:374: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:375: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:375: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:373: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:376: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:376: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:376: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:377: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:377: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:378: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:378: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:378: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:378: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:378: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:390: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:390: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:390: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:390: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:394: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:394: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:398: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:398: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:403: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:403: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:408: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:408: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:410: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:410: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:412: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:412: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:412: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:412: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:414: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:414: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:425: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:425: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:425: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:425: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:425: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:425: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:427: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:427: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:427: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:430: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:430: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:432: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:432: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:434: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];}
	    	^, AbstractStepInterpolator.java:434: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];}
	    	                                             ^, AbstractStepInterpolator.java:434: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];}
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(437): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryState = null ` -topatch--> `this.softCurrentTime = softCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (873(f=2.0), 874(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (873(f=2.0), )
----------Running generation: 438, population size: 1

***** Generation 438 : 0
**Parent Variant: [Variant id: 875, #gens: 671, #ops: 0, parent:-]

--Child created id: 876
--Creating new operations for variant [Variant id: 876, #gens: 671, #ops: 0, parent:875]
---analyzing modificationPoint position: 345
location: AbstractStepInterpolator.java250
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 876, #gens: 670, #ops: 1, parent:875] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 876
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-876/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(438): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (876(f=1.0), 875(f=2.0), )
Selected to next generation: IDs2--> (876(f=1.0), )
----------Running generation: 439, population size: 1

***** Generation 439 : 0
**Parent Variant: [Variant id: 877, #gens: 671, #ops: 0, parent:-]

--Child created id: 878
--Creating new operations for variant [Variant id: 878, #gens: 671, #ops: 0, parent:877]
---analyzing modificationPoint position: 448
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [this.primaryStateDot, n]
--> var from patch: this.primaryStateDot spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: ExpandableStatefulODE.java77
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryState = new double[n] ` -topatch--> `this.primaryStateDot = new double[n]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.ExpandableStatefulODE line: 77, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryState = new double[n] ` -topatch--> `this.primaryStateDot = new double[n]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 878, #gens: 671, #ops: 1, parent:877] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 878, errors: [ExpandableStatefulODE.java:79: error: variable primaryStateDot might already have been assigned
		this.primaryStateDot = new double[n]; 		this.primaryStateDot = new double[n];
		                                      		    ^, ExpandableStatefulODE.java:81: error: variable primaryState might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(439): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryState = new double[n] ` -topatch--> `this.primaryStateDot = new double[n]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (877(f=2.0), 878(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (877(f=2.0), )
----------Running generation: 440, population size: 1

***** Generation 440 : 0
**Parent Variant: [Variant id: 879, #gens: 671, #ops: 0, parent:-]

--Child created id: 880
--Creating new operations for variant [Variant id: 880, #gens: 671, #ops: 0, parent:879]
---analyzing modificationPoint position: 538
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  double tmp2 = (lna + tmp1) - tmp1
---analyzing modificationPoint position: 23
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [stepSize]
--> var from patch: stepSize spoon.support.reflect.code.CtFieldReadImpl
location: AbstractIntegrator.java317
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setSoftPreviousTime(previousT) ` -topatch--> `return stepSize` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 317, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setSoftPreviousTime(previousT) ` -topatch--> `return stepSize` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 880, #gens: 672, #ops: 1, parent:879] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 880, errors: [AbstractIntegrator.java:318: error: unreachable statement
			interpolator.setSoftPreviousTime(previousT);
			^]
Ingredient counter is Zero
---Undoing: gnrtn(440): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.setSoftPreviousTime(previousT) ` -topatch--> `return stepSize` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (879(f=2.0), 880(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (879(f=2.0), )
----------Running generation: 441, population size: 1

***** Generation 441 : 0
**Parent Variant: [Variant id: 881, #gens: 671, #ops: 0, parent:-]

--Child created id: 882
--Creating new operations for variant [Variant id: 882, #gens: 671, #ops: 0, parent:881]
---analyzing modificationPoint position: 523
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + tempA
---analyzing modificationPoint position: 206
location: DormandPrince853Integrator.java275
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `error2 += ratio2 * ratio2 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 882, #gens: 670, #ops: 1, parent:881] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 882
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-882/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(441): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `error2 += ratio2 * ratio2 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (882(f=1.0), 881(f=2.0), )
Selected to next generation: IDs2--> (882(f=1.0), )
----------Running generation: 442, population size: 1

***** Generation 442 : 0
**Parent Variant: [Variant id: 883, #gens: 671, #ops: 0, parent:-]

--Child created id: 884
--Creating new operations for variant [Variant id: 884, #gens: 671, #ops: 0, parent:883]
---analyzing modificationPoint position: 340
Templates availables131
Attempts Base Ingredients  1 total 131
---modifPoint 0 not mutation generated in  dirtyState = interpolator.dirtyState
---analyzing modificationPoint position: 31
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [resetOccurred]
--> var from patch: resetOccurred spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java331
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 331, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 884, #gens: 672, #ops: 1, parent:883] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 884
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-884/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(442): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (isLastStep) { 	// the event asked to stop integration 	java.lang.System.arraycopy(eventY, 0, y, [...] ` -topatch--> `resetOccurred = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (884(f=1.0), 883(f=2.0), )
Selected to next generation: IDs2--> (884(f=1.0), )
----------Running generation: 443, population size: 1

***** Generation 443 : 0
**Parent Variant: [Variant id: 885, #gens: 671, #ops: 0, parent:-]

--Child created id: 886
--Creating new operations for variant [Variant id: 886, #gens: 671, #ops: 0, parent:885]
---analyzing modificationPoint position: 44
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 629
location: FastMath.java925
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (hiPrec != null) { 	// If requesting high precision 	hiPrec[0] = tempA; 	hiPrec[1] = ((((tempC * [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 886, #gens: 670, #ops: 1, parent:885] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 886, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(443): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (hiPrec != null) { 	// If requesting high precision 	hiPrec[0] = tempA; 	hiPrec[1] = ((((tempC * [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (885(f=2.0), 886(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (885(f=2.0), )
----------Running generation: 444, population size: 1

***** Generation 444 : 0
**Parent Variant: [Variant id: 887, #gens: 671, #ops: 0, parent:-]

--Child created id: 888
--Creating new operations for variant [Variant id: 888, #gens: 671, #ops: 0, parent:887]
---analyzing modificationPoint position: 348
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [this.softCurrentTime]
--> var from patch: this.softCurrentTime spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java253
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `this.softCurrentTime = softCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 253, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `this.softCurrentTime = softCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 888, #gens: 671, #ops: 1, parent:887] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 888, errors: [AbstractStepInterpolator.java:356: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:356: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:356: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:356: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:356: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:356: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:356: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:358: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:358: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:359: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:359: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:359: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:359: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:359: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:359: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:360: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:360: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:360: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:360: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:360: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:360: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:360: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:360: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:360: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:361: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:362: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:362: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:363: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:364: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:364: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:362: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:365: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:365: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:365: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:366: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:366: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:367: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:367: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:367: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:367: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:367: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:383: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:383: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:387: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:387: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:392: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:392: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:397: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:397: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:399: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:401: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:401: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:403: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:403: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:414: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:414: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:414: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:414: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:414: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:414: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:416: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:416: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:416: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:419: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:419: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:421: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:421: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(444): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `this.softCurrentTime = softCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (887(f=2.0), 888(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (887(f=2.0), )
----------Running generation: 445, population size: 1

***** Generation 445 : 0
**Parent Variant: [Variant id: 889, #gens: 671, #ops: 0, parent:-]

--Child created id: 890
--Creating new operations for variant [Variant id: 890, #gens: 671, #ops: 0, parent:889]
---analyzing modificationPoint position: 342
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 0 not mutation generated in  secondaryMappers = (interpolator.secondaryMappers == null) ?  null : interpolator.secondaryMappers.c[...]
---analyzing modificationPoint position: 368
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch []
location: AbstractStepInterpolator.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `doFinalize()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 115, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `doFinalize()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 890, #gens: 672, #ops: 1, parent:889] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 890, errors: [AbstractStepInterpolator.java:549: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:549: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:549: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:549: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:549: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:549: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:549: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:551: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:551: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:552: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:552: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:552: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:552: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:552: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:552: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:552: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:552: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:552: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:553: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:553: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:553: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:553: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:553: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:553: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:553: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:553: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:553: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:553: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:553: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:553: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:554: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:554: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:554: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:554: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:554: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:555: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:555: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:556: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:557: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:557: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:555: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:558: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:558: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:558: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:559: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:559: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:560: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:560: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:560: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:560: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:560: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:572: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:572: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:572: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:572: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:576: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:576: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:580: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:580: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:585: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:585: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:590: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:590: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:592: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:592: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:594: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:594: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:594: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:594: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:596: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:596: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:607: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:607: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:607: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:607: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:607: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:607: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:609: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:612: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:612: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:614: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:614: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:616: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:618: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:618: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:618: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:653: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:653: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:656: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:656: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(445): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `softCurrentTime = java.lang.Double.NaN ` -topatch--> `doFinalize()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (889(f=2.0), 890(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (889(f=2.0), )
----------Running generation: 446, population size: 1

***** Generation 446 : 0
**Parent Variant: [Variant id: 891, #gens: 671, #ops: 0, parent:-]

--Child created id: 892
--Creating new operations for variant [Variant id: 892, #gens: 671, #ops: 0, parent:891]
---analyzing modificationPoint position: 650
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  c = a + lnm[1]
---analyzing modificationPoint position: 417
location: EquationsMapper.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 892, #gens: 670, #ops: 1, parent:891] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 892
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-892/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(446): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (equationData.length != dimension) { 	throw new org.apache.commons.math.exception.DimensionMismat[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (892(f=1.0), 891(f=2.0), )
Selected to next generation: IDs2--> (892(f=1.0), )
----------Running generation: 447, population size: 1

***** Generation 447 : 0
**Parent Variant: [Variant id: 893, #gens: 671, #ops: 0, parent:-]

--Child created id: 894
--Creating new operations for variant [Variant id: 894, #gens: 671, #ops: 0, parent:893]
---analyzing modificationPoint position: 514
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [f]
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
location: BaseAbstractUnivariateRealSolver.java187
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// Initialization. setup(maxEval, f, min, max, startValue) ` -topatch--> `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 187, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// Initialization. setup(maxEval, f, min, max, startValue) ` -topatch--> `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 894, #gens: 671, #ops: 1, parent:893] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 894
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-894/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(447): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// Initialization. setup(maxEval, f, min, max, startValue) ` -topatch--> `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (893(f=2.0), 894(f=2.0), )
Selected to next generation: IDs2--> (893(f=2.0), )
----------Running generation: 448, population size: 1

***** Generation 448 : 0
**Parent Variant: [Variant id: 895, #gens: 671, #ops: 0, parent:-]

--Child created id: 896
--Creating new operations for variant [Variant id: 896, #gens: 671, #ops: 0, parent:895]
---analyzing modificationPoint position: 547
location: FastMath.java1569
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * lnb) + (1.0 / 6.0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 896, #gens: 670, #ops: 1, parent:895] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 896, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(448): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * lnb) + (1.0 / 6.0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (895(f=2.0), 896(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (895(f=2.0), )
----------Running generation: 449, population size: 1

***** Generation 449 : 0
**Parent Variant: [Variant id: 897, #gens: 671, #ops: 0, parent:-]

--Child created id: 898
--Creating new operations for variant [Variant id: 898, #gens: 671, #ops: 0, parent:897]
---analyzing modificationPoint position: 492
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  evaluations.resetCount()
---analyzing modificationPoint position: 178
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 280
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 2 not mutation generated in  final boolean forward = t > equations.getTime()
---analyzing modificationPoint position: 552
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  // result = result + result * z; return result
---analyzing modificationPoint position: 121
location: BracketingNthOrderBrentSolver.java284
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 898, #gens: 670, #ops: 1, parent:897] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 898
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-898/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(449): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (898(f=1.0), 897(f=2.0), )
Selected to next generation: IDs2--> (898(f=1.0), )
----------Running generation: 450, population size: 1

***** Generation 450 : 0
**Parent Variant: [Variant id: 899, #gens: 671, #ops: 0, parent:-]

--Child created id: 900
--Creating new operations for variant [Variant id: 900, #gens: 671, #ops: 0, parent:899]
---analyzing modificationPoint position: 323
location: AbstractStepInterpolator.java183
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 900, #gens: 670, #ops: 1, parent:899] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 900
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-900/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(450): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `secondaryMappers = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (900(f=1.0), 899(f=2.0), )
Selected to next generation: IDs2--> (900(f=1.0), )
----------Running generation: 451, population size: 1

***** Generation 451 : 0
**Parent Variant: [Variant id: 901, #gens: 671, #ops: 0, parent:-]

--Child created id: 902
--Creating new operations for variant [Variant id: 902, #gens: 671, #ops: 0, parent:901]
---analyzing modificationPoint position: 655
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  d = -((c - a) - lnzb)
---analyzing modificationPoint position: 578
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 1 not mutation generated in  yb = (aa - ya) + ab
---analyzing modificationPoint position: 129
---modifPoint 2 not mutation generated in  final double yDot8 = yDotK[7][i]
---analyzing modificationPoint position: 597
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  if ((x >= org.apache.commons.math.util.FastMath.TWO_POWER_52) || (x <= (-org.apache.commons.math.uti[...]
---analyzing modificationPoint position: 30
location: AbstractIntegrator.java327
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 902, #gens: 670, #ops: 1, parent:901] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 902
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-902/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(451): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `// handle the first part of the step, up to the event for (final org.apache.commons.math.ode.samplin[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (902(f=1.0), 901(f=2.0), )
Selected to next generation: IDs2--> (902(f=1.0), )
----------Running generation: 452, population size: 1

***** Generation 452 : 0
**Parent Variant: [Variant id: 903, #gens: 671, #ops: 0, parent:-]

--Child created id: 904
--Creating new operations for variant [Variant id: 904, #gens: 671, #ops: 0, parent:903]
---analyzing modificationPoint position: 178
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 413
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  primary.computeDerivatives(t, primaryState, primaryStateDot)
---analyzing modificationPoint position: 467
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [this.forward]
--> var from patch: this.forward spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java229
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `this.forward = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 229, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `this.forward = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 904, #gens: 672, #ops: 1, parent:903] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 904
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-904/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(452): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `this.forward = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (904(f=1.0), 903(f=2.0), )
Selected to next generation: IDs2--> (904(f=1.0), )
----------Running generation: 453, population size: 1

***** Generation 453 : 0
**Parent Variant: [Variant id: 905, #gens: 671, #ops: 0, parent:-]

--Child created id: 906
--Creating new operations for variant [Variant id: 906, #gens: 671, #ops: 0, parent:905]
---analyzing modificationPoint position: 501
location: BaseAbstractUnivariateRealSolver.java65
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.DEFAULT_RELATIVE_ACCU[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 906, #gens: 670, #ops: 1, parent:905] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 906, errors: [BaseAbstractUnivariateRealSolver.java:69: error: variable functionValueAccuracy might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(453): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.DEFAULT_RELATIVE_ACCU[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (905(f=2.0), 906(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (905(f=2.0), )
----------Running generation: 454, population size: 1

***** Generation 454 : 0
**Parent Variant: [Variant id: 907, #gens: 671, #ops: 0, parent:-]

--Child created id: 908
--Creating new operations for variant [Variant id: 908, #gens: 671, #ops: 0, parent:907]
---analyzing modificationPoint position: 474
location: AbstractStepInterpolator.java301
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `h = globalCurrentTime - globalPreviousTime ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 908, #gens: 670, #ops: 1, parent:907] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 908
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-908/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(454): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `h = globalCurrentTime - globalPreviousTime ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (908(f=1.0), 907(f=2.0), )
Selected to next generation: IDs2--> (908(f=1.0), )
----------Running generation: 455, population size: 1

***** Generation 455 : 0
**Parent Variant: [Variant id: 909, #gens: 671, #ops: 0, parent:-]

--Child created id: 910
--Creating new operations for variant [Variant id: 910, #gens: 671, #ops: 0, parent:909]
---analyzing modificationPoint position: 328
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  reinitialize(y, forward, primaryMapper, secondaryMappers)
---analyzing modificationPoint position: 225
---modifPoint 1 not mutation generated in  return 8
---analyzing modificationPoint position: 45
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java173
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 173, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 910, #gens: 672, #ops: 1, parent:909] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 910
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-910/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(455): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (910(f=1.0), 909(f=2.0), )
Selected to next generation: IDs2--> (910(f=1.0), )
----------Running generation: 456, population size: 1

***** Generation 456 : 0
**Parent Variant: [Variant id: 911, #gens: 671, #ops: 0, parent:-]

--Child created id: 912
--Creating new operations for variant [Variant id: 912, #gens: 671, #ops: 0, parent:911]
---analyzing modificationPoint position: 463
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [h, globalCurrentTime, globalPreviousTime]
--> var from patch: h spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: globalPreviousTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java222
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryState = new double[primaryMapper.getDimension()] ` -topatch--> `h = globalCurrentTime - globalPreviousTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 222, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryState = new double[primaryMapper.getDimension()] ` -topatch--> `h = globalCurrentTime - globalPreviousTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 912, #gens: 671, #ops: 1, parent:911] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 912, errors: [AbstractStepInterpolator.java:334: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:334: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:334: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:334: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:334: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:334: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:334: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:336: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:336: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:337: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:337: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:337: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:337: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:337: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:337: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:337: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:337: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:337: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:338: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:338: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:338: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:338: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:338: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:338: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:338: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:338: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:338: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:338: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:338: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:338: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:339: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:339: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:339: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:339: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:339: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:340: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:340: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:341: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:342: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:342: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:340: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:343: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:343: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:343: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:344: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:344: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:345: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:345: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:345: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:345: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:345: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:357: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:357: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:357: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:357: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:361: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:361: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:365: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:365: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:370: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:370: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:375: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:375: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:377: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:377: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	       ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                               ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                                                 ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;
	    	^, AbstractStepInterpolator.java:385: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;
	    	                        ^, AbstractStepInterpolator.java:399: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:399: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:399: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:399: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	        ^, AbstractStepInterpolator.java:401: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	                                              ^, AbstractStepInterpolator.java:413: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:413: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	                                    ^, AbstractStepInterpolator.java:421: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:421: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(456): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedPrimaryState = new double[primaryMapper.getDimension()] ` -topatch--> `h = globalCurrentTime - globalPreviousTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (911(f=2.0), 912(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (911(f=2.0), )
----------Running generation: 457, population size: 1

***** Generation 457 : 0
**Parent Variant: [Variant id: 913, #gens: 671, #ops: 0, parent:-]

--Child created id: 914
--Creating new operations for variant [Variant id: 914, #gens: 671, #ops: 0, parent:913]
---analyzing modificationPoint position: 268
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [this.a]
--> var from patch: this.a spoon.support.reflect.code.CtFieldWriteImpl
location: EmbeddedRungeKuttaIntegrator.java264
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `this.a = a` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 264, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `this.a = a` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 914, #gens: 672, #ops: 1, parent:913] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 914, errors: [EmbeddedRungeKuttaIntegrator.java:264: error: cannot assign a value to final variable a
						} 						this.a = a;
						  						    ^]
Ingredient counter is Zero
---Undoing: gnrtn(457): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `this.a = a` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (913(f=2.0), 914(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (913(f=2.0), )
----------Running generation: 458, population size: 1

***** Generation 458 : 0
**Parent Variant: [Variant id: 915, #gens: 671, #ops: 0, parent:-]

--Child created id: 916
--Creating new operations for variant [Variant id: 916, #gens: 671, #ops: 0, parent:915]
---analyzing modificationPoint position: 29
location: AbstractIntegrator.java324
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = currentEvent.stop() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 916, #gens: 670, #ops: 1, parent:915] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 916
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-916/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(458): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `isLastStep = currentEvent.stop() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (916(f=1.0), 915(f=2.0), )
Selected to next generation: IDs2--> (916(f=1.0), )
----------Running generation: 459, population size: 1

***** Generation 459 : 0
**Parent Variant: [Variant id: 917, #gens: 671, #ops: 0, parent:-]

--Child created id: 918
--Creating new operations for variant [Variant id: 918, #gens: 671, #ops: 0, parent:917]
---analyzing modificationPoint position: 345
location: AbstractStepInterpolator.java250
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 918, #gens: 670, #ops: 1, parent:917] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 918
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-918/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(459): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = java.lang.Double.NaN ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (918(f=1.0), 917(f=2.0), )
Selected to next generation: IDs2--> (918(f=1.0), )
----------Running generation: 460, population size: 1

***** Generation 460 : 0
**Parent Variant: [Variant id: 919, #gens: 671, #ops: 0, parent:-]

--Child created id: 920
--Creating new operations for variant [Variant id: 920, #gens: 671, #ops: 0, parent:919]
---analyzing modificationPoint position: 164
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double[] yTmp = new double[currentState.length]
---analyzing modificationPoint position: 115
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  int end = nbPoints
---analyzing modificationPoint position: 350
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 2 not mutation generated in  finalized = false
---analyzing modificationPoint position: 608
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [count]
--> var from patch: count spoon.support.reflect.code.CtFieldWriteImpl
location: Incrementor.java159
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `count = 0 ` -topatch--> `count = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.util.Incrementor line: 159, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `count = 0 ` -topatch--> `count = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 920, #gens: 672, #ops: 1, parent:919] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 920
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-920/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(460): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `count = 0 ` -topatch--> `count = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (920(f=1.0), 919(f=2.0), )
Selected to next generation: IDs2--> (920(f=1.0), )
----------Running generation: 461, population size: 1

***** Generation 461 : 0
**Parent Variant: [Variant id: 921, #gens: 671, #ops: 0, parent:-]

--Child created id: 922
--Creating new operations for variant [Variant id: 922, #gens: 671, #ops: 0, parent:921]
---analyzing modificationPoint position: 27
---modifPoint 0 not mutation generated in  final double[] eventY = interpolator.getInterpolatedState()
---analyzing modificationPoint position: 371
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
vars from patch [primaryMapper]
--> var from patch: primaryMapper spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java118
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = null ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 118, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = null ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 922, #gens: 672, #ops: 1, parent:921] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 922
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-922/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(461): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentState = null ` -topatch--> `primaryMapper = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (922(f=1.0), 921(f=2.0), )
Selected to next generation: IDs2--> (922(f=1.0), )
----------Running generation: 462, population size: 1

***** Generation 462 : 0
**Parent Variant: [Variant id: 923, #gens: 671, #ops: 0, parent:-]

--Child created id: 924
--Creating new operations for variant [Variant id: 924, #gens: 671, #ops: 0, parent:923]
---analyzing modificationPoint position: 526
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x, y]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1479
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.NEGATIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	}  	if (y <[...] ` -topatch--> `double d = x - y` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1479, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.NEGATIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	}  	if (y <[...] ` -topatch--> `double d = x - y` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 924, #gens: 672, #ops: 1, parent:923] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 924, errors: [FastMath.java:3403: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:3403: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:3403: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:3403: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:3403: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:3403: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:3403: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:3403: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:3404: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:3404: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:3404: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:3404: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:3406: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:3407: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:3407: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:3408: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:3408: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:3408: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:3408: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:3409: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:3409: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:3409: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:3409: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:3409: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:3418: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:3418: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:3418: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:3418: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:3418: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:3418: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:3423: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:3425: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:3425: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:3425: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:3426: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:3426: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:3427: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:3427: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:3428: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:3428: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:3429: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:3429: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:3430: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:3430: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:3442: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:3442: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:3467: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:3467: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:3467: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:3467: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:3467: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:3467: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:3467: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:3468: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:3468: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^, FastMath.java:3468: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                    ^, FastMath.java:3468: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                              ^, FastMath.java:3468: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                            ^, FastMath.java:3468: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                   ^, FastMath.java:3468: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	                                                                    ^, FastMath.java:3470: error: illegal start of expression
	 * @param xa
	 ^, FastMath.java:3470: error: illegal start of expression
	 * @param xa
	   ^, FastMath.java:3471: error: not a statement
	 * 		number from which cosine is requested
	 ^, FastMath.java:3471: error: ';' expected
	 * 		number from which cosine is requested
	   		      ^, FastMath.java:3471: error: ';' expected
	 * 		number from which cosine is requested
	   		                 ^, FastMath.java:3471: error: ';' expected
	 * 		number from which cosine is requested
	   		                           ^, FastMath.java:3472: error: illegal start of expression
	 * @param xb
	   ^, FastMath.java:3473: error: not a statement
	 * 		extra bits for x (may be 0.0)
	 ^, FastMath.java:3473: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		     ^, FastMath.java:3473: error: not a statement
	 * 		extra bits for x (may be 0.0)
	   		      ^, FastMath.java:3473: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		          ^, FastMath.java:3473: error: '(' expected
	 * 		extra bits for x (may be 0.0)
	   		              ^, FastMath.java:3473: error: ')' expected
	 * 		extra bits for x (may be 0.0)
	   		                     ^, FastMath.java:3473: error: ';' expected
	 * 		extra bits for x (may be 0.0)
	   		                            ^, FastMath.java:3474: error: illegal start of expression
	 * @return cos(xa + xb)
	 ^, FastMath.java:3474: error: <identifier> expected
	 * @return cos(xa + xb)
	    ^, FastMath.java:3474: error: ';' expected
	 * @return cos(xa + xb)
	              ^, FastMath.java:3474: error: not a statement
	 * @return cos(xa + xb)
	                  ^, FastMath.java:3474: error: ';' expected
	 * @return cos(xa + xb)
	                      ^, FastMath.java:3475: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	^, FastMath.java:3475: error: illegal start of expression
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	        ^, FastMath.java:3475: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	              ^, FastMath.java:3475: error: '.class' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                  ^, FastMath.java:3475: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                    ^, FastMath.java:3475: error: ';' expected
	 */ 	private static double cosQ(double xa, double xb) { 		final double pi2a = 1.5707963267948966; 		final double pi2b = 6.123233995736766E-17; 		final double a = pi2a - xa; 		double b = -((a - pi2a) + xa); 		b += pi2b - xb; 		return org.apache.commons.math.util.FastMath.sinQ(a, b);} 	/**
	    	                                               ^, FastMath.java:3486: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	^, FastMath.java:3486: error: illegal start of expression
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	        ^, FastMath.java:3486: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	              ^, FastMath.java:3486: error: '.class' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                  ^, FastMath.java:3486: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                    ^, FastMath.java:3486: error: <identifier> expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                ^, FastMath.java:3486: error: not a statement
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                         ^, FastMath.java:3486: error: ';' expected
	 */ 	private static double tanQ(double xa, double xb, boolean cotanFlag) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		/* Compute the following sum:
	    	                                                                  ^, FastMath.java:3491: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:3493: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:3493: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:3493: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:3494: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:3494: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:3495: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^]
Ingredient counter is Zero
---Undoing: gnrtn(462): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (x == java.lang.Double.NEGATIVE_INFINITY) { 	if (y != y) { 		// y is NaN 		return y; 	}  	if (y <[...] ` -topatch--> `double d = x - y` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (923(f=2.0), 924(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (923(f=2.0), )
----------Running generation: 463, population size: 1

***** Generation 463 : 0
**Parent Variant: [Variant id: 925, #gens: 671, #ops: 0, parent:-]

--Child created id: 926
--Creating new operations for variant [Variant id: 926, #gens: 671, #ops: 0, parent:925]
---analyzing modificationPoint position: 406
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...]
---analyzing modificationPoint position: 548
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  z = (z * lnb) + 0.5
---analyzing modificationPoint position: 146
Templates availables28
Attempts Base Ingredients  1 total 28
vars from patch [theta]
--> var from patch: theta spoon.support.reflect.code.CtVariableReadImpl
location: DormandPrince853StepInterpolator.java363
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double theta2 = theta * theta ` -topatch--> `final double dot2 = theta * (2 - (3 * theta))` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator line: 363, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double theta2 = theta * theta ` -topatch--> `final double dot2 = theta * (2 - (3 * theta))` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 926, #gens: 671, #ops: 1, parent:925] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 926, errors: [DormandPrince853StepInterpolator.java:366: error: variable dot2 is already defined in method computeInterpolatedStateAndDerivatives(double,double)
		final double dot2 = theta * (2 - (3 * theta)); 		final double dot1 = 1 - twoTheta; 		final double dot2 = theta * (2 - (3 * theta));
		                                               		                                  		             ^, DormandPrince853StepInterpolator.java:368: error: cannot find symbol
		final double dot4 = theta2 * (3 + (theta * ((5 * theta) - 8)));
		                    ^
  symbol:   variable theta2
  location: class org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator, DormandPrince853StepInterpolator.java:369: error: cannot find symbol
		final double dot5 = theta2 * (3 + (theta * ((-12) + (theta * (15 - (6 * theta))))));
		                    ^
  symbol:   variable theta2
  location: class org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator, DormandPrince853StepInterpolator.java:370: error: cannot find symbol
		final double dot6 = (theta2 * theta) * (4 + (theta * ((-15) + (theta * (18 - (7 * theta))))));
		                     ^
  symbol:   variable theta2
  location: class org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator]
Ingredient counter is Zero
---Undoing: gnrtn(463): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double theta2 = theta * theta ` -topatch--> `final double dot2 = theta * (2 - (3 * theta))` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (925(f=2.0), 926(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (925(f=2.0), )
----------Running generation: 464, population size: 1

***** Generation 464 : 0
**Parent Variant: [Variant id: 927, #gens: 671, #ops: 0, parent:-]

--Child created id: 928
--Creating new operations for variant [Variant id: 928, #gens: 671, #ops: 0, parent:927]
---analyzing modificationPoint position: 158
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  interpolatedState[i] = currentState[i] -  (oneMinusThetaH * (v[0][i] -  (theta * (v[1][i] +  (theta [...]
---analyzing modificationPoint position: 157
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  for (int i = 0; i < interpolatedState.length; ++i) { 	interpolatedState[i] = currentState[i] -  	(on[...]
---analyzing modificationPoint position: 423
---modifPoint 2 not mutation generated in  return mappers
---analyzing modificationPoint position: 644
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 3 not mutation generated in  a = c
---analyzing modificationPoint position: 446
location: ExpandableStatefulODE.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = new org.apache.commons.math.ode.EquationsMapper(0, n) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 928, #gens: 670, #ops: 1, parent:927] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 928, errors: [ExpandableStatefulODE.java:81: error: variable primaryMapper might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(464): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = new org.apache.commons.math.ode.EquationsMapper(0, n) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (927(f=2.0), 928(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (927(f=2.0), )
----------Running generation: 465, population size: 1

***** Generation 465 : 0
**Parent Variant: [Variant id: 929, #gens: 671, #ops: 0, parent:-]

--Child created id: 930
--Creating new operations for variant [Variant id: 930, #gens: 671, #ops: 0, parent:929]
---analyzing modificationPoint position: 167
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  s = ((((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.K14_01 * yDotK[0][[...]
---analyzing modificationPoint position: 658
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  if (hiPrec != null) { 	hiPrec[0] = a; 	hiPrec[1] = b; }
---analyzing modificationPoint position: 216
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 2 not mutation generated in  for (int k = 0; k < v.length; ++k) { 	v[k] = new double[dimension]; }
---analyzing modificationPoint position: 129
---modifPoint 3 not mutation generated in  final double yDot8 = yDotK[7][i]
---analyzing modificationPoint position: 138
Templates availables27
Attempts Base Ingredients  1 total 27
---modifPoint 4 not mutation generated in  v[0][i] = (((((((org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.B_01 * yDot1)[...]
---analyzing modificationPoint position: 74
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [maxCheckInterval]
--> var from patch: maxCheckInterval spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java157
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (g0 == 0) { 	// excerpt from MATH-421 issue: 	// If an ODE solver is setup with an EventHandler t[...] ` -topatch--> `return maxCheckInterval` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 157, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (g0 == 0) { 	// excerpt from MATH-421 issue: 	// If an ODE solver is setup with an EventHandler t[...] ` -topatch--> `return maxCheckInterval` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 930, #gens: 672, #ops: 1, parent:929] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 930, errors: [EventState.java:157: error: incompatible types: unexpected return value
		g0 = handler.g(t0, interpolator.getInterpolatedState()); 		return maxCheckInterval;
		                                                         		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(465): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (g0 == 0) { 	// excerpt from MATH-421 issue: 	// If an ODE solver is setup with an EventHandler t[...] ` -topatch--> `return maxCheckInterval` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (929(f=2.0), 930(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (929(f=2.0), )
----------Running generation: 466, population size: 1

***** Generation 466 : 0
**Parent Variant: [Variant id: 931, #gens: 671, #ops: 0, parent:-]

--Child created id: 932
--Creating new operations for variant [Variant id: 932, #gens: 671, #ops: 0, parent:931]
---analyzing modificationPoint position: 312
location: AdaptiveStepsizeIntegrator.java162
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scalRelativeTolerance = relativeTolerance ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 932, #gens: 670, #ops: 1, parent:931] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 932
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-932/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(466): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scalRelativeTolerance = relativeTolerance ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (932(f=1.0), 931(f=2.0), )
Selected to next generation: IDs2--> (932(f=1.0), )
----------Running generation: 467, population size: 1

***** Generation 467 : 0
**Parent Variant: [Variant id: 933, #gens: 671, #ops: 0, parent:-]

--Child created id: 934
--Creating new operations for variant [Variant id: 934, #gens: 671, #ops: 0, parent:933]
---analyzing modificationPoint position: 328
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  reinitialize(y, forward, primaryMapper, secondaryMappers)
---analyzing modificationPoint position: 668
Templates availables57
Attempts Base Ingredients  1 total 57
---modifPoint 1 not mutation generated in  if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }
---analyzing modificationPoint position: 623
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  z = (z * epsilon) + 1.0
---analyzing modificationPoint position: 467
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [interpolatedSecondaryDerivatives]
--> var from patch: interpolatedSecondaryDerivatives spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java229
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `interpolatedSecondaryDerivatives = null` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 229, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `interpolatedSecondaryDerivatives = null` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 934, #gens: 671, #ops: 1, parent:933] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 934
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-934/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(467): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedSecondaryDerivatives = new double[secondaryMappers.length][] ` -topatch--> `interpolatedSecondaryDerivatives = null` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (934(f=1.0), 933(f=2.0), )
Selected to next generation: IDs2--> (934(f=1.0), )
----------Running generation: 468, population size: 1

***** Generation 468 : 0
**Parent Variant: [Variant id: 935, #gens: 671, #ops: 0, parent:-]

--Child created id: 936
--Creating new operations for variant [Variant id: 936, #gens: 671, #ops: 0, parent:935]
---analyzing modificationPoint position: 626
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch []
location: FastMath.java911
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB) ` -topatch--> `return java.lang.Math.random()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.FastMath line: 911, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB) ` -topatch--> `return java.lang.Math.random()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 936, #gens: 672, #ops: 1, parent:935] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 936, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(468): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB) ` -topatch--> `return java.lang.Math.random()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (935(f=2.0), 936(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (935(f=2.0), )
----------Running generation: 469, population size: 1

***** Generation 469 : 0
**Parent Variant: [Variant id: 937, #gens: 671, #ops: 0, parent:-]

--Child created id: 938
--Creating new operations for variant [Variant id: 938, #gens: 671, #ops: 0, parent:937]
---analyzing modificationPoint position: 536
---modifPoint 0 not mutation generated in  double lnb = lns[1]
---analyzing modificationPoint position: 129
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  final double yDot8 = yDotK[7][i]
---analyzing modificationPoint position: 566
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1233
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Remez polynomial evaluation */ double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[[...] ` -topatch--> `/* Based on the exponent, get a shifted copy of recip2pi */ long shpi0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1233, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Remez polynomial evaluation */ double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[[...] ` -topatch--> `/* Based on the exponent, get a shifted copy of recip2pi */ long shpi0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 938, #gens: 671, #ops: 1, parent:937] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 938, errors: [FastMath.java:1948: error: illegal start of expression
	 * Compute log(1 + x).
	 ^, FastMath.java:1948: error: ';' expected
	 * Compute log(1 + x).
	          ^, FastMath.java:1948: error: <identifier> expected
	 * Compute log(1 + x).
	                      ^, FastMath.java:1950: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:1950: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:1951: error: not a statement
	 * 		a number
	 ^, FastMath.java:1951: error: ';' expected
	 * 		a number
	   		 ^, FastMath.java:1952: error: <identifier> expected
	 * @return log(1 + x)
	    ^, FastMath.java:1952: error: not a statement
	 * @return log(1 + x)
	 ^, FastMath.java:1952: error: ';' expected
	 * @return log(1 + x)
	              ^, FastMath.java:1952: error: not a statement
	 * @return log(1 + x)
	                 ^, FastMath.java:1952: error: ';' expected
	 * @return log(1 + x)
	                    ^, FastMath.java:1953: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	^, FastMath.java:1953: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	       ^, FastMath.java:1953: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	             ^, FastMath.java:1953: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                           ^, FastMath.java:1953: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                ^, FastMath.java:1953: error: not a statement
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                        ^, FastMath.java:1953: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                         ^, FastMath.java:1962: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	^, FastMath.java:1962: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	       ^, FastMath.java:1962: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	             ^, FastMath.java:1962: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                           ^, FastMath.java:1962: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                ^, FastMath.java:1962: error: not a statement
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                        ^, FastMath.java:1962: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                         ^, FastMath.java:1980: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	^, FastMath.java:1980: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	       ^, FastMath.java:1980: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	             ^, FastMath.java:1980: error: '.class' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                ^, FastMath.java:1980: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                    ^, FastMath.java:1980: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                              ^, FastMath.java:1988: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	^, FastMath.java:1988: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	       ^, FastMath.java:1988: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	             ^, FastMath.java:1988: error: '.class' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                ^, FastMath.java:1988: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                 ^, FastMath.java:1988: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                           ^, FastMath.java:2003: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	^, FastMath.java:2003: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	        ^, FastMath.java:2003: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	              ^, FastMath.java:2003: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                               ^, FastMath.java:2003: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                    ^, FastMath.java:2003: error: not a statement
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                            ^, FastMath.java:2003: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                             ^, FastMath.java:2004: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2004: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2004: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2004: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2004: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2004: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2004: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2004: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2005: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2005: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2005: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2005: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2007: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2008: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2008: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2009: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2009: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2009: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2009: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2010: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2010: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2010: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2010: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2010: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2019: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2019: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2019: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2019: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2019: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2019: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2024: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2026: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2026: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2026: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2027: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2027: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2028: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2028: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2029: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2029: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2030: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2030: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2031: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2031: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2043: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2043: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2068: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2068: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2068: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2068: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2068: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2068: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2068: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2069: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2069: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^]
Ingredient counter is Zero
---Undoing: gnrtn(469): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `/* Remez polynomial evaluation */ double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[[...] ` -topatch--> `/* Based on the exponent, get a shifted copy of recip2pi */ long shpi0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (937(f=2.0), 938(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (937(f=2.0), )
----------Running generation: 470, population size: 1

***** Generation 470 : 0
**Parent Variant: [Variant id: 939, #gens: 671, #ops: 0, parent:-]

--Child created id: 940
--Creating new operations for variant [Variant id: 940, #gens: 671, #ops: 0, parent:939]
---analyzing modificationPoint position: 115
---modifPoint 0 not mutation generated in  int end = nbPoints
---analyzing modificationPoint position: 128
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 1 not mutation generated in  final double yDot7 = yDotK[6][i]
---analyzing modificationPoint position: 147
---modifPoint 2 not mutation generated in  final double dot1 = 1 - twoTheta
---analyzing modificationPoint position: 52
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [g0Positive, increasing]
--> var from patch: g0Positive spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: increasing spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java307
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `g0Positive = increasing` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 307, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `g0Positive = increasing` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 940, #gens: 672, #ops: 1, parent:939] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 940
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-940/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(470): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `g0Positive = g0 >= 0 ` -topatch--> `g0Positive = increasing` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (940(f=1.0), 939(f=2.0), )
Selected to next generation: IDs2--> (940(f=1.0), )
----------Running generation: 471, population size: 1

***** Generation 471 : 0
**Parent Variant: [Variant id: 941, #gens: 671, #ops: 0, parent:-]

--Child created id: 942
--Creating new operations for variant [Variant id: 942, #gens: 671, #ops: 0, parent:941]
---analyzing modificationPoint position: 634
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x, hiPrec]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: hiPrec spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1216
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnzb = 0.0 ` -topatch--> `// tanh(x) = (exp(2x) - 1) / (exp(2x) + 1) org.apache.commons.math.util.FastMath.exp(x * 2.0, 0.0, h[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1216, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnzb = 0.0 ` -topatch--> `// tanh(x) = (exp(2x) - 1) / (exp(2x) + 1) org.apache.commons.math.util.FastMath.exp(x * 2.0, 0.0, h[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 942, #gens: 672, #ops: 1, parent:941] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 942, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(471): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double lnzb = 0.0 ` -topatch--> `// tanh(x) = (exp(2x) - 1) / (exp(2x) + 1) org.apache.commons.math.util.FastMath.exp(x * 2.0, 0.0, h[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (941(f=2.0), 942(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (941(f=2.0), )
----------Running generation: 472, population size: 1

***** Generation 472 : 0
**Parent Variant: [Variant id: 943, #gens: 671, #ops: 0, parent:-]

--Child created id: 944
--Creating new operations for variant [Variant id: 944, #gens: 671, #ops: 0, parent:943]
---analyzing modificationPoint position: 315
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  if (initialStep > 0) { 	// use the user provided value 	return forward ? initialStep : -initialStep;[...]
---analyzing modificationPoint position: 291
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 1 not mutation generated in  double hNew = 0
---analyzing modificationPoint position: 655
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  d = -((c - a) - lnzb)
---analyzing modificationPoint position: 250
location: EmbeddedRungeKuttaIntegrator.java127
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the default values of the algorithm control parameters setSafety(0.9) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 944, #gens: 670, #ops: 1, parent:943] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 944
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-944/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(472): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// set the default values of the algorithm control parameters setSafety(0.9) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (944(f=1.0), 943(f=2.0), )
Selected to next generation: IDs2--> (944(f=1.0), )
----------Running generation: 473, population size: 1

***** Generation 473 : 0
**Parent Variant: [Variant id: 945, #gens: 671, #ops: 0, parent:-]

--Child created id: 946
--Creating new operations for variant [Variant id: 946, #gens: 671, #ops: 0, parent:945]
---analyzing modificationPoint position: 521
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  xInt = org.apache.commons.math.util.Precision.SGN_MASK - xInt
---analyzing modificationPoint position: 495
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 1 not mutation generated in  return relativeAccuracy
---analyzing modificationPoint position: 348
Templates availables76
Attempts Base Ingredients  1 total 76
Attempts Base Ingredients  2 total 76
vars from patch [currentState, y]
--> var from patch: currentState spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: AbstractStepInterpolator.java253
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `currentState = y` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 253, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `currentState = y` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 946, #gens: 671, #ops: 1, parent:945] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 946
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-946/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(473): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedTime = java.lang.Double.NaN ` -topatch--> `currentState = y` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (946(f=1.0), 945(f=2.0), )
Selected to next generation: IDs2--> (946(f=1.0), )
----------Running generation: 474, population size: 1

***** Generation 474 : 0
**Parent Variant: [Variant id: 947, #gens: 671, #ops: 0, parent:-]

--Child created id: 948
--Creating new operations for variant [Variant id: 948, #gens: 671, #ops: 0, parent:947]
---analyzing modificationPoint position: 438
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [globalPreviousTime, globalCurrentTime]
--> var from patch: globalPreviousTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java404
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h ` -topatch--> `globalPreviousTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 404, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h ` -topatch--> `globalPreviousTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 948, #gens: 672, #ops: 1, parent:947] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 948
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-948/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(474): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h ` -topatch--> `globalPreviousTime = globalCurrentTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (948(f=1.0), 947(f=2.0), )
Selected to next generation: IDs2--> (948(f=1.0), )
----------Running generation: 475, population size: 1

***** Generation 475 : 0
**Parent Variant: [Variant id: 949, #gens: 671, #ops: 0, parent:-]

--Child created id: 950
--Creating new operations for variant [Variant id: 950, #gens: 671, #ops: 0, parent:949]
---analyzing modificationPoint position: 19
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [eventsStates]
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java311
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// handle the chronologically first event final java.util.Iterator<org.apache.commons.math.ode.event[...] ` -topatch--> `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 311, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// handle the chronologically first event final java.util.Iterator<org.apache.commons.math.ode.event[...] ` -topatch--> `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 950, #gens: 672, #ops: 1, parent:949] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 950
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-950/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(475): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// handle the chronologically first event final java.util.Iterator<org.apache.commons.math.ode.event[...] ` -topatch--> `eventsStates = new java.util.ArrayList<org.apache.commons.math.ode.events.EventState>()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (950(f=1.0), 949(f=2.0), )
Selected to next generation: IDs2--> (950(f=1.0), )
----------Running generation: 476, population size: 1

***** Generation 476 : 0
**Parent Variant: [Variant id: 951, #gens: 671, #ops: 0, parent:-]

--Child created id: 952
--Creating new operations for variant [Variant id: 952, #gens: 671, #ops: 0, parent:951]
---analyzing modificationPoint position: 570
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  ab = ((ya * xb) + (yb * xa)) + (yb * xb)
---analyzing modificationPoint position: 480
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [firstIndex]
--> var from patch: firstIndex spoon.support.reflect.code.CtVariableReadImpl
location: EquationsMapper.java50
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.firstIndex = firstIndex ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.EquationsMapper line: 50, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.firstIndex = firstIndex ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 952, #gens: 672, #ops: 1, parent:951] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 952, errors: [EquationsMapper.java:53: error: final parameter firstIndex may not be assigned
	 */ 	public EquationsMapper(final int firstIndex, final int dimension) { 		this.firstIndex = firstIndex; 		firstIndex = firstIndex; 		this.dimension = dimension;}
	    	                                                                    		                              		^]
Ingredient counter is Zero
---Undoing: gnrtn(476): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.firstIndex = firstIndex ` -topatch--> `firstIndex = firstIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (951(f=2.0), 952(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (951(f=2.0), )
----------Running generation: 477, population size: 1

***** Generation 477 : 0
**Parent Variant: [Variant id: 953, #gens: 671, #ops: 0, parent:-]

--Child created id: 954
--Creating new operations for variant [Variant id: 954, #gens: 671, #ops: 0, parent:953]
---analyzing modificationPoint position: 319
location: RungeKuttaStepInterpolator.java95
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotK = null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 954, #gens: 670, #ops: 1, parent:953] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 954
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-954/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(477): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yDotK = null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (954(f=1.0), 953(f=2.0), )
Selected to next generation: IDs2--> (954(f=1.0), )
----------Running generation: 478, population size: 1

***** Generation 478 : 0
**Parent Variant: [Variant id: 955, #gens: 671, #ops: 0, parent:-]

--Child created id: 956
--Creating new operations for variant [Variant id: 956, #gens: 671, #ops: 0, parent:955]
---analyzing modificationPoint position: 341
Templates availables131
Attempts Base Ingredients  1 total 131
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 0 not mutation generated in  primaryMapper = interpolator.primaryMapper
---analyzing modificationPoint position: 268
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [hNew, t, stepStart]
--> var from patch: hNew spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: stepStart spoon.support.reflect.code.CtFieldReadImpl
location: EmbeddedRungeKuttaIntegrator.java264
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `hNew = t - stepStart` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 264, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `hNew = t - stepStart` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 956, #gens: 672, #ops: 1, parent:955] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 956
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-956/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
-Killed id: pid->87184
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 87184
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(478): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `yTmp[j] = y[j] + (stepSize * sum) ` -topatch--> `hNew = t - stepStart` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (955(f=2.0), 956(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (955(f=2.0), )
----------Running generation: 479, population size: 1

***** Generation 479 : 0
**Parent Variant: [Variant id: 957, #gens: 671, #ops: 0, parent:-]

--Child created id: 958
--Creating new operations for variant [Variant id: 958, #gens: 671, #ops: 0, parent:957]
---analyzing modificationPoint position: 658
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 0 not mutation generated in  if (hiPrec != null) { 	hiPrec[0] = a; 	hiPrec[1] = b; }
---analyzing modificationPoint position: 296
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [safety]
--> var from patch: safety spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java227
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.shift() ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 227, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.shift() ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 958, #gens: 672, #ops: 1, parent:957] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 958
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-958/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(479): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `interpolator.shift() ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (958(f=1.0), 957(f=2.0), )
Selected to next generation: IDs2--> (958(f=1.0), )
----------Running generation: 480, population size: 1

***** Generation 480 : 0
**Parent Variant: [Variant id: 959, #gens: 671, #ops: 0, parent:-]

--Child created id: 960
--Creating new operations for variant [Variant id: 960, #gens: 671, #ops: 0, parent:959]
---analyzing modificationPoint position: 544
Templates availables275
Attempts Base Ingredients  1 total 275
---modifPoint 0 not mutation generated in  lnb = -((lna - aa) - ab)
---analyzing modificationPoint position: 222
Templates availables86
Attempts Base Ingredients  1 total 86
Attempts Base Ingredients  2 total 86
---modifPoint 1 not mutation generated in  yDotKLast = null
---analyzing modificationPoint position: 562
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 2 not mutation generated in  /* Need a more accurate epsilon, so adjust the division. */ double numer = bits & 0x3ffffffffffL
---analyzing modificationPoint position: 339
Templates availables76
Attempts Base Ingredients  1 total 76
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 3 not mutation generated in  forward = interpolator.forward
---analyzing modificationPoint position: 266
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [t, equations]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java261
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < k; ++l) { 	sum += a[k - 1][l] * yDotK[l][j]; } ` -topatch--> `final boolean forward = t > equations.getTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 261, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < k; ++l) { 	sum += a[k - 1][l] * yDotK[l][j]; } ` -topatch--> `final boolean forward = t > equations.getTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 960, #gens: 672, #ops: 1, parent:959] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 960, errors: [EmbeddedRungeKuttaIntegrator.java:264: error: variable forward is already defined in method integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double)
						} 						final boolean forward = t > equations.getTime();
						  						              ^]
Ingredient counter is Zero
---Undoing: gnrtn(480): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < k; ++l) { 	sum += a[k - 1][l] * yDotK[l][j]; } ` -topatch--> `final boolean forward = t > equations.getTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (959(f=2.0), 960(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (959(f=2.0), )
----------Running generation: 481, population size: 1

***** Generation 481 : 0
**Parent Variant: [Variant id: 961, #gens: 671, #ops: 0, parent:-]

--Child created id: 962
--Creating new operations for variant [Variant id: 962, #gens: 671, #ops: 0, parent:961]
---analyzing modificationPoint position: 287
---modifPoint 0 not mutation generated in  // set up an interpolator sharing the integrator arrays final org.apache.commons.math.ode.nonstiff.R[...]
---analyzing modificationPoint position: 211
---modifPoint 1 not mutation generated in  final int dimension = currentState.length
---analyzing modificationPoint position: 624
location: FastMath.java903
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * epsilon) + (-3.940510424527919E-20) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 962, #gens: 670, #ops: 1, parent:961] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 962, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(481): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `z = (z * epsilon) + (-3.940510424527919E-20) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (961(f=2.0), 962(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (961(f=2.0), )
----------Running generation: 482, population size: 1

***** Generation 482 : 0
**Parent Variant: [Variant id: 963, #gens: 671, #ops: 0, parent:-]

--Child created id: 964
--Creating new operations for variant [Variant id: 964, #gens: 671, #ops: 0, parent:963]
---analyzing modificationPoint position: 525
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [y, java.lang.Double.POSITIVE_INFINITY]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.POSITIVE_INFINITY spoon.support.reflect.code.CtFieldReadImpl
location: FastMath.java1467
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.POSITIVE_INFINITY) { 	if ((x * x) == 1.0) { 		return java.lang.Double.NaN;[...] ` -topatch--> `if (y < 0) { 	return java.lang.Double.POSITIVE_INFINITY; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1467, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.POSITIVE_INFINITY) { 	if ((x * x) == 1.0) { 		return java.lang.Double.NaN;[...] ` -topatch--> `if (y < 0) { 	return java.lang.Double.POSITIVE_INFINITY; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 964, #gens: 672, #ops: 1, parent:963] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 964, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(482): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (y == java.lang.Double.POSITIVE_INFINITY) { 	if ((x * x) == 1.0) { 		return java.lang.Double.NaN;[...] ` -topatch--> `if (y < 0) { 	return java.lang.Double.POSITIVE_INFINITY; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (963(f=2.0), 964(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (963(f=2.0), )
----------Running generation: 483, population size: 1

***** Generation 483 : 0
**Parent Variant: [Variant id: 965, #gens: 671, #ops: 0, parent:-]

--Child created id: 966
--Creating new operations for variant [Variant id: 966, #gens: 671, #ops: 0, parent:965]
---analyzing modificationPoint position: 104
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java201
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 201, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 966, #gens: 671, #ops: 1, parent:965] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 966, errors: [BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                          ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                            ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                   ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                         ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                     ^, BracketingNthOrderBrentSolver.java:252: error: ';' expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                       ^, BracketingNthOrderBrentSolver.java:252: error: illegal start of type
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                             ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                              ^, BracketingNthOrderBrentSolver.java:252: error: ';' expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                               ^, BracketingNthOrderBrentSolver.java:253: error: illegal start of type
				nextX = guessX(targetY, tmpX, y, start, end);
				      ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                      ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                            ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                               ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                                      ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                                           ^, BracketingNthOrderBrentSolver.java:255: error: illegal start of type
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:255: error: illegal start of type
				if (!((nextX > xA) && (nextX < xB))) {
				    ^, BracketingNthOrderBrentSolver.java:255: error: ')' expected
				if (!((nextX > xA) && (nextX < xB))) {
				     ^, BracketingNthOrderBrentSolver.java:255: error: ';' expected
				if (!((nextX > xA) && (nextX < xB))) {
				      ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				            ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				                 ^, BracketingNthOrderBrentSolver.java:255: error: illegal start of type
				if (!((nextX > xA) && (nextX < xB))) {
				                   ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				                     ^, BracketingNthOrderBrentSolver.java:255: error: ';' expected
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^, BracketingNthOrderBrentSolver.java:255: error: > expected
				if (!((nextX > xA) && (nextX < xB))) {
				                                 ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				                                  ^, BracketingNthOrderBrentSolver.java:255: error: '(' expected
				if (!((nextX > xA) && (nextX < xB))) {
				                                   ^, BracketingNthOrderBrentSolver.java:274: error: class, interface, or enum expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			  ^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(483): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (965(f=2.0), 966(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (965(f=2.0), )
----------Running generation: 484, population size: 1

***** Generation 484 : 0
**Parent Variant: [Variant id: 967, #gens: 671, #ops: 0, parent:-]

--Child created id: 968
--Creating new operations for variant [Variant id: 968, #gens: 671, #ops: 0, parent:967]
---analyzing modificationPoint position: 135
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 0 not mutation generated in  final double yDot14 = yDotKLast[0][i]
---analyzing modificationPoint position: 623
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  z = (z * epsilon) + 1.0
---analyzing modificationPoint position: 468
location: AbstractStepInterpolator.java230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 968, #gens: 670, #ops: 1, parent:967] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 968
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-968/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(484): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (968(f=1.0), 967(f=2.0), )
Selected to next generation: IDs2--> (968(f=1.0), )
----------Running generation: 485, population size: 1

***** Generation 485 : 0
**Parent Variant: [Variant id: 969, #gens: 671, #ops: 0, parent:-]

--Child created id: 970
--Creating new operations for variant [Variant id: 970, #gens: 671, #ops: 0, parent:969]
---analyzing modificationPoint position: 43
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  eventsStates.add(new org.apache.commons.math.ode.events.EventState(handler, maxCheckInterval, conver[...]
---analyzing modificationPoint position: 435
---modifPoint 1 not mutation generated in  return primaryMapper
---analyzing modificationPoint position: 462
location: AbstractStepInterpolator.java221
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedDerivatives = new double[dimension] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 970, #gens: 670, #ops: 1, parent:969] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 970
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-970/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2] ,[]
-Valid?: |false|2|2|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(485): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpolatedDerivatives = new double[dimension] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (969(f=2.0), 970(f=2.0), )
Selected to next generation: IDs2--> (969(f=2.0), )
----------Running generation: 486, population size: 1

***** Generation 486 : 0
**Parent Variant: [Variant id: 971, #gens: 671, #ops: 0, parent:-]

--Child created id: 972
--Creating new operations for variant [Variant id: 972, #gens: 671, #ops: 0, parent:971]
---analyzing modificationPoint position: 211
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final int dimension = currentState.length
---analyzing modificationPoint position: 212
Templates availables27
Attempts Base Ingredients  1 total 27
Cannot load class: org.apache.commons.math.ode.EquationsMapper[] with class loader sun.misc.Launcher$AppClassLoader@4e25154f
---modifPoint 1 not mutation generated in  yDotKLast = new double[3][]
---analyzing modificationPoint position: 294
location: EmbeddedRungeKuttaIntegrator.java221
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 972, #gens: 670, #ops: 1, parent:971] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 972
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-972/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(486): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStateInitialized(false) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (972(f=1.0), 971(f=2.0), )
Selected to next generation: IDs2--> (972(f=1.0), )
----------Running generation: 487, population size: 1

***** Generation 487 : 0
**Parent Variant: [Variant id: 973, #gens: 671, #ops: 0, parent:-]

--Child created id: 974
--Creating new operations for variant [Variant id: 974, #gens: 671, #ops: 0, parent:973]
---analyzing modificationPoint position: 410
---modifPoint 0 not mutation generated in  return searchStart
---analyzing modificationPoint position: 522
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 1 not mutation generated in  if (lower >= upper) { 	throw new org.apache.commons.math.exception.NumberIsTooLargeException(org.apa[...]
---analyzing modificationPoint position: 595
Templates availables198
Attempts Base Ingredients  1 total 198
---modifPoint 2 not mutation generated in  if (y == 0) { 	return x * y; }
---analyzing modificationPoint position: 256
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [safety]
--> var from patch: safety spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java235
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// first stage computeDerivatives(stepStart, y, yDotK[0]) ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 235, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// first stage computeDerivatives(stepStart, y, yDotK[0]) ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 974, #gens: 672, #ops: 1, parent:973] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 974
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-974/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(487): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// first stage computeDerivatives(stepStart, y, yDotK[0]) ` -topatch--> `safety = safety` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (974(f=1.0), 973(f=2.0), )
Selected to next generation: IDs2--> (974(f=1.0), )
----------Running generation: 488, population size: 1

***** Generation 488 : 0
**Parent Variant: [Variant id: 975, #gens: 671, #ops: 0, parent:-]

--Child created id: 976
--Creating new operations for variant [Variant id: 976, #gens: 671, #ops: 0, parent:975]
---analyzing modificationPoint position: 603
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  final boolean isEqual = org.apache.commons.math.util.FastMath.abs(xInt - yInt) <= maxUlps
---analyzing modificationPoint position: 243
location: EmbeddedRungeKuttaIntegrator.java318
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filteredNextIsLast) { 	hNew = t - stepStart; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 976, #gens: 670, #ops: 1, parent:975] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 976
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-976/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(488): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filteredNextIsLast) { 	hNew = t - stepStart; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (976(f=1.0), 975(f=2.0), )
Selected to next generation: IDs2--> (976(f=1.0), )
----------Running generation: 489, population size: 1

***** Generation 489 : 0
**Parent Variant: [Variant id: 977, #gens: 671, #ops: 0, parent:-]

--Child created id: 978
--Creating new operations for variant [Variant id: 978, #gens: 671, #ops: 0, parent:977]
---analyzing modificationPoint position: 51
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  if (state.evaluateStep(interpolator)) { 	// the event occurs during the current step 	occuringEvents[...]
---analyzing modificationPoint position: 18
location: AbstractIntegrator.java304
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// the event occurs during the current step occuringEvents.add(state) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 978, #gens: 670, #ops: 1, parent:977] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 978
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-978/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(489): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// the event occurs during the current step occuringEvents.add(state) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (978(f=1.0), 977(f=2.0), )
Selected to next generation: IDs2--> (978(f=1.0), )
----------Running generation: 490, population size: 1

***** Generation 490 : 0
**Parent Variant: [Variant id: 979, #gens: 671, #ops: 0, parent:-]

--Child created id: 980
--Creating new operations for variant [Variant id: 980, #gens: 671, #ops: 0, parent:979]
---analyzing modificationPoint position: 237
---modifPoint 0 not mutation generated in  final double scaledH = stepSize * factor
---analyzing modificationPoint position: 13
---modifPoint 1 not mutation generated in  return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) ||  (nextA[...]
---analyzing modificationPoint position: 272
location: EmbeddedRungeKuttaIntegrator.java274
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < stages; ++l) { 	sum += b[l] * yDotK[l][j]; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 980, #gens: 670, #ops: 1, parent:979] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 980
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-980/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(490): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < stages; ++l) { 	sum += b[l] * yDotK[l][j]; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (980(f=1.0), 979(f=2.0), )
Selected to next generation: IDs2--> (980(f=1.0), )
----------Running generation: 491, population size: 1

***** Generation 491 : 0
**Parent Variant: [Variant id: 981, #gens: 671, #ops: 0, parent:-]

--Child created id: 982
--Creating new operations for variant [Variant id: 982, #gens: 671, #ops: 0, parent:981]
---analyzing modificationPoint position: 423
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 0 not mutation generated in  return mappers
---analyzing modificationPoint position: 83
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [maxIterationCount, solver]
--> var from patch: maxIterationCount spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: solver spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java200
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analys[...] ` -topatch--> `final int remainingEval = maxIterationCount - solver.getEvaluations()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 200, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analys[...] ` -topatch--> `final int remainingEval = maxIterationCount - solver.getEvaluations()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 982, #gens: 671, #ops: 1, parent:981] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 982, errors: [EventState.java:266: error: 'else' without 'if'
			} else {
			  ^, EventState.java:275: error: <identifier> expected
		pendingEvent = false;
		            ^, EventState.java:276: error: <identifier> expected
		pendingEventTime = java.lang.Double.NaN;
		                ^, EventState.java:277: error: illegal start of type
		return false;
		^, EventState.java:277: error: ';' expected
		return false;
		      ^, EventState.java:286: error: class, interface, or enum expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	       ^, EventState.java:289: error: class, interface, or enum expected
	}
	^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                               ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                               ^, EventState.java:300: error: class, interface, or enum expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                             		        		^, EventState.java:302: error: class, interface, or enum expected
		if (pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence)) {
		^, EventState.java:305: error: class, interface, or enum expected
			g0Positive = increasing;
			^, EventState.java:306: error: class, interface, or enum expected
			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));
			^, EventState.java:307: error: class, interface, or enum expected
		} else {
		^, EventState.java:309: error: class, interface, or enum expected
			nextAction = org.apache.commons.math.ode.events.EventHandler.Action.CONTINUE;
			^, EventState.java:310: error: class, interface, or enum expected
		}
		^, EventState.java:318: error: class, interface, or enum expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	       ^, EventState.java:319: error: class, interface, or enum expected
	}
	^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	       ^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                           ^, EventState.java:331: error: class, interface, or enum expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                           ^, EventState.java:332: error: class, interface, or enum expected
		}
		^, EventState.java:336: error: class, interface, or enum expected
		}
		^, EventState.java:338: error: class, interface, or enum expected
		pendingEventTime = java.lang.Double.NaN;
		^, EventState.java:340: error: class, interface, or enum expected
		return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) || 
		^, EventState.java:343: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(491): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analys[...] ` -topatch--> `final int remainingEval = maxIterationCount - solver.getEvaluations()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (981(f=2.0), 982(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (981(f=2.0), )
----------Running generation: 492, population size: 1

***** Generation 492 : 0
**Parent Variant: [Variant id: 983, #gens: 671, #ops: 0, parent:-]

--Child created id: 984
--Creating new operations for variant [Variant id: 984, #gens: 671, #ops: 0, parent:983]
---analyzing modificationPoint position: 487
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  statesInitialized = false
---analyzing modificationPoint position: 333
location: AbstractStepInterpolator.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = interpolator.softPreviousTime ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 984, #gens: 670, #ops: 1, parent:983] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 984
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-984/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(492): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `softPreviousTime = interpolator.softPreviousTime ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (984(f=1.0), 983(f=2.0), )
Selected to next generation: IDs2--> (984(f=1.0), )
----------Running generation: 493, population size: 1

***** Generation 493 : 0
**Parent Variant: [Variant id: 985, #gens: 671, #ops: 0, parent:-]

--Child created id: 986
--Creating new operations for variant [Variant id: 986, #gens: 671, #ops: 0, parent:985]
---analyzing modificationPoint position: 397
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  while (!occuringEvents.isEmpty()) {  	// handle the chronologically first event 	final java.util.Ite[...]
---analyzing modificationPoint position: 152
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); }
---analyzing modificationPoint position: 467
Templates availables76
Attempts Base Ingredients  1 total 76
---modifPoint 2 not mutation generated in  interpolatedSecondaryDerivatives = new double[secondaryMappers.length][]
---analyzing modificationPoint position: 532
location: FastMath.java1537
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yb = y - ya ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 986, #gens: 670, #ops: 1, parent:985] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 986, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(493): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yb = y - ya ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (985(f=2.0), 986(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (985(f=2.0), )
----------Running generation: 494, population size: 1

***** Generation 494 : 0
**Parent Variant: [Variant id: 987, #gens: 671, #ops: 0, parent:-]

--Child created id: 988
--Creating new operations for variant [Variant id: 988, #gens: 671, #ops: 0, parent:987]
---analyzing modificationPoint position: 434
---modifPoint 0 not mutation generated in  return completeState
---analyzing modificationPoint position: 34
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [interpolator]
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java246
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (((!java.lang.Double.isNaN(previousEventTime)) &&  (org.apache.commons.math.util.FastMath.abs(roo[...] ` -topatch--> `final double t1 = interpolator.getCurrentTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 246, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (((!java.lang.Double.isNaN(previousEventTime)) &&  (org.apache.commons.math.util.FastMath.abs(roo[...] ` -topatch--> `final double t1 = interpolator.getCurrentTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 988, #gens: 672, #ops: 1, parent:987] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 988, errors: [EventState.java:245: error: variable t1 is already defined in method evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator)
				} 				final double t1 = interpolator.getCurrentTime();
				  				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(494): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (((!java.lang.Double.isNaN(previousEventTime)) &&  (org.apache.commons.math.util.FastMath.abs(roo[...] ` -topatch--> `final double t1 = interpolator.getCurrentTime()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (987(f=2.0), 988(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (987(f=2.0), )
----------Running generation: 495, population size: 1

***** Generation 495 : 0
**Parent Variant: [Variant id: 989, #gens: 671, #ops: 0, parent:-]

--Child created id: 990
--Creating new operations for variant [Variant id: 990, #gens: 671, #ops: 0, parent:989]
---analyzing modificationPoint position: 388
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  final double currentT = interpolator.getGlobalCurrentTime()
---analyzing modificationPoint position: 293
location: EmbeddedRungeKuttaIntegrator.java218
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.commons.math.ode.sampling.StepHandler handler : stepHandlers) { 	handler.reset(); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 990, #gens: 670, #ops: 1, parent:989] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 990
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-990/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(495): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.commons.math.ode.sampling.StepHandler handler : stepHandlers) { 	handler.reset(); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (990(f=1.0), 989(f=2.0), )
Selected to next generation: IDs2--> (990(f=1.0), )
----------Running generation: 496, population size: 1

***** Generation 496 : 0
**Parent Variant: [Variant id: 991, #gens: 671, #ops: 0, parent:-]

--Child created id: 992
--Creating new operations for variant [Variant id: 992, #gens: 671, #ops: 0, parent:991]
---analyzing modificationPoint position: 490
location: AbstractIntegrator.java94
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 992, #gens: 670, #ops: 1, parent:991] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 992
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-992/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(496): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resetEvaluations() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (992(f=1.0), 991(f=2.0), )
Selected to next generation: IDs2--> (992(f=1.0), )
----------Running generation: 497, population size: 1

***** Generation 497 : 0
**Parent Variant: [Variant id: 993, #gens: 671, #ops: 0, parent:-]

--Child created id: 994
--Creating new operations for variant [Variant id: 994, #gens: 671, #ops: 0, parent:993]
---analyzing modificationPoint position: 652
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  a = c
---analyzing modificationPoint position: 297
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 1 not mutation generated in  // iterate over step size, ensuring local normalized error is smaller than 1 double error = 10
---analyzing modificationPoint position: 34
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [handler, tb, interpolator]
--> var from patch: handler spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: tb spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: EventState.java246
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (((!java.lang.Double.isNaN(previousEventTime)) &&  (org.apache.commons.math.util.FastMath.abs(roo[...] ` -topatch--> `final double gb = handler.g(tb, interpolator.getInterpolatedState())` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 246, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (((!java.lang.Double.isNaN(previousEventTime)) &&  (org.apache.commons.math.util.FastMath.abs(roo[...] ` -topatch--> `final double gb = handler.g(tb, interpolator.getInterpolatedState())` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 994, #gens: 672, #ops: 1, parent:993] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 994, errors: [EventState.java:264: error: variable gb is already defined in method evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator)
				} 				final double gb = handler.g(tb, interpolator.getInterpolatedState());
				  				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(497): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (((!java.lang.Double.isNaN(previousEventTime)) &&  (org.apache.commons.math.util.FastMath.abs(roo[...] ` -topatch--> `final double gb = handler.g(tb, interpolator.getInterpolatedState())` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (993(f=2.0), 994(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (993(f=2.0), )
----------Running generation: 498, population size: 1

***** Generation 498 : 0
**Parent Variant: [Variant id: 995, #gens: 671, #ops: 0, parent:-]

--Child created id: 996
--Creating new operations for variant [Variant id: 996, #gens: 671, #ops: 0, parent:995]
---analyzing modificationPoint position: 197
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  double error2 = 0
---analyzing modificationPoint position: 499
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  // Perform computation. return doSolve()
---analyzing modificationPoint position: 391
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 2 not mutation generated in  for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]
---analyzing modificationPoint position: 13
---modifPoint 3 not mutation generated in  return (nextAction == org.apache.commons.math.ode.events.EventHandler.Action.RESET_STATE) ||  (nextA[...]
---analyzing modificationPoint position: 453
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 4 not mutation generated in  // safety checks if (primaryState.length != this.primaryState.length) { 	throw new org.apache.common[...]
---analyzing modificationPoint position: 344
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [h, globalCurrentTime, globalPreviousTime]
--> var from patch: h spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: globalCurrentTime spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: globalPreviousTime spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java249
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `h = globalCurrentTime - globalPreviousTime` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 249, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `h = globalCurrentTime - globalPreviousTime` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 996, #gens: 671, #ops: 1, parent:995] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 996, errors: [AbstractStepInterpolator.java:323: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:323: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:325: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:325: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:326: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:326: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:326: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:326: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:326: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:326: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:326: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:326: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:326: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:327: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:327: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:327: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:327: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:327: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:327: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:327: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:327: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:327: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:328: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:328: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:328: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:328: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:328: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:329: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:329: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:330: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:331: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:331: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:329: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:332: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:333: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:333: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:334: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:334: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:334: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:334: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:334: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:346: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:346: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:346: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:346: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:350: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:350: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:354: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:354: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:359: error: illegal start of expression
	 */ 	public double getPreviousTime() {
	    	^, AbstractStepInterpolator.java:359: error: ';' expected
	 */ 	public double getPreviousTime() {
	    	                             ^, AbstractStepInterpolator.java:368: error: illegal start of expression
	 */ 	public double getCurrentTime() {
	    	^, AbstractStepInterpolator.java:368: error: ';' expected
	 */ 	public double getCurrentTime() {
	    	                            ^, AbstractStepInterpolator.java:374: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;
	    	^, AbstractStepInterpolator.java:374: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;
	    	                                 ^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	^, AbstractStepInterpolator.java:379: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	       ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                               ^, AbstractStepInterpolator.java:379: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time;
	    	                                                 ^, AbstractStepInterpolator.java:385: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;
	    	^, AbstractStepInterpolator.java:385: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;
	    	                        ^, AbstractStepInterpolator.java:399: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:399: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:399: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:399: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:399: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	^, AbstractStepInterpolator.java:401: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	        ^, AbstractStepInterpolator.java:401: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() {
	    	                                              ^, AbstractStepInterpolator.java:413: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:413: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState();
	    	                                    ^, AbstractStepInterpolator.java:421: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:421: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState();
	    	                                          ^, AbstractStepInterpolator.java:429: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                             ^, AbstractStepInterpolator.java:429: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                             ^, AbstractStepInterpolator.java:437: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                   ^, AbstractStepInterpolator.java:437: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState();
	    	                                                                   ^, AbstractStepInterpolator.java:482: error: illegal start of expression
	public final void finalizeStep() {
	^, AbstractStepInterpolator.java:482: error: ';' expected
	public final void finalizeStep() {
	                              ^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	^, AbstractStepInterpolator.java:493: error: illegal start of expression
	protected void doFinalize() {
	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(498): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `globalCurrentTime = java.lang.Double.NaN ` -topatch--> `h = globalCurrentTime - globalPreviousTime` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (995(f=2.0), 996(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (995(f=2.0), )
----------Running generation: 499, population size: 1

***** Generation 499 : 0
**Parent Variant: [Variant id: 997, #gens: 671, #ops: 0, parent:-]

--Child created id: 998
--Creating new operations for variant [Variant id: 998, #gens: 671, #ops: 0, parent:997]
---analyzing modificationPoint position: 598
---modifPoint 0 not mutation generated in  return a
---analyzing modificationPoint position: 562
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  /* Need a more accurate epsilon, so adjust the division. */ double numer = bits & 0x3ffffffffffL
---analyzing modificationPoint position: 266
Templates availables85
Attempts Base Ingredients  1 total 85
vars from patch [stepStart, equations]
--> var from patch: stepStart spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: equations spoon.support.reflect.code.CtVariableReadImpl
location: EmbeddedRungeKuttaIntegrator.java261
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < k; ++l) { 	sum += a[k - 1][l] * yDotK[l][j]; } ` -topatch--> `// set up integration control objects stepStart = equations.getTime()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator line: 261, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < k; ++l) { 	sum += a[k - 1][l] * yDotK[l][j]; } ` -topatch--> `// set up integration control objects stepStart = equations.getTime()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 998, #gens: 672, #ops: 1, parent:997] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 998
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-998/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(499): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int l = 1; l < k; ++l) { 	sum += a[k - 1][l] * yDotK[l][j]; } ` -topatch--> `// set up integration control objects stepStart = equations.getTime()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (998(f=1.0), 997(f=2.0), )
Selected to next generation: IDs2--> (998(f=1.0), )
----------Running generation: 500, population size: 1

***** Generation 500 : 0
**Parent Variant: [Variant id: 999, #gens: 671, #ops: 0, parent:-]

--Child created id: 1000
--Creating new operations for variant [Variant id: 1000, #gens: 671, #ops: 0, parent:999]
---analyzing modificationPoint position: 618
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x, java.lang.Math.PI]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Math.PI spoon.support.reflect.code.CtFieldReadImpl
SameName: /**
 * Archimede's constant PI, ratio of circle circumference to diameter.
 */ public static final double PI = (1.05414357E8 / 3.3554432E7) + 1.984187159361081E-9;
Transforming shadowed variable in if (x == (-1.0)) {
	return (-java.lang.Math.PI) / 2.0;
}
location: FastMath.java884
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double fracPartB = org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac[...] ` -topatch--> `if (x == (-1.0)) { 	return (-java.lang.Math.PI) / 2.0; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 884, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double fracPartB = org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac[...] ` -topatch--> `if (x == (-1.0)) { 	return (-java.lang.Math.PI) / 2.0; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1000, #gens: 672, #ops: 1, parent:999] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1000, errors: [FastMath.java:2740: error: illegal start of expression
	 * Compute exp(x) - 1
	 ^, FastMath.java:2740: error: ';' expected
	 * Compute exp(x) - 1
	          ^, FastMath.java:2742: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2742: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2740: error: not a statement
	 * Compute exp(x) - 1
	                  ^, FastMath.java:2743: error: ';' expected
	 * 		number to compute shifted exponential
	   		      ^, FastMath.java:2743: error: ';' expected
	 * 		number to compute shifted exponential
	   		                 ^, FastMath.java:2743: error: ';' expected
	 * 		number to compute shifted exponential
	   		                                     ^, FastMath.java:2744: error: <identifier> expected
	 * @return exp(x) - 1
	    ^, FastMath.java:2744: error: ';' expected
	 * @return exp(x) - 1
	              ^, FastMath.java:2744: error: not a statement
	 * @return exp(x) - 1
	               ^, FastMath.java:2744: error: ';' expected
	 * @return exp(x) - 1
	                ^, FastMath.java:2745: error: illegal start of expression
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	^, FastMath.java:2745: error: illegal start of expression
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	       ^, FastMath.java:2745: error: ';' expected
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	             ^, FastMath.java:2745: error: '.class' expected
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	                                  ^, FastMath.java:2745: error: ';' expected
	 */ 	public static double expm1(double x) { 		return org.apache.commons.math.util.FastMath.expm1(x, null);} 	/**
	    	                                   ^, FastMath.java:2753: error: illegal start of expression
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	^, FastMath.java:2753: error: illegal start of expression
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	        ^, FastMath.java:2753: error: ';' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	              ^, FastMath.java:2753: error: '.class' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	                                   ^, FastMath.java:2753: error: ';' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	                                    ^, FastMath.java:2753: error: ';' expected
	 */ 	private static double expm1(double x, double[] hiPrecOut) { 		if ((x != x) || (x == 0.0)) { 			// NaN or zero
	    	                                                        ^, FastMath.java:2755: error: illegal start of expression
	 * Natural logarithm.
	 ^, FastMath.java:2755: error: ';' expected
	 * Natural logarithm.
	          ^, FastMath.java:2755: error: <identifier> expected
	 * Natural logarithm.
	                     ^, FastMath.java:2757: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2757: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2758: error: not a statement
	 * 		a double
	 ^, FastMath.java:2758: error: ';' expected
	 * 		a double
	   		 ^, FastMath.java:2758: error: not a statement
	 * 		a double
	   		  ^, FastMath.java:2758: error: ';' expected
	 * 		a double
	   		        ^, FastMath.java:2759: error: <identifier> expected
	 * @return log(x)
	    ^, FastMath.java:2759: error: ';' expected
	 * @return log(x)
	              ^, FastMath.java:2759: error: not a statement
	 * @return log(x)
	               ^, FastMath.java:2759: error: ';' expected
	 * @return log(x)
	                ^, FastMath.java:2760: error: illegal start of expression
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	^, FastMath.java:2760: error: illegal start of expression
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	       ^, FastMath.java:2760: error: ';' expected
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	             ^, FastMath.java:2760: error: illegal start of expression
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                         ^, FastMath.java:2760: error: ';' expected
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                              ^, FastMath.java:2760: error: not a statement
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                                      ^, FastMath.java:2760: error: ';' expected
	 */ 	public static double log(final double x) { 		return org.apache.commons.math.util.FastMath.log(x, null);} 	/**
	    	                                       ^, FastMath.java:2768: error: illegal start of expression
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	^, FastMath.java:2768: error: illegal start of expression
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	        ^, FastMath.java:2768: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	              ^, FastMath.java:2768: error: illegal start of expression
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                          ^, FastMath.java:2768: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                               ^, FastMath.java:2768: error: not a statement
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                                       ^, FastMath.java:2768: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                                        ^, FastMath.java:2768: error: ';' expected
	 */ 	private static double log(final double x, final double[] hiPrec) { 		if (x == 0) { 			// Handle special case of +0/-0
	    	                                                               ^, FastMath.java:2778: error: illegal start of expression
		 */ 		// y is the most significant 10 bits of the mantissa 		// double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L); 		// double epsilon = (x - y) / y; 		double epsilon = (bits & 0x3ffffffffffL) / (org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L)); 		double lnza = 0.0; 		double lnzb = 0.0; 		if (hiPrec != null) { 			/* split epsilon -> x */ 			double tmp = epsilon * org.apache.commons.math.util.FastMath.HEX_40000000; 			double aa = (epsilon + tmp) - tmp; 			double ab = epsilon - aa; 			double xa = aa; 			double xb = ab; 			/* Need a more accurate epsilon, so adjust the division. */ 			double numer = bits & 0x3ffffffffffL; 			double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L); 			aa = (numer - (xa * denom)) - (xb * denom); 			xb += aa / denom; 			/* Remez polynomial evaluation */ 			double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][0]; 			double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][1]; 			for (int i = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 2; i >= 0; i--) { 				/* Multiply a = y * x */ 				aa = ya * xa; 				ab = ((ya * xb) + (yb * xa)) + (yb * xb); 				/* split, so now y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab; 				/* Add  a = y + lnHiPrecCoef */ 				aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]; 				ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]; 				/* Split y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab;} 			/* Multiply a = y * x */ 			aa = ya * xa; 			ab = ((ya * xb) + (yb * xa)) + (yb * xb); 			/* split, so now lnz = a */ 			/* tmp = aa * 1073741824.0;
		 ^, FastMath.java:2778: error: illegal start of expression
		 */ 		// y is the most significant 10 bits of the mantissa 		// double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L); 		// double epsilon = (x - y) / y; 		double epsilon = (bits & 0x3ffffffffffL) / (org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L)); 		double lnza = 0.0; 		double lnzb = 0.0; 		if (hiPrec != null) { 			/* split epsilon -> x */ 			double tmp = epsilon * org.apache.commons.math.util.FastMath.HEX_40000000; 			double aa = (epsilon + tmp) - tmp; 			double ab = epsilon - aa; 			double xa = aa; 			double xb = ab; 			/* Need a more accurate epsilon, so adjust the division. */ 			double numer = bits & 0x3ffffffffffL; 			double denom = org.apache.commons.math.util.FastMath.TWO_POWER_52 + (bits & 0xffc0000000000L); 			aa = (numer - (xa * denom)) - (xb * denom); 			xb += aa / denom; 			/* Remez polynomial evaluation */ 			double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][0]; 			double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 1][1]; 			for (int i = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length - 2; i >= 0; i--) { 				/* Multiply a = y * x */ 				aa = ya * xa; 				ab = ((ya * xb) + (yb * xa)) + (yb * xb); 				/* split, so now y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab; 				/* Add  a = y + lnHiPrecCoef */ 				aa = ya + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]; 				ab = yb + org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]; 				/* Split y = a */ 				tmp = aa * org.apache.commons.math.util.FastMath.HEX_40000000; 				ya = (aa + tmp) - tmp; 				yb = (aa - ya) + ab;} 			/* Multiply a = y * x */ 			aa = ya * xa; 			ab = ((ya * xb) + (yb * xa)) + (yb * xb); 			/* split, so now lnz = a */ 			/* tmp = aa * 1073741824.0;
		  ^, FastMath.java:2781: error: illegal start of expression
			 */ 			lnza = aa + ab; 			lnzb = -((lnza - aa) - ab);} else { 			/* High precision not required.  Eval Remez polynomial
			 ^, FastMath.java:2781: error: illegal start of expression
			 */ 			lnza = aa + ab; 			lnzb = -((lnza - aa) - ab);} else { 			/* High precision not required.  Eval Remez polynomial
			  ^, FastMath.java:2781: error: 'else' without 'if'
			 */ 			lnza = aa + ab; 			lnzb = -((lnza - aa) - ab);} else { 			/* High precision not required.  Eval Remez polynomial
			    			                			                             ^, FastMath.java:2793: error: illegal start of expression
	 * Compute log(1 + x).
	 ^, FastMath.java:2793: error: ';' expected
	 * Compute log(1 + x).
	          ^, FastMath.java:2793: error: <identifier> expected
	 * Compute log(1 + x).
	                      ^, FastMath.java:2795: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2795: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2796: error: not a statement
	 * 		a number
	 ^, FastMath.java:2796: error: ';' expected
	 * 		a number
	   		 ^, FastMath.java:2797: error: <identifier> expected
	 * @return log(1 + x)
	    ^, FastMath.java:2797: error: not a statement
	 * @return log(1 + x)
	 ^, FastMath.java:2797: error: ';' expected
	 * @return log(1 + x)
	              ^, FastMath.java:2797: error: not a statement
	 * @return log(1 + x)
	                 ^, FastMath.java:2797: error: ';' expected
	 * @return log(1 + x)
	                    ^, FastMath.java:2798: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	^, FastMath.java:2798: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	       ^, FastMath.java:2798: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	             ^, FastMath.java:2798: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                           ^, FastMath.java:2798: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                ^, FastMath.java:2798: error: not a statement
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                        ^, FastMath.java:2798: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                         ^, FastMath.java:2807: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	^, FastMath.java:2807: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	       ^, FastMath.java:2807: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	             ^, FastMath.java:2807: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                           ^, FastMath.java:2807: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                ^, FastMath.java:2807: error: not a statement
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                        ^, FastMath.java:2807: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                         ^, FastMath.java:2825: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	^, FastMath.java:2825: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	       ^, FastMath.java:2825: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	             ^, FastMath.java:2825: error: '.class' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                ^, FastMath.java:2825: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                    ^, FastMath.java:2825: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                              ^, FastMath.java:2833: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	^, FastMath.java:2833: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	       ^, FastMath.java:2833: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	             ^, FastMath.java:2833: error: '.class' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                ^, FastMath.java:2833: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                 ^, FastMath.java:2833: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                           ^, FastMath.java:2848: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	^, FastMath.java:2848: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	        ^, FastMath.java:2848: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	              ^, FastMath.java:2848: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                               ^, FastMath.java:2848: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                    ^, FastMath.java:2848: error: not a statement
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(500): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double fracPartB = org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac[...] ` -topatch--> `if (x == (-1.0)) { 	return (-java.lang.Math.PI) / 2.0; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (999(f=2.0), 1000(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (999(f=2.0), )
----------Running generation: 501, population size: 1

***** Generation 501 : 0
**Parent Variant: [Variant id: 1001, #gens: 671, #ops: 0, parent:-]

--Child created id: 1002
--Creating new operations for variant [Variant id: 1002, #gens: 671, #ops: 0, parent:1001]
---analyzing modificationPoint position: 353
Templates availables76
Attempts Base Ingredients  1 total 76
vars from patch [interpolatedTime, java.lang.Double.NaN]
--> var from patch: interpolatedTime spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: AbstractStepInterpolator.java258
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 258, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1002, #gens: 671, #ops: 1, parent:1001] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1002, errors: [AbstractStepInterpolator.java:605: error: illegal start of expression
	 * Restrict step range to a limited part of the global step.
	 ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	           ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                      ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                           ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                        ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                               ^, AbstractStepInterpolator.java:605: error: ';' expected
	 * Restrict step range to a limited part of the global step.
	                                                           ^, AbstractStepInterpolator.java:607: error: illegal start of expression
	 * This method can be used to restrict a step and make it appear
	 ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	       ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                  ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                          ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                      ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                             ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                      ^, AbstractStepInterpolator.java:607: error: ';' expected
	 * This method can be used to restrict a step and make it appear
	                                                                ^, AbstractStepInterpolator.java:608: error: not a statement
	 * as if the original step was smaller. Calling this method
	   ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	     ^, AbstractStepInterpolator.java:608: error: '(' expected
	 * as if the original step was smaller. Calling this method
	        ^, AbstractStepInterpolator.java:608: error: ')' expected
	 * as if the original step was smaller. Calling this method
	            ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                          ^, AbstractStepInterpolator.java:608: error: variable declaration not allowed here
	 * as if the original step was smaller. Calling this method
	                      ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                      ^, AbstractStepInterpolator.java:608: error: not a statement
	 * as if the original step was smaller. Calling this method
	                                        ^, AbstractStepInterpolator.java:608: error: ';' expected
	 * as if the original step was smaller. Calling this method
	                                               ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	       ^, AbstractStepInterpolator.java:609: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	 ^, AbstractStepInterpolator.java:609: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	            ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	             ^, AbstractStepInterpolator.java:609: error: not a statement
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	               ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                        ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                  ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                              ^, AbstractStepInterpolator.java:609: error: illegal character: '#'
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                      ^, AbstractStepInterpolator.java:609: error: illegal start of type
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                      ^, AbstractStepInterpolator.java:609: error: ';' expected
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                       ^, AbstractStepInterpolator.java:609: error: illegal start of expression
	 * <em>only</em> changes the value returned by {@link #getPreviousTime()},
	                                                                         ^, AbstractStepInterpolator.java:610: error: illegal start of expression
	 * it does not change any other property
	 ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	     ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	              ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	                         ^, AbstractStepInterpolator.java:610: error: ';' expected
	 * it does not change any other property
	                                        ^, AbstractStepInterpolator.java:611: error: illegal start of type
	 * </p>
	    ^, AbstractStepInterpolator.java:611: error: illegal start of expression
	 * </p>
	     ^, AbstractStepInterpolator.java:612: error: illegal start of expression
	 *
	 ^, AbstractStepInterpolator.java:613: error: illegal start of expression
	 * @param softPreviousTime
	 ^, AbstractStepInterpolator.java:613: error: illegal start of expression
	 * @param softPreviousTime
	   ^, AbstractStepInterpolator.java:611: error: not a statement
	 * </p>
	      ^, AbstractStepInterpolator.java:614: error: ';' expected
	 * 		start of the restricted step
	   		     ^, AbstractStepInterpolator.java:614: error: ';' expected
	 * 		start of the restricted step
	   		            ^, AbstractStepInterpolator.java:614: error: ';' expected
	 * 		start of the restricted step
	   		                            ^, AbstractStepInterpolator.java:615: error: illegal start of type
	 * @since 2.2
	          ^, AbstractStepInterpolator.java:615: error: ';' expected
	 * @since 2.2
	             ^, AbstractStepInterpolator.java:616: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	  ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	   ^, AbstractStepInterpolator.java:616: error: illegal start of expression
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                               ^, AbstractStepInterpolator.java:616: error: ';' expected
	 */ 	public void setSoftPreviousTime(final double softPreviousTime) { 		this.softPreviousTime = softPreviousTime;} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:628: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:628: error: illegal start of expression
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	       ^, AbstractStepInterpolator.java:628: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                              ^, AbstractStepInterpolator.java:628: error: ';' expected
	 */ 	public void setSoftCurrentTime(final double softCurrentTime) { 		this.softCurrentTime = softCurrentTime;} 	/**
	    	                                                           ^, AbstractStepInterpolator.java:632: error: illegal start of expression
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:632: error: ';' expected
	 */ 	public double getGlobalPreviousTime() { 		return globalPreviousTime;} 	/**
	    	                                   ^, AbstractStepInterpolator.java:636: error: illegal start of expression
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:636: error: ';' expected
	 */ 	public double getGlobalCurrentTime() { 		return globalCurrentTime;} 	/**
	    	                                  ^, AbstractStepInterpolator.java:641: error: illegal start of expression
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	^, AbstractStepInterpolator.java:641: error: ';' expected
	 */ 	public double getPreviousTime() { 		return softPreviousTime;} 	/**
	    	                             ^, AbstractStepInterpolator.java:646: error: illegal start of expression
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	^, AbstractStepInterpolator.java:646: error: ';' expected
	 */ 	public double getCurrentTime() { 		return softCurrentTime;} 	/**
	    	                            ^, AbstractStepInterpolator.java:648: error: illegal start of expression
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	^, AbstractStepInterpolator.java:648: error: ';' expected
	 */ 	public double getInterpolatedTime() { 		return interpolatedTime;} 	/**
	    	                                 ^, AbstractStepInterpolator.java:650: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	^, AbstractStepInterpolator.java:650: error: illegal start of expression
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	       ^, AbstractStepInterpolator.java:650: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                               ^, AbstractStepInterpolator.java:650: error: ';' expected
	 */ 	public void setInterpolatedTime(final double time) { 		interpolatedTime = time; 		dirtyState = true;} 	/**
	    	                                                 ^, AbstractStepInterpolator.java:652: error: illegal start of expression
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	^, AbstractStepInterpolator.java:652: error: ';' expected
	 */ 	public boolean isForward() { 		return forward;} 	/**
	    	                        ^, AbstractStepInterpolator.java:663: error: illegal start of expression
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	^, AbstractStepInterpolator.java:663: error: class, interface, or enum expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                   ^, AbstractStepInterpolator.java:663: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                              ^, AbstractStepInterpolator.java:663: error: <identifier> expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                            ^, AbstractStepInterpolator.java:663: error: not a statement
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                    ^, AbstractStepInterpolator.java:663: error: ';' expected
	 */ 	protected abstract void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH); 	/**
	    	                                                                                                  ^, AbstractStepInterpolator.java:665: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	^, AbstractStepInterpolator.java:665: error: illegal start of expression
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	        ^, AbstractStepInterpolator.java:665: error: ';' expected
	 */ 	private void evaluateCompleteInterpolatedState() { 		// lazy evaluation of the state
	    	                                              ^, AbstractStepInterpolator.java:668: error: illegal start of expression
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	^, AbstractStepInterpolator.java:668: error: ';' expected
	 */ 	public double[] getInterpolatedState() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedState, interpolatedPrimaryState); 		return interpolatedPrimaryState;} 	/**
	    	                                    ^, AbstractStepInterpolator.java:670: error: illegal start of expression
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	^, AbstractStepInterpolator.java:670: error: ';' expected
	 */ 	public double[] getInterpolatedDerivatives() { 		evaluateCompleteInterpolatedState(); 		primaryMapper.extractEquationData(interpolatedDerivatives, interpolatedPrimaryDerivatives); 		return interpolatedPrimaryDerivatives;} 	/**
	    	                                          ^, AbstractStepInterpolator.java:672: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                             ^, AbstractStepInterpolator.java:672: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryState(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedState, interpolatedSecondaryState[index]); 		return interpolatedSecondaryState[index];} 	/**
	    	                                                             ^, AbstractStepInterpolator.java:674: error: illegal start of expression
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	^, AbstractStepInterpolator.java:674: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                   ^, AbstractStepInterpolator.java:674: error: ';' expected
	 */ 	public double[] getInterpolatedSecondaryDerivatives(final int index) { 		evaluateCompleteInterpolatedState(); 		secondaryMappers[index].extractEquationData(interpolatedDerivatives, interpolatedSecondaryDerivatives[index]); 		return interpolatedSecondaryDerivatives[index];} 	/**
	    	                                                                   ^, AbstractStepInterpolator.java:709: error: illegal start of expression
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	^, AbstractStepInterpolator.java:709: error: ';' expected
	 */ 	public final void finalizeStep() { 		if (!finalized) { 			doFinalize(); 			finalized = true;}} 	/**
	    	                              ^, AbstractStepInterpolator.java:712: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	^, AbstractStepInterpolator.java:712: error: illegal start of expression
	 */ 	protected void doFinalize() {} 	/**
	    	          ^]
Ingredient counter is Zero
---Undoing: gnrtn(501): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryMapper = primary ` -topatch--> `// we do NOT handle the interpolated time and state here interpolatedTime = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1001(f=2.0), 1002(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1001(f=2.0), )
----------Running generation: 502, population size: 1

***** Generation 502 : 0
**Parent Variant: [Variant id: 1003, #gens: 671, #ops: 0, parent:-]

--Child created id: 1004
--Creating new operations for variant [Variant id: 1004, #gens: 671, #ops: 0, parent:1003]
---analyzing modificationPoint position: 301
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  this.minReduction = minReduction
---analyzing modificationPoint position: 278
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 1 not mutation generated in  setEquations(equations)
---analyzing modificationPoint position: 553
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch []
location: FastMath.java1420
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] lns = new double[2] ` -topatch--> `double intPartB` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1420, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] lns = new double[2] ` -topatch--> `double intPartB` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1004, #gens: 671, #ops: 1, parent:1003] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1004, errors: [FastMath.java:1547: error: cannot find symbol
		final double lores = org.apache.commons.math.util.FastMath.log(x, lns);
		                                                                  ^
  symbol:   variable lns
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1552: error: cannot find symbol
		double lna = lns[0];
		             ^
  symbol:   variable lns
  location: class org.apache.commons.math.util.FastMath, FastMath.java:1553: error: cannot find symbol
		double lnb = lns[1];
		             ^
  symbol:   variable lns
  location: class org.apache.commons.math.util.FastMath, FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(502): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] lns = new double[2] ` -topatch--> `double intPartB` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1003(f=2.0), 1004(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1003(f=2.0), )
----------Running generation: 503, population size: 1

***** Generation 503 : 0
**Parent Variant: [Variant id: 1005, #gens: 671, #ops: 0, parent:-]

--Child created id: 1006
--Creating new operations for variant [Variant id: 1006, #gens: 671, #ops: 0, parent:1005]
---analyzing modificationPoint position: 559
Templates availables301
Attempts Base Ingredients  1 total 301
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java1222
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ab = epsilon - aa ` -topatch--> `/* Take absolute value of the input */ double xa = x` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.FastMath line: 1222, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ab = epsilon - aa ` -topatch--> `/* Take absolute value of the input */ double xa = x` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1006, #gens: 671, #ops: 1, parent:1005] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1006, errors: [FastMath.java:2252: error: illegal start of expression
	 * Compute log(1 + x).
	 ^, FastMath.java:2252: error: ';' expected
	 * Compute log(1 + x).
	          ^, FastMath.java:2252: error: <identifier> expected
	 * Compute log(1 + x).
	                      ^, FastMath.java:2254: error: illegal start of expression
	 * @param x
	 ^, FastMath.java:2254: error: illegal start of expression
	 * @param x
	   ^, FastMath.java:2255: error: not a statement
	 * 		a number
	 ^, FastMath.java:2255: error: ';' expected
	 * 		a number
	   		 ^, FastMath.java:2256: error: <identifier> expected
	 * @return log(1 + x)
	    ^, FastMath.java:2256: error: not a statement
	 * @return log(1 + x)
	 ^, FastMath.java:2256: error: ';' expected
	 * @return log(1 + x)
	              ^, FastMath.java:2256: error: not a statement
	 * @return log(1 + x)
	                 ^, FastMath.java:2256: error: ';' expected
	 * @return log(1 + x)
	                    ^, FastMath.java:2257: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	^, FastMath.java:2257: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	       ^, FastMath.java:2257: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	             ^, FastMath.java:2257: error: illegal start of expression
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                           ^, FastMath.java:2257: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                ^, FastMath.java:2257: error: not a statement
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                        ^, FastMath.java:2257: error: ';' expected
	 */ 	public static double log1p(final double x) { 		if (x == (-1)) { 			return x / 0.0;// -Infinity
	    	                                         ^, FastMath.java:2266: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	^, FastMath.java:2266: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	       ^, FastMath.java:2266: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	             ^, FastMath.java:2266: error: illegal start of expression
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                           ^, FastMath.java:2266: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                ^, FastMath.java:2266: error: not a statement
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                        ^, FastMath.java:2266: error: ';' expected
	 */ 	public static double log10(final double x) { 		final double[] hiPrec = new double[2]; 		final double lores = org.apache.commons.math.util.FastMath.log(x, hiPrec); 		if (java.lang.Double.isInfinite(lores)) { 			// don't allow this to be converted to NaN
	    	                                         ^, FastMath.java:2284: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	^, FastMath.java:2284: error: illegal start of expression
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	       ^, FastMath.java:2284: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	             ^, FastMath.java:2284: error: '.class' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                ^, FastMath.java:2284: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                    ^, FastMath.java:2284: error: ';' expected
	 */ 	public static double log(double base, double x) { 		return org.apache.commons.math.util.FastMath.log(x) / org.apache.commons.math.util.FastMath.log(base);} 	/**
	    	                                              ^, FastMath.java:2292: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	^, FastMath.java:2292: error: illegal start of expression
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	       ^, FastMath.java:2292: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	             ^, FastMath.java:2292: error: '.class' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                ^, FastMath.java:2292: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                 ^, FastMath.java:2292: error: ';' expected
	 */ 	public static double pow(double x, double y) { 		final double[] lns = new double[2]; 		if (y == 0.0) { 			return 1.0;} 		if (x != x) { 			// X is NaN
	    	                                           ^, FastMath.java:2307: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	^, FastMath.java:2307: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	        ^, FastMath.java:2307: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	              ^, FastMath.java:2307: error: illegal start of expression
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                               ^, FastMath.java:2307: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                    ^, FastMath.java:2307: error: not a statement
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                            ^, FastMath.java:2307: error: ';' expected
	 */ 	private static double polySine(final double x) { 		double x2 = x * x; 		double p = 2.7553817452272217E-6; 		p = (p * x2) + (-1.9841269659586505E-4); 		p = (p * x2) + 0.008333333333329196; 		p = (p * x2) + (-0.16666666666666666); 		// p *= x2; 		// p *= x; 		p = (p * x2) * x; 		return p;} 	/**
	    	                                             ^, FastMath.java:2308: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	 ^, FastMath.java:2308: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	           ^, FastMath.java:2308: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                   ^, FastMath.java:2308: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                      ^, FastMath.java:2308: error: illegal start of type
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                    ^, FastMath.java:2308: error: illegal start of expression
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                     ^, FastMath.java:2308: error: not a statement
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                ^, FastMath.java:2308: error: ';' expected
	 * Computes cos(x) - 1, where |x| < 1/16.
	                                      ^, FastMath.java:2309: error: illegal start of expression
	 *  Use a Remez polynomial approximation.
	 ^, FastMath.java:2309: error: ';' expected
	 *  Use a Remez polynomial approximation.
	       ^, FastMath.java:2309: error: ';' expected
	 *  Use a Remez polynomial approximation.
	               ^, FastMath.java:2309: error: ';' expected
	 *  Use a Remez polynomial approximation.
	                                        ^, FastMath.java:2311: error: <identifier> expected
	 * @param x
	           ^, FastMath.java:2312: error: ';' expected
	 * 		a number smaller than 1/16
	   		        ^, FastMath.java:2312: error: ';' expected
	 * 		a number smaller than 1/16
	   		                     ^, FastMath.java:2313: error: <identifier> expected
	 * @return cos(x) - 1
	    ^, FastMath.java:2313: error: ';' expected
	 * @return cos(x) - 1
	              ^, FastMath.java:2313: error: not a statement
	 * @return cos(x) - 1
	               ^, FastMath.java:2313: error: ';' expected
	 * @return cos(x) - 1
	                ^, FastMath.java:2314: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	^, FastMath.java:2314: error: illegal start of expression
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	        ^, FastMath.java:2314: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	              ^, FastMath.java:2314: error: '.class' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                        ^, FastMath.java:2314: error: ';' expected
	 */ 	private static double polyCosine(double x) { 		double x2 = x * x; 		double p = 2.479773539153719E-5; 		p = (p * x2) + (-0.0013888888689039883); 		p = (p * x2) + 0.041666666666621166; 		p = (p * x2) + (-0.49999999999999994); 		p *= x2; 		return p;} 	/**
	    	                                         ^, FastMath.java:2323: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	^, FastMath.java:2323: error: illegal start of expression
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	        ^, FastMath.java:2323: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	              ^, FastMath.java:2323: error: '.class' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                  ^, FastMath.java:2323: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                    ^, FastMath.java:2323: error: ';' expected
	 */ 	private static double sinQ(double xa, double xb) { 		int idx = ((int) ((xa * 8.0) + 0.5)); 		final double epsilon = xa - org.apache.commons.math.util.FastMath.EIGHTHS[idx];// idx*0.125; 		// Table lookups 		final double sintA = org.apache.commons.math.util.FastMath.SINE_TABLE_A[idx]; 		final double sintB = org.apache.commons.math.util.FastMath.SINE_TABLE_B[idx]; 		final double costA = org.apache.commons.math.util.FastMath.COSINE_TABLE_A[idx]; 		final double costB = org.apache.commons.math.util.FastMath.COSINE_TABLE_B[idx]; 		// Polynomial eval of sin(epsilon), cos(epsilon) 		double sinEpsA = epsilon; 		double sinEpsB = org.apache.commons.math.util.FastMath.polySine(epsilon); 		final double cosEpsA = 1.0; 		final double cosEpsB = org.apache.commons.math.util.FastMath.polyCosine(epsilon); 		// Split epsilon   xa + xb = x 		final double temp = sinEpsA * org.apache.commons.math.util.FastMath.HEX_40000000; 		double temp2 = (sinEpsA + temp) - temp; 		sinEpsB += sinEpsA - temp2; 		sinEpsA = temp2; 		/* Compute sin(x) by angle addition formula */ 		double result; 		/* Compute the following sum:
	    	                                               ^, FastMath.java:2328: error: ';' expected
		Ranges of elements
		         ^, FastMath.java:2330: error: ';' expected
		xxxtA   0            PI/2
		     ^, FastMath.java:2330: error: not a statement
		xxxtA   0            PI/2
		                       ^, FastMath.java:2330: error: ';' expected
		xxxtA   0            PI/2
		                         ^, FastMath.java:2331: error: not a statement
		xxxtB   -1.5e-9      1.5e-9
		        ^, FastMath.java:2331: error: ';' expected
		xxxtB   -1.5e-9      1.5e-9
		               ^, FastMath.java:2332: error: not a statement
		sinEpsA -0.0625      0.0625
		        ^, FastMath.java:2332: error: ';' expected
		sinEpsA -0.0625      0.0625
		               ^, FastMath.java:2333: error: not a statement
		sinEpsB -6e-11       6e-11
		        ^, FastMath.java:2333: error: ';' expected
		sinEpsB -6e-11       6e-11
		              ^, FastMath.java:2334: error: not a statement
		cosEpsA  1.0
		^, FastMath.java:2334: error: ';' expected
		cosEpsA  1.0
		       ^, FastMath.java:2335: error: not a statement
		cosEpsB  0           -0.0625
		^, FastMath.java:2335: error: ';' expected
		cosEpsB  0           -0.0625
		       ^, FastMath.java:2347: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		 ^, FastMath.java:2347: error: illegal start of expression
		 */ 		b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB); 		/* t = sintB;
		  ^, FastMath.java:2372: error: illegal start of expression
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	 ^, FastMath.java:2372: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	          ^, FastMath.java:2372: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                    ^, FastMath.java:2372: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                              ^, FastMath.java:2372: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                          ^, FastMath.java:2372: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                            ^, FastMath.java:2372: error: ';' expected
	 * Compute cosine in the first quadrant by subtracting input from PI/2 and
	                                                                    ^, FastMath.java:2373: error: not a statement
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	 ^, FastMath.java:2373: error: ';' expected
	 * then calling sinQ.  This is more accurate as the input approaches PI/2.
	       ^]
Ingredient counter is Zero
---Undoing: gnrtn(503): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double ab = epsilon - aa ` -topatch--> `/* Take absolute value of the input */ double xa = x` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1005(f=2.0), 1006(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1005(f=2.0), )
----------Running generation: 504, population size: 1

***** Generation 504 : 0
**Parent Variant: [Variant id: 1007, #gens: 671, #ops: 0, parent:-]

--Child created id: 1008
--Creating new operations for variant [Variant id: 1008, #gens: 671, #ops: 0, parent:1007]
---analyzing modificationPoint position: 136
Templates availables86
Attempts Base Ingredients  1 total 86
---modifPoint 0 not mutation generated in  final double yDot15 = yDotKLast[1][i]
---analyzing modificationPoint position: 35
Templates availables74
Attempts Base Ingredients  1 total 74
vars from patch [solver, t0]
--> var from patch: solver spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: t0 spoon.support.reflect.code.CtFieldReadImpl
location: EventState.java254
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...] ` -topatch--> `// excerpt from MATH-421 issue: // If an ODE solver is setup with an EventHandler that return STOP /[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.ode.events.EventState line: 254, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...] ` -topatch--> `// excerpt from MATH-421 issue: // If an ODE solver is setup with an EventHandler that return STOP /[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1008, #gens: 672, #ops: 1, parent:1007] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1008, errors: [EventState.java:266: error: 'else' without 'if'
			} else {
			  ^, EventState.java:286: error: illegal start of expression
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	^, EventState.java:286: error: ';' expected
	 */ 	public double getEventTime() { 		return pendingEvent ? 
	    	                          ^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	^, EventState.java:300: error: illegal start of expression
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	       ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                        ^, EventState.java:300: error: <identifier> expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                        ^, EventState.java:300: error: ';' expected
	 */ 	public void stepAccepted(final double t, final double[] y) { 		t0 = t; 		g0 = handler.g(t, y);
	    	                                                         ^, EventState.java:318: error: illegal start of expression
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	^, EventState.java:318: error: ';' expected
	 */ 	public boolean stop() { 		return nextAction == org.apache.commons.math.ode.events.EventHandler.Action.STOP;
	    	                   ^, EventState.java:331: error: illegal start of expression
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                    ^, EventState.java:331: error: <identifier> expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                    ^, EventState.java:331: error: ';' expected
	 */ 	public boolean reset(final double t, final double[] y) { 		if (!(pendingEvent && (org.apache.commons.math.util.FastMath.abs(pendingEventTime - t) <= convergence))) { 			return false;
	    	                                                     ^, EventState.java:345: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(504): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(previousEventTime) ||  (org.apache.commons.math.util.FastMath.abs(previou[...] ` -topatch--> `// excerpt from MATH-421 issue: // If an ODE solver is setup with an EventHandler that return STOP /[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1007(f=2.0), 1008(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1007(f=2.0), )
----------Running generation: 505, population size: 1

***** Generation 505 : 0
**Parent Variant: [Variant id: 1009, #gens: 671, #ops: 0, parent:-]

--Child created id: 1010
--Creating new operations for variant [Variant id: 1010, #gens: 671, #ops: 0, parent:1009]
---analyzing modificationPoint position: 425
Templates availables90
Attempts Base Ingredients  1 total 90
---modifPoint 0 not mutation generated in  if (y.length != equations.getDimension()) { 	throw new org.apache.commons.math.exception.DimensionMi[...]
---analyzing modificationPoint position: 421
---modifPoint 1 not mutation generated in  final org.apache.commons.math.ode.EquationsMapper[] mappers = new org.apache.commons.math.ode.Equati[...]
---analyzing modificationPoint position: 488
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [statesInitialized]
--> var from patch: statesInitialized spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractIntegrator.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = new org.apache.commons.math.util.Incrementor() ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 92, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = new org.apache.commons.math.util.Incrementor() ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1010, #gens: 672, #ops: 1, parent:1009] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1010
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-1010/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(505): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = new org.apache.commons.math.util.Incrementor() ` -topatch--> `statesInitialized = false` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1010(f=1.0), 1009(f=2.0), )
Selected to next generation: IDs2--> (1010(f=1.0), )
----------Running generation: 506, population size: 1

***** Generation 506 : 0
**Parent Variant: [Variant id: 1011, #gens: 671, #ops: 0, parent:-]

--Child created id: 1012
--Creating new operations for variant [Variant id: 1012, #gens: 671, #ops: 0, parent:1011]
---analyzing modificationPoint position: 301
Templates availables85
Attempts Base Ingredients  1 total 85
---modifPoint 0 not mutation generated in  this.minReduction = minReduction
---analyzing modificationPoint position: 468
Templates availables131
Attempts Base Ingredients  1 total 131
vars from patch [this.secondaryMappers]
--> var from patch: this.secondaryMappers spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractStepInterpolator.java230
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 230, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1012, #gens: 672, #ops: 1, parent:1011] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1012
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-1012/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2] ,[]
-Valid?: |false|1|2|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(506): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < secondaryMappers.length; ++i) { 	interpolatedSecondaryState[i] = new double[seco[...] ` -topatch--> `this.secondaryMappers = (secondaryMappers == null) ? null : secondaryMappers.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1012(f=1.0), 1011(f=2.0), )
Selected to next generation: IDs2--> (1012(f=1.0), )
----------Running generation: 507, population size: 1

***** Generation 507 : 0
**Parent Variant: [Variant id: 1013, #gens: 671, #ops: 0, parent:-]

--Child created id: 1014
--Creating new operations for variant [Variant id: 1014, #gens: 671, #ops: 0, parent:1013]
---analyzing modificationPoint position: 395
Templates availables90
Attempts Base Ingredients  1 total 90
vars from patch [eventsStates, state, interpolator]
--> var from patch: eventsStates spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: state spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: interpolator spoon.support.reflect.code.CtVariableReadImpl
location: AbstractIntegrator.java292
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.SortedSet<org.apache.commons.math.ode.events.EventState> occuringEvents = new java.util.Tr[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
---MP=org.apache.commons.math.ode.AbstractIntegrator line: 292, pointed element: CtForEachImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.SortedSet<org.apache.commons.math.ode.events.EventState> occuringEvents = new java.util.Tr[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 

--Summary Creation: for variant [Variant id: 1014, #gens: 672, #ops: 1, parent:1013] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1014
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-1014/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.ode.events.EventStateTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 2] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2490secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/variant-1014/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-44/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 3119] ,[]
-Valid?: |false|3|3119|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(507): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.SortedSet<org.apache.commons.math.ode.events.EventState> occuringEvents = new java.util.Tr[...] ` -topatch--> `for (org.apache.commons.math.ode.events.EventState state : eventsStates) { 	state.reinitializeBegin([...]` (spoon.support.reflect.code.CtForEachImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1013(f=2.0), 1014(f=3.0), )
Selected to next generation: IDs2--> (1013(f=2.0), )

 No more time for operating

 Max time reached 507
Time Repair Loop (s): 3839.001
generationsexecuted: 507
----SUMMARY_EXECUTION---
End Repair Search: NOT Found solution
All variants:
f 2.0, [Variant id: 1015, #gens: 671, #ops: 0, parent:-]
Number suspicious:1
Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=3839.001
NR_GENERATIONS=507
NR_RIGHT_COMPILATIONS=295
NR_FAILLING_COMPILATIONS=212
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=1
OUTPUT_STATUS=TIME_OUT
FAULT_LOCALIZATION=flacoco

Patch stats:

Storing ing JSON at /Users/marekmazur/astor/./output_astor/AstorMain-math-44//astor_output.json
astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":295,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","FAULT_LOCALIZATION":"flacoco","OUTPUT_STATUS":"TIME_OUT","NR_FAILLING_COMPILATIONS":212,"NR_GENERATIONS":507,"TOTAL_TIME":3839.001,"NR_FAILING_VALIDATION_PROCESS":1},"patches":[]}
Time Total(s): 4835.283
