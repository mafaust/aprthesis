[0] INFO ProjectConfiguration - Version of the JVM used: 1.8.0_202
[0] INFO main - Java version of the JDK used to run tests: 1.8.0_202
[0] INFO main - The compliance of the JVM is:  8
[0] INFO main - command line arguments: [-location  /Users/marekmazur/astor/defects4j/math-73  -mode  jgenprog  -package  org.apache.commons  -jvm4testexecution  /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin  -failing  org.apache.commons.math.analysis.solvers.BrentSolverTest  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -stopfirst  true  -dependencies  /Users/marekmazur/astor/examples/libs/junit-4.4.jar  -maxgen  1000000  -seed  10  -maxtime  60  -scope  local  -stopfirst  true  -flthreshold  0  -population  1  -faultlocalization  flacoco]
[1] INFO AstorMain - Running Astor on a JDK at /Users/marekmazur/Library/Java/JavaVirtualMachines/openjdk-19.0.1/Contents/Home
Source folders: [/Users/marekmazur/astor/defects4j/math-73/src/main/java]
Source Test folders: [/Users/marekmazur/astor/defects4j/math-73/src/test]
---- Creating spoon model
Creating model,  Code location from working folder: /Users/marekmazur/astor/defects4j/math-73/src/main/java
building model: /Users/marekmazur/astor/defects4j/math-73/src/main/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/Users/marekmazur/astor/examples/libs/junit-4.4.jar]
Spoon Model built from location: /Users/marekmazur/astor/defects4j/math-73/src/main/java
Number of CtTypes created: 399
Running chosen test detection strategy: CLASSLOADER
Test retrieved from classes: 231
Running Flacoco...
Running spectrum-based fault localization...
FlacocoConfig{workspace='/Users/marekmazur/astor/.', projectPath='/Users/marekmazur/astor/defects4j/math-73', srcJavaDir=[/Users/marekmazur/astor/defects4j/math-73/src/main/java], srcTestDir=[/Users/marekmazur/astor/defects4j/math-73/src/test], binJavaDir=[/Users/marekmazur/astor/defects4j/math-73/target/classes], binTestDir=[/Users/marekmazur/astor/defects4j/math-73/target/test-classes], classpath='/Users/marekmazur/astor/examples/libs/junit-4.4.jar', customJUnitClasspath='null', customJacocoClasspath='null', mavenHome='/Users/marekmazur/.m2/repository/', coverTests=false, testRunnerVerbose=false, testRunnerTimeoutInMs=3600000, testRunnerJVMArgs='null', threshold=0.0, includeZeros=false, complianceLevel=8, testDetectionStrategy=CLASSLOADER, ignoredTests=[], jUnit4Tests=[org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt, org.apache.commons.math.linear.QRSolverTest#testOverdetermined, org.apache.commons.math.fraction.BigFractionTest#testPow, org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, org.apache.commons.math.geometry.RotationTest#testCompose, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, org.apache.commons.math.linear.RealMatrixImplTest#testAdd, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.StatUtilsTest#testStats, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, org.apache.commons.math.distribution.TDistributionTest#testConsistency, org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, org.apache.commons.math.random.RandomAdaptorTest#testConfig, org.apache.commons.math.complex.ComplexTest#testConstructor, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, org.apache.commons.math.random.ValueServerTest#testReplay, org.apache.commons.math.util.MathUtilsTest#testSignInt, org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, org.apache.commons.math.fraction.FractionTest#testDoubleValue, org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, org.apache.commons.math.geometry.Vector3DTest#testAdd, org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, org.apache.commons.math.stat.FrequencyTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, org.apache.commons.math.linear.EigenSolverTest#testSolve, org.apache.commons.math.complex.ComplexTest#testTan, org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, org.apache.commons.math.util.BigRealTest#testConstructor, org.apache.commons.math.linear.AbstractRealVectorTest#testSparseIterator, org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testDeprecated, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, org.apache.commons.math.geometry.Vector3DTest#testNorm, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, org.apache.commons.math.complex.ComplexTest#testCosNaN, org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, org.apache.commons.math.genetics.RandomKeyTest#testIsSame, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.random.RandomDataTest#testNextUniform, org.apache.commons.math.fraction.FractionTest#testCompareTo, org.apache.commons.math.linear.RealMatrixImplTest#testSetRow, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, org.apache.commons.math.util.BigRealTest#testCompareTo, org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, org.apache.commons.math.linear.RealMatrixImplTest#testToString, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testDivideInfinite, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, org.apache.commons.math.complex.ComplexTest#testSubtractNaN, org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadParameters, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, org.apache.commons.math.stat.FrequencyTest#testAddNonComparable, org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, org.apache.commons.math.complex.ComplexTest#testSinhNaN, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnVector, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal, org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, org.apache.commons.math.geometry.RotationTest#testAngles, org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, org.apache.commons.math.distribution.BetaDistributionTest#testDensity, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.geometry.Vector3DTest#testDistanceSq, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02, org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx03, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1, org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, org.apache.commons.math.complex.ComplexTest#testTanhCritical, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, org.apache.commons.math.geometry.Vector3DTest#testSubtract, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, org.apache.commons.math.random.RandomAdaptorTest#testNextSample, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetFunctionValueAccuracy, org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionFieldTest#testSerial, org.apache.commons.math.linear.SparseRealVectorTest#testMisc, org.apache.commons.math.special.GammaTest#testLogGammaPositive, org.apache.commons.math.stat.StatUtilsTest#testProduct, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.complex.ComplexTest#testCosInf, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, org.apache.commons.math.geometry.Vector3DTest#testNormalize, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction2, org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions, org.apache.commons.math.geometry.Vector3DTest#testAngular, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3MultipleRoot, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, org.apache.commons.math.util.MathUtilsTest#testGcd, org.apache.commons.math.distribution.GammaDistributionTest#testValues, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, org.apache.commons.math.stat.FrequencyTest#testAdd, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, org.apache.commons.math.random.RandomDataTest#testNextPoisson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testQuinticMin, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, org.apache.commons.math.distribution.CauchyDistributionTest#testScale, org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, org.apache.commons.math.fraction.BigFractionTest#testNegate, org.apache.commons.math.complex.ComplexTest#testExpInf, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.genetics.RandomKeyTest#testDecode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadParameters, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, org.apache.commons.math.linear.RealMatrixImplTest#testTrace, org.apache.commons.math.optimization.direct.NelderMeadTest#testMinimizeMaximize, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, org.apache.commons.math.linear.QRSolverTest#testSolve, org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, org.apache.commons.math.util.TransformerMapTest#testTransformers, org.apache.commons.math.util.OpenIntToFieldTest#testIterator, org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, org.apache.commons.math.optimization.direct.NelderMeadTest#testRosenbrock, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, org.apache.commons.math.complex.ComplexTest#testEqualsTrue, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, org.apache.commons.math.complex.ComplexTest#testEqualsNull, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, org.apache.commons.math.util.BigRealFieldTest#testOne, org.apache.commons.math.complex.ComplexTest#testScalarMultiply, org.apache.commons.math.linear.RealMatrixImplTest#testGetRow, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, org.apache.commons.math.util.TransformerMapTest#testClear, org.apache.commons.math.complex.ComplexTest#testSqrtPolar, org.apache.commons.math.random.ValueServerTest#testFill, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, org.apache.commons.math.linear.AbstractRealVectorTest#testIterator, org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, org.apache.commons.math.distribution.NormalDistributionTest#testMath280, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues, org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, org.apache.commons.math.ConvergenceExceptionTest#testConstructor, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, org.apache.commons.math.util.MathUtilsTest#testLcmLong, org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, org.apache.commons.math.analysis.ComposableFunctionTest#testRint, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, org.apache.commons.math.util.TransformerMapTest#testPutTransformer, org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, org.apache.commons.math.MathExceptionTest#testConstructorCause, org.apache.commons.math.complex.ComplexTest#testAbsNaN, org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, org.apache.commons.math.special.GammaTest#testLogGammaZero, org.apache.commons.math.stat.StatUtilsTest#testPercentile, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, org.apache.commons.math.linear.RealMatrixImplTest#testOperate, org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, org.apache.commons.math.complex.ComplexTest#testMath221, org.apache.commons.math.complex.ComplexTest#testSqrt1z, org.apache.commons.math.analysis.BinaryFunctionTest#testPow, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, org.apache.commons.math.geometry.RotationTest#testQuaternion, org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.util.TransformerMapTest#testContainsClass, org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, org.apache.commons.math.geometry.RotationTest#testMatrix, org.apache.commons.math.analysis.BinaryFunctionTest#testFix2nd, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetAbsoluteAccuracy, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.fraction.FractionFieldTest#testZero, org.apache.commons.math.util.MathUtilsTest#test0Choose0, org.apache.commons.math.util.DefaultTransformerTest#testTransformString, org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, org.apache.commons.math.geometry.Vector3DFormatTest#testNan, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.complex.ComplexTest#testConjugate, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetRelativeAccuracy, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, org.apache.commons.math.fraction.BigFractionTest#testDivide, org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, org.apache.commons.math.random.RandomAdaptorTest#testNextInt, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, org.apache.commons.math.special.GammaTest#testTrigamma, org.apache.commons.math.fraction.BigFractionTest#testSerial, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, org.apache.commons.math.complex.ComplexTest#testDivideReal, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetMaximalIterationCount, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, org.apache.commons.math.complex.ComplexTest#testDivideNaN, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, org.apache.commons.math.fraction.FractionFormatTest#testParseProper, org.apache.commons.math.analysis.ComposableFunctionTest#testCombine, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArgumentsCause, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, org.apache.commons.math.geometry.RotationTest#testVectorOnePair, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, org.apache.commons.math.complex.ComplexTest#testNegateNaN, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, org.apache.commons.math.complex.ComplexTest#testSinNaN, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes, org.apache.commons.math.linear.RealVectorFormatTest#testNan, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testLogZero, org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, org.apache.commons.math.complex.ComplexTest#testCosh, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.fraction.BigFractionTest#testSubtract, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, org.apache.commons.math.fraction.FractionFormatTest#testParse, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, org.apache.commons.math.linear.RealMatrixImplTest#testSetRowMatrix, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxIterations, org.apache.commons.math.util.MathUtilsTest#testGcdConsistency, org.apache.commons.math.linear.BigMatrixImplTest#testNorm, org.apache.commons.math.distribution.GammaDistributionTest#testDensity, org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnMatrix, org.apache.commons.math.linear.FieldMatrixImplTest#testToString, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated, org.apache.commons.math.analysis.BinaryFunctionTest#testAdd, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, org.apache.commons.math.geometry.Vector3DTest#testDistanceInf, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, org.apache.commons.math.linear.BigMatrixImplTest#testInverse, org.apache.commons.math.linear.SparseRealMatrixTest#testToString, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, org.apache.commons.math.MathExceptionTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testCosh, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, org.apache.commons.math.util.MathUtilsTest#testScalb, org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, org.apache.commons.math.analysis.BinaryFunctionTest#testAtan2, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testDeprecated, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, org.apache.commons.math.linear.BigMatrixImplTest#testToString, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, org.apache.commons.math.complex.ComplexTest#testSinh, org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, org.apache.commons.math.linear.LUSolverTest#testDeterminant, org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, org.apache.commons.math.util.MathUtilsTest#testNormalizeArray, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, org.apache.commons.math.util.MathUtilsTest#testSignByte, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.special.ErfTest#testErf3291, org.apache.commons.math.complex.ComplexTest#testHashCode, org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308, org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, org.apache.commons.math.complex.ComplexTest#testAddNaN, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.complex.ComplexTest#testConjugateNaN, org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows, org.apache.commons.math.linear.BigMatrixImplTest#testMath209, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, org.apache.commons.math.complex.ComplexTest#testCos, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testSinMin, org.apache.commons.math.random.RandomDataTest#testConfig, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, org.apache.commons.math.complex.ComplexTest#testAsinInf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, org.apache.commons.math.complex.ComplexTest#testAtanNaN, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, org.apache.commons.math.complex.ComplexTest#testAcosInf, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, org.apache.commons.math.complex.ComplexTest#testDivideImaginary, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, org.apache.commons.math.complex.ComplexTest#testPow, org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, org.apache.commons.math.util.MathUtilsTest#testArrayEquals, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, org.apache.commons.math.random.RandomDataTest#testNextSecureInt, org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, org.apache.commons.math.geometry.Vector3DTest#testDistance, org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, org.apache.commons.math.stat.FrequencyTest#testEmptyTable, org.apache.commons.math.analysis.BinaryFunctionTest#testFix1st, org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxIterations, org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge, org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.StatUtilsTest#testVariance, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, org.apache.commons.math.geometry.Vector3DTest#testConstructors, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, org.apache.commons.math.random.MersenneTwisterTest#testDouble, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.FrequencyTest#testPcts, org.apache.commons.math.geometry.Vector3DTest#testAngle, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, org.apache.commons.math.random.MersenneTwisterTest#testGaussian, org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction2, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, org.apache.commons.math.random.ValueServerTest#testProperties, org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.geometry.Vector3DTest#testNorm1, org.apache.commons.math.complex.ComplexTest#testAtanInf, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, org.apache.commons.math.special.ErfTest#testErf2807, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean, org.apache.commons.math.linear.BigMatrixImplTest#testOperate, org.apache.commons.math.util.TransformerMapTest#testClasses, org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.util.MathUtilsTest#testSignShort, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, org.apache.commons.math.special.ErfTest#testErf1960, org.apache.commons.math.util.MathUtilsTest#testHash, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.fraction.FractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, org.apache.commons.math.fraction.BigFractionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, org.apache.commons.math.stat.FrequencyTest#testIntegerValues, org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, org.apache.commons.math.genetics.BinaryMutationTest#testMutate, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, org.apache.commons.math.fraction.FractionTest#testIntValue, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, org.apache.commons.math.complex.ComplexTest#testAcosNaN, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, org.apache.commons.math.complex.ComplexTest#testAddInfinite, org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, org.apache.commons.math.random.MersenneTwisterTest#testNextInt, org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, org.apache.commons.math.complex.ComplexTest#testLog, org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, org.apache.commons.math.fraction.FractionFieldTest#testOne, org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, org.apache.commons.math.util.MathUtilsTest#testGcdLong, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, org.apache.commons.math.complex.ComplexTest#testEqualsSame, org.apache.commons.math.random.EmpiricalDistributionTest#testNext, org.apache.commons.math.util.MathUtilsTest#testRoundDouble, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.linear.CholeskySolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testToString, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.random.RandomDataTest#testNextExponential, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.util.MathUtilsTest#testRoundFloat, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexTest#testLogInf, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.complex.ComplexTest#testCoshNaN, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testSinMin, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, org.apache.commons.math.linear.LUSolverTest#testSolve, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, org.apache.commons.math.special.GammaTest#testLogGammaNegative, org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.fraction.BigFractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, org.apache.commons.math.estimation.EstimatedParameterTest#testBound, org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.fraction.FractionFormatTest#testFormat, org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular, org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.fraction.FractionTest#testDivide, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, org.apache.commons.math.complex.ComplexTest#testAbs, org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares3, org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, org.apache.commons.math.complex.ComplexTest#testGetArgument, org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares1, org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares2, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, org.apache.commons.math.random.RandomDataTest#testNextInt, org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit, org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, org.apache.commons.math.complex.ComplexTest#testSqrtNaN, org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, org.apache.commons.math.linear.AbstractRealVectorTest#testMap, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1, org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, org.apache.commons.math.complex.ComplexTest#testEqualsClass, org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, org.apache.commons.math.complex.ComplexTest#testCoshInf, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetAbsoluteAccuracy, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, org.apache.commons.math.optimization.direct.NelderMeadTest#testPowell, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, org.apache.commons.math.util.MathUtilsTest#testNextAfter, org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, org.apache.commons.math.geometry.Vector3DTest#testCoordinates, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, org.apache.commons.math.complex.ComplexTest#testAsinNaN, org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.random.RandomDataTest#testNextSecureLong, org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, org.apache.commons.math.util.BigRealFieldTest#testSerial, org.apache.commons.math.random.RandomAdaptorTest#testNextLong, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU, org.apache.commons.math.distribution.PoissonDistributionTest#testMean, org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testAdd, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, org.apache.commons.math.complex.ComplexTest#testSqrtInf, org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testAbsInfinite, org.apache.commons.math.complex.ComplexFieldTest#testZero, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, org.apache.commons.math.random.MersenneTwisterTest#testFloat, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, org.apache.commons.math.complex.ComplexTest#testEqualsNaN, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, org.apache.commons.math.stat.inference.TTestTest#testPaired, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, org.apache.commons.math.random.ValueServerTest#testNextDigestFail, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.StatUtilsTest#testMax, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, org.apache.commons.math.stat.FrequencyTest#testToString, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.complex.ComplexTest#testPowInf, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, org.apache.commons.math.complex.ComplexTest#testTanh, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumn, org.apache.commons.math.linear.RealMatrixImplTest#testMath209, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMax, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal, org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.complex.ComplexTest#testpowNull, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionTest#testConstructor, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal, org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, org.apache.commons.math.distribution.FDistributionTest#testConsistency, org.apache.commons.math.analysis.solvers.BrentSolverTest#testDeprecated, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2, org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1, org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, org.apache.commons.math.util.BigRealTest#testDoubleValue, org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, org.apache.commons.math.linear.RealMatrixImplTest#testGetSubMatrix, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetMaximalIterationCount, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, org.apache.commons.math.complex.ComplexTest#testConstructorNaN, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, org.apache.commons.math.fraction.BigFractionFieldTest#testZero, org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.util.MathUtilsTest#testSignFloat, org.apache.commons.math.util.MathUtilsTest#testSignDouble, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, org.apache.commons.math.linear.LUSolverTest#testThreshold, org.apache.commons.math.geometry.RotationOrderTest#testName, org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testSinh, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, org.apache.commons.math.complex.ComplexTest#testTanNaN, org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.fraction.BigFractionTest#testAdd, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.random.RandomDataTest#testNextSample, org.apache.commons.math.analysis.ComposableFunctionTest#testIdentity, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, org.apache.commons.math.linear.EigenDecompositionImplTest#testZeroDivide, org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix, org.apache.commons.math.linear.QRSolverTest#testRank, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.geometry.RotationTest#testSingularities, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, org.apache.commons.math.util.MathUtilsTest#testFactorialFail, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, org.apache.commons.math.fraction.BigFractionTest#testAbs, org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, org.apache.commons.math.linear.RealMatrixImplTest#testCopySubMatrix, org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, org.apache.commons.math.complex.ComplexFieldTest#testOne, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.linear.RealMatrixImplTest#testSetRowVector, org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, org.apache.commons.math.linear.BigMatrixImplTest#testTrace, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, org.apache.commons.math.distribution.NormalDistributionTest#testDensity, org.apache.commons.math.geometry.Vector3DTest#testNormInf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, org.apache.commons.math.complex.ComplexTest#testLogNaN, org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testFactorial, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMin, org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.linear.RealMatrixImplTest#testSetColumn, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.MathExceptionTest#testConstructor, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.random.RandomDataTest#testNextLong, org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testDeprecated, org.apache.commons.math.geometry.RotationTest#testComposeInverse, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.linear.LUSolverTest#testSingular, org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, org.apache.commons.math.random.RandomDataTest#testNextSecureHex, org.apache.commons.math.random.RandomAdaptorTest#testNextHex, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, org.apache.commons.math.util.BigRealFieldTest#testZero, org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, org.apache.commons.math.fraction.BigFractionTest#testMultiply, org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, org.apache.commons.math.distribution.TDistributionTest#testSmallDf, org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, org.apache.commons.math.linear.RealMatrixImplTest#testWalk, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, org.apache.commons.math.util.TransformerMapTest#testSerial, org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, org.apache.commons.math.analysis.BinaryFunctionTest#testDivide, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, org.apache.commons.math.complex.ComplexTest#testSinInf, org.apache.commons.math.analysis.BinaryFunctionTest#testSubtract, org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testFunctionEvaluationExceptions, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, org.apache.commons.math.complex.ComplexFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.complex.ComplexTest#testAsin, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, org.apache.commons.math.geometry.RotationTest#testAxisAngle, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetRelativeAccuracy, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, org.apache.commons.math.geometry.RotationTest#testRevert, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, org.apache.commons.math.util.OpenIntToFieldTest#testRemove, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testDeprecated, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.util.MathUtilsTest#testCoshNaN, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, org.apache.commons.math.stat.StatUtilsTest#testSumLog, org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, org.apache.commons.math.ode.events.EventStateTest#closeEvents, org.apache.commons.math.transform.FastSineTransformerTest#testParameters, org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, org.apache.commons.math.linear.BigMatrixImplTest#testAdd, org.apache.commons.math.complex.ComplexTest#testPowZero, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, org.apache.commons.math.geometry.Vector3DTest#testDistance1, org.apache.commons.math.linear.RealMatrixImplTest#testFrobeniusNorm, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInversible, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, org.apache.commons.math.fraction.FractionTest#testFloatValue, org.apache.commons.math.complex.ComplexTest#testDivide, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, org.apache.commons.math.random.MersenneTwisterTest#testNextIntN, org.apache.commons.math.complex.ComplexTest#testSubtract, org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, org.apache.commons.math.fraction.FractionTest#testMultiply, org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, org.apache.commons.math.fraction.BigFractionTest#testFloatValue, org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, org.apache.commons.math.complex.ComplexTest#testAtan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.estimation.MinpackTest#testMinpackBard, org.apache.commons.math.random.MersenneTwisterTest#testNextLong, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt, org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealMatrixImplTest#testSerial, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.stat.StatUtilsTest#testMean, org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, org.apache.commons.math.analysis.BinaryFunctionTest#testMultiply, org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, org.apache.commons.math.complex.ComplexTest#testSin, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, org.apache.commons.math.analysis.ComposableFunctionTest#testComposition, org.apache.commons.math.linear.RealMatrixImplTest#testExamples, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testExpNaN, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetFunctionValueAccuracy, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, org.apache.commons.math.fraction.BigFractionTest#testIntValue, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, org.apache.commons.math.util.BigRealTest#testBigDecimalValue, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, org.apache.commons.math.linear.EigenSolverTest#testInvertible, org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, org.apache.commons.math.util.MathUtilsTest#testPow, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, org.apache.commons.math.analysis.ComposableFunctionTest#testSignum, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, org.apache.commons.math.geometry.RotationTest#testIdentity, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArguments, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, org.apache.commons.math.random.ValueServerTest#testNextDigest, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, org.apache.commons.math.random.RandomDataTest#testNextGaussian, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, org.apache.commons.math.linear.RealMatrixImplTest#testNorm, org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, org.apache.commons.math.MathExceptionTest#testPrintStackTrace, org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, org.apache.commons.math.complex.ComplexFormatTest#testNan, org.apache.commons.math.random.RandomDataTest#testNextPermutation, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, org.apache.commons.math.special.ErfTest#testErf2576, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, org.apache.commons.math.util.MathUtilsTest#testCompareTo, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, org.apache.commons.math.util.MathUtilsTest#testArrayHash, org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, org.apache.commons.math.util.MathUtilsTest#testLcm, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, org.apache.commons.math.complex.ComplexTest#testTanInf, org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.complex.ComplexTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testTanhInf, org.apache.commons.math.stat.FrequencyTest#testCounts, org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, org.apache.commons.math.linear.BigMatrixImplTest#testSolve, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.fraction.BigFractionFormatTest#testParse, org.apache.commons.math.fraction.BigFractionTest#testCompareTo, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testTanhNaN, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.analysis.ComposableFunctionTest#testCollector, org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, org.apache.commons.math.fraction.FractionTest#testAbs, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testMinEndpoints, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, org.apache.commons.math.util.MathUtilsTest#testEquals, org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, org.apache.commons.math.optimization.direct.NelderMeadTest#testFunctionEvaluationExceptions, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, org.apache.commons.math.util.MathUtilsTest#testLog, org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, org.apache.commons.math.util.MathUtilsTest#testSignLong, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, org.apache.commons.math.analysis.ComposableFunctionTest#testSimpleCombination, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, org.apache.commons.math.complex.ComplexTest#testMultiply, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, org.apache.commons.math.analysis.ComposableFunctionTest#testOne, org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, org.apache.commons.math.fraction.FractionTest#testAdd, org.apache.commons.math.complex.ComplexTest#testNegate, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testSinhInf, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction2, org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation, org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testRosenbrock, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, org.apache.commons.math.stat.StatUtilsTest#testSumSq, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.complex.ComplexTest#testAcos, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, org.apache.commons.math.util.DefaultTransformerTest#testSerial, org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, org.apache.commons.math.util.OpenIntToFieldTest#testCopy, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, org.apache.commons.math.distribution.PascalDistributionTest#testDensities, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testToString, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArray, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, org.apache.commons.math.complex.ComplexTest#testTanCritical, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, org.apache.commons.math.complex.ComplexTest#testExp, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, org.apache.commons.math.stat.StatUtilsTest#testMin, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, org.apache.commons.math.fraction.FractionTest#testConstructorDouble, org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, org.apache.commons.math.fraction.FractionTest#testSubtract, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, org.apache.commons.math.complex.ComplexTest#testPowNaNBase, org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, org.apache.commons.math.linear.SparseRealVectorTest#testSerial, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testDivideZero, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, org.apache.commons.math.special.GammaTest#testLogGammaNan, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, org.apache.commons.math.util.MathUtilsTest#testSinhNaN, org.apache.commons.math.random.RandomDataTest#testNextHex, org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, org.apache.commons.math.fraction.BigFractionTest#testLongValue, org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, org.apache.commons.math.linear.AbstractRealVectorTest#testClone, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, org.apache.commons.math.random.ValueServerTest#testModes, org.apache.commons.math.fraction.FractionTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.fraction.FractionTest#testLongValue, org.apache.commons.math.fraction.BigFractionTest#testMath340, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.fraction.BigFractionFieldTest#testOne, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta, org.apache.commons.math.stat.data.LewTest#testCertifiedValues, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testPowell, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxEvaluations, org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.analysis.ComposableFunctionTest#testZero, org.apache.commons.math.linear.SingularValueSolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testGoldenRatio, org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexFieldTest#testSerial, org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, org.apache.commons.math.special.ErfTest#testErf0, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayArgumentCause, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, org.apache.commons.math.fraction.FractionTest#testNegate, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], jUnit5Tests=[], jacocoIncludes=[org.apache.commons.*], jacocoExcludes=[java.*], family=SPECTRUM_BASED, spectrumFormula=DSTAR, computeSpoonResults=false}
Computing tests from config.
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInfinite, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadParameters, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAddNonComparable, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx03, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3MultipleRoot, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadParameters, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcmLong, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testRint, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testPow, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testFix2nd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideReal, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testCombine, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcdConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testScalb, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testAtan2, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeArray, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testFix1st, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testGaussian, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcdLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testBound, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testMap, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignDouble, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.geometry.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinh, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testZeroDivide, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#closeEvents, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testComposition, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testSignum, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testCollector, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEquals, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLog, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testSimpleCombination, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testOne, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArray, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZero, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testClone, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMath340, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayArgumentCause, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@23811a09}
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInfinite, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadParameters, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAddNonComparable, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx03, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3MultipleRoot, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadParameters, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcmLong, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testRint, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testPow, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testFix2nd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideReal, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testCombine, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcdConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testScalb, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testAtan2, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeArray, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testFix1st, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testGaussian, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcdLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testBound, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testMap, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignDouble, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.geometry.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinh, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testZeroDivide, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#closeEvents, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.BinaryFunctionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testComposition, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testSignum, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testCollector, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEquals, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLog, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testSimpleCombination, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testOne, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArray, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZero, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.AbstractRealVectorTest#testClone, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMath340, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.analysis.ComposableFunctionTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayArgumentCause, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@23811a09}
Path to runner Classes: /Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
Adding a line where an exception was thrown: org.apache.commons.math.TestUtils@-@173
No source code file was found for stack-trace element: org.apache.commons.math.TestUtils.assertRelativelyEquals(TestUtils.java:173)
Adding a line where an exception was thrown: org.apache.commons.math.TestUtils@-@148
No source code file was found for stack-trace element: org.apache.commons.math.TestUtils.assertRelativelyEquals(TestUtils.java:148)
Adding a line where an exception was thrown: org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest@-@170
No source code file was found for stack-trace element: org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testWeightedConsistency(UnivariateStatisticAbstractTest.java:170)
Tests found: 2142
Tests executed: 2142
Suspicious: 1 line org.apache.commons.math.fraction.AbstractFormat l: 110, susp 1.8
Suspicious: 2 line org.apache.commons.math.fraction.AbstractFormat l: 58, susp 1.0909090909090908
Suspicious: 3 line org.apache.commons.math.fraction.AbstractFormat l: 59, susp 1.0909090909090908
Suspicious: 4 line org.apache.commons.math.fraction.AbstractFormat l: 68, susp 1.0909090909090908
Suspicious: 5 line org.apache.commons.math.fraction.AbstractFormat l: 69, susp 1.0909090909090908
Suspicious: 6 line org.apache.commons.math.fraction.AbstractFormat l: 70, susp 1.0909090909090908
Suspicious: 7 line org.apache.commons.math.fraction.AbstractFormat l: 71, susp 1.0909090909090908
Suspicious: 8 line org.apache.commons.math.fraction.AbstractFormat l: 91, susp 1.0909090909090908
Suspicious: 9 line org.apache.commons.math.fraction.AbstractFormat l: 92, susp 1.0909090909090908
Suspicious: 10 line org.apache.commons.math.fraction.AbstractFormat l: 93, susp 1.0909090909090908
Suspicious: 11 line org.apache.commons.math.fraction.AbstractFormat l: 94, susp 1.0909090909090908
Suspicious: 12 line org.apache.commons.math.fraction.FractionFormat l: 55, susp 0.8888888888888888
Suspicious: 13 line org.apache.commons.math.fraction.FractionFormat l: 56, susp 0.8888888888888888
Suspicious: 14 line org.apache.commons.math.fraction.ProperFractionFormat l: 60, susp 0.8888888888888888
Suspicious: 15 line org.apache.commons.math.fraction.ProperFractionFormat l: 61, susp 0.8888888888888888
Suspicious: 16 line org.apache.commons.math.fraction.FractionFormat l: 66, susp 0.8888888888888888
Suspicious: 17 line org.apache.commons.math.fraction.FractionFormat l: 67, susp 0.8888888888888888
Suspicious: 18 line org.apache.commons.math.fraction.ProperFractionFormat l: 74, susp 0.8888888888888888
Suspicious: 19 line org.apache.commons.math.fraction.ProperFractionFormat l: 75, susp 0.8888888888888888
Suspicious: 20 line org.apache.commons.math.fraction.ProperFractionFormat l: 76, susp 0.8888888888888888
Suspicious: 21 line org.apache.commons.math.fraction.FractionFormat l: 103, susp 0.8888888888888888
Suspicious: 22 line org.apache.commons.math.fraction.FractionFormat l: 120, susp 0.8888888888888888
Suspicious: 23 line org.apache.commons.math.fraction.ProperFractionFormat l: 227, susp 0.8888888888888888
Suspicious: 24 line org.apache.commons.math.fraction.ProperFractionFormat l: 231, susp 0.8888888888888888
Suspicious: 25 line org.apache.commons.math.fraction.ProperFractionFormat l: 232, susp 0.8888888888888888
Suspicious: 26 line org.apache.commons.math.fraction.ProperFractionFormat l: 118, susp 0.8181818181818182
Suspicious: 27 line org.apache.commons.math.fraction.AbstractFormat l: 102, susp 0.8
Suspicious: 28 line org.apache.commons.math.MathRuntimeException$9 l: 474, susp 0.6666666666666666
Suspicious: 29 line org.apache.commons.math.fraction.ProperFractionFormat l: 152, susp 0.5714285714285714
Suspicious: 30 line org.apache.commons.math.fraction.ProperFractionFormat l: 153, susp 0.5714285714285714
Suspicious: 31 line org.apache.commons.math.fraction.FractionFormat l: 233, susp 0.5714285714285714
Suspicious: 32 line org.apache.commons.math.fraction.FractionFormat l: 234, susp 0.5714285714285714
Suspicious: 33 line org.apache.commons.math.MathRuntimeException l: 102, susp 0.5
Suspicious: 34 line org.apache.commons.math.MathRuntimeException l: 109, susp 0.5
Suspicious: 35 line org.apache.commons.math.MathRuntimeException l: 115, susp 0.5
Suspicious: 36 line org.apache.commons.math.MathRuntimeException l: 128, susp 0.5
Suspicious: 37 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 91, susp 0.4444444444444444
Suspicious: 38 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 92, susp 0.4444444444444444
Suspicious: 39 line org.apache.commons.math.fraction.ProperFractionFormat l: 92, susp 0.4444444444444444
Suspicious: 40 line org.apache.commons.math.fraction.ProperFractionFormat l: 93, susp 0.4444444444444444
Suspicious: 41 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 94, susp 0.4444444444444444
Suspicious: 42 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 95, susp 0.4444444444444444
Suspicious: 43 line org.apache.commons.math.fraction.ProperFractionFormat l: 95, susp 0.4444444444444444
Suspicious: 44 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 96, susp 0.4444444444444444
Suspicious: 45 line org.apache.commons.math.fraction.ProperFractionFormat l: 96, susp 0.4444444444444444
Suspicious: 46 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 97, susp 0.4444444444444444
Suspicious: 47 line org.apache.commons.math.fraction.ProperFractionFormat l: 97, susp 0.4444444444444444
Suspicious: 48 line org.apache.commons.math.fraction.ProperFractionFormat l: 98, susp 0.4444444444444444
Suspicious: 49 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 99, susp 0.4444444444444444
Suspicious: 50 line org.apache.commons.math.fraction.ProperFractionFormat l: 100, susp 0.4444444444444444
Suspicious: 51 line org.apache.commons.math.fraction.ProperFractionFormat l: 105, susp 0.4444444444444444
Suspicious: 52 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 106, susp 0.4444444444444444
Suspicious: 53 line org.apache.commons.math.fraction.ProperFractionFormat l: 106, susp 0.4444444444444444
Suspicious: 54 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 107, susp 0.4444444444444444
Suspicious: 55 line org.apache.commons.math.fraction.ProperFractionFormat l: 107, susp 0.4444444444444444
Suspicious: 56 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 108, susp 0.4444444444444444
Suspicious: 57 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 110, susp 0.4444444444444444
Suspicious: 58 line org.apache.commons.math.fraction.ProperFractionFormat l: 110, susp 0.4444444444444444
Suspicious: 59 line org.apache.commons.math.fraction.BigFractionFormat l: 169, susp 0.4444444444444444
Suspicious: 60 line org.apache.commons.math.fraction.FractionFormat l: 176, susp 0.4444444444444444
Suspicious: 61 line org.apache.commons.math.fraction.ProperFractionFormat l: 141, susp 0.4
Suspicious: 62 line org.apache.commons.math.fraction.ProperFractionFormat l: 144, susp 0.4
Suspicious: 63 line org.apache.commons.math.fraction.ProperFractionFormat l: 147, susp 0.4
Suspicious: 64 line org.apache.commons.math.fraction.ProperFractionFormat l: 148, susp 0.4
Suspicious: 65 line org.apache.commons.math.fraction.FractionFormat l: 206, susp 0.4
Suspicious: 66 line org.apache.commons.math.fraction.FractionFormat l: 207, susp 0.4
Suspicious: 67 line org.apache.commons.math.fraction.BigFractionFormat l: 168, susp 0.36363636363636365
Suspicious: 68 line org.apache.commons.math.fraction.FractionFormat l: 173, susp 0.36363636363636365
Suspicious: 69 line org.apache.commons.math.fraction.FractionFormat l: 175, susp 0.36363636363636365
Suspicious: 70 line org.apache.commons.math.fraction.BigFractionFormat l: 180, susp 0.36363636363636365
Suspicious: 71 line org.apache.commons.math.fraction.FractionFormat l: 191, susp 0.36363636363636365
Suspicious: 72 line org.apache.commons.math.fraction.ProperFractionFormat l: 136, susp 0.3333333333333333
Suspicious: 73 line org.apache.commons.math.fraction.ProperFractionFormat l: 137, susp 0.3333333333333333
Suspicious: 74 line org.apache.commons.math.fraction.FractionFormat l: 203, susp 0.3333333333333333
Suspicious: 75 line org.apache.commons.math.fraction.FractionFormat l: 204, susp 0.3333333333333333
Suspicious: 76 line org.apache.commons.math.fraction.FractionFormat l: 205, susp 0.3333333333333333
Suspicious: 77 line org.apache.commons.math.fraction.FractionFormat l: 222, susp 0.3333333333333333
Suspicious: 78 line org.apache.commons.math.fraction.FractionFormat l: 225, susp 0.3333333333333333
Suspicious: 79 line org.apache.commons.math.fraction.FractionFormat l: 228, susp 0.3333333333333333
Suspicious: 80 line org.apache.commons.math.fraction.FractionFormat l: 229, susp 0.3333333333333333
Suspicious: 81 line org.apache.commons.math.fraction.BigFraction l: 747, susp 0.2857142857142857
Suspicious: 82 line org.apache.commons.math.fraction.BigFraction l: 780, susp 0.2857142857142857
Suspicious: 83 line org.apache.commons.math.MathRuntimeException l: 466, susp 0.26666666666666666
Suspicious: 84 line org.apache.commons.math.MathRuntimeException$9 l: 466, susp 0.26666666666666666
Suspicious: 85 line org.apache.commons.math.fraction.AbstractFormat l: 173, susp 0.21052631578947367
Suspicious: 86 line org.apache.commons.math.fraction.AbstractFormat l: 149, susp 0.19047619047619047
Suspicious: 87 line org.apache.commons.math.fraction.AbstractFormat l: 150, susp 0.19047619047619047
Suspicious: 88 line org.apache.commons.math.fraction.AbstractFormat l: 151, susp 0.19047619047619047
Suspicious: 89 line org.apache.commons.math.fraction.AbstractFormat l: 161, susp 0.19047619047619047
Suspicious: 90 line org.apache.commons.math.fraction.AbstractFormat l: 162, susp 0.19047619047619047
Suspicious: 91 line org.apache.commons.math.fraction.AbstractFormat l: 163, susp 0.19047619047619047
Suspicious: 92 line org.apache.commons.math.fraction.AbstractFormat l: 165, susp 0.19047619047619047
Suspicious: 93 line org.apache.commons.math.fraction.AbstractFormat l: 168, susp 0.19047619047619047
Suspicious: 94 line org.apache.commons.math.fraction.AbstractFormat l: 169, susp 0.19047619047619047
Suspicious: 95 line org.apache.commons.math.fraction.AbstractFormat l: 170, susp 0.19047619047619047
Suspicious: 96 line org.apache.commons.math.fraction.AbstractFormat l: 172, susp 0.19047619047619047
Suspicious: 97 line org.apache.commons.math.fraction.AbstractFormat l: 177, susp 0.19047619047619047
Suspicious: 98 line org.apache.commons.math.fraction.BigFractionFormat l: 58, susp 0.17391304347826086
Suspicious: 99 line org.apache.commons.math.fraction.BigFractionFormat l: 59, susp 0.17391304347826086
Suspicious: 100 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 60, susp 0.17391304347826086
Suspicious: 101 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 61, susp 0.17391304347826086
Suspicious: 102 line org.apache.commons.math.fraction.BigFractionFormat l: 69, susp 0.17391304347826086
Suspicious: 103 line org.apache.commons.math.fraction.BigFractionFormat l: 70, susp 0.17391304347826086
Suspicious: 104 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 73, susp 0.17391304347826086
Suspicious: 105 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 74, susp 0.17391304347826086
Suspicious: 106 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 75, susp 0.17391304347826086
Suspicious: 107 line org.apache.commons.math.fraction.BigFractionFormat l: 106, susp 0.17391304347826086
Suspicious: 108 line org.apache.commons.math.fraction.BigFractionFormat l: 123, susp 0.17391304347826086
Suspicious: 109 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 234, susp 0.17391304347826086
Suspicious: 110 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 238, susp 0.17391304347826086
Suspicious: 111 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 239, susp 0.17391304347826086
Suspicious: 112 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 103, susp 0.14285714285714285
Suspicious: 113 line org.apache.commons.math.analysis.solvers.BrentSolver l: 138, susp 0.14285714285714285
Suspicious: 114 line org.apache.commons.math.fraction.BigFraction l: 390, susp 0.13793103448275862
Suspicious: 115 line org.apache.commons.math.fraction.BigFraction l: 391, susp 0.13793103448275862
Suspicious: 116 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 100, susp 0.125
Suspicious: 117 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 101, susp 0.125
Suspicious: 118 line org.apache.commons.math.fraction.ProperFractionFormat l: 101, susp 0.125
Suspicious: 119 line org.apache.commons.math.analysis.solvers.BrentSolver l: 102, susp 0.125
Suspicious: 120 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 102, susp 0.125
Suspicious: 121 line org.apache.commons.math.fraction.ProperFractionFormat l: 102, susp 0.125
Suspicious: 122 line org.apache.commons.math.analysis.solvers.BrentSolver l: 103, susp 0.125
Suspicious: 123 line org.apache.commons.math.fraction.ProperFractionFormat l: 103, susp 0.125
Suspicious: 124 line org.apache.commons.math.analysis.solvers.BrentSolver l: 106, susp 0.125
Suspicious: 125 line org.apache.commons.math.analysis.solvers.BrentSolver l: 107, susp 0.125
Suspicious: 126 line org.apache.commons.math.analysis.solvers.BrentSolver l: 113, susp 0.125
Suspicious: 127 line org.apache.commons.math.analysis.solvers.BrentSolver l: 114, susp 0.125
Suspicious: 128 line org.apache.commons.math.analysis.solvers.BrentSolver l: 120, susp 0.125
Suspicious: 129 line org.apache.commons.math.analysis.solvers.BrentSolver l: 125, susp 0.125
Suspicious: 130 line org.apache.commons.math.analysis.solvers.BrentSolver l: 126, susp 0.125
Suspicious: 131 line org.apache.commons.math.analysis.solvers.BrentSolver l: 132, susp 0.125
Suspicious: 132 line org.apache.commons.math.analysis.solvers.BrentSolver l: 184, susp 0.125
Suspicious: 133 line org.apache.commons.math.analysis.solvers.BrentSolver l: 185, susp 0.125
Suspicious: 134 line org.apache.commons.math.fraction.Fraction l: 378, susp 0.125
Suspicious: 135 line org.apache.commons.math.fraction.Fraction l: 386, susp 0.12121212121212122
Suspicious: 136 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 118, susp 0.1111111111111111
Suspicious: 137 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 134, susp 0.1111111111111111
Suspicious: 138 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 135, susp 0.1111111111111111
Suspicious: 139 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 136, susp 0.1111111111111111
Suspicious: 140 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 137, susp 0.1111111111111111
Suspicious: 141 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 138, susp 0.1111111111111111
Suspicious: 142 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 139, susp 0.1111111111111111
Suspicious: 143 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 142, susp 0.1111111111111111
Suspicious: 144 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 143, susp 0.1111111111111111
Suspicious: 145 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 144, susp 0.1111111111111111
Suspicious: 146 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 145, susp 0.1111111111111111
Suspicious: 147 line org.apache.commons.math.TestUtils l: 148, susp 0.1111111111111111
Suspicious: 148 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 151, susp 0.1111111111111111
Suspicious: 149 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 152, susp 0.1111111111111111
Suspicious: 150 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 153, susp 0.1111111111111111
Suspicious: 151 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 154, susp 0.1111111111111111
Suspicious: 152 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 155, susp 0.1111111111111111
Suspicious: 153 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 156, susp 0.1111111111111111
Suspicious: 154 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 161, susp 0.1111111111111111
Suspicious: 155 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 162, susp 0.1111111111111111
Suspicious: 156 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 163, susp 0.1111111111111111
Suspicious: 157 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 164, susp 0.1111111111111111
Suspicious: 158 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 169, susp 0.1111111111111111
Suspicious: 159 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 170, susp 0.1111111111111111
Suspicious: 160 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 171, susp 0.1111111111111111
Suspicious: 161 line org.apache.commons.math.analysis.solvers.BrentSolver l: 176, susp 0.1111111111111111
Suspicious: 162 line org.apache.commons.math.analysis.solvers.BrentSolver l: 179, susp 0.1111111111111111
Suspicious: 163 line org.apache.commons.math.fraction.BigFraction l: 140, susp 0.1
Suspicious: 164 line org.apache.commons.math.fraction.BigFraction l: 141, susp 0.1
Suspicious: 165 line org.apache.commons.math.fraction.BigFraction l: 147, susp 0.1
Suspicious: 166 line org.apache.commons.math.fraction.BigFraction l: 153, susp 0.1
Suspicious: 167 line org.apache.commons.math.fraction.BigFraction l: 154, susp 0.1
Suspicious: 168 line org.apache.commons.math.stat.descriptive.moment.Mean l: 203, susp 0.1
Suspicious: 169 line org.apache.commons.math.stat.descriptive.moment.Mean l: 204, susp 0.1
Suspicious: 170 line org.apache.commons.math.stat.descriptive.moment.Mean l: 207, susp 0.1
Suspicious: 171 line org.apache.commons.math.stat.descriptive.moment.Mean l: 208, susp 0.1
Suspicious: 172 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 209, susp 0.1
Suspicious: 173 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 211, susp 0.1
Suspicious: 174 line org.apache.commons.math.stat.descriptive.moment.Mean l: 211, susp 0.1
Suspicious: 175 line org.apache.commons.math.stat.descriptive.moment.Mean l: 212, susp 0.1
Suspicious: 176 line org.apache.commons.math.stat.descriptive.moment.Mean l: 213, susp 0.1
Suspicious: 177 line org.apache.commons.math.stat.descriptive.moment.Mean l: 215, susp 0.1
Suspicious: 178 line org.apache.commons.math.fraction.BigFraction l: 124, susp 0.0975609756097561
Suspicious: 179 line org.apache.commons.math.fraction.BigFraction l: 125, susp 0.0975609756097561
Suspicious: 180 line org.apache.commons.math.fraction.BigFraction l: 128, susp 0.0975609756097561
Suspicious: 181 line org.apache.commons.math.fraction.BigFraction l: 131, susp 0.0975609756097561
Suspicious: 182 line org.apache.commons.math.fraction.BigFraction l: 134, susp 0.0975609756097561
Suspicious: 183 line org.apache.commons.math.fraction.BigFraction l: 157, susp 0.0975609756097561
Suspicious: 184 line org.apache.commons.math.stat.descriptive.summary.Sum l: 160, susp 0.09090909090909091
Suspicious: 185 line org.apache.commons.math.stat.descriptive.summary.Sum l: 161, susp 0.09090909090909091
Suspicious: 186 line org.apache.commons.math.stat.descriptive.summary.Sum l: 162, susp 0.09090909090909091
Suspicious: 187 line org.apache.commons.math.TestUtils l: 163, susp 0.09090909090909091
Suspicious: 188 line org.apache.commons.math.stat.descriptive.summary.Sum l: 163, susp 0.09090909090909091
Suspicious: 189 line org.apache.commons.math.stat.descriptive.summary.Sum l: 164, susp 0.09090909090909091
Suspicious: 190 line org.apache.commons.math.TestUtils l: 165, susp 0.09090909090909091
Suspicious: 191 line org.apache.commons.math.TestUtils l: 167, susp 0.09090909090909091
Suspicious: 192 line org.apache.commons.math.stat.descriptive.summary.Sum l: 167, susp 0.09090909090909091
Suspicious: 193 line org.apache.commons.math.TestUtils l: 169, susp 0.09090909090909091
Suspicious: 194 line org.apache.commons.math.TestUtils l: 172, susp 0.09090909090909091
Suspicious: 195 line org.apache.commons.math.TestUtils l: 173, susp 0.09090909090909091
Suspicious: 196 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 225, susp 0.09090909090909091
Suspicious: 197 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 230, susp 0.09090909090909091
Suspicious: 198 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 164, susp 0.07692307692307693
Suspicious: 199 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 165, susp 0.07692307692307693
Suspicious: 200 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 169, susp 0.07692307692307693
Suspicious: 201 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 174, susp 0.07692307692307693
Suspicious: 202 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 141, susp 0.07142857142857142
Suspicious: 203 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 145, susp 0.07142857142857142
Suspicious: 204 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 150, susp 0.07142857142857142
Suspicious: 205 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 151, susp 0.07142857142857142
Suspicious: 206 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 152, susp 0.07142857142857142
Suspicious: 207 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 156, susp 0.07142857142857142
Suspicious: 208 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 160, susp 0.07142857142857142
Suspicious: 209 line org.apache.commons.math.random.RandomDataImpl l: 443, susp 0.058823529411764705
Suspicious: 210 line org.apache.commons.math.random.RandomDataImpl l: 447, susp 0.058823529411764705
Suspicious: 211 line org.apache.commons.math.analysis.solvers.BrentSolver l: 286, susp 0.05555555555555555
Suspicious: 212 line org.apache.commons.math.analysis.solvers.BrentSolver l: 287, susp 0.05555555555555555
Suspicious: 213 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 196, susp 0.05263157894736842
Suspicious: 214 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 127, susp 0.043478260869565216
Suspicious: 215 line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 128, susp 0.043478260869565216
Suspicious: 216 line org.apache.commons.math.random.RandomDataImpl l: 181, susp 0.038461538461538464
Suspicious: 217 line org.apache.commons.math.random.RandomDataImpl l: 186, susp 0.038461538461538464
Suspicious: 218 line org.apache.commons.math.random.RandomDataImpl l: 187, susp 0.038461538461538464
Suspicious: 219 line org.apache.commons.math.fraction.Fraction l: 265, susp 0.034482758620689655
Suspicious: 220 line org.apache.commons.math.fraction.Fraction l: 266, susp 0.034482758620689655
Suspicious: 221 line org.apache.commons.math.fraction.Fraction l: 270, susp 0.034482758620689655
Suspicious: 222 line org.apache.commons.math.fraction.Fraction l: 279, susp 0.034482758620689655
Suspicious: 223 line org.apache.commons.math.fraction.Fraction l: 280, susp 0.034482758620689655
Suspicious: 224 line org.apache.commons.math.fraction.Fraction l: 286, susp 0.034482758620689655
Suspicious: 225 line org.apache.commons.math.fraction.Fraction l: 290, susp 0.034482758620689655
Suspicious: 226 line org.apache.commons.math.fraction.Fraction l: 291, susp 0.034482758620689655
Suspicious: 227 line org.apache.commons.math.fraction.Fraction l: 292, susp 0.034482758620689655
Suspicious: 228 line org.apache.commons.math.util.MathUtils l: 663, susp 0.03389830508474576
Suspicious: 229 line org.apache.commons.math.util.MathUtils l: 629, susp 0.03305785123966942
Suspicious: 230 line org.apache.commons.math.util.MathUtils l: 632, susp 0.03305785123966942
Suspicious: 231 line org.apache.commons.math.util.MathUtils l: 633, susp 0.03305785123966942
Suspicious: 232 line org.apache.commons.math.util.MathUtils l: 636, susp 0.03305785123966942
Suspicious: 233 line org.apache.commons.math.util.MathUtils l: 637, susp 0.03305785123966942
Suspicious: 234 line org.apache.commons.math.util.MathUtils l: 643, susp 0.03305785123966942
Suspicious: 235 line org.apache.commons.math.util.MathUtils l: 650, susp 0.03305785123966942
Suspicious: 236 line org.apache.commons.math.util.MathUtils l: 656, susp 0.03305785123966942
Suspicious: 237 line org.apache.commons.math.util.MathUtils l: 660, susp 0.03305785123966942
Suspicious: 238 line org.apache.commons.math.util.MathUtils l: 666, susp 0.03305785123966942
Suspicious: 239 line org.apache.commons.math.util.MathUtils l: 669, susp 0.03305785123966942
Suspicious: 240 line org.apache.commons.math.util.MathUtils l: 670, susp 0.03305785123966942
Suspicious: 241 line org.apache.commons.math.util.MathUtils l: 614, susp 0.03278688524590164
Suspicious: 242 line org.apache.commons.math.util.MathUtils l: 615, susp 0.03278688524590164
Suspicious: 243 line org.apache.commons.math.util.MathUtils l: 616, susp 0.03278688524590164
Suspicious: 244 line org.apache.commons.math.random.RandomDataImpl l: 101, susp 0.02857142857142857
Suspicious: 245 line org.apache.commons.math.random.RandomDataImpl l: 102, susp 0.02857142857142857
Suspicious: 246 line org.apache.commons.math.random.RandomDataImpl l: 93, susp 0.027777777777777776
Suspicious: 247 line org.apache.commons.math.random.RandomDataImpl l: 96, susp 0.027777777777777776
Suspicious: 248 line org.apache.commons.math.analysis.SinFunction l: 31, susp 0.025
Suspicious: 249 line org.apache.commons.math.analysis.SinFunction l: 37, susp 0.023809523809523808
Suspicious: 250 line org.apache.commons.math.random.RandomDataImpl l: 520, susp 0.022727272727272728
Suspicious: 251 line org.apache.commons.math.random.RandomDataImpl l: 521, susp 0.022727272727272728
Suspicious: 252 line org.apache.commons.math.analysis.solvers.BrentSolver l: 300, susp 0.022222222222222223
Suspicious: 253 line org.apache.commons.math.random.RandomDataImpl l: 519, susp 0.017241379310344827
Suspicious: 254 line org.apache.commons.math.random.RandomDataImpl l: 523, susp 0.017241379310344827
Suspicious: 255 line org.apache.commons.math.random.JDKRandomGenerator l: 28, susp 0.016129032258064516
Suspicious: 256 line org.apache.commons.math.stat.descriptive.moment.Mean l: 156, susp 0.012658227848101266
Suspicious: 257 line org.apache.commons.math.stat.descriptive.moment.Mean l: 157, susp 0.012658227848101266
Suspicious: 258 line org.apache.commons.math.stat.descriptive.moment.Mean l: 160, susp 0.012658227848101266
Suspicious: 259 line org.apache.commons.math.stat.descriptive.moment.Mean l: 163, susp 0.012658227848101266
Suspicious: 260 line org.apache.commons.math.stat.descriptive.moment.Mean l: 164, susp 0.012658227848101266
Suspicious: 261 line org.apache.commons.math.stat.descriptive.moment.Mean l: 165, susp 0.012658227848101266
Suspicious: 262 line org.apache.commons.math.stat.descriptive.moment.Mean l: 167, susp 0.012658227848101266
Suspicious: 263 line org.apache.commons.math.stat.descriptive.moment.Mean l: 155, susp 0.0125
Suspicious: 264 line org.apache.commons.math.stat.descriptive.summary.Sum l: 121, susp 0.011764705882352941
Suspicious: 265 line org.apache.commons.math.stat.descriptive.summary.Sum l: 122, susp 0.011764705882352941
Suspicious: 266 line org.apache.commons.math.stat.descriptive.summary.Sum l: 123, susp 0.011764705882352941
Suspicious: 267 line org.apache.commons.math.stat.descriptive.summary.Sum l: 124, susp 0.011764705882352941
Suspicious: 268 line org.apache.commons.math.stat.descriptive.summary.Sum l: 125, susp 0.011764705882352941
Suspicious: 269 line org.apache.commons.math.stat.descriptive.summary.Sum l: 128, susp 0.011764705882352941
Suspicious: 270 line org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic l: 57, susp 0.011111111111111112
Suspicious: 271 line org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic l: 60, susp 0.011111111111111112
Suspicious: 272 line org.apache.commons.math.analysis.solvers.BrentSolver l: 250, susp 0.010309278350515464
Suspicious: 273 line org.apache.commons.math.analysis.solvers.BrentSolver l: 251, susp 0.010309278350515464
Suspicious: 274 line org.apache.commons.math.analysis.solvers.BrentSolver l: 299, susp 0.010309278350515464
Suspicious: 275 line org.apache.commons.math.analysis.solvers.BrentSolver l: 277, susp 0.00980392156862745
Suspicious: 276 line org.apache.commons.math.util.MathUtils l: 657, susp 0.00980392156862745
Suspicious: 277 line org.apache.commons.math.analysis.solvers.BrentSolver l: 298, susp 0.009345794392523364
Suspicious: 278 line org.apache.commons.math.analysis.solvers.BrentSolver l: 306, susp 0.009174311926605505
Suspicious: 279 line org.apache.commons.math.analysis.solvers.BrentSolver l: 307, susp 0.009174311926605505
Suspicious: 280 line org.apache.commons.math.analysis.solvers.BrentSolver l: 308, susp 0.009174311926605505
Suspicious: 281 line org.apache.commons.math.analysis.solvers.BrentSolver l: 309, susp 0.009174311926605505
Suspicious: 282 line org.apache.commons.math.util.MathUtils l: 661, susp 0.009174311926605505
Suspicious: 283 line org.apache.commons.math.analysis.solvers.BrentSolver l: 232, susp 0.008130081300813009
Suspicious: 284 line org.apache.commons.math.analysis.solvers.BrentSolver l: 233, susp 0.008130081300813009
Suspicious: 285 line org.apache.commons.math.analysis.solvers.BrentSolver l: 234, susp 0.008130081300813009
Suspicious: 286 line org.apache.commons.math.analysis.solvers.BrentSolver l: 235, susp 0.008130081300813009
Suspicious: 287 line org.apache.commons.math.analysis.solvers.BrentSolver l: 236, susp 0.008130081300813009
Suspicious: 288 line org.apache.commons.math.analysis.solvers.BrentSolver l: 237, susp 0.008130081300813009
Suspicious: 289 line org.apache.commons.math.analysis.solvers.BrentSolver l: 259, susp 0.008130081300813009
Suspicious: 290 line org.apache.commons.math.analysis.solvers.BrentSolver l: 265, susp 0.008130081300813009
Suspicious: 291 line org.apache.commons.math.analysis.solvers.BrentSolver l: 267, susp 0.008130081300813009
Suspicious: 292 line org.apache.commons.math.analysis.solvers.BrentSolver l: 268, susp 0.008130081300813009
Suspicious: 293 line org.apache.commons.math.analysis.solvers.BrentSolver l: 276, susp 0.008130081300813009
Suspicious: 294 line org.apache.commons.math.analysis.solvers.BrentSolver l: 281, susp 0.008130081300813009
Suspicious: 295 line org.apache.commons.math.analysis.solvers.BrentSolver l: 246, susp 0.008064516129032258
Suspicious: 296 line org.apache.commons.math.analysis.solvers.BrentSolver l: 247, susp 0.008064516129032258
Suspicious: 297 line org.apache.commons.math.analysis.solvers.BrentSolver l: 248, susp 0.008064516129032258
Suspicious: 298 line org.apache.commons.math.analysis.solvers.BrentSolver l: 249, susp 0.008064516129032258
Suspicious: 299 line org.apache.commons.math.analysis.solvers.BrentSolver l: 253, susp 0.008064516129032258
Suspicious: 300 line org.apache.commons.math.analysis.solvers.BrentSolver l: 254, susp 0.008064516129032258
Suspicious: 301 line org.apache.commons.math.analysis.solvers.BrentSolver l: 294, susp 0.008064516129032258
Suspicious: 302 line org.apache.commons.math.analysis.solvers.BrentSolver l: 295, susp 0.008064516129032258
Suspicious: 303 line org.apache.commons.math.analysis.solvers.BrentSolver l: 297, susp 0.008064516129032258
Suspicious: 304 line org.apache.commons.math.analysis.solvers.BrentSolver l: 304, susp 0.008064516129032258
Suspicious: 305 line org.apache.commons.math.analysis.solvers.BrentSolver l: 305, susp 0.008064516129032258
Suspicious: 306 line org.apache.commons.math.analysis.solvers.BrentSolver l: 311, susp 0.008064516129032258
Suspicious: 307 line org.apache.commons.math.analysis.solvers.BrentSolver l: 312, susp 0.008064516129032258
Suspicious: 308 line org.apache.commons.math.analysis.solvers.BrentSolver l: 225, susp 0.007874015748031496
Suspicious: 309 line org.apache.commons.math.analysis.solvers.BrentSolver l: 226, susp 0.007874015748031496
Suspicious: 310 line org.apache.commons.math.analysis.solvers.BrentSolver l: 228, susp 0.007874015748031496
Suspicious: 311 line org.apache.commons.math.analysis.solvers.BrentSolver l: 229, susp 0.007874015748031496
Suspicious: 312 line org.apache.commons.math.analysis.solvers.BrentSolver l: 230, susp 0.007874015748031496
Suspicious: 313 line org.apache.commons.math.analysis.solvers.BrentSolver l: 239, susp 0.007874015748031496
Suspicious: 314 line org.apache.commons.math.analysis.solvers.BrentSolver l: 61, susp 0.007692307692307693
Suspicious: 315 line org.apache.commons.math.analysis.solvers.BrentSolver l: 62, susp 0.007692307692307693
Suspicious: 316 line org.apache.commons.math.analysis.solvers.BrentSolver l: 164, susp 0.007692307692307693
Suspicious: 317 line org.apache.commons.math.analysis.solvers.BrentSolver l: 165, susp 0.007692307692307693
Suspicious: 318 line org.apache.commons.math.analysis.solvers.BrentSolver l: 167, susp 0.007692307692307693
Suspicious: 319 line org.apache.commons.math.analysis.solvers.BrentSolver l: 169, susp 0.007692307692307693
Suspicious: 320 line org.apache.commons.math.analysis.solvers.BrentSolver l: 170, susp 0.007692307692307693
Suspicious: 321 line org.apache.commons.math.analysis.solvers.BrentSolver l: 173, susp 0.007692307692307693
Suspicious: 322 line org.apache.commons.math.analysis.solvers.BrentSolver l: 174, susp 0.007692307692307693
Suspicious: 323 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 165, susp 0.007352941176470588
Suspicious: 324 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 166, susp 0.007352941176470588
Suspicious: 325 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 167, susp 0.007352941176470588
Suspicious: 326 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 141, susp 0.006756756756756757
Suspicious: 327 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 142, susp 0.006756756756756757
Suspicious: 328 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 143, susp 0.006756756756756757
Suspicious: 329 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 144, susp 0.006756756756756757
Suspicious: 330 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 208, susp 0.006578947368421052
Suspicious: 331 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 213, susp 0.006578947368421052
Suspicious: 332 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 93, susp 0.006211180124223602
Suspicious: 333 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 94, susp 0.006211180124223602
Suspicious: 334 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 95, susp 0.006211180124223602
Suspicious: 335 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 96, susp 0.006211180124223602
Suspicious: 336 line org.apache.commons.math.stat.descriptive.moment.Mean l: 77, susp 0.006060606060606061
Suspicious: 337 line org.apache.commons.math.stat.descriptive.moment.Mean l: 78, susp 0.006060606060606061
Suspicious: 338 line org.apache.commons.math.stat.descriptive.moment.Mean l: 79, susp 0.006060606060606061
Suspicious: 339 line org.apache.commons.math.stat.descriptive.moment.Mean l: 80, susp 0.006060606060606061
Suspicious: 340 line org.apache.commons.math.stat.descriptive.summary.Sum l: 53, susp 0.005988023952095809
Suspicious: 341 line org.apache.commons.math.stat.descriptive.summary.Sum l: 54, susp 0.005988023952095809
Suspicious: 342 line org.apache.commons.math.stat.descriptive.summary.Sum l: 55, susp 0.005988023952095809
Suspicious: 343 line org.apache.commons.math.stat.descriptive.summary.Sum l: 56, susp 0.005988023952095809
Suspicious: 344 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 41, susp 0.005952380952380952
Suspicious: 345 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 102, susp 0.00546448087431694
Suspicious: 346 line org.apache.commons.math.ConvergingAlgorithmImpl l: 61, susp 0.005376344086021506
Suspicious: 347 line org.apache.commons.math.ConvergingAlgorithmImpl l: 62, susp 0.005376344086021506
Suspicious: 348 line org.apache.commons.math.ConvergingAlgorithmImpl l: 63, susp 0.005376344086021506
Suspicious: 349 line org.apache.commons.math.ConvergingAlgorithmImpl l: 64, susp 0.005376344086021506
Suspicious: 350 line org.apache.commons.math.ConvergingAlgorithmImpl l: 65, susp 0.005376344086021506
Suspicious: 351 line org.apache.commons.math.ConvergingAlgorithmImpl l: 66, susp 0.005376344086021506
Suspicious: 352 line org.apache.commons.math.ConvergingAlgorithmImpl l: 67, susp 0.005376344086021506
Suspicious: 353 line org.apache.commons.math.ConvergingAlgorithmImpl l: 68, susp 0.005376344086021506
Suspicious: 354 line org.apache.commons.math.ConvergingAlgorithmImpl l: 69, susp 0.005376344086021506
Suspicious: 355 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 79, susp 0.005376344086021506
Suspicious: 356 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 83, susp 0.005376344086021506
Suspicious: 357 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 88, susp 0.005376344086021506
Suspicious: 358 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 93, susp 0.005376344086021506
Suspicious: 359 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 98, susp 0.005376344086021506
Suspicious: 360 line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 76, susp 0.004166666666666667
Suspicious: 361 line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 77, susp 0.004166666666666667
Suspicious: 362 line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 78, susp 0.004166666666666667
Suspicious: 363 line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 79, susp 0.004166666666666667
Suspicious: 364 line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 80, susp 0.004166666666666667
Suspicious: 365 line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 81, susp 0.004166666666666667
Suspicious: 366 line org.apache.commons.math.MathRuntimeException l: 305, susp 0.004
Suspicious: 367 line org.apache.commons.math.MathRuntimeException$4 l: 305, susp 0.004
Suspicious: 368 line org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic l: 33, susp 0.003067484662576687
Suspicious: 369 line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 34, susp 0.0029239766081871343
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 110, susp 1.8
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 58, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 59, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 68, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 69, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 70, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 71, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 91, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 92, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 93, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 94, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 55, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 56, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 60, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 61, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 66, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 67, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 74, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 75, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 76, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 103, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 120, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 227, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 231, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 232, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 118, susp 0.8181818181818182
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 102, susp 0.8
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 474, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 152, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 153, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 233, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 234, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 102, susp 0.5
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 109, susp 0.5
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 115, susp 0.5
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 128, susp 0.5
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 91, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 92, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 92, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 93, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 94, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 95, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 95, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 96, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 96, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 97, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 97, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 98, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 99, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 100, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 105, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 106, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 106, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 107, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 107, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 108, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 110, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 110, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 169, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 176, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 141, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 144, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 147, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 148, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 206, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 207, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 168, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 173, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 175, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 180, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 191, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 136, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 137, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 203, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 204, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 205, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 222, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 225, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 228, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 229, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 747, susp 0.2857142857142857
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 780, susp 0.2857142857142857
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 466, susp 0.26666666666666666
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 466, susp 0.26666666666666666
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 173, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 149, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 150, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 151, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 161, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 162, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 163, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 165, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 168, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 169, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 170, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 172, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 177, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 58, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 59, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 60, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 61, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 69, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 70, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 73, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 74, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 75, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 106, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 123, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 234, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 238, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 239, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 103, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 138, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 390, susp 0.13793103448275862
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 391, susp 0.13793103448275862
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 100, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 101, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 101, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 102, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 102, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 102, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 103, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 103, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 106, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 107, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 113, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 114, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 120, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 125, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 126, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 132, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 184, susp 0.125
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 185, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 378, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 386, susp 0.12121212121212122
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 118, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 134, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 135, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 136, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 137, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 138, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 139, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 142, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 143, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 144, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 145, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.TestUtils l: 148, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 151, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 152, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 153, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 154, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 155, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 156, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 161, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 162, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 163, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 164, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 169, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 170, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 171, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 176, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 179, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 140, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 141, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 147, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 153, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 154, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 203, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 204, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 207, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 208, susp 0.1
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 209, susp 0.1
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 211, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 211, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 212, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 213, susp 0.1
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 215, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 124, susp 0.0975609756097561
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 125, susp 0.0975609756097561
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 128, susp 0.0975609756097561
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 131, susp 0.0975609756097561
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 134, susp 0.0975609756097561
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 157, susp 0.0975609756097561
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 160, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 161, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 162, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.TestUtils l: 163, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 163, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 164, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.TestUtils l: 165, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.TestUtils l: 167, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 167, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.TestUtils l: 169, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.TestUtils l: 172, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.TestUtils l: 173, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 225, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 230, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 164, susp 0.07692307692307693
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 165, susp 0.07692307692307693
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 169, susp 0.07692307692307693
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 174, susp 0.07692307692307693
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 141, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 145, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 150, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 151, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 152, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 156, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 160, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 443, susp 0.058823529411764705
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 447, susp 0.058823529411764705
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 286, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 287, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 196, susp 0.05263157894736842
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 127, susp 0.043478260869565216
Suspicious:  line org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest l: 128, susp 0.043478260869565216
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 181, susp 0.038461538461538464
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 186, susp 0.038461538461538464
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 187, susp 0.038461538461538464
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 265, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 266, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 270, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 279, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 280, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 286, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 290, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 291, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 292, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.util.MathUtils l: 663, susp 0.03389830508474576
Suspicious:  line org.apache.commons.math.util.MathUtils l: 629, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 632, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 633, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 636, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 637, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 643, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 650, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 656, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 660, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 666, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 669, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 670, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 614, susp 0.03278688524590164
Suspicious:  line org.apache.commons.math.util.MathUtils l: 615, susp 0.03278688524590164
Suspicious:  line org.apache.commons.math.util.MathUtils l: 616, susp 0.03278688524590164
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 101, susp 0.02857142857142857
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 102, susp 0.02857142857142857
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 93, susp 0.027777777777777776
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 96, susp 0.027777777777777776
Suspicious:  line org.apache.commons.math.analysis.SinFunction l: 31, susp 0.025
Suspicious:  line org.apache.commons.math.analysis.SinFunction l: 37, susp 0.023809523809523808
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 520, susp 0.022727272727272728
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 521, susp 0.022727272727272728
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 300, susp 0.022222222222222223
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 519, susp 0.017241379310344827
Suspicious:  line org.apache.commons.math.random.RandomDataImpl l: 523, susp 0.017241379310344827
Suspicious:  line org.apache.commons.math.random.JDKRandomGenerator l: 28, susp 0.016129032258064516
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 156, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 157, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 160, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 163, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 164, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 165, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 167, susp 0.012658227848101266
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 155, susp 0.0125
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 121, susp 0.011764705882352941
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 122, susp 0.011764705882352941
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 123, susp 0.011764705882352941
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 124, susp 0.011764705882352941
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 125, susp 0.011764705882352941
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 128, susp 0.011764705882352941
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic l: 57, susp 0.011111111111111112
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic l: 60, susp 0.011111111111111112
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 250, susp 0.010309278350515464
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 251, susp 0.010309278350515464
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 299, susp 0.010309278350515464
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 277, susp 0.00980392156862745
Suspicious:  line org.apache.commons.math.util.MathUtils l: 657, susp 0.00980392156862745
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 298, susp 0.009345794392523364
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 306, susp 0.009174311926605505
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 307, susp 0.009174311926605505
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 308, susp 0.009174311926605505
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 309, susp 0.009174311926605505
Suspicious:  line org.apache.commons.math.util.MathUtils l: 661, susp 0.009174311926605505
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 232, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 233, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 234, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 235, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 236, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 237, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 259, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 265, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 267, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 268, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 276, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 281, susp 0.008130081300813009
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 246, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 247, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 248, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 249, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 253, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 254, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 294, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 295, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 297, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 304, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 305, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 311, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 312, susp 0.008064516129032258
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 225, susp 0.007874015748031496
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 226, susp 0.007874015748031496
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 228, susp 0.007874015748031496
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 229, susp 0.007874015748031496
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 230, susp 0.007874015748031496
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 239, susp 0.007874015748031496
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 61, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 62, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 164, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 165, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 167, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 169, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 170, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 173, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.BrentSolver l: 174, susp 0.007692307692307693
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 165, susp 0.007352941176470588
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 166, susp 0.007352941176470588
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 167, susp 0.007352941176470588
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 141, susp 0.006756756756756757
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 142, susp 0.006756756756756757
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 143, susp 0.006756756756756757
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 144, susp 0.006756756756756757
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 208, susp 0.006578947368421052
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 213, susp 0.006578947368421052
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 93, susp 0.006211180124223602
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 94, susp 0.006211180124223602
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 95, susp 0.006211180124223602
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 96, susp 0.006211180124223602
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 77, susp 0.006060606060606061
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 78, susp 0.006060606060606061
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 79, susp 0.006060606060606061
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.Mean l: 80, susp 0.006060606060606061
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 53, susp 0.005988023952095809
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 54, susp 0.005988023952095809
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 55, susp 0.005988023952095809
Suspicious:  line org.apache.commons.math.stat.descriptive.summary.Sum l: 56, susp 0.005988023952095809
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl l: 41, susp 0.005952380952380952
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 102, susp 0.00546448087431694
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 61, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 62, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 63, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 64, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 65, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 66, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 67, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 68, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.ConvergingAlgorithmImpl l: 69, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 79, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 83, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 88, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 93, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 98, susp 0.005376344086021506
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 76, susp 0.004166666666666667
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 77, susp 0.004166666666666667
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 78, susp 0.004166666666666667
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 79, susp 0.004166666666666667
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 80, susp 0.004166666666666667
Suspicious:  line org.apache.commons.math.stat.descriptive.moment.FirstMoment l: 81, susp 0.004166666666666667
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 305, susp 0.004
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 305, susp 0.004
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic l: 33, susp 0.003067484662576687
Suspicious:  line org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic l: 34, susp 0.0029239766081871343
Executing time Fault localization: 20 sec
Setting up the max to 208890 milliseconds (208 sec)
---- Initial suspicious size: 369
Creating variant 1
--ModifPoint:CtReturnImpl, suspValue 1.8, line 110, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0909090909090908, line 58, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.0909090909090908, line 69, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.0909090909090908, line 70, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 1.0909090909090908, line 91, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0909090909090908, line 92, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0909090909090908, line 93, file AbstractFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.0909090909090908, line 94, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.8888888888888888, line 60, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.8888888888888888, line 75, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8888888888888888, line 103, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8888888888888888, line 120, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.8888888888888888, line 227, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8888888888888888, line 231, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8181818181818182, line 118, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8, line 102, file AbstractFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.6666666666666666, line 474, file MathRuntimeException.java
--ModifPoint:CtInvocationImpl, suspValue 0.5714285714285714, line 152, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.5714285714285714, line 153, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.5714285714285714, line 233, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.5714285714285714, line 234, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 102, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 115, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 128, file MathRuntimeException.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 91, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 92, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 92, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 93, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 94, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 95, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 95, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 96, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 96, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 97, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 97, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 98, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 99, file ProperBigFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 100, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 105, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 106, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 106, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 107, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 107, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 108, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.4444444444444444, line 110, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.4444444444444444, line 110, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 169, file BigFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 176, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4, line 141, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4, line 144, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4, line 147, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4, line 148, file ProperFractionFormat.java
--ModifPoint:CtThrowImpl, suspValue 0.4, line 206, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.36363636363636365, line 168, file BigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.36363636363636365, line 173, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.36363636363636365, line 175, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.36363636363636365, line 180, file BigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.36363636363636365, line 191, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 136, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 137, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 203, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 204, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 205, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 222, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.3333333333333333, line 225, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 228, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 229, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.2857142857142857, line 747, file BigFraction.java
--ModifPoint:CtReturnImpl, suspValue 0.2857142857142857, line 780, file BigFraction.java
--ModifPoint:CtReturnImpl, suspValue 0.26666666666666666, line 466, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.26666666666666666, line 466, file MathRuntimeException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 173, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.19047619047619047, line 149, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.19047619047619047, line 150, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19047619047619047, line 161, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19047619047619047, line 162, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19047619047619047, line 163, file AbstractFormat.java
--ModifPoint:CtIfImpl, suspValue 0.19047619047619047, line 165, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19047619047619047, line 168, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.19047619047619047, line 170, file AbstractFormat.java
--ModifPoint:CtIfImpl, suspValue 0.19047619047619047, line 172, file AbstractFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.19047619047619047, line 177, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.17391304347826086, line 60, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.17391304347826086, line 74, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.17391304347826086, line 106, file BigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.17391304347826086, line 123, file BigFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.17391304347826086, line 234, file ProperBigFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.17391304347826086, line 238, file ProperBigFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.14285714285714285, line 103, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.14285714285714285, line 138, file BrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.13793103448275862, line 390, file BigFraction.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 100, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 101, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 101, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 102, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 102, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 102, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 103, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.125, line 103, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.125, line 106, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 107, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.125, line 113, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 114, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 120, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.125, line 125, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 126, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 132, file BrentSolver.java
--ModifPoint:CtThrowImpl, suspValue 0.125, line 184, file BrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.125, line 378, file Fraction.java
--ModifPoint:CtReturnImpl, suspValue 0.12121212121212122, line 386, file Fraction.java
--ModifPoint:CtReturnImpl, suspValue 0.1111111111111111, line 118, file ProperBigFractionFormat.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=134, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=135, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=136, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=137, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=138, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=139, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=142, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=143, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=144, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=145, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=148, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=151, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=152, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=153, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=154, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=155, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=156, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=161, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=162, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=163, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=164, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=169, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=170, susp=0.1111111111111111]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=171, susp=0.1111111111111111]
--ModifPoint:CtIfImpl, suspValue 0.1111111111111111, line 176, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.1111111111111111, line 179, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1, line 140, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 141, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 147, file BigFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.1, line 153, file BigFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.1, line 154, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 203, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1, line 204, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1, line 207, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1, line 208, file Mean.java
--ModifPoint:CtThrowImpl, suspValue 0.1, line 209, file UnivariateRealSolverImpl.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1, line 211, file Mean.java
--ModifPoint:CtForImpl, suspValue 0.1, line 212, file Mean.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.1, line 213, file Mean.java
--ModifPoint:CtReturnImpl, suspValue 0.1, line 215, file Mean.java
--ModifPoint:CtIfImpl, suspValue 0.0975609756097561, line 125, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.0975609756097561, line 128, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.0975609756097561, line 131, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.0975609756097561, line 134, file BigFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.09090909090909091, line 160, file Sum.java
--ModifPoint:CtIfImpl, suspValue 0.09090909090909091, line 161, file Sum.java
--ModifPoint:CtAssignmentImpl, suspValue 0.09090909090909091, line 162, file Sum.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=163, susp=0.09090909090909091]
--ModifPoint:CtForImpl, suspValue 0.09090909090909091, line 163, file Sum.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.09090909090909091, line 164, file Sum.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=165, susp=0.09090909090909091]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=167, susp=0.09090909090909091]
--ModifPoint:CtReturnImpl, suspValue 0.09090909090909091, line 167, file Sum.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=169, susp=0.09090909090909091]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=172, susp=0.09090909090909091]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=null, lineNumber=173, susp=0.09090909090909091]
--ModifPoint:CtIfImpl, suspValue 0.09090909090909091, line 225, file UnivariateRealSolverImpl.java
--ModifPoint:CtIfImpl, suspValue 0.07692307692307693, line 164, file AbstractUnivariateStatistic.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07692307692307693, line 165, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.07692307692307693, line 169, file AbstractUnivariateStatistic.java
--ModifPoint:CtReturnImpl, suspValue 0.07692307692307693, line 174, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.07142857142857142, line 141, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.07142857142857142, line 145, file AbstractUnivariateStatistic.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.07142857142857142, line 150, file AbstractUnivariateStatistic.java
--ModifPoint:CtForImpl, suspValue 0.07142857142857142, line 151, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.07142857142857142, line 152, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.07142857142857142, line 156, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.07142857142857142, line 160, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.058823529411764705, line 443, file RandomDataImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.058823529411764705, line 447, file RandomDataImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.05555555555555555, line 286, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.05555555555555555, line 287, file BrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.05263157894736842, line 196, file UnivariateRealSolverImpl.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=127, susp=0.043478260869565216]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest, methodName=null, lineNumber=128, susp=0.043478260869565216]
--ModifPoint:CtIfImpl, suspValue 0.038461538461538464, line 181, file RandomDataImpl.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.038461538461538464, line 186, file RandomDataImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.038461538461538464, line 187, file RandomDataImpl.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 266, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 270, file Fraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.034482758620689655, line 279, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 280, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 286, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.034482758620689655, line 290, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.034482758620689655, line 291, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03389830508474576, line 663, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03305785123966942, line 629, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03305785123966942, line 632, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03305785123966942, line 633, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03305785123966942, line 636, file MathUtils.java
--ModifPoint:CtWhileImpl, suspValue 0.03305785123966942, line 637, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03305785123966942, line 643, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03305785123966942, line 650, file MathUtils.java
--ModifPoint:CtWhileImpl, suspValue 0.03305785123966942, line 656, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03305785123966942, line 660, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03305785123966942, line 666, file MathUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.03305785123966942, line 670, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03278688524590164, line 614, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03278688524590164, line 615, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03278688524590164, line 616, file MathUtils.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.analysis.SinFunction, methodName=null, lineNumber=31, susp=0.025]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.analysis.SinFunction, methodName=null, lineNumber=37, susp=0.023809523809523808]
--ModifPoint:CtAssignmentImpl, suspValue 0.022727272727272728, line 520, file RandomDataImpl.java
--ModifPoint:CtInvocationImpl, suspValue 0.022727272727272728, line 521, file RandomDataImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.022222222222222223, line 300, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.017241379310344827, line 519, file RandomDataImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.017241379310344827, line 523, file RandomDataImpl.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.012658227848101266, line 156, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.012658227848101266, line 157, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.012658227848101266, line 160, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.012658227848101266, line 163, file Mean.java
--ModifPoint:CtForImpl, suspValue 0.012658227848101266, line 164, file Mean.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.012658227848101266, line 165, file Mean.java
--ModifPoint:CtReturnImpl, suspValue 0.012658227848101266, line 167, file Mean.java
--ModifPoint:CtIfImpl, suspValue 0.0125, line 155, file Mean.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011764705882352941, line 121, file Sum.java
--ModifPoint:CtIfImpl, suspValue 0.011764705882352941, line 122, file Sum.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011764705882352941, line 123, file Sum.java
--ModifPoint:CtForImpl, suspValue 0.011764705882352941, line 124, file Sum.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.011764705882352941, line 125, file Sum.java
--ModifPoint:CtReturnImpl, suspValue 0.011764705882352941, line 128, file Sum.java
--ModifPoint:CtIfImpl, suspValue 0.011111111111111112, line 57, file AbstractStorelessUnivariateStatistic.java
--ModifPoint:CtReturnImpl, suspValue 0.011111111111111112, line 60, file AbstractStorelessUnivariateStatistic.java
--ModifPoint:CtInvocationImpl, suspValue 0.010309278350515464, line 250, file BrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.010309278350515464, line 251, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.010309278350515464, line 299, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.00980392156862745, line 277, file BrentSolver.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.00980392156862745, line 657, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009345794392523364, line 298, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009174311926605505, line 306, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009174311926605505, line 307, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009174311926605505, line 308, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009174311926605505, line 309, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009174311926605505, line 661, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 232, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 233, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 234, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 235, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 236, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 237, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.008130081300813009, line 259, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008130081300813009, line 265, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 267, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008130081300813009, line 268, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008130081300813009, line 276, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008130081300813009, line 281, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.008064516129032258, line 246, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.008064516129032258, line 247, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008064516129032258, line 249, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008064516129032258, line 253, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008064516129032258, line 294, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008064516129032258, line 295, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008064516129032258, line 297, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.008064516129032258, line 304, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.008064516129032258, line 305, file BrentSolver.java
--ModifPoint:CtUnaryOperatorImpl, suspValue 0.008064516129032258, line 311, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007874015748031496, line 225, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007874015748031496, line 226, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007874015748031496, line 228, file BrentSolver.java
--ModifPoint:CtWhileImpl, suspValue 0.007874015748031496, line 229, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.007874015748031496, line 230, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.007874015748031496, line 239, file BrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.007692307692307693, line 164, file BrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.007692307692307693, line 165, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007692307692307693, line 167, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007692307692307693, line 169, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007692307692307693, line 170, file BrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.007692307692307693, line 173, file BrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.007692307692307693, line 174, file BrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.007352941176470588, line 165, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.007352941176470588, line 166, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006756756756756757, line 141, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006756756756756757, line 142, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006756756756756757, line 143, file UnivariateRealSolverImpl.java
--ModifPoint:CtIfImpl, suspValue 0.006578947368421052, line 208, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006211180124223602, line 94, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006211180124223602, line 95, file UnivariateRealSolverImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006060606060606061, line 78, file Mean.java
--ModifPoint:CtAssignmentImpl, suspValue 0.006060606060606061, line 79, file Mean.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005988023952095809, line 54, file Sum.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005988023952095809, line 55, file Sum.java
--ModifPoint:CtReturnImpl, suspValue 0.00546448087431694, line 102, file AbstractUnivariateStatistic.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 62, file ConvergingAlgorithmImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 63, file ConvergingAlgorithmImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 64, file ConvergingAlgorithmImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 65, file ConvergingAlgorithmImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 66, file ConvergingAlgorithmImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 67, file ConvergingAlgorithmImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.005376344086021506, line 68, file ConvergingAlgorithmImpl.java
--ModifPoint:CtIfImpl, suspValue 0.005376344086021506, line 79, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.005376344086021506, line 83, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.005376344086021506, line 88, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.005376344086021506, line 93, file AbstractUnivariateStatistic.java
--ModifPoint:CtIfImpl, suspValue 0.005376344086021506, line 98, file AbstractUnivariateStatistic.java
--ModifPoint:CtAssignmentImpl, suspValue 0.004166666666666667, line 77, file FirstMoment.java
--ModifPoint:CtAssignmentImpl, suspValue 0.004166666666666667, line 78, file FirstMoment.java
--ModifPoint:CtAssignmentImpl, suspValue 0.004166666666666667, line 79, file FirstMoment.java
--ModifPoint:CtAssignmentImpl, suspValue 0.004166666666666667, line 80, file FirstMoment.java
--ModifPoint:CtReturnImpl, suspValue 0.004, line 305, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.004, line 305, file MathRuntimeException.java
Total suspicious from FL: 369,  277
Total ModPoint created: 277
Creating program variant #1, [Variant id: 1, #gens: 277, #ops: 0, parent:-]
Calculating fitness
Calculating fitness for original program variant.
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout208secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.geometry.RotationOrderTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.estimation.EstimatedParameterTest  org.apache.commons.math.linear.CholeskyDecompositionImplTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.analysis.BinaryFunctionTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.DuplicateSampleAbscissaExceptionTest  org.apache.commons.math.estimation.MinpackTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.FunctionEvaluationExceptionTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.inference.TTestFactoryTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.linear.LUDecompositionImplTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.QRDecompositionImplTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.analysis.ComposableFunctionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.geometry.Vector3DTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.linear.FieldLUDecompositionImplTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.linear.SingularValueDecompositionImplTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.linear.InvalidMatrixExceptionTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.ConvergenceExceptionTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.linear.RealMatrixImplTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.linear.EigenDecompositionImplTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.geometry.Vector3DFormatTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.linear.AbstractRealVectorTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.estimation.WeightedMeasurementTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.linear.MatrixIndexExceptionTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest  org.apache.commons.math.optimization.direct.MultiDirectionalTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.linear.BigMatrixImplTest  org.apache.commons.math.stat.inference.ChiSquareFactoryTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.optimization.univariate.BrentMinimizerTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ArgumentOutsideDomainExceptionTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.MaxIterationsExceededExceptionTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.direct.NelderMeadTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.geometry.RotationTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.geometry.FrenchVector3DFormatTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.MathConfigurationExceptionTest  org.apache.commons.math.estimation.GaussNewtonEstimatorTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 2142] ,[]
The original fitness is : 1.0
----------------------------
---Configuration properties
p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
p:workingDirectory= /Users/marekmazur/astor/./output_astor
p:keepcomments= true
p:maxnumvariablesperingredient= 10
p:folderDiff= ./diffSolutions
p:evo_affected_by_op= true
p:clusteringfilename= clustering.csv
p:validation= process
p:modificationpointnavigation= weight
p:transformingredient= false
p:diffcontext= 0
p:evo_buggy_class= true
p:runjava7code= false
p:manipulatesuper= false
p:forceExecuteRegression= false
p:skipfitnessinitialpopulation= false
p:filterfaultlocalization= true
p:population= 1
p:maxtimefactor= 10
p:elementsToMutate= 10
p:parsesourcefromoriginal= true
p:alternativecompliancelevel= 8
p:bugId= 280
p:regressionforfaultlocalization= true
p:max_synthesis_step= 10000
p:failing= org.apache.commons.math.analysis.solvers.BrentSolverTest
p:maxmodificationpoints= 1000
p:projectIdentifier= 
p:savecompletepatched= true
p:synthesis_depth= 3
p:seed= 10
p:applyCrossover= false
p:executorjar= ./lib/jtestex7.jar
p:binjavafolder= /target/classes/
p:version-location= ./math-version/
p:tmax1= 10000
p:tmax2= 208890
p:continuewhenmodelfail= true
p:locationGzoltarJar= ./lib/
p:logtestexecution= false
p:processoutputinfile= false
p:gzoltarVersion= 1.7.3
p:javacompliancelevel= 8
p:gzoltarpackagetonotinstrument= junit.framework
p:diff_type= relative
p:cleantemplates= true
p:stopfirst= true
p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
p:testbystep= false
p:maxtime= 60
p:preservelinenumbers= true
p:resetoperations= false
p:forcesubprocesskilling= false
p:jvm4evosuitetestexecution= /Users/marekmazur/Library/Java/JavaVirtualMachines/openjdk-19.0.1/Contents/Home/bin
p:dependenciespath= /Users/marekmazur/astor/examples/libs/junit-4.4.jar
p:pathToMVNRepository= 
p:limitbysuspicious= true
p:faultlocalization= flacoco
p:maxsuspcandidates= 1000
p:antipattern= false
p:reintroduce= PARENTS:ORIGINAL
p:multipointmodification= false
p:probabilistictransformation= true
p:mutationrate= 1 
p:jvm4testexecution= /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:mode= jgenprog
p:pvariantfoldername= variant-
p:flthreshold= 0
p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
p:nrPlaceholders= 1
p:nolog= False
p:saveall= false
p:evoRunOnBuggyClass= true
p:learningdir= 
p:bintestfolder= /target/test-classes/
p:evosuiteresultfolder= evosuite
p:operatorspace= irr-statements
p:resourcesfolder= /src/main/resources:/src/test/resources:
p:includeZeros= false
p:allpoints= false
p:collectonlyusedmethod= false
p:maxVarCombination= 1000
p:timezone= America/Los_Angeles
p:skipfaultlocalization= false
p:savesolution= true
p:maxGeneration= 1000000
p:evosuitetimeout= 120
p:packageToInstrument= org.apache.commons
p:uniqueoptogen= false
p:scope= local
p:srcjavafolder= /src/java/
p:commandTrunk= 50000
p:metid= 0
p:ignoredTestCases= 
p:savespoonmodelondisk= false
p:targetelementprocessor= statements
p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
p:maxCombinationVariableLimit= false
p:jvmversion= 1.8.0_202
p:nomodificationconvergence= 100
p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
p:srctestfolder= /src/test/
p:outputjsonresult= true
p:gzoltartestpackagetoexclude= junit.framework
p:probagenmutation= false
p:resetmodel= true
p:jsonoutputname= astor_output
p:numberExecutions= 1
p:ignoreflakyinfl= false
p:evoDSE= false
p:duplicateingredientsinspace= false
p:overridemaxtime= true
p:maxnumbersolutions= 1000000
p:logsattemps= true
p:location= /Users/marekmazur/astor/defects4j/math-73
p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
----------------------------
----Starting Solution Search
----------Running generation: 1, population size: 1

***** Generation 1 : 0
**Parent Variant: [Variant id: 1, #gens: 277, #ops: 0, parent:-]

--Child created id: 2
--Creating new operations for variant [Variant id: 2, #gens: 277, #ops: 0, parent:1]
---analyzing modificationPoint position: 63
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java222
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2, #gens: 278, #ops: 1, parent:1] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-2/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(1): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1(f=1.0), 2(f=1.0), )
Selected to next generation: IDs2--> (1(f=1.0), )
----------Running generation: 2, population size: 1

***** Generation 2 : 0
**Parent Variant: [Variant id: 3, #gens: 277, #ops: 0, parent:-]

--Child created id: 4
--Creating new operations for variant [Variant id: 4, #gens: 277, #ops: 0, parent:3]
---analyzing modificationPoint position: 34
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 101
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 1 not mutation generated in  // return the first endpoint if it is good enough double yMin = f.value(min)
---analyzing modificationPoint position: 133
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 2 not mutation generated in  sum = 0.0
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 31
---modifPoint 4 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 4, #gens: 277, #ops: 1, parent:3] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 4
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-4/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(2): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (3(f=1.0), 4(f=1.0), )
Selected to next generation: IDs2--> (3(f=1.0), )
----------Running generation: 3, population size: 1

***** Generation 3 : 0
**Parent Variant: [Variant id: 5, #gens: 277, #ops: 0, parent:-]

--Child created id: 6
--Creating new operations for variant [Variant id: 6, #gens: 277, #ops: 0, parent:5]
---analyzing modificationPoint position: 24
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 135
location: Sum.java164
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += values[i] * weights[i] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 6, #gens: 276, #ops: 1, parent:5] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 6
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-6/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(3): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += values[i] * weights[i] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (5(f=1.0), 6(f=1.0), )
Selected to next generation: IDs2--> (5(f=1.0), )
----------Running generation: 4, population size: 1

***** Generation 4 : 0
**Parent Variant: [Variant id: 7, #gens: 277, #ops: 0, parent:-]

--Child created id: 8
--Creating new operations for variant [Variant id: 8, #gens: 277, #ops: 0, parent:7]
---analyzing modificationPoint position: 146
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [containsPositiveWeight]
--> var from patch: containsPositiveWeight spoon.support.reflect.code.CtVariableWriteImpl
location: AbstractUnivariateStatistic.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `containsPositiveWeight = true` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 152, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `containsPositiveWeight = true` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 8, #gens: 278, #ops: 1, parent:7] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 8
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-8/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(4): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `containsPositiveWeight = true` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (7(f=1.0), 8(f=1.0), )
Selected to next generation: IDs2--> (7(f=1.0), )
----------Running generation: 5, population size: 1

***** Generation 5 : 0
**Parent Variant: [Variant id: 9, #gens: 277, #ops: 0, parent:-]

--Child created id: 10
--Creating new operations for variant [Variant id: 10, #gens: 277, #ops: 0, parent:9]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 26
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 10, #gens: 276, #ops: 1, parent:9] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 10
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-10/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(5): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (9(f=1.0), 10(f=1.0), )
Selected to next generation: IDs2--> (9(f=1.0), )
----------Running generation: 6, population size: 1

***** Generation 6 : 0
**Parent Variant: [Variant id: 11, #gens: 277, #ops: 0, parent:-]

--Child created id: 12
--Creating new operations for variant [Variant id: 12, #gens: 277, #ops: 0, parent:11]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 119
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: Mean.java204
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...] ` -topatch--> `org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.stat.descriptive.moment.Mean line: 204, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...] ` -topatch--> `org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 12, #gens: 277, #ops: 1, parent:11] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 12
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-12/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(6): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...] ` -topatch--> `org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (11(f=1.0), 12(f=1.0), )
Selected to next generation: IDs2--> (11(f=1.0), )
----------Running generation: 7, population size: 1

***** Generation 7 : 0
**Parent Variant: [Variant id: 13, #gens: 277, #ops: 0, parent:-]

--Child created id: 14
--Creating new operations for variant [Variant id: 14, #gens: 277, #ops: 0, parent:13]
---analyzing modificationPoint position: 144
---modifPoint 0 not mutation generated in  boolean containsPositiveWeight = false
---analyzing modificationPoint position: 84
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 114
location: BigFraction.java141
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 14, #gens: 276, #ops: 1, parent:13] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 14
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-14/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(7): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (13(f=1.0), 14(f=1.0), )
Selected to next generation: IDs2--> (13(f=1.0), )
----------Running generation: 8, population size: 1

***** Generation 8 : 0
**Parent Variant: [Variant id: 15, #gens: 277, #ops: 0, parent:-]

--Child created id: 16
--Creating new operations for variant [Variant id: 16, #gens: 277, #ops: 0, parent:15]
---analyzing modificationPoint position: 23
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 0 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 84
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 127
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 2 not mutation generated in  if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 0
---modifPoint 4 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 76
---modifPoint 5 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 16, #gens: 276, #ops: 1, parent:15] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 16
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-16/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(8): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (15(f=1.0), 16(f=1.0), )
Selected to next generation: IDs2--> (15(f=1.0), )
----------Running generation: 9, population size: 1

***** Generation 9 : 0
**Parent Variant: [Variant id: 17, #gens: 277, #ops: 0, parent:-]

--Child created id: 18
--Creating new operations for variant [Variant id: 18, #gens: 277, #ops: 0, parent:17]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 79
location: AbstractFormat.java170
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 18, #gens: 276, #ops: 1, parent:17] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 18
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-18/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(9): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (17(f=1.0), 18(f=1.0), )
Selected to next generation: IDs2--> (17(f=1.0), )
----------Running generation: 10, population size: 1

***** Generation 10 : 0
**Parent Variant: [Variant id: 19, #gens: 277, #ops: 0, parent:-]

--Child created id: 20
--Creating new operations for variant [Variant id: 20, #gens: 277, #ops: 0, parent:19]
---analyzing modificationPoint position: 57
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 20, #gens: 277, #ops: 1, parent:19] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 20
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-20/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(10): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (19(f=1.0), 20(f=1.0), )
Selected to next generation: IDs2--> (19(f=1.0), )
----------Running generation: 11, population size: 1

***** Generation 11 : 0
**Parent Variant: [Variant id: 21, #gens: 277, #ops: 0, parent:-]

--Child created id: 22
--Creating new operations for variant [Variant id: 22, #gens: 277, #ops: 0, parent:21]
---analyzing modificationPoint position: 20
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 22, #gens: 276, #ops: 1, parent:21] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 22
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-22/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(11): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (21(f=1.0), 22(f=1.0), )
Selected to next generation: IDs2--> (21(f=1.0), )
----------Running generation: 12, population size: 1

***** Generation 12 : 0
**Parent Variant: [Variant id: 23, #gens: 277, #ops: 0, parent:-]

--Child created id: 24
--Creating new operations for variant [Variant id: 24, #gens: 277, #ops: 0, parent:23]
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 15
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 87
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 99
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 4 not mutation generated in  // return the initial guess if it is good enough double yInitial = f.value(initial)
---analyzing modificationPoint position: 26
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 24, #gens: 277, #ops: 1, parent:23] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 24
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-24/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(12): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (23(f=1.0), 24(f=1.0), )
Selected to next generation: IDs2--> (23(f=1.0), )
----------Running generation: 13, population size: 1

***** Generation 13 : 0
**Parent Variant: [Variant id: 25, #gens: 277, #ops: 0, parent:-]

--Child created id: 26
--Creating new operations for variant [Variant id: 26, #gens: 277, #ops: 0, parent:25]
---analyzing modificationPoint position: 80
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java172
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 172, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 26, #gens: 278, #ops: 1, parent:25] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 26, errors: [AbstractFormat.java:171: error: incompatible types: java.text.NumberFormat cannot be converted to char
			pos.setIndex(index); 			return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
			                     			                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(13): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (25(f=1.0), 26(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (25(f=1.0), )
----------Running generation: 14, population size: 1

***** Generation 14 : 0
**Parent Variant: [Variant id: 27, #gens: 277, #ops: 0, parent:-]

--Child created id: 28
--Creating new operations for variant [Variant id: 28, #gens: 277, #ops: 0, parent:27]
---analyzing modificationPoint position: 221
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  if (p > 0.0) { 	p1 = -p1; } else { 	p = -p; }
---analyzing modificationPoint position: 34
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 145
location: AbstractUnivariateStatistic.java151
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 28, #gens: 276, #ops: 1, parent:27] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 28
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-28/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(14): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (27(f=1.0), 28(f=1.0), )
Selected to next generation: IDs2--> (27(f=1.0), )
----------Running generation: 15, population size: 1

***** Generation 15 : 0
**Parent Variant: [Variant id: 29, #gens: 277, #ops: 0, parent:-]

--Child created id: 30
--Creating new operations for variant [Variant id: 30, #gens: 277, #ops: 0, parent:29]
---analyzing modificationPoint position: 66
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 91
location: ProperBigFractionFormat.java100
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 30, #gens: 276, #ops: 1, parent:29] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 30
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-30/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(15): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (29(f=1.0), 30(f=1.0), )
Selected to next generation: IDs2--> (29(f=1.0), )
----------Running generation: 16, population size: 1

***** Generation 16 : 0
**Parent Variant: [Variant id: 31, #gens: 277, #ops: 0, parent:-]

--Child created id: 32
--Creating new operations for variant [Variant id: 32, #gens: 277, #ops: 0, parent:31]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 32, #gens: 276, #ops: 1, parent:31] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 32
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-32/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(16): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (31(f=1.0), 32(f=1.0), )
Selected to next generation: IDs2--> (31(f=1.0), )
----------Running generation: 17, population size: 1

***** Generation 17 : 0
**Parent Variant: [Variant id: 33, #gens: 277, #ops: 0, parent:-]

--Child created id: 34
--Creating new operations for variant [Variant id: 34, #gens: 277, #ops: 0, parent:33]
---analyzing modificationPoint position: 77
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 0 not mutation generated in  if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...]
---analyzing modificationPoint position: 156
Templates availables156
Attempts Base Ingredients  1 total 156
---modifPoint 1 not mutation generated in  return ((int) (((r * upper) + ((1.0 - r) * lower)) + r))
---analyzing modificationPoint position: 128
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 2 not mutation generated in  if (den == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("d[...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 44
---modifPoint 5 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 74
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java161
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 34, #gens: 277, #ops: 1, parent:33] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 34
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-34/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(17): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (33(f=1.0), 34(f=1.0), )
Selected to next generation: IDs2--> (33(f=1.0), )
----------Running generation: 18, population size: 1

***** Generation 18 : 0
**Parent Variant: [Variant id: 35, #gens: 277, #ops: 0, parent:-]

--Child created id: 36
--Creating new operations for variant [Variant id: 36, #gens: 277, #ops: 0, parent:35]
---analyzing modificationPoint position: 156
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 0 not mutation generated in  return ((int) (((r * upper) + ((1.0 - r) * lower)) + r))
---analyzing modificationPoint position: 48
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 36, #gens: 277, #ops: 1, parent:35] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 36
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-36/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(18): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (35(f=1.0), 36(f=1.0), )
Selected to next generation: IDs2--> (35(f=1.0), )
----------Running generation: 19, population size: 1

***** Generation 19 : 0
**Parent Variant: [Variant id: 37, #gens: 277, #ops: 0, parent:-]

--Child created id: 38
--Creating new operations for variant [Variant id: 38, #gens: 277, #ops: 0, parent:37]
---analyzing modificationPoint position: 24
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 41
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 38, #gens: 276, #ops: 1, parent:37] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 38
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-38/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(19): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (37(f=1.0), 38(f=1.0), )
Selected to next generation: IDs2--> (37(f=1.0), )
----------Running generation: 20, population size: 1

***** Generation 20 : 0
**Parent Variant: [Variant id: 39, #gens: 277, #ops: 0, parent:-]

--Child created id: 40
--Creating new operations for variant [Variant id: 40, #gens: 277, #ops: 0, parent:39]
---analyzing modificationPoint position: 29
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 120
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [incMoment, moment]
--> var from patch: incMoment spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: moment spoon.support.reflect.code.CtFieldReadImpl
location: Mean.java207
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// Compute initial estimate using definitional formula double sumw = sum.evaluate(weights, begin, le[...] ` -topatch--> `if (incMoment) { 	moment.clear(); }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.moment.Mean line: 207, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// Compute initial estimate using definitional formula double sumw = sum.evaluate(weights, begin, le[...] ` -topatch--> `if (incMoment) { 	moment.clear(); }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 40, #gens: 278, #ops: 1, parent:39] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 40
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-40/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(20): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// Compute initial estimate using definitional formula double sumw = sum.evaluate(weights, begin, le[...] ` -topatch--> `if (incMoment) { 	moment.clear(); }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (39(f=1.0), 40(f=1.0), )
Selected to next generation: IDs2--> (39(f=1.0), )
----------Running generation: 21, population size: 1

***** Generation 21 : 0
**Parent Variant: [Variant id: 41, #gens: 277, #ops: 0, parent:-]

--Child created id: 42
--Creating new operations for variant [Variant id: 42, #gens: 277, #ops: 0, parent:41]
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch []
location: FractionFormat.java206
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 42, #gens: 277, #ops: 1, parent:41] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 42
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-42/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(21): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (41(f=1.0), 42(f=1.0), )
Selected to next generation: IDs2--> (41(f=1.0), )
----------Running generation: 22, population size: 1

***** Generation 22 : 0
**Parent Variant: [Variant id: 43, #gens: 277, #ops: 0, parent:-]

--Child created id: 44
--Creating new operations for variant [Variant id: 44, #gens: 277, #ops: 0, parent:43]
---analyzing modificationPoint position: 86
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 54
---modifPoint 1 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 173
location: MathUtils.java660
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 44, #gens: 276, #ops: 1, parent:43] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 44, errors: [MathUtils.java:770: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(22): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (43(f=1.0), 44(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (43(f=1.0), )
----------Running generation: 23, population size: 1

***** Generation 23 : 0
**Parent Variant: [Variant id: 45, #gens: 277, #ops: 0, parent:-]

--Child created id: 46
--Creating new operations for variant [Variant id: 46, #gens: 277, #ops: 0, parent:45]
---analyzing modificationPoint position: 19
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 46, #gens: 276, #ops: 1, parent:45] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 46
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-46/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(23): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (45(f=1.0), 46(f=1.0), )
Selected to next generation: IDs2--> (45(f=1.0), )
----------Running generation: 24, population size: 1

***** Generation 24 : 0
**Parent Variant: [Variant id: 47, #gens: 277, #ops: 0, parent:-]

--Child created id: 48
--Creating new operations for variant [Variant id: 48, #gens: 277, #ops: 0, parent:47]
---analyzing modificationPoint position: 97
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  verifySequence(min, initial, max)
---analyzing modificationPoint position: 85
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 118
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  if (test(values, weights, begin, length)) { 	org.apache.commons.math.stat.descriptive.summary.Sum su[...]
---analyzing modificationPoint position: 93
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 101, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 48, #gens: 278, #ops: 1, parent:47] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 48
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-48/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(24): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (47(f=1.0), 48(f=1.0), )
Selected to next generation: IDs2--> (47(f=1.0), )
----------Running generation: 25, population size: 1

***** Generation 25 : 0
**Parent Variant: [Variant id: 49, #gens: 277, #ops: 0, parent:-]

--Child created id: 50
--Creating new operations for variant [Variant id: 50, #gens: 277, #ops: 0, parent:49]
---analyzing modificationPoint position: 70
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 63
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java222
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 50, #gens: 278, #ops: 1, parent:49] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 50
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-50/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(25): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (49(f=1.0), 50(f=1.0), )
Selected to next generation: IDs2--> (49(f=1.0), )
----------Running generation: 26, population size: 1

***** Generation 26 : 0
**Parent Variant: [Variant id: 51, #gens: 277, #ops: 0, parent:-]

--Child created id: 52
--Creating new operations for variant [Variant id: 52, #gens: 277, #ops: 0, parent:51]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 108
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 45
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 52, #gens: 277, #ops: 1, parent:51] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 52, errors: [ProperFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		return wholeFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(26): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (51(f=1.0), 52(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (51(f=1.0), )
----------Running generation: 27, population size: 1

***** Generation 27 : 0
**Parent Variant: [Variant id: 53, #gens: 277, #ops: 0, parent:-]

--Child created id: 54
--Creating new operations for variant [Variant id: 54, #gens: 277, #ops: 0, parent:53]
---analyzing modificationPoint position: 19
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 125
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  correction += weights[i] * (values[i] - xbarw)
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 54, #gens: 276, #ops: 1, parent:53] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 54
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-54/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(27): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (53(f=1.0), 54(f=1.0), )
Selected to next generation: IDs2--> (53(f=1.0), )
----------Running generation: 28, population size: 1

***** Generation 28 : 0
**Parent Variant: [Variant id: 55, #gens: 277, #ops: 0, parent:-]

--Child created id: 56
--Creating new operations for variant [Variant id: 56, #gens: 277, #ops: 0, parent:55]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [format]
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 56, #gens: 277, #ops: 1, parent:55] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 56
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-56/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(28): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (55(f=1.0), 56(f=1.0), )
Selected to next generation: IDs2--> (55(f=1.0), )
----------Running generation: 29, population size: 1

***** Generation 29 : 0
**Parent Variant: [Variant id: 57, #gens: 277, #ops: 0, parent:-]

--Child created id: 58
--Creating new operations for variant [Variant id: 58, #gens: 277, #ops: 0, parent:57]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 58, #gens: 276, #ops: 1, parent:57] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 58
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-58/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(29): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (57(f=1.0), 58(f=1.0), )
Selected to next generation: IDs2--> (57(f=1.0), )
----------Running generation: 30, population size: 1

***** Generation 30 : 0
**Parent Variant: [Variant id: 59, #gens: 277, #ops: 0, parent:-]

--Child created id: 60
--Creating new operations for variant [Variant id: 60, #gens: 277, #ops: 0, parent:59]
---analyzing modificationPoint position: 28
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 1 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 65
---modifPoint 2 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 62
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 60, #gens: 276, #ops: 1, parent:59] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 60
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-60/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(30): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (59(f=1.0), 60(f=1.0), )
Selected to next generation: IDs2--> (59(f=1.0), )
----------Running generation: 31, population size: 1

***** Generation 31 : 0
**Parent Variant: [Variant id: 61, #gens: 277, #ops: 0, parent:-]

--Child created id: 62
--Creating new operations for variant [Variant id: 62, #gens: 277, #ops: 0, parent:61]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 62, #gens: 278, #ops: 1, parent:61] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 62
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-62/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(31): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (61(f=1.0), 62(f=1.0), )
Selected to next generation: IDs2--> (61(f=1.0), )
----------Running generation: 32, population size: 1

***** Generation 32 : 0
**Parent Variant: [Variant id: 63, #gens: 277, #ops: 0, parent:-]

--Child created id: 64
--Creating new operations for variant [Variant id: 64, #gens: 277, #ops: 0, parent:63]
---analyzing modificationPoint position: 42
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 64, #gens: 276, #ops: 1, parent:63] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 64
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-64/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(32): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (63(f=1.0), 64(f=1.0), )
Selected to next generation: IDs2--> (63(f=1.0), )
----------Running generation: 33, population size: 1

***** Generation 33 : 0
**Parent Variant: [Variant id: 65, #gens: 277, #ops: 0, parent:-]

--Child created id: 66
--Creating new operations for variant [Variant id: 66, #gens: 277, #ops: 0, parent:65]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 66, #gens: 278, #ops: 1, parent:65] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 66, errors: [ProperFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		return wholeFormat; 		pos.setBeginIndex(0); 		pos.setEndIndex(0); 		int num = fraction.getNumerator(); 		int den = fraction.getDenominator(); 		int whole = num / den; 		num = num % den; 		if (whole != 0) { 			getWholeFormat().format(whole, toAppendTo, pos); 			toAppendTo.append(' '); 			num = java.lang.Math.abs(num);} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(33): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (65(f=1.0), 66(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (65(f=1.0), )
----------Running generation: 34, population size: 1

***** Generation 34 : 0
**Parent Variant: [Variant id: 67, #gens: 277, #ops: 0, parent:-]

--Child created id: 68
--Creating new operations for variant [Variant id: 68, #gens: 277, #ops: 0, parent:67]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 68, #gens: 278, #ops: 1, parent:67] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 68
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-68/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(34): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (67(f=1.0), 68(f=1.0), )
Selected to next generation: IDs2--> (67(f=1.0), )
----------Running generation: 35, population size: 1

***** Generation 35 : 0
**Parent Variant: [Variant id: 69, #gens: 277, #ops: 0, parent:-]

--Child created id: 70
--Creating new operations for variant [Variant id: 70, #gens: 277, #ops: 0, parent:69]
---analyzing modificationPoint position: 64
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 70, #gens: 276, #ops: 1, parent:69] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 70
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-70/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(35): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (69(f=1.0), 70(f=1.0), )
Selected to next generation: IDs2--> (69(f=1.0), )
----------Running generation: 36, population size: 1

***** Generation 36 : 0
**Parent Variant: [Variant id: 71, #gens: 277, #ops: 0, parent:-]

--Child created id: 72
--Creating new operations for variant [Variant id: 72, #gens: 277, #ops: 0, parent:71]
---analyzing modificationPoint position: 24
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 11
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 114
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 3 not mutation generated in  if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); }
---analyzing modificationPoint position: 18
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 72, #gens: 276, #ops: 1, parent:71] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 72
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-72/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(36): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (71(f=1.0), 72(f=1.0), )
Selected to next generation: IDs2--> (71(f=1.0), )
----------Running generation: 37, population size: 1

***** Generation 37 : 0
**Parent Variant: [Variant id: 73, #gens: 277, #ops: 0, parent:-]

--Child created id: 74
--Creating new operations for variant [Variant id: 74, #gens: 277, #ops: 0, parent:73]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 85
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 74, #gens: 278, #ops: 1, parent:73] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 74, errors: [ProperFractionFormat.java:149: error: call to this must be first statement in constructor
		if (whole == null) { 			this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                     			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(37): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (73(f=1.0), 74(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (73(f=1.0), )
----------Running generation: 38, population size: 1

***** Generation 38 : 0
**Parent Variant: [Variant id: 75, #gens: 277, #ops: 0, parent:-]

--Child created id: 76
--Creating new operations for variant [Variant id: 76, #gens: 277, #ops: 0, parent:75]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 76, #gens: 278, #ops: 1, parent:75] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 76, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		return numeratorFormat;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(38): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (75(f=1.0), 76(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (75(f=1.0), )
----------Running generation: 39, population size: 1

***** Generation 39 : 0
**Parent Variant: [Variant id: 77, #gens: 277, #ops: 0, parent:-]

--Child created id: 78
--Creating new operations for variant [Variant id: 78, #gens: 277, #ops: 0, parent:77]
---analyzing modificationPoint position: 28
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 19
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 18
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 78, #gens: 276, #ops: 1, parent:77] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 78
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-78/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(39): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (77(f=1.0), 78(f=1.0), )
Selected to next generation: IDs2--> (77(f=1.0), )
----------Running generation: 40, population size: 1

***** Generation 40 : 0
**Parent Variant: [Variant id: 79, #gens: 277, #ops: 0, parent:-]

--Child created id: 80
--Creating new operations for variant [Variant id: 80, #gens: 277, #ops: 0, parent:79]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 30
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int num = fraction.getNumerator() ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 95, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int num = fraction.getNumerator() ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 80, #gens: 278, #ops: 1, parent:79] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 80
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-80/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(40): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int num = fraction.getNumerator() ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (79(f=1.0), 80(f=1.0), )
Selected to next generation: IDs2--> (79(f=1.0), )
----------Running generation: 41, population size: 1

***** Generation 41 : 0
**Parent Variant: [Variant id: 81, #gens: 277, #ops: 0, parent:-]

--Child created id: 82
--Creating new operations for variant [Variant id: 82, #gens: 277, #ops: 0, parent:81]
---analyzing modificationPoint position: 45
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [java.util.Locale.US, pattern, arguments]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `return new java.io.EOFException() {  	/** 	 * Serializable version identifier. 	 */ 	private static [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `return new java.io.EOFException() {  	/** 	 * Serializable version identifier. 	 */ 	private static [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 82, #gens: 278, #ops: 1, parent:81] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 82, errors: [MathRuntimeException.java:289: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:315: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:315: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:315: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:315: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:315: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:315: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:315: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:315: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:315: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:316: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:316: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:316: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:316: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:316: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:316: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:318: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:319: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:320: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:321: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:322: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:322: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:323: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:323: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(41): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `return new java.io.EOFException() {  	/** 	 * Serializable version identifier. 	 */ 	private static [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (81(f=1.0), 82(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (81(f=1.0), )
----------Running generation: 42, population size: 1

***** Generation 42 : 0
**Parent Variant: [Variant id: 83, #gens: 277, #ops: 0, parent:-]

--Child created id: 84
--Creating new operations for variant [Variant id: 84, #gens: 277, #ops: 0, parent:83]
---analyzing modificationPoint position: 163
location: Fraction.java291
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 84, #gens: 276, #ops: 1, parent:83] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 84, errors: [Fraction.java:293: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(42): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (83(f=1.0), 84(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (83(f=1.0), )
----------Running generation: 43, population size: 1

***** Generation 43 : 0
**Parent Variant: [Variant id: 85, #gens: 277, #ops: 0, parent:-]

--Child created id: 86
--Creating new operations for variant [Variant id: 86, #gens: 277, #ops: 0, parent:85]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 28
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 121
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  double xbarw = sum.evaluate(values, weights, begin, length) / sumw
---analyzing modificationPoint position: 134
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtFieldWriteImpl
location: Sum.java163
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `n = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.stat.descriptive.summary.Sum line: 163, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `n = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 86, #gens: 278, #ops: 1, parent:85] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 86
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-86/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(43): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `n = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (85(f=1.0), 86(f=1.0), )
Selected to next generation: IDs2--> (85(f=1.0), )
----------Running generation: 44, population size: 1

***** Generation 44 : 0
**Parent Variant: [Variant id: 87, #gens: 277, #ops: 0, parent:-]

--Child created id: 88
--Creating new operations for variant [Variant id: 88, #gens: 277, #ops: 0, parent:87]
---analyzing modificationPoint position: 42
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 88, #gens: 276, #ops: 1, parent:87] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 88
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-88/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(44): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (87(f=1.0), 88(f=1.0), )
Selected to next generation: IDs2--> (87(f=1.0), )
----------Running generation: 45, population size: 1

***** Generation 45 : 0
**Parent Variant: [Variant id: 89, #gens: 277, #ops: 0, parent:-]

--Child created id: 90
--Creating new operations for variant [Variant id: 90, #gens: 277, #ops: 0, parent:89]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 90, #gens: 276, #ops: 1, parent:89] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 90
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-90/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(45): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (89(f=1.0), 90(f=1.0), )
Selected to next generation: IDs2--> (89(f=1.0), )
----------Running generation: 46, population size: 1

***** Generation 46 : 0
**Parent Variant: [Variant id: 91, #gens: 277, #ops: 0, parent:-]

--Child created id: 92
--Creating new operations for variant [Variant id: 92, #gens: 277, #ops: 0, parent:91]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 98
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  num = java.lang.Math.abs(num)
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 92, #gens: 276, #ops: 1, parent:91] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 92
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-92/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(46): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (91(f=1.0), 92(f=1.0), )
Selected to next generation: IDs2--> (91(f=1.0), )
----------Running generation: 47, population size: 1

***** Generation 47 : 0
**Parent Variant: [Variant id: 93, #gens: 277, #ops: 0, parent:-]

--Child created id: 94
--Creating new operations for variant [Variant id: 94, #gens: 277, #ops: 0, parent:93]
---analyzing modificationPoint position: 72
location: AbstractFormat.java149
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 94, #gens: 276, #ops: 1, parent:93] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 94
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-94/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(47): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (93(f=1.0), 94(f=1.0), )
Selected to next generation: IDs2--> (93(f=1.0), )
----------Running generation: 48, population size: 1

***** Generation 48 : 0
**Parent Variant: [Variant id: 95, #gens: 277, #ops: 0, parent:-]

--Child created id: 96
--Creating new operations for variant [Variant id: 96, #gens: 277, #ops: 0, parent:95]
---analyzing modificationPoint position: 262
location: ConvergingAlgorithmImpl.java65
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeAccuracy = defaultRelativeAccuracy ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 96, #gens: 276, #ops: 1, parent:95] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 96
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-96/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(48): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeAccuracy = defaultRelativeAccuracy ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (95(f=1.0), 96(f=1.0), )
Selected to next generation: IDs2--> (95(f=1.0), )
----------Running generation: 49, population size: 1

***** Generation 49 : 0
**Parent Variant: [Variant id: 97, #gens: 277, #ops: 0, parent:-]

--Child created id: 98
--Creating new operations for variant [Variant id: 98, #gens: 277, #ops: 0, parent:97]
---analyzing modificationPoint position: 35
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 98, #gens: 276, #ops: 1, parent:97] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 98
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-98/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(49): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (97(f=1.0), 98(f=1.0), )
Selected to next generation: IDs2--> (97(f=1.0), )
----------Running generation: 50, population size: 1

***** Generation 50 : 0
**Parent Variant: [Variant id: 99, #gens: 277, #ops: 0, parent:-]

--Child created id: 100
--Creating new operations for variant [Variant id: 100, #gens: 277, #ops: 0, parent:99]
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java177
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 177, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 100, #gens: 277, #ops: 1, parent:99] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 100, errors: [AbstractFormat.java:176: error: incompatible types: java.text.NumberFormat cannot be converted to char
		} 		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
		  		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(50): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (99(f=1.0), 100(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (99(f=1.0), )
----------Running generation: 51, population size: 1

***** Generation 51 : 0
**Parent Variant: [Variant id: 101, #gens: 277, #ops: 0, parent:-]

--Child created id: 102
--Creating new operations for variant [Variant id: 102, #gens: 277, #ops: 0, parent:101]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 36
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 102, #gens: 276, #ops: 1, parent:101] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 102
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-102/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(51): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (101(f=1.0), 102(f=1.0), )
Selected to next generation: IDs2--> (101(f=1.0), )
----------Running generation: 52, population size: 1

***** Generation 52 : 0
**Parent Variant: [Variant id: 103, #gens: 277, #ops: 0, parent:-]

--Child created id: 104
--Creating new operations for variant [Variant id: 104, #gens: 277, #ops: 0, parent:103]
---analyzing modificationPoint position: 26
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 104, #gens: 276, #ops: 1, parent:103] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 104
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-104/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(52): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (103(f=1.0), 104(f=1.0), )
Selected to next generation: IDs2--> (103(f=1.0), )
----------Running generation: 53, population size: 1

***** Generation 53 : 0
**Parent Variant: [Variant id: 105, #gens: 277, #ops: 0, parent:-]

--Child created id: 106
--Creating new operations for variant [Variant id: 106, #gens: 277, #ops: 0, parent:105]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java225
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 225, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 106, #gens: 278, #ops: 1, parent:105] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 106, errors: [FractionFormat.java:223: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
	 */ 	@java.lang.Override 	public org.apache.commons.math.fraction.Fraction parse(final java.lang.String source, final java.text.ParsePosition pos) { 		final int initialIndex = pos.getIndex(); 		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
	    	                    	                                                                                                                           		                                         		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(53): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (105(f=1.0), 106(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (105(f=1.0), )
----------Running generation: 54, population size: 1

***** Generation 54 : 0
**Parent Variant: [Variant id: 107, #gens: 277, #ops: 0, parent:-]

--Child created id: 108
--Creating new operations for variant [Variant id: 108, #gens: 277, #ops: 0, parent:107]
---analyzing modificationPoint position: 134
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 0 not mutation generated in  for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; }
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 15
---modifPoint 3 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 108, #gens: 278, #ops: 1, parent:107] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 108, errors: [ProperFractionFormat.java:180: error: orphaned case
			case 0 :
			^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(54): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (107(f=1.0), 108(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (107(f=1.0), )
----------Running generation: 55, population size: 1

***** Generation 55 : 0
**Parent Variant: [Variant id: 109, #gens: 277, #ops: 0, parent:-]

--Child created id: 110
--Creating new operations for variant [Variant id: 110, #gens: 277, #ops: 0, parent:109]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, pos, initialIndex]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 110, #gens: 278, #ops: 1, parent:109] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 110
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-110/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(55): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (109(f=1.0), 110(f=1.0), )
Selected to next generation: IDs2--> (109(f=1.0), )
----------Running generation: 56, population size: 1

***** Generation 56 : 0
**Parent Variant: [Variant id: 111, #gens: 277, #ops: 0, parent:-]

--Child created id: 112
--Creating new operations for variant [Variant id: 112, #gens: 277, #ops: 0, parent:111]
---analyzing modificationPoint position: 16
Any element available for mp MP=org.apache.commons.math.MathRuntimeException line: 474, pointed element: CtReturnImpl
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 49
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 105
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 2 not mutation generated in  if (java.lang.Math.abs(yMax) <= functionValueAccuracy) { 	setResult(yMax, 0); 	return result; }
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 112, #gens: 276, #ops: 1, parent:111] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 112
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-112/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(56): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (111(f=1.0), 112(f=1.0), )
Selected to next generation: IDs2--> (111(f=1.0), )
----------Running generation: 57, population size: 1

***** Generation 57 : 0
**Parent Variant: [Variant id: 113, #gens: 277, #ops: 0, parent:-]

--Child created id: 114
--Creating new operations for variant [Variant id: 114, #gens: 277, #ops: 0, parent:113]
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 96
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 102, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 114, #gens: 278, #ops: 1, parent:113] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 114
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-114/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(57): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (113(f=1.0), 114(f=1.0), )
Selected to next generation: IDs2--> (113(f=1.0), )
----------Running generation: 58, population size: 1

***** Generation 58 : 0
**Parent Variant: [Variant id: 115, #gens: 277, #ops: 0, parent:-]

--Child created id: 116
--Creating new operations for variant [Variant id: 116, #gens: 277, #ops: 0, parent:115]
---analyzing modificationPoint position: 76
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: AbstractFormat.java163
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 163, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 116, #gens: 277, #ops: 1, parent:115] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 116, errors: [AbstractFormat.java:167: error: variable c is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		char c; 		if (index < n) { 			char c;
		        		                 			     ^, AbstractFormat.java:174: error: cannot find symbol
				ret = c;
				^
  symbol:   variable ret
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:178: error: cannot find symbol
		return ret;
		       ^
  symbol:   variable ret
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(58): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (115(f=1.0), 116(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (115(f=1.0), )
----------Running generation: 59, population size: 1

***** Generation 59 : 0
**Parent Variant: [Variant id: 117, #gens: 277, #ops: 0, parent:-]

--Child created id: 118
--Creating new operations for variant [Variant id: 118, #gens: 277, #ops: 0, parent:117]
---analyzing modificationPoint position: 145
location: AbstractUnivariateStatistic.java151
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 118, #gens: 276, #ops: 1, parent:117] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 118
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-118/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(59): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (117(f=1.0), 118(f=1.0), )
Selected to next generation: IDs2--> (117(f=1.0), )
----------Running generation: 60, population size: 1

***** Generation 60 : 0
**Parent Variant: [Variant id: 119, #gens: 277, #ops: 0, parent:-]

--Child created id: 120
--Creating new operations for variant [Variant id: 120, #gens: 277, #ops: 0, parent:119]
---analyzing modificationPoint position: 61
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 80
location: AbstractFormat.java172
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 120, #gens: 276, #ops: 1, parent:119] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 120
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-120/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(60): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (119(f=1.0), 120(f=1.0), )
Selected to next generation: IDs2--> (119(f=1.0), )
----------Running generation: 61, population size: 1

***** Generation 61 : 0
**Parent Variant: [Variant id: 121, #gens: 277, #ops: 0, parent:-]

--Child created id: 122
--Creating new operations for variant [Variant id: 122, #gens: 277, #ops: 0, parent:121]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [this.denominatorFormat]
--> var from patch: this.denominatorFormat spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 


































































java.text.NumberFormat denominatorFormat
SameName: final 


































































java.text.NumberFormat denominatorFormat
Transforming shadowed variable in denominatorFormat = denominatorFormat
location: AbstractFormat.java70
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 122, #gens: 277, #ops: 1, parent:121] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 122, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(61): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (121(f=1.0), 122(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (121(f=1.0), )
----------Running generation: 62, population size: 1

***** Generation 62 : 0
**Parent Variant: [Variant id: 123, #gens: 277, #ops: 0, parent:-]

--Child created id: 124
--Creating new operations for variant [Variant id: 124, #gens: 277, #ops: 0, parent:123]
---analyzing modificationPoint position: 68
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 138
location: AbstractUnivariateStatistic.java164
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 124, #gens: 276, #ops: 1, parent:123] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 124
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-124/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(62): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (123(f=1.0), 124(f=1.0), )
Selected to next generation: IDs2--> (123(f=1.0), )
----------Running generation: 63, population size: 1

***** Generation 63 : 0
**Parent Variant: [Variant id: 125, #gens: 277, #ops: 0, parent:-]

--Child created id: 126
--Creating new operations for variant [Variant id: 126, #gens: 277, #ops: 0, parent:125]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 126, #gens: 277, #ops: 1, parent:125] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 126, errors: [AbstractFormat.java:92: error: call to this must be first statement in constructor
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                		                                                                                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(63): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (125(f=1.0), 126(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (125(f=1.0), )
----------Running generation: 64, population size: 1

***** Generation 64 : 0
**Parent Variant: [Variant id: 127, #gens: 277, #ops: 0, parent:-]

--Child created id: 128
--Creating new operations for variant [Variant id: 128, #gens: 277, #ops: 0, parent:127]
---analyzing modificationPoint position: 40
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 128, #gens: 276, #ops: 1, parent:127] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 128
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-128/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(64): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (127(f=1.0), 128(f=1.0), )
Selected to next generation: IDs2--> (127(f=1.0), )
----------Running generation: 65, population size: 1

***** Generation 65 : 0
**Parent Variant: [Variant id: 129, #gens: 277, #ops: 0, parent:-]

--Child created id: 130
--Creating new operations for variant [Variant id: 130, #gens: 277, #ops: 0, parent:129]
---analyzing modificationPoint position: 117
location: BigFraction.java154
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 130, #gens: 276, #ops: 1, parent:129] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 130, errors: [BigFraction.java:158: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(65): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (129(f=1.0), 130(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (129(f=1.0), )
----------Running generation: 66, population size: 1

***** Generation 66 : 0
**Parent Variant: [Variant id: 131, #gens: 277, #ops: 0, parent:-]

--Child created id: 132
--Creating new operations for variant [Variant id: 132, #gens: 277, #ops: 0, parent:131]
---analyzing modificationPoint position: 45
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: ProperFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 132, #gens: 277, #ops: 1, parent:131] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 132, errors: [ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(66): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (131(f=1.0), 132(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (131(f=1.0), )
----------Running generation: 67, population size: 1

***** Generation 67 : 0
**Parent Variant: [Variant id: 133, #gens: 277, #ops: 0, parent:-]

--Child created id: 134
--Creating new operations for variant [Variant id: 134, #gens: 277, #ops: 0, parent:133]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 32
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 2 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 271
location: FirstMoment.java77
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `n = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 134, #gens: 276, #ops: 1, parent:133] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 134
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-134/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(67): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `n = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (133(f=1.0), 134(f=1.0), )
Selected to next generation: IDs2--> (133(f=1.0), )
----------Running generation: 68, population size: 1

***** Generation 68 : 0
**Parent Variant: [Variant id: 135, #gens: 277, #ops: 0, parent:-]

--Child created id: 136
--Creating new operations for variant [Variant id: 136, #gens: 277, #ops: 0, parent:135]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 75, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 136, #gens: 277, #ops: 1, parent:135] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 136, errors: [ProperFractionFormat.java:75: error: call to this must be first statement in constructor
		super(numeratorFormat, denominatorFormat); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                                           		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(68): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (135(f=1.0), 136(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (135(f=1.0), )
----------Running generation: 69, population size: 1

***** Generation 69 : 0
**Parent Variant: [Variant id: 137, #gens: 277, #ops: 0, parent:-]

--Child created id: 138
--Creating new operations for variant [Variant id: 138, #gens: 277, #ops: 0, parent:137]
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 138, #gens: 278, #ops: 1, parent:137] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 138, errors: [ProperFractionFormat.java:99: error: variable whole is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		num = num % den; 		int whole = num / den;
		                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(69): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (137(f=1.0), 138(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (137(f=1.0), )
----------Running generation: 70, population size: 1

***** Generation 70 : 0
**Parent Variant: [Variant id: 139, #gens: 277, #ops: 0, parent:-]

--Child created id: 140
--Creating new operations for variant [Variant id: 140, #gens: 277, #ops: 0, parent:139]
---analyzing modificationPoint position: 93
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 101, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 140, #gens: 278, #ops: 1, parent:139] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 140, errors: [ProperFractionFormat.java:102: error: variable den is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
			getWholeFormat().format(whole, toAppendTo, pos); 			int den = fraction.getDenominator();
			                                                 			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(70): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (139(f=1.0), 140(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (139(f=1.0), )
----------Running generation: 71, population size: 1

***** Generation 71 : 0
**Parent Variant: [Variant id: 141, #gens: 277, #ops: 0, parent:-]

--Child created id: 142
--Creating new operations for variant [Variant id: 142, #gens: 277, #ops: 0, parent:141]
---analyzing modificationPoint position: 18
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 142, #gens: 276, #ops: 1, parent:141] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 142
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-142/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(71): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (141(f=1.0), 142(f=1.0), )
Selected to next generation: IDs2--> (141(f=1.0), )
----------Running generation: 72, population size: 1

***** Generation 72 : 0
**Parent Variant: [Variant id: 143, #gens: 277, #ops: 0, parent:-]

--Child created id: 144
--Creating new operations for variant [Variant id: 144, #gens: 277, #ops: 0, parent:143]
---analyzing modificationPoint position: 54
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 144, #gens: 277, #ops: 1, parent:143] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 144, errors: [FractionFormat.java:299: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:301: error: reached end of file while parsing
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		// parse denominator 		final java.lang.Number den = getDenominatorFormat().parse(source, pos); 		if (den == null) { 			// invalid integer number 			// set index back to initial, error index should already be set 			// character examined. 			pos.setIndex(initialIndex); 			return null;} 		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());}}
		                                                                                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(72): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (143(f=1.0), 144(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (143(f=1.0), )
----------Running generation: 73, population size: 1

***** Generation 73 : 0
**Parent Variant: [Variant id: 145, #gens: 277, #ops: 0, parent:-]

--Child created id: 146
--Creating new operations for variant [Variant id: 146, #gens: 277, #ops: 0, parent:145]
---analyzing modificationPoint position: 231
location: BrentSolver.java305
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y1 > 0) == (y2 > 0)) { 	x2 = x0; 	y2 = y0; 	delta = x1 - x0; 	oldDelta = delta; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 146, #gens: 276, #ops: 1, parent:145] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 146
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-146/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 6] ,[]
-Valid?: |false|5|6|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(73): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y1 > 0) == (y2 > 0)) { 	x2 = x0; 	y2 = y0; 	delta = x1 - x0; 	oldDelta = delta; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (145(f=1.0), 146(f=5.0), )
Selected to next generation: IDs2--> (145(f=1.0), )
----------Running generation: 74, population size: 1

***** Generation 74 : 0
**Parent Variant: [Variant id: 147, #gens: 277, #ops: 0, parent:-]

--Child created id: 148
--Creating new operations for variant [Variant id: 148, #gens: 277, #ops: 0, parent:147]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 87
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 76
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 2 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 148, #gens: 276, #ops: 1, parent:147] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 148
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-148/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(74): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (147(f=1.0), 148(f=1.0), )
Selected to next generation: IDs2--> (147(f=1.0), )
----------Running generation: 75, population size: 1

***** Generation 75 : 0
**Parent Variant: [Variant id: 149, #gens: 277, #ops: 0, parent:-]

--Child created id: 150
--Creating new operations for variant [Variant id: 150, #gens: 277, #ops: 0, parent:149]
---analyzing modificationPoint position: 39
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 150, #gens: 276, #ops: 1, parent:149] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 150
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-150/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(75): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (149(f=1.0), 150(f=1.0), )
Selected to next generation: IDs2--> (149(f=1.0), )
----------Running generation: 76, population size: 1

***** Generation 76 : 0
**Parent Variant: [Variant id: 151, #gens: 277, #ops: 0, parent:-]

--Child created id: 152
--Creating new operations for variant [Variant id: 152, #gens: 277, #ops: 0, parent:151]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [java.util.Locale.US, pattern, arguments]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java466
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `return new java.util.ConcurrentModificationException() {  	/** 	 * Serializable version identifier. [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 466, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `return new java.util.ConcurrentModificationException() {  	/** 	 * Serializable version identifier. [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 152, #gens: 278, #ops: 1, parent:151] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 152, errors: [MathRuntimeException.java:467: error: incompatible types: <anonymous java.util.ConcurrentModificationException> cannot be converted to java.text.ParseException
	 */ 	public static java.text.ParseException createParseException(final int offset, final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.util.ConcurrentModificationException() { 			/**
	    	                                                                                                                                                     		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(76): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `return new java.util.ConcurrentModificationException() {  	/** 	 * Serializable version identifier. [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (151(f=1.0), 152(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (151(f=1.0), )
----------Running generation: 77, population size: 1

***** Generation 77 : 0
**Parent Variant: [Variant id: 153, #gens: 277, #ops: 0, parent:-]

--Child created id: 154
--Creating new operations for variant [Variant id: 154, #gens: 277, #ops: 0, parent:153]
---analyzing modificationPoint position: 23
---modifPoint 0 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 154, #gens: 276, #ops: 1, parent:153] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 154
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-154/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(77): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (153(f=1.0), 154(f=1.0), )
Selected to next generation: IDs2--> (153(f=1.0), )
----------Running generation: 78, population size: 1

***** Generation 78 : 0
**Parent Variant: [Variant id: 155, #gens: 277, #ops: 0, parent:-]

--Child created id: 156
--Creating new operations for variant [Variant id: 156, #gens: 277, #ops: 0, parent:155]
---analyzing modificationPoint position: 33
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [num, whole, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 156, #gens: 277, #ops: 1, parent:155] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 156, errors: [ProperBigFractionFormat.java:239: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:242: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:245: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:246: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:247: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:248: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:248: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:249: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:249: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:249: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:249: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(78): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (155(f=1.0), 156(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (155(f=1.0), )
----------Running generation: 79, population size: 1

***** Generation 79 : 0
**Parent Variant: [Variant id: 157, #gens: 277, #ops: 0, parent:-]

--Child created id: 158
--Creating new operations for variant [Variant id: 158, #gens: 277, #ops: 0, parent:157]
---analyzing modificationPoint position: 25
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 158, #gens: 276, #ops: 1, parent:157] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 158
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-158/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(79): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (157(f=1.0), 158(f=1.0), )
Selected to next generation: IDs2--> (157(f=1.0), )
----------Running generation: 80, population size: 1

***** Generation 80 : 0
**Parent Variant: [Variant id: 159, #gens: 277, #ops: 0, parent:-]

--Child created id: 160
--Creating new operations for variant [Variant id: 160, #gens: 277, #ops: 0, parent:159]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 160, #gens: 277, #ops: 1, parent:159] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 160, errors: [ProperBigFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperBigFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperBigFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperBigFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperBigFractionFormat.java:209: error: illegal start of type
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                 ^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                           ^, ProperBigFractionFormat.java:209: error: ';' expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                            ^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                              ^, ProperBigFractionFormat.java:209: error: illegal start of type
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                               ^, ProperBigFractionFormat.java:216: error: illegal start of type
		if (wholeIsNeg) {
		^, ProperBigFractionFormat.java:216: error: <identifier> expected
		if (wholeIsNeg) {
		              ^, ProperBigFractionFormat.java:219: error: <identifier> expected
		num = whole.multiply(den).add(num);
		   ^, ProperBigFractionFormat.java:220: error: illegal start of type
		if (wholeIsNeg) {
		^, ProperBigFractionFormat.java:220: error: <identifier> expected
		if (wholeIsNeg) {
		              ^, ProperBigFractionFormat.java:224: error: illegal start of type
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                       ^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                           ^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                                ^, ProperBigFractionFormat.java:236: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperBigFractionFormat.java:236: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	                                 ^, ProperBigFractionFormat.java:238: error: class, interface, or enum expected
		}
		^, ProperBigFractionFormat.java:240: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(80): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (159(f=1.0), 160(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (159(f=1.0), )
----------Running generation: 81, population size: 1

***** Generation 81 : 0
**Parent Variant: [Variant id: 161, #gens: 277, #ops: 0, parent:-]

--Child created id: 162
--Creating new operations for variant [Variant id: 162, #gens: 277, #ops: 0, parent:161]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 162, #gens: 276, #ops: 1, parent:161] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 162
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-162/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(81): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (161(f=1.0), 162(f=1.0), )
Selected to next generation: IDs2--> (161(f=1.0), )
----------Running generation: 82, population size: 1

***** Generation 82 : 0
**Parent Variant: [Variant id: 163, #gens: 277, #ops: 0, parent:-]

--Child created id: 164
--Creating new operations for variant [Variant id: 164, #gens: 277, #ops: 0, parent:163]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 164, #gens: 276, #ops: 1, parent:163] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 164
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-164/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(82): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (163(f=1.0), 164(f=1.0), )
Selected to next generation: IDs2--> (163(f=1.0), )
----------Running generation: 83, population size: 1

***** Generation 83 : 0
**Parent Variant: [Variant id: 165, #gens: 277, #ops: 0, parent:-]

--Child created id: 166
--Creating new operations for variant [Variant id: 166, #gens: 277, #ops: 0, parent:165]
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 166, #gens: 277, #ops: 1, parent:165] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 166
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-166/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(83): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (165(f=1.0), 166(f=1.0), )
Selected to next generation: IDs2--> (165(f=1.0), )
----------Running generation: 84, population size: 1

***** Generation 84 : 0
**Parent Variant: [Variant id: 167, #gens: 277, #ops: 0, parent:-]

--Child created id: 168
--Creating new operations for variant [Variant id: 168, #gens: 277, #ops: 0, parent:167]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, whole, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 168, #gens: 278, #ops: 1, parent:167] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 168, errors: [ProperBigFractionFormat.java:239: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:242: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:245: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:246: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:247: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:248: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:248: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:249: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:249: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:249: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:249: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(84): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (167(f=1.0), 168(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (167(f=1.0), )
----------Running generation: 85, population size: 1

***** Generation 85 : 0
**Parent Variant: [Variant id: 169, #gens: 277, #ops: 0, parent:-]

--Child created id: 170
--Creating new operations for variant [Variant id: 170, #gens: 277, #ops: 0, parent:169]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 33
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 48
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 170, #gens: 277, #ops: 1, parent:169] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 170, errors: [ProperFractionFormat.java:180: error: orphaned case
			case 0 :
			^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(85): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (169(f=1.0), 170(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (169(f=1.0), )
----------Running generation: 86, population size: 1

***** Generation 86 : 0
**Parent Variant: [Variant id: 171, #gens: 277, #ops: 0, parent:-]

--Child created id: 172
--Creating new operations for variant [Variant id: 172, #gens: 277, #ops: 0, parent:171]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, toAppendTo, pos, num]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 172, #gens: 278, #ops: 1, parent:171] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 172
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-172/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(86): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (171(f=1.0), 172(f=1.0), )
Selected to next generation: IDs2--> (171(f=1.0), )
----------Running generation: 87, population size: 1

***** Generation 87 : 0
**Parent Variant: [Variant id: 173, #gens: 277, #ops: 0, parent:-]

--Child created id: 174
--Creating new operations for variant [Variant id: 174, #gens: 277, #ops: 0, parent:173]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 174, #gens: 278, #ops: 1, parent:173] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 174, errors: [AbstractFormat.java:94: error: variable nf is already defined in method getDefaultNumberFormat(java.util.Locale)
		nf.setParseIntegerOnly(true); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
		                              		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(87): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (173(f=1.0), 174(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (173(f=1.0), )
----------Running generation: 88, population size: 1

***** Generation 88 : 0
**Parent Variant: [Variant id: 175, #gens: 277, #ops: 0, parent:-]

--Child created id: 176
--Creating new operations for variant [Variant id: 176, #gens: 277, #ops: 0, parent:175]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 176, #gens: 276, #ops: 1, parent:175] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 176
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-176/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(88): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (175(f=1.0), 176(f=1.0), )
Selected to next generation: IDs2--> (175(f=1.0), )
----------Running generation: 89, population size: 1

***** Generation 89 : 0
**Parent Variant: [Variant id: 177, #gens: 277, #ops: 0, parent:-]

--Child created id: 178
--Creating new operations for variant [Variant id: 178, #gens: 277, #ops: 0, parent:177]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 178, #gens: 278, #ops: 1, parent:177] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 178, errors: [AbstractFormat.java:92: error: call to this must be first statement in constructor
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                		                                                                                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(89): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (177(f=1.0), 178(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (177(f=1.0), )
----------Running generation: 90, population size: 1

***** Generation 90 : 0
**Parent Variant: [Variant id: 179, #gens: 277, #ops: 0, parent:-]

--Child created id: 180
--Creating new operations for variant [Variant id: 180, #gens: 277, #ops: 0, parent:179]
---analyzing modificationPoint position: 73
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java150
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 150, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 180, #gens: 278, #ops: 1, parent:179] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 180, errors: [AbstractFormat.java:151: error: incompatible types: unexpected return value
		pos.setIndex(pos.getIndex() - 1); 		return numeratorFormat;
		                                  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(90): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (179(f=1.0), 180(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (179(f=1.0), )
----------Running generation: 91, population size: 1

***** Generation 91 : 0
**Parent Variant: [Variant id: 181, #gens: 277, #ops: 0, parent:-]

--Child created id: 182
--Creating new operations for variant [Variant id: 182, #gens: 277, #ops: 0, parent:181]
---analyzing modificationPoint position: 133
location: Sum.java162
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sum = 0.0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 182, #gens: 276, #ops: 1, parent:181] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 182
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-182/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(91): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `sum = 0.0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (181(f=1.0), 182(f=1.0), )
Selected to next generation: IDs2--> (181(f=1.0), )
----------Running generation: 92, population size: 1

***** Generation 92 : 0
**Parent Variant: [Variant id: 183, #gens: 277, #ops: 0, parent:-]

--Child created id: 184
--Creating new operations for variant [Variant id: 184, #gens: 277, #ops: 0, parent:183]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 184, #gens: 278, #ops: 1, parent:183] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 184, errors: [ProperFractionFormat.java:229: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(92): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (183(f=1.0), 184(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (183(f=1.0), )
----------Running generation: 93, population size: 1

***** Generation 93 : 0
**Parent Variant: [Variant id: 185, #gens: 277, #ops: 0, parent:-]

--Child created id: 186
--Creating new operations for variant [Variant id: 186, #gens: 277, #ops: 0, parent:185]
---analyzing modificationPoint position: 33
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 54
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 186, #gens: 278, #ops: 1, parent:185] gen mutated: 1 , gen not mut: 2, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 186
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-186/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(93): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (185(f=1.0), 186(f=1.0), )
Selected to next generation: IDs2--> (185(f=1.0), )
----------Running generation: 94, population size: 1

***** Generation 94 : 0
**Parent Variant: [Variant id: 187, #gens: 277, #ops: 0, parent:-]

--Child created id: 188
--Creating new operations for variant [Variant id: 188, #gens: 277, #ops: 0, parent:187]
---analyzing modificationPoint position: 115
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  // move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...]
---analyzing modificationPoint position: 138
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: AbstractUnivariateStatistic.java164
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `return true` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 164, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `return true` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 188, #gens: 278, #ops: 1, parent:187] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 188, errors: [AbstractUnivariateStatistic.java:165: error: unreachable statement
			if ((!containsPositiveWeight) && (weights[i] > 0.0)) {
			^]
Ingredient counter is Zero
---Undoing: gnrtn(94): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `return true` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (187(f=1.0), 188(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (187(f=1.0), )
----------Running generation: 95, population size: 1

***** Generation 95 : 0
**Parent Variant: [Variant id: 189, #gens: 277, #ops: 0, parent:-]

--Child created id: 190
--Creating new operations for variant [Variant id: 190, #gens: 277, #ops: 0, parent:189]
---analyzing modificationPoint position: 34
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java97
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 97, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 190, #gens: 278, #ops: 1, parent:189] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 190, errors: [ProperFractionFormat.java:111: error: unreachable statement
		return toAppendTo; 		int whole = num / den; 		num = num % den; 		if (whole != 0) { 			getWholeFormat().format(whole, toAppendTo, pos); 			toAppendTo.append(' '); 			num = java.lang.Math.abs(num);} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;
		                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(95): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (189(f=1.0), 190(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (189(f=1.0), )
----------Running generation: 96, population size: 1

***** Generation 96 : 0
**Parent Variant: [Variant id: 191, #gens: 277, #ops: 0, parent:-]

--Child created id: 192
--Creating new operations for variant [Variant id: 192, #gens: 277, #ops: 0, parent:191]
---analyzing modificationPoint position: 110
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 152
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 1 not mutation generated in  oldDelta = delta
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 7
---modifPoint 3 not mutation generated in  return nf
---analyzing modificationPoint position: 18
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 4 not mutation generated in  return null
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 6 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 68
---modifPoint 7 not mutation generated in  return numerator
---analyzing modificationPoint position: 53
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 8 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 21
---modifPoint 9 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 44
---modifPoint 10 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 48
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 192, #gens: 278, #ops: 1, parent:191] gen mutated: 1 , gen not mut: 11, gen not applied  0
-The child does NOT compile: 192, errors: [ProperFractionFormat.java:140: error: call to this must be first statement in constructor
		} 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(96): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (191(f=1.0), 192(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (191(f=1.0), )
----------Running generation: 97, population size: 1

***** Generation 97 : 0
**Parent Variant: [Variant id: 193, #gens: 277, #ops: 0, parent:-]

--Child created id: 194
--Creating new operations for variant [Variant id: 194, #gens: 277, #ops: 0, parent:193]
---analyzing modificationPoint position: 45
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 141
---modifPoint 1 not mutation generated in  return test(values, begin, length)
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 194, #gens: 276, #ops: 1, parent:193] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 194
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-194/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(97): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (193(f=1.0), 194(f=1.0), )
Selected to next generation: IDs2--> (193(f=1.0), )
----------Running generation: 98, population size: 1

***** Generation 98 : 0
**Parent Variant: [Variant id: 195, #gens: 277, #ops: 0, parent:-]

--Child created id: 196
--Creating new operations for variant [Variant id: 196, #gens: 277, #ops: 0, parent:195]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 67
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 196, #gens: 276, #ops: 1, parent:195] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 196
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-196/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(98): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (195(f=1.0), 196(f=1.0), )
Selected to next generation: IDs2--> (195(f=1.0), )
----------Running generation: 99, population size: 1

***** Generation 99 : 0
**Parent Variant: [Variant id: 197, #gens: 277, #ops: 0, parent:-]

--Child created id: 198
--Creating new operations for variant [Variant id: 198, #gens: 277, #ops: 0, parent:197]
---analyzing modificationPoint position: 182
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 0 not mutation generated in  if (rand == null) { 	rand = new org.apache.commons.math.random.JDKRandomGenerator(); 	rand.setSeed(j[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 43
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
---modifPoint 3 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 61
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
---modifPoint 4 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 5 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 0
---modifPoint 6 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 148
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [begin, length, values]
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java160
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (weights[i] < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 160, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (weights[i] < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 198, #gens: 277, #ops: 1, parent:197] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 198
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-198/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(99): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (weights[i] < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (197(f=1.0), 198(f=1.0), )
Selected to next generation: IDs2--> (197(f=1.0), )
----------Running generation: 100, population size: 1

***** Generation 100 : 0
**Parent Variant: [Variant id: 199, #gens: 277, #ops: 0, parent:-]

--Child created id: 200
--Creating new operations for variant [Variant id: 200, #gens: 277, #ops: 0, parent:199]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 200, #gens: 278, #ops: 1, parent:199] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 200, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(100): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (199(f=1.0), 200(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (199(f=1.0), )
----------Running generation: 101, population size: 1

***** Generation 101 : 0
**Parent Variant: [Variant id: 201, #gens: 277, #ops: 0, parent:-]

--Child created id: 202
--Creating new operations for variant [Variant id: 202, #gens: 277, #ops: 0, parent:201]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
---modifPoint 2 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 202, #gens: 277, #ops: 1, parent:201] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 202, errors: [ProperBigFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		return wholeFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(101): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (201(f=1.0), 202(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (201(f=1.0), )
----------Running generation: 102, population size: 1

***** Generation 102 : 0
**Parent Variant: [Variant id: 203, #gens: 277, #ops: 0, parent:-]

--Child created id: 204
--Creating new operations for variant [Variant id: 204, #gens: 277, #ops: 0, parent:203]
---analyzing modificationPoint position: 28
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 155
Templates availables156
Attempts Base Ingredients  1 total 156
---modifPoint 2 not mutation generated in  double r = getRan().nextDouble()
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 204, #gens: 276, #ops: 1, parent:203] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 204
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-204/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(102): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (203(f=1.0), 204(f=1.0), )
Selected to next generation: IDs2--> (203(f=1.0), )
----------Running generation: 103, population size: 1

***** Generation 103 : 0
**Parent Variant: [Variant id: 205, #gens: 277, #ops: 0, parent:-]

--Child created id: 206
--Creating new operations for variant [Variant id: 206, #gens: 277, #ops: 0, parent:205]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 206, #gens: 278, #ops: 1, parent:205] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 206
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-206/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(103): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (205(f=1.0), 206(f=1.0), )
Selected to next generation: IDs2--> (205(f=1.0), )
----------Running generation: 104, population size: 1

***** Generation 104 : 0
**Parent Variant: [Variant id: 207, #gens: 277, #ops: 0, parent:-]

--Child created id: 208
--Creating new operations for variant [Variant id: 208, #gens: 277, #ops: 0, parent:207]
---analyzing modificationPoint position: 51
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 208, #gens: 276, #ops: 1, parent:207] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 208
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-208/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(104): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (207(f=1.0), 208(f=1.0), )
Selected to next generation: IDs2--> (207(f=1.0), )
----------Running generation: 105, population size: 1

***** Generation 105 : 0
**Parent Variant: [Variant id: 209, #gens: 277, #ops: 0, parent:-]

--Child created id: 210
--Creating new operations for variant [Variant id: 210, #gens: 277, #ops: 0, parent:209]
---analyzing modificationPoint position: 138
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; }
---analyzing modificationPoint position: 150
Templates availables156
Attempts Base Ingredients  1 total 156
---modifPoint 1 not mutation generated in  return (sigma * getRan().nextGaussian()) + mu
---analyzing modificationPoint position: 26
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 210, #gens: 276, #ops: 1, parent:209] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 210
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-210/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(105): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (209(f=1.0), 210(f=1.0), )
Selected to next generation: IDs2--> (209(f=1.0), )
----------Running generation: 106, population size: 1

***** Generation 106 : 0
**Parent Variant: [Variant id: 211, #gens: 277, #ops: 0, parent:-]

--Child created id: 212
--Creating new operations for variant [Variant id: 212, #gens: 277, #ops: 0, parent:211]
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 33
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 212, #gens: 277, #ops: 1, parent:211] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 212
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-212/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(106): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (211(f=1.0), 212(f=1.0), )
Selected to next generation: IDs2--> (211(f=1.0), )
----------Running generation: 107, population size: 1

***** Generation 107 : 0
**Parent Variant: [Variant id: 213, #gens: 277, #ops: 0, parent:-]

--Child created id: 214
--Creating new operations for variant [Variant id: 214, #gens: 277, #ops: 0, parent:213]
---analyzing modificationPoint position: 25
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 214, #gens: 276, #ops: 1, parent:213] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 214
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-214/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(107): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (213(f=1.0), 214(f=1.0), )
Selected to next generation: IDs2--> (213(f=1.0), )
----------Running generation: 108, population size: 1

***** Generation 108 : 0
**Parent Variant: [Variant id: 215, #gens: 277, #ops: 0, parent:-]

--Child created id: 216
--Creating new operations for variant [Variant id: 216, #gens: 277, #ops: 0, parent:215]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [this.numeratorFormat]
--> var from patch: this.numeratorFormat spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 

































































java.text.NumberFormat numeratorFormat
SameName: final 

































































java.text.NumberFormat numeratorFormat
Transforming shadowed variable in numeratorFormat = numeratorFormat
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 216, #gens: 278, #ops: 1, parent:215] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 216, errors: [AbstractFormat.java:71: error: final parameter numeratorFormat may not be assigned
		this.denominatorFormat = denominatorFormat; 		numeratorFormat = numeratorFormat;
		                                            		^]
Ingredient counter is Zero
---Undoing: gnrtn(108): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (215(f=1.0), 216(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (215(f=1.0), )
----------Running generation: 109, population size: 1

***** Generation 109 : 0
**Parent Variant: [Variant id: 217, #gens: 277, #ops: 0, parent:-]

--Child created id: 218
--Creating new operations for variant [Variant id: 218, #gens: 277, #ops: 0, parent:217]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 218, #gens: 276, #ops: 1, parent:217] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 218
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-218/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(109): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (217(f=1.0), 218(f=1.0), )
Selected to next generation: IDs2--> (217(f=1.0), )
----------Running generation: 110, population size: 1

***** Generation 110 : 0
**Parent Variant: [Variant id: 219, #gens: 277, #ops: 0, parent:-]

--Child created id: 220
--Creating new operations for variant [Variant id: 220, #gens: 277, #ops: 0, parent:219]
---analyzing modificationPoint position: 62
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 44
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 55
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 220, #gens: 276, #ops: 1, parent:219] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 220
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-220/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(110): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (219(f=1.0), 220(f=1.0), )
Selected to next generation: IDs2--> (219(f=1.0), )
----------Running generation: 111, population size: 1

***** Generation 111 : 0
**Parent Variant: [Variant id: 221, #gens: 277, #ops: 0, parent:-]

--Child created id: 222
--Creating new operations for variant [Variant id: 222, #gens: 277, #ops: 0, parent:221]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 222, #gens: 276, #ops: 1, parent:221] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 222
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-222/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(111): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (221(f=1.0), 222(f=1.0), )
Selected to next generation: IDs2--> (221(f=1.0), )
----------Running generation: 112, population size: 1

***** Generation 112 : 0
**Parent Variant: [Variant id: 223, #gens: 277, #ops: 0, parent:-]

--Child created id: 224
--Creating new operations for variant [Variant id: 224, #gens: 277, #ops: 0, parent:223]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 60
---modifPoint 2 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 44
---modifPoint 4 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 224, #gens: 278, #ops: 1, parent:223] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 224
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-224/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(112): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (223(f=1.0), 224(f=1.0), )
Selected to next generation: IDs2--> (223(f=1.0), )
----------Running generation: 113, population size: 1

***** Generation 113 : 0
**Parent Variant: [Variant id: 225, #gens: 277, #ops: 0, parent:-]

--Child created id: 226
--Creating new operations for variant [Variant id: 226, #gens: 277, #ops: 0, parent:225]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 226, #gens: 278, #ops: 1, parent:225] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 226, errors: [ProperFractionFormat.java:105: error: variable whole is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		} 		int whole = num / den;
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(113): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (225(f=1.0), 226(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (225(f=1.0), )
----------Running generation: 114, population size: 1

***** Generation 114 : 0
**Parent Variant: [Variant id: 227, #gens: 277, #ops: 0, parent:-]

--Child created id: 228
--Creating new operations for variant [Variant id: 228, #gens: 277, #ops: 0, parent:227]
---analyzing modificationPoint position: 179
location: RandomDataImpl.java520
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rand = new org.apache.commons.math.random.JDKRandomGenerator() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 228, #gens: 276, #ops: 1, parent:227] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 228
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-228/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(114): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rand = new org.apache.commons.math.random.JDKRandomGenerator() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (227(f=1.0), 228(f=1.0), )
Selected to next generation: IDs2--> (227(f=1.0), )
----------Running generation: 115, population size: 1

***** Generation 115 : 0
**Parent Variant: [Variant id: 229, #gens: 277, #ops: 0, parent:-]

--Child created id: 230
--Creating new operations for variant [Variant id: 230, #gens: 277, #ops: 0, parent:229]
---analyzing modificationPoint position: 57
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 230, #gens: 277, #ops: 1, parent:229] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 230, errors: [FractionFormat.java:190: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
		} 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		  		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(115): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (229(f=1.0), 230(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (229(f=1.0), )
----------Running generation: 116, population size: 1

***** Generation 116 : 0
**Parent Variant: [Variant id: 231, #gens: 277, #ops: 0, parent:-]

--Child created id: 232
--Creating new operations for variant [Variant id: 232, #gens: 277, #ops: 0, parent:231]
---analyzing modificationPoint position: 54
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 85
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 123, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 232, #gens: 278, #ops: 1, parent:231] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 232, errors: [BigFractionFormat.java:124: error: unreachable statement
	 */ 	public static org.apache.commons.math.fraction.BigFractionFormat getProperInstance(final java.util.Locale locale) { 		return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale)); 		return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale));
	    	                                                                                                                    		                                                                                                                                               		^]
Ingredient counter is Zero
---Undoing: gnrtn(116): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (231(f=1.0), 232(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (231(f=1.0), )
----------Running generation: 117, population size: 1

***** Generation 117 : 0
**Parent Variant: [Variant id: 233, #gens: 277, #ops: 0, parent:-]

--Child created id: 234
--Creating new operations for variant [Variant id: 234, #gens: 277, #ops: 0, parent:233]
---analyzing modificationPoint position: 29
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 35
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 234, #gens: 276, #ops: 1, parent:233] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 234
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-234/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(117): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (233(f=1.0), 234(f=1.0), )
Selected to next generation: IDs2--> (233(f=1.0), )
----------Running generation: 118, population size: 1

***** Generation 118 : 0
**Parent Variant: [Variant id: 235, #gens: 277, #ops: 0, parent:-]

--Child created id: 236
--Creating new operations for variant [Variant id: 236, #gens: 277, #ops: 0, parent:235]
---analyzing modificationPoint position: 46
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [ret, ((java.lang.Number) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.lang.Number) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 236, #gens: 277, #ops: 1, parent:235] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 236
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-236/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(118): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (235(f=1.0), 236(f=1.0), )
Selected to next generation: IDs2--> (235(f=1.0), )
----------Running generation: 119, population size: 1

***** Generation 119 : 0
**Parent Variant: [Variant id: 237, #gens: 277, #ops: 0, parent:-]

--Child created id: 238
--Creating new operations for variant [Variant id: 238, #gens: 277, #ops: 0, parent:237]
---analyzing modificationPoint position: 56
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: BigFractionFormat.java180
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.BigFractionFormat.getProperInstance(java.util.Locale.getDefa[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 180, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.BigFractionFormat.getProperInstance(java.util.Locale.getDefa[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 238, #gens: 277, #ops: 1, parent:237] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 238, errors: [BigFractionFormat.java:179: error: incompatible types: org.apache.commons.math.fraction.BigFractionFormat cannot be converted to java.lang.StringBuffer
		} 		return org.apache.commons.math.fraction.BigFractionFormat.getProperInstance(java.util.Locale.getDefault());
		  		                                                                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(119): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.BigFractionFormat.getProperInstance(java.util.Locale.getDefa[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (237(f=1.0), 238(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (237(f=1.0), )
----------Running generation: 120, population size: 1

***** Generation 120 : 0
**Parent Variant: [Variant id: 239, #gens: 277, #ops: 0, parent:-]

--Child created id: 240
--Creating new operations for variant [Variant id: 240, #gens: 277, #ops: 0, parent:239]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 20
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 240, #gens: 278, #ops: 1, parent:239] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 240
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-240/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(120): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (239(f=1.0), 240(f=1.0), )
Selected to next generation: IDs2--> (239(f=1.0), )
----------Running generation: 121, population size: 1

***** Generation 121 : 0
**Parent Variant: [Variant id: 241, #gens: 277, #ops: 0, parent:-]

--Child created id: 242
--Creating new operations for variant [Variant id: 242, #gens: 277, #ops: 0, parent:241]
---analyzing modificationPoint position: 113
---modifPoint 0 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 33
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 242, #gens: 277, #ops: 1, parent:241] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 242
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-242/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(121): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (241(f=1.0), 242(f=1.0), )
Selected to next generation: IDs2--> (241(f=1.0), )
----------Running generation: 122, population size: 1

***** Generation 122 : 0
**Parent Variant: [Variant id: 243, #gens: 277, #ops: 0, parent:-]

--Child created id: 244
--Creating new operations for variant [Variant id: 244, #gens: 277, #ops: 0, parent:243]
---analyzing modificationPoint position: 39
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 109
---modifPoint 2 not mutation generated in  return numerator
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 72
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java149
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 149, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 244, #gens: 278, #ops: 1, parent:243] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 244
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-244/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(122): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (243(f=1.0), 244(f=1.0), )
Selected to next generation: IDs2--> (243(f=1.0), )
----------Running generation: 123, population size: 1

***** Generation 123 : 0
**Parent Variant: [Variant id: 245, #gens: 277, #ops: 0, parent:-]

--Child created id: 246
--Creating new operations for variant [Variant id: 246, #gens: 277, #ops: 0, parent:245]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 34
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 215
location: BrentSolver.java236
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `y1 = y2 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 246, #gens: 276, #ops: 1, parent:245] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 246
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-246/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 6, was successful: false, cases executed: 6] ,[]
-Valid?: |false|6|6|[]|, fitness 6.0
Ingredient counter is Zero
---Undoing: gnrtn(123): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `y1 = y2 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (245(f=1.0), 246(f=6.0), )
Selected to next generation: IDs2--> (245(f=1.0), )
----------Running generation: 124, population size: 1

***** Generation 124 : 0
**Parent Variant: [Variant id: 247, #gens: 277, #ops: 0, parent:-]

--Child created id: 248
--Creating new operations for variant [Variant id: 248, #gens: 277, #ops: 0, parent:247]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 21
---modifPoint 1 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 248, #gens: 277, #ops: 1, parent:247] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 248
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-248/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(124): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (247(f=1.0), 248(f=1.0), )
Selected to next generation: IDs2--> (247(f=1.0), )
----------Running generation: 125, population size: 1

***** Generation 125 : 0
**Parent Variant: [Variant id: 249, #gens: 277, #ops: 0, parent:-]

--Child created id: 250
--Creating new operations for variant [Variant id: 250, #gens: 277, #ops: 0, parent:249]
---analyzing modificationPoint position: 86
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 10
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 166
Templates availables82
Attempts Base Ingredients  1 total 82
---modifPoint 3 not mutation generated in  if (v > 0) { 	v = -v; }// make v negative 
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 250, #gens: 278, #ops: 1, parent:249] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 250
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-250/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(125): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (249(f=1.0), 250(f=1.0), )
Selected to next generation: IDs2--> (249(f=1.0), )
----------Running generation: 126, population size: 1

***** Generation 126 : 0
**Parent Variant: [Variant id: 251, #gens: 277, #ops: 0, parent:-]

--Child created id: 252
--Creating new operations for variant [Variant id: 252, #gens: 277, #ops: 0, parent:251]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java70
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 252, #gens: 277, #ops: 1, parent:251] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 252, errors: [AbstractFormat.java:70: error: final parameter numeratorFormat may not be assigned
	 */ 	protected AbstractFormat(final java.text.NumberFormat numeratorFormat, final java.text.NumberFormat denominatorFormat) { 		this.numeratorFormat = numeratorFormat; 		numeratorFormat = numeratorFormat;
	    	                                                                                                                         		                                        		^]
Ingredient counter is Zero
---Undoing: gnrtn(126): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (251(f=1.0), 252(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (251(f=1.0), )
----------Running generation: 127, population size: 1

***** Generation 127 : 0
**Parent Variant: [Variant id: 253, #gens: 277, #ops: 0, parent:-]

--Child created id: 254
--Creating new operations for variant [Variant id: 254, #gens: 277, #ops: 0, parent:253]
---analyzing modificationPoint position: 67
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch [numerator, denominator]
--> var from patch: numerator spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: denominator spoon.support.reflect.code.CtFieldReadImpl
location: BigFraction.java747
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return (37 * ((37 * 17) + numerator.hashCode())) + denominator.hashCode()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 747, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return (37 * ((37 * 17) + numerator.hashCode())) + denominator.hashCode()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 254, #gens: 278, #ops: 1, parent:253] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 254, errors: [BigFraction.java:816: error: incompatible types: int cannot be converted to java.math.BigInteger
		return (37 * ((37 * 17) + numerator.hashCode())) + denominator.hashCode(); 		return denominator;} 	/**
		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(127): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return (37 * ((37 * 17) + numerator.hashCode())) + denominator.hashCode()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (253(f=1.0), 254(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (253(f=1.0), )
----------Running generation: 128, population size: 1

***** Generation 128 : 0
**Parent Variant: [Variant id: 255, #gens: 277, #ops: 0, parent:-]

--Child created id: 256
--Creating new operations for variant [Variant id: 256, #gens: 277, #ops: 0, parent:255]
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java206
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 256, #gens: 278, #ops: 1, parent:255] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 256, errors: [FractionFormat.java:209: error: unreachable statement
			"unparseable fraction number: \"{0}\"", source); 			java.lang.StringBuffer ret = null;
			                                                 			                       ^]
Ingredient counter is Zero
---Undoing: gnrtn(128): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (255(f=1.0), 256(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (255(f=1.0), )
----------Running generation: 129, population size: 1

***** Generation 129 : 0
**Parent Variant: [Variant id: 257, #gens: 277, #ops: 0, parent:-]

--Child created id: 258
--Creating new operations for variant [Variant id: 258, #gens: 277, #ops: 0, parent:257]
---analyzing modificationPoint position: 135
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 0 not mutation generated in  sum += values[i] * weights[i]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 258, #gens: 278, #ops: 1, parent:257] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 258
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-258/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(129): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (257(f=1.0), 258(f=1.0), )
Selected to next generation: IDs2--> (257(f=1.0), )
----------Running generation: 130, population size: 1

***** Generation 130 : 0
**Parent Variant: [Variant id: 259, #gens: 277, #ops: 0, parent:-]

--Child created id: 260
--Creating new operations for variant [Variant id: 260, #gens: 277, #ops: 0, parent:259]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 56
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 260, #gens: 278, #ops: 1, parent:259] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 260, errors: [ProperFractionFormat.java:145: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		return wholeFormat;
		                                                                                       		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(130): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (259(f=1.0), 260(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (259(f=1.0), )
----------Running generation: 131, population size: 1

***** Generation 131 : 0
**Parent Variant: [Variant id: 261, #gens: 277, #ops: 0, parent:-]

--Child created id: 262
--Creating new operations for variant [Variant id: 262, #gens: 277, #ops: 0, parent:261]
---analyzing modificationPoint position: 38
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 262, #gens: 276, #ops: 1, parent:261] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 262
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-262/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(131): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (261(f=1.0), 262(f=1.0), )
Selected to next generation: IDs2--> (261(f=1.0), )
----------Running generation: 132, population size: 1

***** Generation 132 : 0
**Parent Variant: [Variant id: 263, #gens: 277, #ops: 0, parent:-]

--Child created id: 264
--Creating new operations for variant [Variant id: 264, #gens: 277, #ops: 0, parent:263]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 91
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  getWholeFormat().format(whole, toAppendTo, pos)
---analyzing modificationPoint position: 84
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 264, #gens: 276, #ops: 1, parent:263] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 264
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-264/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(132): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (263(f=1.0), 264(f=1.0), )
Selected to next generation: IDs2--> (263(f=1.0), )
----------Running generation: 133, population size: 1

***** Generation 133 : 0
**Parent Variant: [Variant id: 265, #gens: 277, #ops: 0, parent:-]

--Child created id: 266
--Creating new operations for variant [Variant id: 266, #gens: 277, #ops: 0, parent:265]
---analyzing modificationPoint position: 207
Templates availables83
Attempts Base Ingredients  1 total 83
vars from patch [y1, f, x1]
--> var from patch: y1 spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x1 spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java307
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `y2 = y0 ` -topatch--> `y1 = f.value(x1)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 307, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `y2 = y0 ` -topatch--> `y1 = f.value(x1)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 266, #gens: 278, #ops: 1, parent:265] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 266
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-266/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(133): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `y2 = y0 ` -topatch--> `y1 = f.value(x1)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (265(f=1.0), 266(f=1.0), )
Selected to next generation: IDs2--> (265(f=1.0), )
----------Running generation: 134, population size: 1

***** Generation 134 : 0
**Parent Variant: [Variant id: 267, #gens: 277, #ops: 0, parent:-]

--Child created id: 268
--Creating new operations for variant [Variant id: 268, #gens: 277, #ops: 0, parent:267]
---analyzing modificationPoint position: 76
---modifPoint 0 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 69
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 1 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 268, #gens: 277, #ops: 1, parent:267] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 268
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-268/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(134): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (267(f=1.0), 268(f=1.0), )
Selected to next generation: IDs2--> (267(f=1.0), )
----------Running generation: 135, population size: 1

***** Generation 135 : 0
**Parent Variant: [Variant id: 269, #gens: 277, #ops: 0, parent:-]

--Child created id: 270
--Creating new operations for variant [Variant id: 270, #gens: 277, #ops: 0, parent:269]
---analyzing modificationPoint position: 63
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 44
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 270, #gens: 278, #ops: 1, parent:269] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 270, errors: [ProperBigFractionFormat.java:109: error: variable den is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		getDenominatorFormat().format(den, toAppendTo, pos); 		java.math.BigInteger den = fraction.getDenominator();
		                                                     		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(135): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (269(f=1.0), 270(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (269(f=1.0), )
----------Running generation: 136, population size: 1

***** Generation 136 : 0
**Parent Variant: [Variant id: 271, #gens: 277, #ops: 0, parent:-]

--Child created id: 272
--Creating new operations for variant [Variant id: 272, #gens: 277, #ops: 0, parent:271]
---analyzing modificationPoint position: 66
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 30
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 2 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 4 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 272, #gens: 277, #ops: 1, parent:271] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 272, errors: [ProperFractionFormat.java:105: error: call to this must be first statement in constructor
		} 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(136): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (271(f=1.0), 272(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (271(f=1.0), )
----------Running generation: 137, population size: 1

***** Generation 137 : 0
**Parent Variant: [Variant id: 273, #gens: 277, #ops: 0, parent:-]

--Child created id: 274
--Creating new operations for variant [Variant id: 274, #gens: 277, #ops: 0, parent:273]
---analyzing modificationPoint position: 96
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 102, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 274, #gens: 277, #ops: 1, parent:273] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 274
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-274/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(137): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (273(f=1.0), 274(f=1.0), )
Selected to next generation: IDs2--> (273(f=1.0), )
----------Running generation: 138, population size: 1

***** Generation 138 : 0
**Parent Variant: [Variant id: 275, #gens: 277, #ops: 0, parent:-]

--Child created id: 276
--Creating new operations for variant [Variant id: 276, #gens: 277, #ops: 0, parent:275]
---analyzing modificationPoint position: 171
---modifPoint 0 not mutation generated in  // B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 141
---modifPoint 2 not mutation generated in  return test(values, begin, length)
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 276, #gens: 277, #ops: 1, parent:275] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 276
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-276/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(138): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (275(f=1.0), 276(f=1.0), )
Selected to next generation: IDs2--> (275(f=1.0), )
----------Running generation: 139, population size: 1

***** Generation 139 : 0
**Parent Variant: [Variant id: 277, #gens: 277, #ops: 0, parent:-]

--Child created id: 278
--Creating new operations for variant [Variant id: 278, #gens: 277, #ops: 0, parent:277]
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 47
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [ret, ((java.lang.Number) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.lang.Number) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue())[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue())[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 278, #gens: 277, #ops: 1, parent:277] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 278, errors: [FractionFormat.java:180: error: unreported exception org.apache.commons.math.fraction.FractionConversionException; must be caught or declared to be thrown
			ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue()), 
			             ^]
Ingredient counter is Zero
---Undoing: gnrtn(139): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue())[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (277(f=1.0), 278(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (277(f=1.0), )
----------Running generation: 140, population size: 1

***** Generation 140 : 0
**Parent Variant: [Variant id: 279, #gens: 277, #ops: 0, parent:-]

--Child created id: 280
--Creating new operations for variant [Variant id: 280, #gens: 277, #ops: 0, parent:279]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 280, #gens: 278, #ops: 1, parent:279] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 280
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-280/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(140): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (279(f=1.0), 280(f=1.0), )
Selected to next generation: IDs2--> (279(f=1.0), )
----------Running generation: 141, population size: 1

***** Generation 141 : 0
**Parent Variant: [Variant id: 281, #gens: 277, #ops: 0, parent:-]

--Child created id: 282
--Creating new operations for variant [Variant id: 282, #gens: 277, #ops: 0, parent:281]
---analyzing modificationPoint position: 23
---modifPoint 0 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 18
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 83
location: ProperBigFractionFormat.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 282, #gens: 276, #ops: 1, parent:281] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 282
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-282/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(141): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (281(f=1.0), 282(f=1.0), )
Selected to next generation: IDs2--> (281(f=1.0), )
----------Running generation: 142, population size: 1

***** Generation 142 : 0
**Parent Variant: [Variant id: 283, #gens: 277, #ops: 0, parent:-]

--Child created id: 284
--Creating new operations for variant [Variant id: 284, #gens: 277, #ops: 0, parent:283]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 284, #gens: 276, #ops: 1, parent:283] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 284
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-284/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(142): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (283(f=1.0), 284(f=1.0), )
Selected to next generation: IDs2--> (283(f=1.0), )
----------Running generation: 143, population size: 1

***** Generation 143 : 0
**Parent Variant: [Variant id: 285, #gens: 277, #ops: 0, parent:-]

--Child created id: 286
--Creating new operations for variant [Variant id: 286, #gens: 277, #ops: 0, parent:285]
---analyzing modificationPoint position: 72
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 286, #gens: 276, #ops: 1, parent:285] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 286
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-286/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(143): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (285(f=1.0), 286(f=1.0), )
Selected to next generation: IDs2--> (285(f=1.0), )
----------Running generation: 144, population size: 1

***** Generation 144 : 0
**Parent Variant: [Variant id: 287, #gens: 277, #ops: 0, parent:-]

--Child created id: 288
--Creating new operations for variant [Variant id: 288, #gens: 277, #ops: 0, parent:287]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [this.wholeFormat, format]
--> var from patch: this.wholeFormat spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 288, #gens: 277, #ops: 1, parent:287] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 288
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-288/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(144): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (287(f=1.0), 288(f=1.0), )
Selected to next generation: IDs2--> (287(f=1.0), )
----------Running generation: 145, population size: 1

***** Generation 145 : 0
**Parent Variant: [Variant id: 289, #gens: 277, #ops: 0, parent:-]

--Child created id: 290
--Creating new operations for variant [Variant id: 290, #gens: 277, #ops: 0, parent:289]
---analyzing modificationPoint position: 130
location: BigFraction.java134
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ZERO.equals(num)) { 	numerator = java.math.BigInteger.ZERO; 	denominator = [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 290, #gens: 276, #ops: 1, parent:289] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 290, errors: [BigFraction.java:158: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(145): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ZERO.equals(num)) { 	numerator = java.math.BigInteger.ZERO; 	denominator = [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (289(f=1.0), 290(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (289(f=1.0), )
----------Running generation: 146, population size: 1

***** Generation 146 : 0
**Parent Variant: [Variant id: 291, #gens: 277, #ops: 0, parent:-]

--Child created id: 292
--Creating new operations for variant [Variant id: 292, #gens: 277, #ops: 0, parent:291]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch []
location: MathRuntimeException.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 292, #gens: 277, #ops: 1, parent:291] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 292, errors: [MathRuntimeException.java:505: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:531: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:531: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:531: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:531: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:532: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:532: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:532: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:534: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:535: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:536: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:537: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:538: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:538: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:539: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:539: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(146): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (291(f=1.0), 292(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (291(f=1.0), )
----------Running generation: 147, population size: 1

***** Generation 147 : 0
**Parent Variant: [Variant id: 293, #gens: 277, #ops: 0, parent:-]

--Child created id: 294
--Creating new operations for variant [Variant id: 294, #gens: 277, #ops: 0, parent:293]
---analyzing modificationPoint position: 22
---modifPoint 0 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 54
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java173
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 173, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 294, #gens: 278, #ops: 1, parent:293] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 294, errors: [FractionFormat.java:174: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
	 */ 	@java.lang.Override 	public java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) { 		return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefault()); 		java.lang.StringBuffer ret = null;
	    	                    	                                                                                                                                               		                                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(147): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (293(f=1.0), 294(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (293(f=1.0), )
----------Running generation: 148, population size: 1

***** Generation 148 : 0
**Parent Variant: [Variant id: 295, #gens: 277, #ops: 0, parent:-]

--Child created id: 296
--Creating new operations for variant [Variant id: 296, #gens: 277, #ops: 0, parent:295]
---analyzing modificationPoint position: 99
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  // return the initial guess if it is good enough double yInitial = f.value(initial)
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 11
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 75
---modifPoint 3 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 4
---modifPoint 4 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 97
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 5 not mutation generated in  verifySequence(min, initial, max)
---analyzing modificationPoint position: 82
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java60
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 296, #gens: 277, #ops: 1, parent:295] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 296
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-296/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(148): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (295(f=1.0), 296(f=1.0), )
Selected to next generation: IDs2--> (295(f=1.0), )
----------Running generation: 149, population size: 1

***** Generation 149 : 0
**Parent Variant: [Variant id: 297, #gens: 277, #ops: 0, parent:-]

--Child created id: 298
--Creating new operations for variant [Variant id: 298, #gens: 277, #ops: 0, parent:297]
---analyzing modificationPoint position: 52
location: FractionFormat.java206
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 298, #gens: 276, #ops: 1, parent:297] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 298
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-298/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(149): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (297(f=1.0), 298(f=1.0), )
Selected to next generation: IDs2--> (297(f=1.0), )
----------Running generation: 150, population size: 1

***** Generation 150 : 0
**Parent Variant: [Variant id: 299, #gens: 277, #ops: 0, parent:-]

--Child created id: 300
--Creating new operations for variant [Variant id: 300, #gens: 277, #ops: 0, parent:299]
---analyzing modificationPoint position: 92
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  toAppendTo.append(' ')
---analyzing modificationPoint position: 46
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [ret, ((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((org.apache.commons.math.fraction.BigFraction) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 300, #gens: 277, #ops: 1, parent:299] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 300
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-300/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(150): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (299(f=1.0), 300(f=1.0), )
Selected to next generation: IDs2--> (299(f=1.0), )
----------Running generation: 151, population size: 1

***** Generation 151 : 0
**Parent Variant: [Variant id: 301, #gens: 277, #ops: 0, parent:-]

--Child created id: 302
--Creating new operations for variant [Variant id: 302, #gens: 277, #ops: 0, parent:301]
---analyzing modificationPoint position: 25
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 302, #gens: 276, #ops: 1, parent:301] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 302
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-302/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(151): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (301(f=1.0), 302(f=1.0), )
Selected to next generation: IDs2--> (301(f=1.0), )
----------Running generation: 152, population size: 1

***** Generation 152 : 0
**Parent Variant: [Variant id: 303, #gens: 277, #ops: 0, parent:-]

--Child created id: 304
--Creating new operations for variant [Variant id: 304, #gens: 277, #ops: 0, parent:303]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 304, #gens: 276, #ops: 1, parent:303] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 304
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-304/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(152): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (303(f=1.0), 304(f=1.0), )
Selected to next generation: IDs2--> (303(f=1.0), )
----------Running generation: 153, population size: 1

***** Generation 153 : 0
**Parent Variant: [Variant id: 305, #gens: 277, #ops: 0, parent:-]

--Child created id: 306
--Creating new operations for variant [Variant id: 306, #gens: 277, #ops: 0, parent:305]
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 306, #gens: 276, #ops: 1, parent:305] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 306
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-306/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(153): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (305(f=1.0), 306(f=1.0), )
Selected to next generation: IDs2--> (305(f=1.0), )
----------Running generation: 154, population size: 1

***** Generation 154 : 0
**Parent Variant: [Variant id: 307, #gens: 277, #ops: 0, parent:-]

--Child created id: 308
--Creating new operations for variant [Variant id: 308, #gens: 277, #ops: 0, parent:307]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 159
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 1 not mutation generated in  // reduce numerator and denominator by greatest common denominator. final int d = org.apache.commons[...]
---analyzing modificationPoint position: 213
Templates availables83
Attempts Base Ingredients  1 total 83
vars from patch [x1, delta]
--> var from patch: x1 spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: delta spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `x2 = x0 ` -topatch--> `x1 = x1 + delta` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 234, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `x2 = x0 ` -topatch--> `x1 = x1 + delta` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 308, #gens: 278, #ops: 1, parent:307] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 308, errors: [BrentSolver.java:316: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(154): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `x2 = x0 ` -topatch--> `x1 = x1 + delta` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (307(f=1.0), 308(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (307(f=1.0), )
----------Running generation: 155, population size: 1

***** Generation 155 : 0
**Parent Variant: [Variant id: 309, #gens: 277, #ops: 0, parent:-]

--Child created id: 310
--Creating new operations for variant [Variant id: 310, #gens: 277, #ops: 0, parent:309]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 187
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  // Compute correction factor in second pass double correction = 0
---analyzing modificationPoint position: 59
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 2 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 159
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 4 not mutation generated in  // reduce numerator and denominator by greatest common denominator. final int d = org.apache.commons[...]
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 5 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 6 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 46
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 7 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 8 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 9 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 30
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
Attempts Base Ingredients  4 total 13
---modifPoint 10 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 22
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [java.lang.System.err]
--> var from patch: java.lang.System.err spoon.support.reflect.code.CtFieldReadImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 310, #gens: 278, #ops: 1, parent:309] gen mutated: 1 , gen not mut: 11, gen not applied  0
-The child does NOT compile: 310, errors: [MathRuntimeException.java:212: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:212: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:212: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:212: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:212: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:212: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:212: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:212: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:212: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:213: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:213: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:213: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:213: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:213: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:213: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:215: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:216: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:217: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:218: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:219: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:219: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:220: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:220: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(155): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (309(f=1.0), 310(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (309(f=1.0), )
----------Running generation: 156, population size: 1

***** Generation 156 : 0
**Parent Variant: [Variant id: 311, #gens: 277, #ops: 0, parent:-]

--Child created id: 312
--Creating new operations for variant [Variant id: 312, #gens: 277, #ops: 0, parent:311]
---analyzing modificationPoint position: 23
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: MathRuntimeException.java128
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 128, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 312, #gens: 278, #ops: 1, parent:311] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 312, errors: [MathRuntimeException.java:519: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:519: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:519: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:519: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:519: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:519: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:519: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:519: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:519: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:520: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:520: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:520: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:520: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:520: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:520: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:522: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:523: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:524: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:525: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:526: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:526: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:527: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:527: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(156): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (311(f=1.0), 312(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (311(f=1.0), )
----------Running generation: 157, population size: 1

***** Generation 157 : 0
**Parent Variant: [Variant id: 313, #gens: 277, #ops: 0, parent:-]

--Child created id: 314
--Creating new operations for variant [Variant id: 314, #gens: 277, #ops: 0, parent:313]
---analyzing modificationPoint position: 15
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 29
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 18
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 314, #gens: 278, #ops: 1, parent:313] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 314
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-314/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(157): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (313(f=1.0), 314(f=1.0), )
Selected to next generation: IDs2--> (313(f=1.0), )
----------Running generation: 158, population size: 1

***** Generation 158 : 0
**Parent Variant: [Variant id: 315, #gens: 277, #ops: 0, parent:-]

--Child created id: 316
--Creating new operations for variant [Variant id: 316, #gens: 277, #ops: 0, parent:315]
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 316, #gens: 277, #ops: 1, parent:315] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 316, errors: [AbstractFormat.java:50: error: recursive constructor invocation
		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		^]
Ingredient counter is Zero
---Undoing: gnrtn(158): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (315(f=1.0), 316(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (315(f=1.0), )
----------Running generation: 159, population size: 1

***** Generation 159 : 0
**Parent Variant: [Variant id: 317, #gens: 277, #ops: 0, parent:-]

--Child created id: 318
--Creating new operations for variant [Variant id: 318, #gens: 277, #ops: 0, parent:317]
---analyzing modificationPoint position: 46
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
vars from patch [ret, ((java.math.BigInteger) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.math.BigInteger) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 318, #gens: 277, #ops: 1, parent:317] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 318
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-318/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(159): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (317(f=1.0), 318(f=1.0), )
Selected to next generation: IDs2--> (317(f=1.0), )
----------Running generation: 160, population size: 1

***** Generation 160 : 0
**Parent Variant: [Variant id: 319, #gens: 277, #ops: 0, parent:-]

--Child created id: 320
--Creating new operations for variant [Variant id: 320, #gens: 277, #ops: 0, parent:319]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 150
---modifPoint 1 not mutation generated in  return (sigma * getRan().nextGaussian()) + mu
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 320, #gens: 278, #ops: 1, parent:319] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 320, errors: [AbstractFormat.java:123: error: unreachable statement
		"denominator format can not be null"); 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                       		^]
Ingredient counter is Zero
---Undoing: gnrtn(160): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (319(f=1.0), 320(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (319(f=1.0), )
----------Running generation: 161, population size: 1

***** Generation 161 : 0
**Parent Variant: [Variant id: 321, #gens: 277, #ops: 0, parent:-]

--Child created id: 322
--Creating new operations for variant [Variant id: 322, #gens: 277, #ops: 0, parent:321]
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 29
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 95, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 322, #gens: 278, #ops: 1, parent:321] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 322
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-322/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(161): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (321(f=1.0), 322(f=1.0), )
Selected to next generation: IDs2--> (321(f=1.0), )
----------Running generation: 162, population size: 1

***** Generation 162 : 0
**Parent Variant: [Variant id: 323, #gens: 277, #ops: 0, parent:-]

--Child created id: 324
--Creating new operations for variant [Variant id: 324, #gens: 277, #ops: 0, parent:323]
---analyzing modificationPoint position: 66
location: FractionFormat.java229
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 324, #gens: 276, #ops: 1, parent:323] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 324
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-324/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(162): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (323(f=1.0), 324(f=1.0), )
Selected to next generation: IDs2--> (323(f=1.0), )
----------Running generation: 163, population size: 1

***** Generation 163 : 0
**Parent Variant: [Variant id: 325, #gens: 277, #ops: 0, parent:-]

--Child created id: 326
--Creating new operations for variant [Variant id: 326, #gens: 277, #ops: 0, parent:325]
---analyzing modificationPoint position: 68
Templates availables49
Attempts Base Ingredients  1 total 49
vars from patch []
location: BigFraction.java780
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numerator ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 780, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numerator ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 326, #gens: 277, #ops: 1, parent:325] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 326, errors: [BigFraction.java:1133: error: incompatible types: org.apache.commons.math.fraction.BigFractionField cannot be converted to java.math.BigInteger
		return org.apache.commons.math.fraction.BigFractionField.getInstance();} 	/**
		                                                                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(163): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numerator ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (325(f=1.0), 326(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (325(f=1.0), )
----------Running generation: 164, population size: 1

***** Generation 164 : 0
**Parent Variant: [Variant id: 327, #gens: 277, #ops: 0, parent:-]

--Child created id: 328
--Creating new operations for variant [Variant id: 328, #gens: 277, #ops: 0, parent:327]
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 328, #gens: 276, #ops: 1, parent:327] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 328
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-328/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(164): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (327(f=1.0), 328(f=1.0), )
Selected to next generation: IDs2--> (327(f=1.0), )
----------Running generation: 165, population size: 1

***** Generation 165 : 0
**Parent Variant: [Variant id: 329, #gens: 277, #ops: 0, parent:-]

--Child created id: 330
--Creating new operations for variant [Variant id: 330, #gens: 277, #ops: 0, parent:329]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 330, #gens: 276, #ops: 1, parent:329] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 330
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-330/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(165): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (329(f=1.0), 330(f=1.0), )
Selected to next generation: IDs2--> (329(f=1.0), )
----------Running generation: 166, population size: 1

***** Generation 166 : 0
**Parent Variant: [Variant id: 331, #gens: 277, #ops: 0, parent:-]

--Child created id: 332
--Creating new operations for variant [Variant id: 332, #gens: 277, #ops: 0, parent:331]
---analyzing modificationPoint position: 88
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java103
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 103, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 332, #gens: 278, #ops: 1, parent:331] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 332, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(166): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (331(f=1.0), 332(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (331(f=1.0), )
----------Running generation: 167, population size: 1

***** Generation 167 : 0
**Parent Variant: [Variant id: 333, #gens: 277, #ops: 0, parent:-]

--Child created id: 334
--Creating new operations for variant [Variant id: 334, #gens: 277, #ops: 0, parent:333]
---analyzing modificationPoint position: 65
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 334, #gens: 278, #ops: 1, parent:333] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 334, errors: [FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(167): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (333(f=1.0), 334(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (333(f=1.0), )
----------Running generation: 168, population size: 1

***** Generation 168 : 0
**Parent Variant: [Variant id: 335, #gens: 277, #ops: 0, parent:-]

--Child created id: 336
--Creating new operations for variant [Variant id: 336, #gens: 277, #ops: 0, parent:335]
---analyzing modificationPoint position: 61
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 336, #gens: 276, #ops: 1, parent:335] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 336
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-336/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(168): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (335(f=1.0), 336(f=1.0), )
Selected to next generation: IDs2--> (335(f=1.0), )
----------Running generation: 169, population size: 1

***** Generation 169 : 0
**Parent Variant: [Variant id: 337, #gens: 277, #ops: 0, parent:-]

--Child created id: 338
--Creating new operations for variant [Variant id: 338, #gens: 277, #ops: 0, parent:337]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 188
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  for (int i = begin; i < (begin + length); i++) { 	correction += values[i] - xbar; }
---analyzing modificationPoint position: 18
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 338, #gens: 277, #ops: 1, parent:337] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 338
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-338/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(169): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (337(f=1.0), 338(f=1.0), )
Selected to next generation: IDs2--> (337(f=1.0), )
----------Running generation: 170, population size: 1

***** Generation 170 : 0
**Parent Variant: [Variant id: 339, #gens: 277, #ops: 0, parent:-]

--Child created id: 340
--Creating new operations for variant [Variant id: 340, #gens: 277, #ops: 0, parent:339]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 140
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [length]
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java169
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...] ` -topatch--> `if (length == 0) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 169, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...] ` -topatch--> `if (length == 0) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 340, #gens: 278, #ops: 1, parent:339] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 340
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-340/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(170): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...] ` -topatch--> `if (length == 0) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (339(f=1.0), 340(f=1.0), )
Selected to next generation: IDs2--> (339(f=1.0), )
----------Running generation: 171, population size: 1

***** Generation 171 : 0
**Parent Variant: [Variant id: 341, #gens: 277, #ops: 0, parent:-]

--Child created id: 342
--Creating new operations for variant [Variant id: 342, #gens: 277, #ops: 0, parent:341]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 114
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); }
---analyzing modificationPoint position: 14
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 342, #gens: 276, #ops: 1, parent:341] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 342
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-342/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(171): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (341(f=1.0), 342(f=1.0), )
Selected to next generation: IDs2--> (341(f=1.0), )
----------Running generation: 172, population size: 1

***** Generation 172 : 0
**Parent Variant: [Variant id: 343, #gens: 277, #ops: 0, parent:-]

--Child created id: 344
--Creating new operations for variant [Variant id: 344, #gens: 277, #ops: 0, parent:343]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 96
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 102, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 344, #gens: 278, #ops: 1, parent:343] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 344, errors: [ProperFractionFormat.java:250: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:253: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperFractionFormat.java:253: error: ';' expected
	 * Modify the whole format.
	         ^, ProperFractionFormat.java:253: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperFractionFormat.java:253: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperFractionFormat.java:255: error: illegal start of expression
	 * @param format
	 ^, ProperFractionFormat.java:255: error: illegal start of expression
	 * @param format
	   ^, ProperFractionFormat.java:256: error: not a statement
	 * 		The new whole format value.
	 ^, ProperFractionFormat.java:256: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperFractionFormat.java:256: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperFractionFormat.java:256: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperFractionFormat.java:257: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperFractionFormat.java:258: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperFractionFormat.java:258: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperFractionFormat.java:258: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperFractionFormat.java:258: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperFractionFormat.java:258: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperFractionFormat.java:258: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperFractionFormat.java:259: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperFractionFormat.java:258: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperFractionFormat.java:259: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperFractionFormat.java:259: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperFractionFormat.java:259: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperFractionFormat.java:260: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                               ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                    ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                  ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                          ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		   ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		    ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		           ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		              ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                  ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                    ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			      ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			         ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			          ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                 ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                        ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                         ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                             ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                              ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                  ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                   ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                 ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                  ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                ^, ProperFractionFormat.java:260: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                 ^, ProperFractionFormat.java:260: error: illegal start of type
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		^, ProperFractionFormat.java:260: error: ';' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		    ^, ProperFractionFormat.java:260: error: <identifier> expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		                ^, ProperFractionFormat.java:260: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(172): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (343(f=1.0), 344(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (343(f=1.0), )
----------Running generation: 173, population size: 1

***** Generation 173 : 0
**Parent Variant: [Variant id: 345, #gens: 277, #ops: 0, parent:-]

--Child created id: 346
--Creating new operations for variant [Variant id: 346, #gens: 277, #ops: 0, parent:345]
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 346, #gens: 278, #ops: 1, parent:345] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 346
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-346/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(173): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (345(f=1.0), 346(f=1.0), )
Selected to next generation: IDs2--> (345(f=1.0), )
----------Running generation: 174, population size: 1

***** Generation 174 : 0
**Parent Variant: [Variant id: 347, #gens: 277, #ops: 0, parent:-]

--Child created id: 348
--Creating new operations for variant [Variant id: 348, #gens: 277, #ops: 0, parent:347]
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 57
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 45
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 348, #gens: 276, #ops: 1, parent:347] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 348
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-348/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(174): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (347(f=1.0), 348(f=1.0), )
Selected to next generation: IDs2--> (347(f=1.0), )
----------Running generation: 175, population size: 1

***** Generation 175 : 0
**Parent Variant: [Variant id: 349, #gens: 277, #ops: 0, parent:-]

--Child created id: 350
--Creating new operations for variant [Variant id: 350, #gens: 277, #ops: 0, parent:349]
---analyzing modificationPoint position: 63
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java222
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 350, #gens: 277, #ops: 1, parent:349] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 350, errors: [FractionFormat.java:241: error: cannot find symbol
		switch (c) {
		        ^
  symbol:   variable c
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:253: error: cannot find symbol
				pos.setIndex(initialIndex);
				             ^
  symbol:   variable initialIndex
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:267: error: cannot find symbol
			pos.setIndex(initialIndex);
			             ^
  symbol:   variable initialIndex
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(175): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (349(f=1.0), 350(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (349(f=1.0), )
----------Running generation: 176, population size: 1

***** Generation 176 : 0
**Parent Variant: [Variant id: 351, #gens: 277, #ops: 0, parent:-]

--Child created id: 352
--Creating new operations for variant [Variant id: 352, #gens: 277, #ops: 0, parent:351]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java205
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 205, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 352, #gens: 278, #ops: 1, parent:351] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 352, errors: [FractionFormat.java:246: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' :
				                                                                         			^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(176): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (351(f=1.0), 352(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (351(f=1.0), )
----------Running generation: 177, population size: 1

***** Generation 177 : 0
**Parent Variant: [Variant id: 353, #gens: 277, #ops: 0, parent:-]

--Child created id: 354
--Creating new operations for variant [Variant id: 354, #gens: 277, #ops: 0, parent:353]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 354, #gens: 276, #ops: 1, parent:353] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 354
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-354/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(177): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (353(f=1.0), 354(f=1.0), )
Selected to next generation: IDs2--> (353(f=1.0), )
----------Running generation: 178, population size: 1

***** Generation 178 : 0
**Parent Variant: [Variant id: 355, #gens: 277, #ops: 0, parent:-]

--Child created id: 356
--Creating new operations for variant [Variant id: 356, #gens: 277, #ops: 0, parent:355]
---analyzing modificationPoint position: 118
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  if (test(values, weights, begin, length)) { 	org.apache.commons.math.stat.descriptive.summary.Sum su[...]
---analyzing modificationPoint position: 58
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 42
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 2 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 356, #gens: 276, #ops: 1, parent:355] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 356
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-356/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(178): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (355(f=1.0), 356(f=1.0), )
Selected to next generation: IDs2--> (355(f=1.0), )
----------Running generation: 179, population size: 1

***** Generation 179 : 0
**Parent Variant: [Variant id: 357, #gens: 277, #ops: 0, parent:-]

--Child created id: 358
--Creating new operations for variant [Variant id: 358, #gens: 277, #ops: 0, parent:357]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 358, #gens: 278, #ops: 1, parent:357] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 358, errors: [AbstractFormat.java:59: error: call to this must be first statement in constructor
	 */ 	protected AbstractFormat(final java.text.NumberFormat format) { 		this(format, ((java.text.NumberFormat) (format.clone()))); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                		                                                           		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(179): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (357(f=1.0), 358(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (357(f=1.0), )
----------Running generation: 180, population size: 1

***** Generation 180 : 0
**Parent Variant: [Variant id: 359, #gens: 277, #ops: 0, parent:-]

--Child created id: 360
--Creating new operations for variant [Variant id: 360, #gens: 277, #ops: 0, parent:359]
---analyzing modificationPoint position: 67
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 26
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 360, #gens: 276, #ops: 1, parent:359] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 360
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-360/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(180): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (359(f=1.0), 360(f=1.0), )
Selected to next generation: IDs2--> (359(f=1.0), )
----------Running generation: 181, population size: 1

***** Generation 181 : 0
**Parent Variant: [Variant id: 361, #gens: 277, #ops: 0, parent:-]

--Child created id: 362
--Creating new operations for variant [Variant id: 362, #gens: 277, #ops: 0, parent:361]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 15
---modifPoint 3 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 21
---modifPoint 4 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 35
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 362, #gens: 276, #ops: 1, parent:361] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 362
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-362/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(181): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (361(f=1.0), 362(f=1.0), )
Selected to next generation: IDs2--> (361(f=1.0), )
----------Running generation: 182, population size: 1

***** Generation 182 : 0
**Parent Variant: [Variant id: 363, #gens: 277, #ops: 0, parent:-]

--Child created id: 364
--Creating new operations for variant [Variant id: 364, #gens: 277, #ops: 0, parent:363]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 364, #gens: 278, #ops: 1, parent:363] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 364
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-364/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(182): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (363(f=1.0), 364(f=1.0), )
Selected to next generation: IDs2--> (363(f=1.0), )
----------Running generation: 183, population size: 1

***** Generation 183 : 0
**Parent Variant: [Variant id: 365, #gens: 277, #ops: 0, parent:-]

--Child created id: 366
--Creating new operations for variant [Variant id: 366, #gens: 277, #ops: 0, parent:365]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 48
---modifPoint 1 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 15
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 22
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [java.util.Locale.US]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 366, #gens: 277, #ops: 1, parent:365] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 366, errors: [MathRuntimeException.java:197: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:197: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:197: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:197: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:197: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:197: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:197: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:197: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:197: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:198: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:198: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:198: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:198: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:198: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:198: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:200: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:201: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:202: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:203: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:204: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:204: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:205: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:205: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(183): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (365(f=1.0), 366(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (365(f=1.0), )
----------Running generation: 184, population size: 1

***** Generation 184 : 0
**Parent Variant: [Variant id: 367, #gens: 277, #ops: 0, parent:-]

--Child created id: 368
--Creating new operations for variant [Variant id: 368, #gens: 277, #ops: 0, parent:367]
---analyzing modificationPoint position: 53
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch [ret, ((java.math.BigInteger) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.math.BigInteger) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java168
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 168, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 368, #gens: 278, #ops: 1, parent:367] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 368, errors: [BigFractionFormat.java:172: error: variable ret might already have been assigned
		ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toAppendTo, pos); 		if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 			ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos);} else if (obj instanceof java.math.BigInteger) { 			ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toAppendTo, pos);
		                                                                                                                 		                                                                   			^, BigFractionFormat.java:172: error: variable ret might already have been assigned
		ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toAppendTo, pos); 		if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 			ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos);} else if (obj instanceof java.math.BigInteger) { 			ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toAppendTo, pos);
		                                                                                                                 		                                                                   			                                                                                                                                        			^, BigFractionFormat.java:174: error: variable ret might already have been assigned
			ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue()), 
			^]
Ingredient counter is Zero
---Undoing: gnrtn(184): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (367(f=1.0), 368(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (367(f=1.0), )
----------Running generation: 185, population size: 1

***** Generation 185 : 0
**Parent Variant: [Variant id: 369, #gens: 277, #ops: 0, parent:-]

--Child created id: 370
--Creating new operations for variant [Variant id: 370, #gens: 277, #ops: 0, parent:369]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 370, #gens: 276, #ops: 1, parent:369] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 370
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-370/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(185): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (369(f=1.0), 370(f=1.0), )
Selected to next generation: IDs2--> (369(f=1.0), )
----------Running generation: 186, population size: 1

***** Generation 186 : 0
**Parent Variant: [Variant id: 371, #gens: 277, #ops: 0, parent:-]

--Child created id: 372
--Creating new operations for variant [Variant id: 372, #gens: 277, #ops: 0, parent:371]
---analyzing modificationPoint position: 152
Templates availables83
Attempts Base Ingredients  1 total 83
vars from patch [java.lang.Double.NaN]
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: BrentSolver.java287
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `oldDelta = delta ` -topatch--> `double ret = java.lang.Double.NaN` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 287, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `oldDelta = delta ` -topatch--> `double ret = java.lang.Double.NaN` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 372, #gens: 278, #ops: 1, parent:371] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 372
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-372/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(186): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `oldDelta = delta ` -topatch--> `double ret = java.lang.Double.NaN` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (371(f=1.0), 372(f=1.0), )
Selected to next generation: IDs2--> (371(f=1.0), )
----------Running generation: 187, population size: 1

***** Generation 187 : 0
**Parent Variant: [Variant id: 373, #gens: 277, #ops: 0, parent:-]

--Child created id: 374
--Creating new operations for variant [Variant id: 374, #gens: 277, #ops: 0, parent:373]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [this.pattern]
--> var from patch: this.pattern spoon.support.reflect.code.CtFieldWriteImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `this.pattern = pattern` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `this.pattern = pattern` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 374, #gens: 278, #ops: 1, parent:373] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 374, errors: [MathRuntimeException.java:104: error: non-static variable this cannot be referenced from a static context
			java.util.ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale); 			this.pattern = pattern;
			                                                                                         			^, MathRuntimeException.java:104: error: cannot assign a value to final variable pattern
			java.util.ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale); 			this.pattern = pattern;
			                                                                                         			    ^, MathRuntimeException.java:104: error: non-static variable pattern cannot be referenced from a static context
			java.util.ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale); 			this.pattern = pattern;
			                                                                                         			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(187): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `this.pattern = pattern` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (373(f=1.0), 374(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (373(f=1.0), )
----------Running generation: 188, population size: 1

***** Generation 188 : 0
**Parent Variant: [Variant id: 375, #gens: 277, #ops: 0, parent:-]

--Child created id: 376
--Creating new operations for variant [Variant id: 376, #gens: 277, #ops: 0, parent:375]
---analyzing modificationPoint position: 20
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 376, #gens: 276, #ops: 1, parent:375] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 376
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-376/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(188): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (375(f=1.0), 376(f=1.0), )
Selected to next generation: IDs2--> (375(f=1.0), )
----------Running generation: 189, population size: 1

***** Generation 189 : 0
**Parent Variant: [Variant id: 377, #gens: 277, #ops: 0, parent:-]

--Child created id: 378
--Creating new operations for variant [Variant id: 378, #gens: 277, #ops: 0, parent:377]
---analyzing modificationPoint position: 58
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 20
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 378, #gens: 278, #ops: 1, parent:377] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 378
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-378/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(189): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (377(f=1.0), 378(f=1.0), )
Selected to next generation: IDs2--> (377(f=1.0), )
----------Running generation: 190, population size: 1

***** Generation 190 : 0
**Parent Variant: [Variant id: 379, #gens: 277, #ops: 0, parent:-]

--Child created id: 380
--Creating new operations for variant [Variant id: 380, #gens: 277, #ops: 0, parent:379]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 100
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 2 not mutation generated in  if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...]
---analyzing modificationPoint position: 116
location: BigFraction.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 380, #gens: 276, #ops: 1, parent:379] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 380, errors: [BigFraction.java:158: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(190): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (379(f=1.0), 380(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (379(f=1.0), )
----------Running generation: 191, population size: 1

***** Generation 191 : 0
**Parent Variant: [Variant id: 381, #gens: 277, #ops: 0, parent:-]

--Child created id: 382
--Creating new operations for variant [Variant id: 382, #gens: 277, #ops: 0, parent:381]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 382, #gens: 276, #ops: 1, parent:381] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 382
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-382/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(191): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (381(f=1.0), 382(f=1.0), )
Selected to next generation: IDs2--> (381(f=1.0), )
----------Running generation: 192, population size: 1

***** Generation 192 : 0
**Parent Variant: [Variant id: 383, #gens: 277, #ops: 0, parent:-]

--Child created id: 384
--Creating new operations for variant [Variant id: 384, #gens: 277, #ops: 0, parent:383]
---analyzing modificationPoint position: 71
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java173
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 173, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 384, #gens: 278, #ops: 1, parent:383] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 384, errors: [AbstractFormat.java:173: error: non-static variable denominatorFormat cannot be referenced from a static context
			if (index < n) { 				denominatorFormat = denominatorFormat;
			                 				^, AbstractFormat.java:173: error: non-static variable denominatorFormat cannot be referenced from a static context
			if (index < n) { 				denominatorFormat = denominatorFormat;
			                 				                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(192): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (383(f=1.0), 384(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (383(f=1.0), )
----------Running generation: 193, population size: 1

***** Generation 193 : 0
**Parent Variant: [Variant id: 385, #gens: 277, #ops: 0, parent:-]

--Child created id: 386
--Creating new operations for variant [Variant id: 386, #gens: 277, #ops: 0, parent:385]
---analyzing modificationPoint position: 46
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 11
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 80
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 4 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 5 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 6 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 22
---modifPoint 7 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 386, #gens: 276, #ops: 1, parent:385] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child compiles: id 386
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-386/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(193): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (385(f=1.0), 386(f=1.0), )
Selected to next generation: IDs2--> (385(f=1.0), )
----------Running generation: 194, population size: 1

***** Generation 194 : 0
**Parent Variant: [Variant id: 387, #gens: 277, #ops: 0, parent:-]

--Child created id: 388
--Creating new operations for variant [Variant id: 388, #gens: 277, #ops: 0, parent:387]
---analyzing modificationPoint position: 95
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); }
---analyzing modificationPoint position: 163
location: Fraction.java291
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 388, #gens: 276, #ops: 1, parent:387] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 388, errors: [Fraction.java:293: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(194): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (387(f=1.0), 388(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (387(f=1.0), )
----------Running generation: 195, population size: 1

***** Generation 195 : 0
**Parent Variant: [Variant id: 389, #gens: 277, #ops: 0, parent:-]

--Child created id: 390
--Creating new operations for variant [Variant id: 390, #gens: 277, #ops: 0, parent:389]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 390, #gens: 276, #ops: 1, parent:389] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 390
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-390/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(195): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (389(f=1.0), 390(f=1.0), )
Selected to next generation: IDs2--> (389(f=1.0), )
----------Running generation: 196, population size: 1

***** Generation 196 : 0
**Parent Variant: [Variant id: 391, #gens: 277, #ops: 0, parent:-]

--Child created id: 392
--Creating new operations for variant [Variant id: 392, #gens: 277, #ops: 0, parent:391]
---analyzing modificationPoint position: 58
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java136
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 136, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 392, #gens: 278, #ops: 1, parent:391] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 392, errors: [ProperFractionFormat.java:184: error: orphaned case
			case '/' :
			^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(196): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (391(f=1.0), 392(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (391(f=1.0), )
----------Running generation: 197, population size: 1

***** Generation 197 : 0
**Parent Variant: [Variant id: 393, #gens: 277, #ops: 0, parent:-]

--Child created id: 394
--Creating new operations for variant [Variant id: 394, #gens: 277, #ops: 0, parent:393]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 26
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 394, #gens: 277, #ops: 1, parent:393] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 394
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-394/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(197): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (393(f=1.0), 394(f=1.0), )
Selected to next generation: IDs2--> (393(f=1.0), )
----------Running generation: 198, population size: 1

***** Generation 198 : 0
**Parent Variant: [Variant id: 395, #gens: 277, #ops: 0, parent:-]

--Child created id: 396
--Creating new operations for variant [Variant id: 396, #gens: 277, #ops: 0, parent:395]
---analyzing modificationPoint position: 25
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 396, #gens: 278, #ops: 1, parent:395] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 396
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-396/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(198): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (395(f=1.0), 396(f=1.0), )
Selected to next generation: IDs2--> (395(f=1.0), )
----------Running generation: 199, population size: 1

***** Generation 199 : 0
**Parent Variant: [Variant id: 397, #gens: 277, #ops: 0, parent:-]

--Child created id: 398
--Creating new operations for variant [Variant id: 398, #gens: 277, #ops: 0, parent:397]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 398, #gens: 278, #ops: 1, parent:397] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 398
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-398/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(199): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (397(f=1.0), 398(f=1.0), )
Selected to next generation: IDs2--> (397(f=1.0), )
----------Running generation: 200, population size: 1

***** Generation 200 : 0
**Parent Variant: [Variant id: 399, #gens: 277, #ops: 0, parent:-]

--Child created id: 400
--Creating new operations for variant [Variant id: 400, #gens: 277, #ops: 0, parent:399]
---analyzing modificationPoint position: 39
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 400, #gens: 276, #ops: 1, parent:399] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 400
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-400/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(200): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (399(f=1.0), 400(f=1.0), )
Selected to next generation: IDs2--> (399(f=1.0), )
----------Running generation: 201, population size: 1

***** Generation 201 : 0
**Parent Variant: [Variant id: 401, #gens: 277, #ops: 0, parent:-]

--Child created id: 402
--Creating new operations for variant [Variant id: 402, #gens: 277, #ops: 0, parent:401]
---analyzing modificationPoint position: 132
location: Sum.java161
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, weights, begin, length)) { 	sum = 0.0; 	for (int i = begin; i < (begin + length); i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 402, #gens: 276, #ops: 1, parent:401] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 402
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-402/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(201): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, weights, begin, length)) { 	sum = 0.0; 	for (int i = begin; i < (begin + length); i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (401(f=1.0), 402(f=1.0), )
Selected to next generation: IDs2--> (401(f=1.0), )
----------Running generation: 202, population size: 1

***** Generation 202 : 0
**Parent Variant: [Variant id: 403, #gens: 277, #ops: 0, parent:-]

--Child created id: 404
--Creating new operations for variant [Variant id: 404, #gens: 277, #ops: 0, parent:403]
---analyzing modificationPoint position: 127
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...]
---analyzing modificationPoint position: 149
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 1 not mutation generated in  if (sigma <= 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException[...]
---analyzing modificationPoint position: 116
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 2 not mutation generated in  // store the values in the final fields numerator = num
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 14
---modifPoint 4 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 65
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 5 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 6 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 44
---modifPoint 7 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 23
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 8 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 9 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 103
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 10 not mutation generated in  // reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...]
---analyzing modificationPoint position: 203
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 11 not mutation generated in  p1 = -p1
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 12 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 62
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 404, #gens: 276, #ops: 1, parent:403] gen mutated: 1 , gen not mut: 13, gen not applied  0
-The child compiles: id 404
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-404/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(202): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (403(f=1.0), 404(f=1.0), )
Selected to next generation: IDs2--> (403(f=1.0), )
----------Running generation: 203, population size: 1

***** Generation 203 : 0
**Parent Variant: [Variant id: 405, #gens: 277, #ops: 0, parent:-]

--Child created id: 406
--Creating new operations for variant [Variant id: 406, #gens: 277, #ops: 0, parent:405]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 67
---modifPoint 2 not mutation generated in  return denominator
---analyzing modificationPoint position: 22
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 406, #gens: 276, #ops: 1, parent:405] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 406
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-406/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(203): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (405(f=1.0), 406(f=1.0), )
Selected to next generation: IDs2--> (405(f=1.0), )
----------Running generation: 204, population size: 1

***** Generation 204 : 0
**Parent Variant: [Variant id: 407, #gens: 277, #ops: 0, parent:-]

--Child created id: 408
--Creating new operations for variant [Variant id: 408, #gens: 277, #ops: 0, parent:407]
---analyzing modificationPoint position: 105
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  if (java.lang.Math.abs(yMax) <= functionValueAccuracy) { 	setResult(yMax, 0); 	return result; }
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 137, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 408, #gens: 278, #ops: 1, parent:407] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 408, errors: [ProperFractionFormat.java:184: error: orphaned case
			case '/' :
			^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(204): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (407(f=1.0), 408(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (407(f=1.0), )
----------Running generation: 205, population size: 1

***** Generation 205 : 0
**Parent Variant: [Variant id: 409, #gens: 277, #ops: 0, parent:-]

--Child created id: 410
--Creating new operations for variant [Variant id: 410, #gens: 277, #ops: 0, parent:409]
---analyzing modificationPoint position: 67
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 410, #gens: 278, #ops: 1, parent:409] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 410, errors: [AbstractFormat.java:94: error: variable nf is already defined in method getDefaultNumberFormat(java.util.Locale)
		nf.setParseIntegerOnly(true); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
		                              		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(205): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (409(f=1.0), 410(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (409(f=1.0), )
----------Running generation: 206, population size: 1

***** Generation 206 : 0
**Parent Variant: [Variant id: 411, #gens: 277, #ops: 0, parent:-]

--Child created id: 412
--Creating new operations for variant [Variant id: 412, #gens: 277, #ops: 0, parent:411]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 412, #gens: 277, #ops: 1, parent:411] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 412
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-412/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(206): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (411(f=1.0), 412(f=1.0), )
Selected to next generation: IDs2--> (411(f=1.0), )
----------Running generation: 207, population size: 1

***** Generation 207 : 0
**Parent Variant: [Variant id: 413, #gens: 277, #ops: 0, parent:-]

--Child created id: 414
--Creating new operations for variant [Variant id: 414, #gens: 277, #ops: 0, parent:413]
---analyzing modificationPoint position: 78
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 414, #gens: 278, #ops: 1, parent:413] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 414
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-414/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(207): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (413(f=1.0), 414(f=1.0), )
Selected to next generation: IDs2--> (413(f=1.0), )
----------Running generation: 208, population size: 1

***** Generation 208 : 0
**Parent Variant: [Variant id: 415, #gens: 277, #ops: 0, parent:-]

--Child created id: 416
--Creating new operations for variant [Variant id: 416, #gens: 277, #ops: 0, parent:415]
---analyzing modificationPoint position: 63
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 145
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [begin]
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java151
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 151, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 416, #gens: 278, #ops: 1, parent:415] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 416
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-416/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(208): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (415(f=1.0), 416(f=1.0), )
Selected to next generation: IDs2--> (415(f=1.0), )
----------Running generation: 209, population size: 1

***** Generation 209 : 0
**Parent Variant: [Variant id: 417, #gens: 277, #ops: 0, parent:-]

--Child created id: 418
--Creating new operations for variant [Variant id: 418, #gens: 277, #ops: 0, parent:417]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 40
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 75
---modifPoint 2 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 41
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 418, #gens: 276, #ops: 1, parent:417] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 418
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-418/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(209): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (417(f=1.0), 418(f=1.0), )
Selected to next generation: IDs2--> (417(f=1.0), )
----------Running generation: 210, population size: 1

***** Generation 210 : 0
**Parent Variant: [Variant id: 419, #gens: 277, #ops: 0, parent:-]

--Child created id: 420
--Creating new operations for variant [Variant id: 420, #gens: 277, #ops: 0, parent:419]
---analyzing modificationPoint position: 25
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 420, #gens: 276, #ops: 1, parent:419] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 420
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-420/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(210): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (419(f=1.0), 420(f=1.0), )
Selected to next generation: IDs2--> (419(f=1.0), )
----------Running generation: 211, population size: 1

***** Generation 211 : 0
**Parent Variant: [Variant id: 421, #gens: 277, #ops: 0, parent:-]

--Child created id: 422
--Creating new operations for variant [Variant id: 422, #gens: 277, #ops: 0, parent:421]
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 422, #gens: 278, #ops: 1, parent:421] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 422, errors: [MathRuntimeException.java:104: error: variable bundle is already defined in method translate(java.lang.String,java.util.Locale)
			java.util.ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale); 			java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
			                                                                                         			                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(211): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (421(f=1.0), 422(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (421(f=1.0), )
----------Running generation: 212, population size: 1

***** Generation 212 : 0
**Parent Variant: [Variant id: 423, #gens: 277, #ops: 0, parent:-]

--Child created id: 424
--Creating new operations for variant [Variant id: 424, #gens: 277, #ops: 0, parent:423]
---analyzing modificationPoint position: 135
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 0 not mutation generated in  sum += values[i] * weights[i]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 4
---modifPoint 2 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 109
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 5 not mutation generated in  return numerator
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 424, #gens: 278, #ops: 1, parent:423] gen mutated: 1 , gen not mut: 6, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 424
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-424/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(212): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (423(f=1.0), 424(f=1.0), )
Selected to next generation: IDs2--> (423(f=1.0), )
----------Running generation: 213, population size: 1

***** Generation 213 : 0
**Parent Variant: [Variant id: 425, #gens: 277, #ops: 0, parent:-]

--Child created id: 426
--Creating new operations for variant [Variant id: 426, #gens: 277, #ops: 0, parent:425]
---analyzing modificationPoint position: 65
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 426, #gens: 277, #ops: 1, parent:425] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 426, errors: [FractionFormat.java:289: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:291: error: reached end of file while parsing
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		// parse denominator 		final java.lang.Number den = getDenominatorFormat().parse(source, pos); 		if (den == null) { 			// invalid integer number 			// set index back to initial, error index should already be set 			// character examined. 			pos.setIndex(initialIndex); 			return null;} 		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());}}
		                                                                                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(213): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (425(f=1.0), 426(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (425(f=1.0), )
----------Running generation: 214, population size: 1

***** Generation 214 : 0
**Parent Variant: [Variant id: 427, #gens: 277, #ops: 0, parent:-]

--Child created id: 428
--Creating new operations for variant [Variant id: 428, #gens: 277, #ops: 0, parent:427]
---analyzing modificationPoint position: 200
location: BrentSolver.java250
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setResult(x1, i) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 428, #gens: 276, #ops: 1, parent:427] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 428
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-428/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 6] ,[]
-Valid?: |false|5|6|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(214): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setResult(x1, i) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (427(f=1.0), 428(f=5.0), )
Selected to next generation: IDs2--> (427(f=1.0), )
----------Running generation: 215, population size: 1

***** Generation 215 : 0
**Parent Variant: [Variant id: 429, #gens: 277, #ops: 0, parent:-]

--Child created id: 430
--Creating new operations for variant [Variant id: 430, #gens: 277, #ops: 0, parent:429]
---analyzing modificationPoint position: 18
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 430, #gens: 277, #ops: 1, parent:429] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 430, errors: [ProperFractionFormat.java:153: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return wholeFormat;
			                            			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(215): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (429(f=1.0), 430(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (429(f=1.0), )
----------Running generation: 216, population size: 1

***** Generation 216 : 0
**Parent Variant: [Variant id: 431, #gens: 277, #ops: 0, parent:-]

--Child created id: 432
--Creating new operations for variant [Variant id: 432, #gens: 277, #ops: 0, parent:431]
---analyzing modificationPoint position: 123
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  // Compute correction factor in second pass double correction = 0
---analyzing modificationPoint position: 47
location: FractionFormat.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 432, #gens: 276, #ops: 1, parent:431] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 432
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-432/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(216): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (431(f=1.0), 432(f=1.0), )
Selected to next generation: IDs2--> (431(f=1.0), )
----------Running generation: 217, population size: 1

***** Generation 217 : 0
**Parent Variant: [Variant id: 433, #gens: 277, #ops: 0, parent:-]

--Child created id: 434
--Creating new operations for variant [Variant id: 434, #gens: 277, #ops: 0, parent:433]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 434, #gens: 278, #ops: 1, parent:433] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 434, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;
		           		^]
Ingredient counter is Zero
---Undoing: gnrtn(217): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (433(f=1.0), 434(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (433(f=1.0), )
----------Running generation: 218, population size: 1

***** Generation 218 : 0
**Parent Variant: [Variant id: 435, #gens: 277, #ops: 0, parent:-]

--Child created id: 436
--Creating new operations for variant [Variant id: 436, #gens: 277, #ops: 0, parent:435]
---analyzing modificationPoint position: 23
---modifPoint 0 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [java.util.Locale.US, pattern, arguments]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `return new java.lang.ArithmeticException() {  	/** 	 * Serializable version identifier. 	 */ 	privat[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `return new java.lang.ArithmeticException() {  	/** 	 * Serializable version identifier. 	 */ 	privat[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 436, #gens: 278, #ops: 1, parent:435] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 436, errors: [MathRuntimeException.java:231: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:257: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:257: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:257: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:257: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:257: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:257: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:257: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:257: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:257: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:258: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:258: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:258: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:258: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:258: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:258: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:260: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:261: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:262: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:263: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:264: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:264: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:265: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:265: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(218): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `return new java.lang.ArithmeticException() {  	/** 	 * Serializable version identifier. 	 */ 	privat[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (435(f=1.0), 436(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (435(f=1.0), )
----------Running generation: 219, population size: 1

***** Generation 219 : 0
**Parent Variant: [Variant id: 437, #gens: 277, #ops: 0, parent:-]

--Child created id: 438
--Creating new operations for variant [Variant id: 438, #gens: 277, #ops: 0, parent:437]
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 438, #gens: 277, #ops: 1, parent:437] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 438, errors: [ProperBigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:250: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:250: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:251: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:252: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:252: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:253: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:253: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:254: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:254: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:254: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:254: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:254: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(219): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (437(f=1.0), 438(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (437(f=1.0), )
----------Running generation: 220, population size: 1

***** Generation 220 : 0
**Parent Variant: [Variant id: 439, #gens: 277, #ops: 0, parent:-]

--Child created id: 440
--Creating new operations for variant [Variant id: 440, #gens: 277, #ops: 0, parent:439]
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 440, #gens: 278, #ops: 1, parent:439] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 440, errors: [ProperFractionFormat.java:97: error: variable den is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		int den = fraction.getDenominator(); 		pos.setEndIndex(0); 		int num = fraction.getNumerator(); 		int den = fraction.getDenominator();
		                                     		                    		                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(220): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (439(f=1.0), 440(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (439(f=1.0), )
----------Running generation: 221, population size: 1

***** Generation 221 : 0
**Parent Variant: [Variant id: 441, #gens: 277, #ops: 0, parent:-]

--Child created id: 442
--Creating new operations for variant [Variant id: 442, #gens: 277, #ops: 0, parent:441]
---analyzing modificationPoint position: 101
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  // return the first endpoint if it is good enough double yMin = f.value(min)
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 22
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 127
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch []
location: BigFraction.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 125, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 442, #gens: 278, #ops: 1, parent:441] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 442, errors: [BigFraction.java:1135: error: illegal start of expression
	 * Create a fraction given the double value.
	 ^, BigFraction.java:1135: error: ';' expected
	 * Create a fraction given the double value.
	         ^, BigFraction.java:1135: error: ';' expected
	 * Create a fraction given the double value.
	                    ^, BigFraction.java:1135: error: ';' expected
	 * Create a fraction given the double value.
	                              ^, BigFraction.java:1135: error: ';' expected
	 * Create a fraction given the double value.
	                                           ^, BigFraction.java:1137: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	 ^, BigFraction.java:1137: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	       ^, BigFraction.java:1137: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	                           ^, BigFraction.java:1137: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	                                ^, BigFraction.java:1137: error: illegal start of type
	 * This constructor behaves <em>differently</em> from
	                                            ^, BigFraction.java:1137: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                           ^, BigFraction.java:1138: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	   ^, BigFraction.java:1137: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                               ^, BigFraction.java:1138: error: illegal character: '#'
	 * {@link #BigFraction(double, double, int)}. It converts the
	          ^, BigFraction.java:1138: error: illegal start of type
	 * {@link #BigFraction(double, double, int)}. It converts the
	                      ^, BigFraction.java:1138: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                       ^, BigFraction.java:1138: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                             ^, BigFraction.java:1138: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                               ^, BigFraction.java:1138: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                     ^, BigFraction.java:1138: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                       ^, BigFraction.java:1138: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                          ^, BigFraction.java:1138: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                            ^, BigFraction.java:1138: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                                         ^, BigFraction.java:1139: error: '.class' expected
	 * double value exactly, considering its internal bits representation.
	          ^, BigFraction.java:1139: error: not a statement
	 * double value exactly, considering its internal bits representation.
	 ^, BigFraction.java:1139: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                    ^, BigFraction.java:1139: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                 ^, BigFraction.java:1139: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                                     ^, BigFraction.java:1140: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	            ^, BigFraction.java:1140: error: not a statement
	 * This does work for all values except NaN and infinities and does
	             ^, BigFraction.java:1140: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                 ^, BigFraction.java:1140: error: '(' expected
	 * This does work for all values except NaN and infinities and does
	                     ^, BigFraction.java:1140: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                ^, BigFraction.java:1140: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                       ^, BigFraction.java:1140: error: not a statement
	 * This does work for all values except NaN and infinities and does
	                                        ^, BigFraction.java:1140: error: ')' expected
	 * This does work for all values except NaN and infinities and does
	                                           ^, BigFraction.java:1140: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                          ^, BigFraction.java:1140: error: variable declaration not allowed here
	 * This does work for all values except NaN and infinities and does
	                                                ^, BigFraction.java:1140: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                                   ^, BigFraction.java:1141: error: ';' expected
	 * not requires any loop or convergence threshold.
	               ^, BigFraction.java:1141: error: ';' expected
	 * not requires any loop or convergence threshold.
	                        ^, BigFraction.java:1141: error: ';' expected
	 * not requires any loop or convergence threshold.
	                                       ^, BigFraction.java:1141: error: <identifier> expected
	 * not requires any loop or convergence threshold.
	                                                  ^, BigFraction.java:1142: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:1143: error: illegal start of expression
	 * <p>
	 ^, BigFraction.java:1144: error: illegal start of expression
	 * Since this conversion is exact and since double numbers are sometimes
	 ^, BigFraction.java:1142: error: not a statement
	 * </p>
	      ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	        ^, BigFraction.java:1144: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	         ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	             ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                           ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                     ^, BigFraction.java:1144: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	                                      ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                           ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                          ^, BigFraction.java:1144: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                                        ^, BigFraction.java:1145: error: not a statement
	 * approximated, the fraction created may seem strange in some cases. For example
	   ^, BigFraction.java:1145: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	               ^, BigFraction.java:1145: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                             ^, BigFraction.java:1145: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                         ^, BigFraction.java:1145: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                      ^, BigFraction.java:1145: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                              ^, BigFraction.java:1145: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                                                 ^, BigFraction.java:1146: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	           ^, BigFraction.java:1146: error: ';' expected
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                 ^, BigFraction.java:1146: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                            ^, BigFraction.java:1146: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                ^, BigFraction.java:1146: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                   ^, BigFraction.java:1147: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	      ^, BigFraction.java:1147: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	       ^, BigFraction.java:1147: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	               ^, BigFraction.java:1147: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                           ^, BigFraction.java:1147: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                            ^, BigFraction.java:1147: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                                    ^, BigFraction.java:1148: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	              ^, BigFraction.java:1148: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                            ^, BigFraction.java:1148: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                      ^, BigFraction.java:1148: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                      ^, BigFraction.java:1148: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                             ^, BigFraction.java:1148: error: not a statement
	 * because the double number passed to the constructor is not exactly 1/3
	                                                              ^, BigFraction.java:1148: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                                     ^, BigFraction.java:1149: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	    ^, BigFraction.java:1149: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	        ^, BigFraction.java:1149: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                      ^, BigFraction.java:1149: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                ^, BigFraction.java:1149: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                           ^, BigFraction.java:1149: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	                                            ^, BigFraction.java:1149: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                                   ^, BigFraction.java:1150: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:1151: error: illegal start of expression
	 *
	 ^, BigFraction.java:1152: error: illegal start of expression
	 * @see #BigFraction(double, double, int)
	 ^, BigFraction.java:1152: error: illegal character: '#'
	 * @see #BigFraction(double, double, int)
	        ^, BigFraction.java:1150: error: not a statement
	 * </p>
	      ^, BigFraction.java:1152: error: ';' expected
	 * @see #BigFraction(double, double, int)
	       ^, BigFraction.java:1152: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                           ^, BigFraction.java:1152: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                   ^, BigFraction.java:1152: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                        ^, BigFraction.java:1153: error: illegal start of expression
	 * @param value
	   ^, BigFraction.java:1154: error: not a statement
	 * 		the double value to convert to a fraction.
	 ^, BigFraction.java:1154: error: ';' expected
	 * 		the double value to convert to a fraction.
	   		   ^]
Ingredient counter is Zero
---Undoing: gnrtn(221): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (441(f=1.0), 442(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (441(f=1.0), )
----------Running generation: 222, population size: 1

***** Generation 222 : 0
**Parent Variant: [Variant id: 443, #gens: 277, #ops: 0, parent:-]

--Child created id: 444
--Creating new operations for variant [Variant id: 444, #gens: 277, #ops: 0, parent:443]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 18
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 23
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [java.util.Locale.US]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
location: MathRuntimeException.java128
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 128, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 444, #gens: 278, #ops: 1, parent:443] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 444, errors: [MathRuntimeException.java:161: error: non-static method getMessage(java.util.Locale) cannot be referenced from a static context
		return getMessage(java.util.Locale.US); 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(222): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (443(f=1.0), 444(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (443(f=1.0), )
----------Running generation: 223, population size: 1

***** Generation 223 : 0
**Parent Variant: [Variant id: 445, #gens: 277, #ops: 0, parent:-]

--Child created id: 446
--Creating new operations for variant [Variant id: 446, #gens: 277, #ops: 0, parent:445]
---analyzing modificationPoint position: 43
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 446, #gens: 276, #ops: 1, parent:445] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 446
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-446/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(223): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (445(f=1.0), 446(f=1.0), )
Selected to next generation: IDs2--> (445(f=1.0), )
----------Running generation: 224, population size: 1

***** Generation 224 : 0
**Parent Variant: [Variant id: 447, #gens: 277, #ops: 0, parent:-]

--Child created id: 448
--Creating new operations for variant [Variant id: 448, #gens: 277, #ops: 0, parent:447]
---analyzing modificationPoint position: 98
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = java.lang.Math.abs(num)
---analyzing modificationPoint position: 16
---modifPoint 1 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 106
location: BrentSolver.java132
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 448, #gens: 276, #ops: 1, parent:447] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 448
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-448/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(224): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (447(f=1.0), 448(f=1.0), )
Selected to next generation: IDs2--> (447(f=1.0), )
----------Running generation: 225, population size: 1

***** Generation 225 : 0
**Parent Variant: [Variant id: 449, #gens: 277, #ops: 0, parent:-]

--Child created id: 450
--Creating new operations for variant [Variant id: 450, #gens: 277, #ops: 0, parent:449]
---analyzing modificationPoint position: 46
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 37
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 450, #gens: 276, #ops: 1, parent:449] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 450
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-450/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(225): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (449(f=1.0), 450(f=1.0), )
Selected to next generation: IDs2--> (449(f=1.0), )
----------Running generation: 226, population size: 1

***** Generation 226 : 0
**Parent Variant: [Variant id: 451, #gens: 277, #ops: 0, parent:-]

--Child created id: 452
--Creating new operations for variant [Variant id: 452, #gens: 277, #ops: 0, parent:451]
---analyzing modificationPoint position: 170
Templates availables82
Attempts Base Ingredients  1 total 82
---modifPoint 0 not mutation generated in  if (k == 31) { 	throw org.apache.commons.math.MathRuntimeException.createArithmeticException( 	"over[...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 16
Any element available for mp MP=org.apache.commons.math.MathRuntimeException line: 474, pointed element: CtReturnImpl
---modifPoint 2 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 29
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
---modifPoint 4 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 63
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java222
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `final char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `final char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 452, #gens: 277, #ops: 1, parent:451] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 452, errors: [FractionFormat.java:242: error: orphaned case
			case 0 :
			^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(226): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `final char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (451(f=1.0), 452(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (451(f=1.0), )
----------Running generation: 227, population size: 1

***** Generation 227 : 0
**Parent Variant: [Variant id: 453, #gens: 277, #ops: 0, parent:-]

--Child created id: 454
--Creating new operations for variant [Variant id: 454, #gens: 277, #ops: 0, parent:453]
---analyzing modificationPoint position: 65
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 454, #gens: 277, #ops: 1, parent:453] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 454
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-454/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(227): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (453(f=1.0), 454(f=1.0), )
Selected to next generation: IDs2--> (453(f=1.0), )
----------Running generation: 228, population size: 1

***** Generation 228 : 0
**Parent Variant: [Variant id: 455, #gens: 277, #ops: 0, parent:-]

--Child created id: 456
--Creating new operations for variant [Variant id: 456, #gens: 277, #ops: 0, parent:455]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 43
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 456, #gens: 276, #ops: 1, parent:455] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 456
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-456/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(228): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (455(f=1.0), 456(f=1.0), )
Selected to next generation: IDs2--> (455(f=1.0), )
----------Running generation: 229, population size: 1

***** Generation 229 : 0
**Parent Variant: [Variant id: 457, #gens: 277, #ops: 0, parent:-]

--Child created id: 458
--Creating new operations for variant [Variant id: 458, #gens: 277, #ops: 0, parent:457]
---analyzing modificationPoint position: 89
---modifPoint 0 not mutation generated in  // full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...]
---analyzing modificationPoint position: 24
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 458, #gens: 277, #ops: 1, parent:457] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 458
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-458/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(229): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (457(f=1.0), 458(f=1.0), )
Selected to next generation: IDs2--> (457(f=1.0), )
----------Running generation: 230, population size: 1

***** Generation 230 : 0
**Parent Variant: [Variant id: 459, #gens: 277, #ops: 0, parent:-]

--Child created id: 460
--Creating new operations for variant [Variant id: 460, #gens: 277, #ops: 0, parent:459]
---analyzing modificationPoint position: 75
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 143
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  if (weights.length != values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIll[...]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 460, #gens: 276, #ops: 1, parent:459] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 460
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-460/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(230): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (459(f=1.0), 460(f=1.0), )
Selected to next generation: IDs2--> (459(f=1.0), )
----------Running generation: 231, population size: 1

***** Generation 231 : 0
**Parent Variant: [Variant id: 461, #gens: 277, #ops: 0, parent:-]

--Child created id: 462
--Creating new operations for variant [Variant id: 462, #gens: 277, #ops: 0, parent:461]
---analyzing modificationPoint position: 24
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 462, #gens: 277, #ops: 1, parent:461] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 462
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-462/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(231): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (461(f=1.0), 462(f=1.0), )
Selected to next generation: IDs2--> (461(f=1.0), )
----------Running generation: 232, population size: 1

***** Generation 232 : 0
**Parent Variant: [Variant id: 463, #gens: 277, #ops: 0, parent:-]

--Child created id: 464
--Creating new operations for variant [Variant id: 464, #gens: 277, #ops: 0, parent:463]
---analyzing modificationPoint position: 43
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
---modifPoint 1 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 159
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  // reduce numerator and denominator by greatest common denominator. final int d = org.apache.commons[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 56
---modifPoint 4 not mutation generated in  return ret
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 464, #gens: 276, #ops: 1, parent:463] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 464
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-464/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(232): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (463(f=1.0), 464(f=1.0), )
Selected to next generation: IDs2--> (463(f=1.0), )
----------Running generation: 233, population size: 1

***** Generation 233 : 0
**Parent Variant: [Variant id: 465, #gens: 277, #ops: 0, parent:-]

--Child created id: 466
--Creating new operations for variant [Variant id: 466, #gens: 277, #ops: 0, parent:465]
---analyzing modificationPoint position: 55
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 28
---modifPoint 2 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 466, #gens: 277, #ops: 1, parent:465] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 466
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-466/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(233): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (465(f=1.0), 466(f=1.0), )
Selected to next generation: IDs2--> (465(f=1.0), )
----------Running generation: 234, population size: 1

***** Generation 234 : 0
**Parent Variant: [Variant id: 467, #gens: 277, #ops: 0, parent:-]

--Child created id: 468
--Creating new operations for variant [Variant id: 468, #gens: 277, #ops: 0, parent:467]
---analyzing modificationPoint position: 55
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 468, #gens: 276, #ops: 1, parent:467] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 468
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-468/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(234): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (467(f=1.0), 468(f=1.0), )
Selected to next generation: IDs2--> (467(f=1.0), )
----------Running generation: 235, population size: 1

***** Generation 235 : 0
**Parent Variant: [Variant id: 469, #gens: 277, #ops: 0, parent:-]

--Child created id: 470
--Creating new operations for variant [Variant id: 470, #gens: 277, #ops: 0, parent:469]
---analyzing modificationPoint position: 32
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 137, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 470, #gens: 278, #ops: 1, parent:469] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 470, errors: [ProperFractionFormat.java:233: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:236: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperFractionFormat.java:236: error: ';' expected
	 * Modify the whole format.
	         ^, ProperFractionFormat.java:236: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperFractionFormat.java:236: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperFractionFormat.java:238: error: illegal start of expression
	 * @param format
	 ^, ProperFractionFormat.java:238: error: illegal start of expression
	 * @param format
	   ^, ProperFractionFormat.java:239: error: not a statement
	 * 		The new whole format value.
	 ^, ProperFractionFormat.java:239: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperFractionFormat.java:239: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperFractionFormat.java:239: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperFractionFormat.java:240: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperFractionFormat.java:241: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperFractionFormat.java:241: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperFractionFormat.java:241: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperFractionFormat.java:241: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperFractionFormat.java:241: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperFractionFormat.java:241: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperFractionFormat.java:242: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperFractionFormat.java:241: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperFractionFormat.java:242: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperFractionFormat.java:242: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperFractionFormat.java:242: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperFractionFormat.java:243: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                               ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                    ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                          ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		   ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		    ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		           ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		              ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                    ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			      ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			         ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			          ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                 ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                        ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                         ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                             ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                              ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                   ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                 ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                 ^, ProperFractionFormat.java:243: error: illegal start of type
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		^, ProperFractionFormat.java:243: error: ';' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		    ^, ProperFractionFormat.java:243: error: <identifier> expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		                ^, ProperFractionFormat.java:243: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(235): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (469(f=1.0), 470(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (469(f=1.0), )
----------Running generation: 236, population size: 1

***** Generation 236 : 0
**Parent Variant: [Variant id: 471, #gens: 277, #ops: 0, parent:-]

--Child created id: 472
--Creating new operations for variant [Variant id: 472, #gens: 277, #ops: 0, parent:471]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 74
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 30
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 43
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 108, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 472, #gens: 278, #ops: 1, parent:471] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 472, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(236): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (471(f=1.0), 472(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (471(f=1.0), )
----------Running generation: 237, population size: 1

***** Generation 237 : 0
**Parent Variant: [Variant id: 473, #gens: 277, #ops: 0, parent:-]

--Child created id: 474
--Creating new operations for variant [Variant id: 474, #gens: 277, #ops: 0, parent:473]
---analyzing modificationPoint position: 58
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 214
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 1 not mutation generated in  y0 = y1
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 474, #gens: 277, #ops: 1, parent:473] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 474, errors: [AbstractFormat.java:103: error: non-static variable denominatorFormat cannot be referenced from a static context
		return denominatorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(237): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (473(f=1.0), 474(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (473(f=1.0), )
----------Running generation: 238, population size: 1

***** Generation 238 : 0
**Parent Variant: [Variant id: 475, #gens: 277, #ops: 0, parent:-]

--Child created id: 476
--Creating new operations for variant [Variant id: 476, #gens: 277, #ops: 0, parent:475]
---analyzing modificationPoint position: 88
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java103
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 476, #gens: 278, #ops: 1, parent:475] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 476
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-476/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(238): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (475(f=1.0), 476(f=1.0), )
Selected to next generation: IDs2--> (475(f=1.0), )
----------Running generation: 239, population size: 1

***** Generation 239 : 0
**Parent Variant: [Variant id: 477, #gens: 277, #ops: 0, parent:-]

--Child created id: 478
--Creating new operations for variant [Variant id: 478, #gens: 277, #ops: 0, parent:477]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 478, #gens: 276, #ops: 1, parent:477] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 478
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-478/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(239): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (477(f=1.0), 478(f=1.0), )
Selected to next generation: IDs2--> (477(f=1.0), )
----------Running generation: 240, population size: 1

***** Generation 240 : 0
**Parent Variant: [Variant id: 479, #gens: 277, #ops: 0, parent:-]

--Child created id: 480
--Creating new operations for variant [Variant id: 480, #gens: 277, #ops: 0, parent:479]
---analyzing modificationPoint position: 129
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 47
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 65
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 22
---modifPoint 4 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 0
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [parsePosition, source]
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java206
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 480, #gens: 277, #ops: 1, parent:479] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 480
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-480/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(240): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (479(f=1.0), 480(f=1.0), )
Selected to next generation: IDs2--> (479(f=1.0), )
----------Running generation: 241, population size: 1

***** Generation 241 : 0
**Parent Variant: [Variant id: 481, #gens: 277, #ops: 0, parent:-]

--Child created id: 482
--Creating new operations for variant [Variant id: 482, #gens: 277, #ops: 0, parent:481]
---analyzing modificationPoint position: 95
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 102, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 482, #gens: 278, #ops: 1, parent:481] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 482
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-482/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(241): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (481(f=1.0), 482(f=1.0), )
Selected to next generation: IDs2--> (481(f=1.0), )
----------Running generation: 242, population size: 1

***** Generation 242 : 0
**Parent Variant: [Variant id: 483, #gens: 277, #ops: 0, parent:-]

--Child created id: 484
--Creating new operations for variant [Variant id: 484, #gens: 277, #ops: 0, parent:483]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 30
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 111
location: BrentSolver.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// check if either value is close to a zero if (java.lang.Math.abs(yMin) <= functionValueAccuracy) {[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 484, #gens: 276, #ops: 1, parent:483] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 484
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-484/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 6] ,[]
-Valid?: |false|2|6|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(242): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// check if either value is close to a zero if (java.lang.Math.abs(yMin) <= functionValueAccuracy) {[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (483(f=1.0), 484(f=2.0), )
Selected to next generation: IDs2--> (483(f=1.0), )
----------Running generation: 243, population size: 1

***** Generation 243 : 0
**Parent Variant: [Variant id: 485, #gens: 277, #ops: 0, parent:-]

--Child created id: 486
--Creating new operations for variant [Variant id: 486, #gens: 277, #ops: 0, parent:485]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 486, #gens: 278, #ops: 1, parent:485] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 486
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-486/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(243): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (485(f=1.0), 486(f=1.0), )
Selected to next generation: IDs2--> (485(f=1.0), )
----------Running generation: 244, population size: 1

***** Generation 244 : 0
**Parent Variant: [Variant id: 487, #gens: 277, #ops: 0, parent:-]

--Child created id: 488
--Creating new operations for variant [Variant id: 488, #gens: 277, #ops: 0, parent:487]
---analyzing modificationPoint position: 61
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java204
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 204, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 488, #gens: 278, #ops: 1, parent:487] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 488, errors: [FractionFormat.java:205: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.Fraction
		final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition); 		return java.text.NumberFormat.getAvailableLocales();
		                                                                                       		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(244): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (487(f=1.0), 488(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (487(f=1.0), )
----------Running generation: 245, population size: 1

***** Generation 245 : 0
**Parent Variant: [Variant id: 489, #gens: 277, #ops: 0, parent:-]

--Child created id: 490
--Creating new operations for variant [Variant id: 490, #gens: 277, #ops: 0, parent:489]
---analyzing modificationPoint position: 27
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 490, #gens: 276, #ops: 1, parent:489] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 490
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-490/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(245): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (489(f=1.0), 490(f=1.0), )
Selected to next generation: IDs2--> (489(f=1.0), )
----------Running generation: 246, population size: 1

***** Generation 246 : 0
**Parent Variant: [Variant id: 491, #gens: 277, #ops: 0, parent:-]

--Child created id: 492
--Creating new operations for variant [Variant id: 492, #gens: 277, #ops: 0, parent:491]
---analyzing modificationPoint position: 29
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 95, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 492, #gens: 278, #ops: 1, parent:491] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 492
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-492/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(246): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (491(f=1.0), 492(f=1.0), )
Selected to next generation: IDs2--> (491(f=1.0), )
----------Running generation: 247, population size: 1

***** Generation 247 : 0
**Parent Variant: [Variant id: 493, #gens: 277, #ops: 0, parent:-]

--Child created id: 494
--Creating new operations for variant [Variant id: 494, #gens: 277, #ops: 0, parent:493]
---analyzing modificationPoint position: 254
location: Mean.java78
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `incMoment = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 494, #gens: 276, #ops: 1, parent:493] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 494
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-494/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(247): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `incMoment = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (493(f=1.0), 494(f=1.0), )
Selected to next generation: IDs2--> (493(f=1.0), )
----------Running generation: 248, population size: 1

***** Generation 248 : 0
**Parent Variant: [Variant id: 495, #gens: 277, #ops: 0, parent:-]

--Child created id: 496
--Creating new operations for variant [Variant id: 496, #gens: 277, #ops: 0, parent:495]
---analyzing modificationPoint position: 95
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); }
---analyzing modificationPoint position: 40
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 496, #gens: 276, #ops: 1, parent:495] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 496
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-496/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(248): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (495(f=1.0), 496(f=1.0), )
Selected to next generation: IDs2--> (495(f=1.0), )
----------Running generation: 249, population size: 1

***** Generation 249 : 0
**Parent Variant: [Variant id: 497, #gens: 277, #ops: 0, parent:-]

--Child created id: 498
--Creating new operations for variant [Variant id: 498, #gens: 277, #ops: 0, parent:497]
---analyzing modificationPoint position: 25
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 498, #gens: 277, #ops: 1, parent:497] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 498
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-498/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(249): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (497(f=1.0), 498(f=1.0), )
Selected to next generation: IDs2--> (497(f=1.0), )
----------Running generation: 250, population size: 1

***** Generation 250 : 0
**Parent Variant: [Variant id: 499, #gens: 277, #ops: 0, parent:-]

--Child created id: 500
--Creating new operations for variant [Variant id: 500, #gens: 277, #ops: 0, parent:499]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 66
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 95
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 2 not mutation generated in  if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); }
---analyzing modificationPoint position: 67
---modifPoint 3 not mutation generated in  return denominator
---analyzing modificationPoint position: 0
---modifPoint 4 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 73
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java150
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 150, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 500, #gens: 278, #ops: 1, parent:499] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 500, errors: [AbstractFormat.java:151: error: incompatible types: unexpected return value
		pos.setIndex(pos.getIndex() - 1); 		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
		                                  		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(250): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (499(f=1.0), 500(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (499(f=1.0), )
----------Running generation: 251, population size: 1

***** Generation 251 : 0
**Parent Variant: [Variant id: 501, #gens: 277, #ops: 0, parent:-]

--Child created id: 502
--Creating new operations for variant [Variant id: 502, #gens: 277, #ops: 0, parent:501]
---analyzing modificationPoint position: 75
---modifPoint 0 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  num = num % den
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 502, #gens: 277, #ops: 1, parent:501] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 502
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-502/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(251): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (501(f=1.0), 502(f=1.0), )
Selected to next generation: IDs2--> (501(f=1.0), )
----------Running generation: 252, population size: 1

***** Generation 252 : 0
**Parent Variant: [Variant id: 503, #gens: 277, #ops: 0, parent:-]

--Child created id: 504
--Creating new operations for variant [Variant id: 504, #gens: 277, #ops: 0, parent:503]
---analyzing modificationPoint position: 73
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  pos.setIndex(pos.getIndex() - 1)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 47
location: FractionFormat.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 504, #gens: 276, #ops: 1, parent:503] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 504
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-504/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(252): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (503(f=1.0), 504(f=1.0), )
Selected to next generation: IDs2--> (503(f=1.0), )
----------Running generation: 253, population size: 1

***** Generation 253 : 0
**Parent Variant: [Variant id: 505, #gens: 277, #ops: 0, parent:-]

--Child created id: 506
--Creating new operations for variant [Variant id: 506, #gens: 277, #ops: 0, parent:505]
---analyzing modificationPoint position: 34
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java97
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 97, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 506, #gens: 278, #ops: 1, parent:505] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 506
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-506/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(253): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (505(f=1.0), 506(f=1.0), )
Selected to next generation: IDs2--> (505(f=1.0), )
----------Running generation: 254, population size: 1

***** Generation 254 : 0
**Parent Variant: [Variant id: 507, #gens: 277, #ops: 0, parent:-]

--Child created id: 508
--Creating new operations for variant [Variant id: 508, #gens: 277, #ops: 0, parent:507]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 508, #gens: 278, #ops: 1, parent:507] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 508, errors: [FractionFormat.java:104: error: unreachable statement
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getImproperInstance(final java.util.Locale locale) { 		return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale)); 		return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale));
	    	                                                                                                                   		                                                                                                                                            		^]
Ingredient counter is Zero
---Undoing: gnrtn(254): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (507(f=1.0), 508(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (507(f=1.0), )
----------Running generation: 255, population size: 1

***** Generation 255 : 0
**Parent Variant: [Variant id: 509, #gens: 277, #ops: 0, parent:-]

--Child created id: 510
--Creating new operations for variant [Variant id: 510, #gens: 277, #ops: 0, parent:509]
---analyzing modificationPoint position: 17
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [parsePosition, source]
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java205
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 205, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 510, #gens: 278, #ops: 1, parent:509] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 510
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-510/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(255): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (509(f=1.0), 510(f=1.0), )
Selected to next generation: IDs2--> (509(f=1.0), )
----------Running generation: 256, population size: 1

***** Generation 256 : 0
**Parent Variant: [Variant id: 511, #gens: 277, #ops: 0, parent:-]

--Child created id: 512
--Creating new operations for variant [Variant id: 512, #gens: 277, #ops: 0, parent:511]
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 512, #gens: 277, #ops: 1, parent:511] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 512
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-512/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(256): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (511(f=1.0), 512(f=1.0), )
Selected to next generation: IDs2--> (511(f=1.0), )
----------Running generation: 257, population size: 1

***** Generation 257 : 0
**Parent Variant: [Variant id: 513, #gens: 277, #ops: 0, parent:-]

--Child created id: 514
--Creating new operations for variant [Variant id: 514, #gens: 277, #ops: 0, parent:513]
---analyzing modificationPoint position: 15
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
vars from patch []
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 514, #gens: 277, #ops: 1, parent:513] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 514, errors: [ProperFractionFormat.java:51: error: recursive constructor invocation
		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		^]
Ingredient counter is Zero
---Undoing: gnrtn(257): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (513(f=1.0), 514(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (513(f=1.0), )
----------Running generation: 258, population size: 1

***** Generation 258 : 0
**Parent Variant: [Variant id: 515, #gens: 277, #ops: 0, parent:-]

--Child created id: 516
--Creating new operations for variant [Variant id: 516, #gens: 277, #ops: 0, parent:515]
---analyzing modificationPoint position: 90
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 84
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 516, #gens: 278, #ops: 1, parent:515] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 516, errors: [AbstractFormat.java:92: error: variable nf is already defined in method getDefaultNumberFormat(java.util.Locale)
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		                                                                                    		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(258): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (515(f=1.0), 516(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (515(f=1.0), )
----------Running generation: 259, population size: 1

***** Generation 259 : 0
**Parent Variant: [Variant id: 517, #gens: 277, #ops: 0, parent:-]

--Child created id: 518
--Creating new operations for variant [Variant id: 518, #gens: 277, #ops: 0, parent:517]
---analyzing modificationPoint position: 30
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 518, #gens: 277, #ops: 1, parent:517] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 518
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-518/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(259): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (517(f=1.0), 518(f=1.0), )
Selected to next generation: IDs2--> (517(f=1.0), )
----------Running generation: 260, population size: 1

***** Generation 260 : 0
**Parent Variant: [Variant id: 519, #gens: 277, #ops: 0, parent:-]

--Child created id: 520
--Creating new operations for variant [Variant id: 520, #gens: 277, #ops: 0, parent:519]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
---modifPoint 2 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 76
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java163
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 163, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 520, #gens: 277, #ops: 1, parent:519] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 520, errors: [AbstractFormat.java:163: error: variable n is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		final int n = source.length(); 		final int n = source.length();
		                               		          ^, AbstractFormat.java:174: error: cannot find symbol
				ret = c;
				^
  symbol:   variable ret
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:178: error: cannot find symbol
		return ret;
		       ^
  symbol:   variable ret
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(260): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (519(f=1.0), 520(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (519(f=1.0), )
----------Running generation: 261, population size: 1

***** Generation 261 : 0
**Parent Variant: [Variant id: 521, #gens: 277, #ops: 0, parent:-]

--Child created id: 522
--Creating new operations for variant [Variant id: 522, #gens: 277, #ops: 0, parent:521]
---analyzing modificationPoint position: 139
location: AbstractUnivariateStatistic.java165
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `containsPositiveWeight = true ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 522, #gens: 276, #ops: 1, parent:521] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 522
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-522/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(261): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `containsPositiveWeight = true ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (521(f=1.0), 522(f=1.0), )
Selected to next generation: IDs2--> (521(f=1.0), )
----------Running generation: 262, population size: 1

***** Generation 262 : 0
**Parent Variant: [Variant id: 523, #gens: 277, #ops: 0, parent:-]

--Child created id: 524
--Creating new operations for variant [Variant id: 524, #gens: 277, #ops: 0, parent:523]
---analyzing modificationPoint position: 51
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 524, #gens: 276, #ops: 1, parent:523] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 524
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-524/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(262): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (523(f=1.0), 524(f=1.0), )
Selected to next generation: IDs2--> (523(f=1.0), )
----------Running generation: 263, population size: 1

***** Generation 263 : 0
**Parent Variant: [Variant id: 525, #gens: 277, #ops: 0, parent:-]

--Child created id: 526
--Creating new operations for variant [Variant id: 526, #gens: 277, #ops: 0, parent:525]
---analyzing modificationPoint position: 32
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 526, #gens: 278, #ops: 1, parent:525] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 526, errors: [ProperFractionFormat.java:105: error: variable den is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		} 		int den = fraction.getDenominator();
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(263): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (525(f=1.0), 526(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (525(f=1.0), )
----------Running generation: 264, population size: 1

***** Generation 264 : 0
**Parent Variant: [Variant id: 527, #gens: 277, #ops: 0, parent:-]

--Child created id: 528
--Creating new operations for variant [Variant id: 528, #gens: 277, #ops: 0, parent:527]
---analyzing modificationPoint position: 57
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 85
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 129
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 3 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 56
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 4 not mutation generated in  return ret
---analyzing modificationPoint position: 124
location: Mean.java212
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	correction += weights[i] * (values[i] - xbarw); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 528, #gens: 276, #ops: 1, parent:527] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 528
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-528/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(264): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	correction += weights[i] * (values[i] - xbarw); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (527(f=1.0), 528(f=1.0), )
Selected to next generation: IDs2--> (527(f=1.0), )
----------Running generation: 265, population size: 1

***** Generation 265 : 0
**Parent Variant: [Variant id: 529, #gens: 277, #ops: 0, parent:-]

--Child created id: 530
--Creating new operations for variant [Variant id: 530, #gens: 277, #ops: 0, parent:529]
---analyzing modificationPoint position: 24
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 76
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, java.math.BigInteger.ZERO]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.math.BigInteger.ZERO spoon.support.reflect.code.CtFieldReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 530, #gens: 278, #ops: 1, parent:529] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 530
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-530/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(265): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (529(f=1.0), 530(f=1.0), )
Selected to next generation: IDs2--> (529(f=1.0), )
----------Running generation: 266, population size: 1

***** Generation 266 : 0
**Parent Variant: [Variant id: 531, #gens: 277, #ops: 0, parent:-]

--Child created id: 532
--Creating new operations for variant [Variant id: 532, #gens: 277, #ops: 0, parent:531]
---analyzing modificationPoint position: 20
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java234
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 532, #gens: 277, #ops: 1, parent:531] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 532, errors: [FractionFormat.java:234: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return java.text.NumberFormat.getAvailableLocales();
			                            			                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(266): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (531(f=1.0), 532(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (531(f=1.0), )
----------Running generation: 267, population size: 1

***** Generation 267 : 0
**Parent Variant: [Variant id: 533, #gens: 277, #ops: 0, parent:-]

--Child created id: 534
--Creating new operations for variant [Variant id: 534, #gens: 277, #ops: 0, parent:533]
---analyzing modificationPoint position: 55
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java175
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 175, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 534, #gens: 278, #ops: 1, parent:533] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 534, errors: [FractionFormat.java:255: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(267): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (533(f=1.0), 534(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (533(f=1.0), )
----------Running generation: 268, population size: 1

***** Generation 268 : 0
**Parent Variant: [Variant id: 535, #gens: 277, #ops: 0, parent:-]

--Child created id: 536
--Creating new operations for variant [Variant id: 536, #gens: 277, #ops: 0, parent:535]
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 536, #gens: 277, #ops: 1, parent:535] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 536
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-536/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(268): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (535(f=1.0), 536(f=1.0), )
Selected to next generation: IDs2--> (535(f=1.0), )
----------Running generation: 269, population size: 1

***** Generation 269 : 0
**Parent Variant: [Variant id: 537, #gens: 277, #ops: 0, parent:-]

--Child created id: 538
--Creating new operations for variant [Variant id: 538, #gens: 277, #ops: 0, parent:537]
---analyzing modificationPoint position: 21
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 538, #gens: 276, #ops: 1, parent:537] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 538
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-538/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(269): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (537(f=1.0), 538(f=1.0), )
Selected to next generation: IDs2--> (537(f=1.0), )
----------Running generation: 270, population size: 1

***** Generation 270 : 0
**Parent Variant: [Variant id: 539, #gens: 277, #ops: 0, parent:-]

--Child created id: 540
--Creating new operations for variant [Variant id: 540, #gens: 277, #ops: 0, parent:539]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 540, #gens: 277, #ops: 1, parent:539] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 540, errors: [AbstractFormat.java:70: error: final parameter numeratorFormat may not be assigned
	 */ 	protected AbstractFormat(final java.text.NumberFormat numeratorFormat, final java.text.NumberFormat denominatorFormat) { 		numeratorFormat = numeratorFormat;
	    	                                                                                                                         		^]
Ingredient counter is Zero
---Undoing: gnrtn(270): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (539(f=1.0), 540(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (539(f=1.0), )
----------Running generation: 271, population size: 1

***** Generation 271 : 0
**Parent Variant: [Variant id: 541, #gens: 277, #ops: 0, parent:-]

--Child created id: 542
--Creating new operations for variant [Variant id: 542, #gens: 277, #ops: 0, parent:541]
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 20
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 542, #gens: 278, #ops: 1, parent:541] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 542
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-542/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(271): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (541(f=1.0), 542(f=1.0), )
Selected to next generation: IDs2--> (541(f=1.0), )
----------Running generation: 272, population size: 1

***** Generation 272 : 0
**Parent Variant: [Variant id: 543, #gens: 277, #ops: 0, parent:-]

--Child created id: 544
--Creating new operations for variant [Variant id: 544, #gens: 277, #ops: 0, parent:543]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 15
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 57
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 544, #gens: 278, #ops: 1, parent:543] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 544, errors: [FractionFormat.java:190: error: incompatible types: java.util.Locale[] cannot be converted to java.lang.StringBuffer
		} 		return java.text.NumberFormat.getAvailableLocales();
		  		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(272): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (543(f=1.0), 544(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (543(f=1.0), )
----------Running generation: 273, population size: 1

***** Generation 273 : 0
**Parent Variant: [Variant id: 545, #gens: 277, #ops: 0, parent:-]

--Child created id: 546
--Creating new operations for variant [Variant id: 546, #gens: 277, #ops: 0, parent:545]
---analyzing modificationPoint position: 48
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 546, #gens: 278, #ops: 1, parent:545] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 546
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-546/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(273): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (545(f=1.0), 546(f=1.0), )
Selected to next generation: IDs2--> (545(f=1.0), )
----------Running generation: 274, population size: 1

***** Generation 274 : 0
**Parent Variant: [Variant id: 547, #gens: 277, #ops: 0, parent:-]

--Child created id: 548
--Creating new operations for variant [Variant id: 548, #gens: 277, #ops: 0, parent:547]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 43
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 250
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  this.resultComputed = true
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 548, #gens: 278, #ops: 1, parent:547] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 548, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		return denominatorFormat;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(274): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (547(f=1.0), 548(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (547(f=1.0), )
----------Running generation: 275, population size: 1

***** Generation 275 : 0
**Parent Variant: [Variant id: 549, #gens: 277, #ops: 0, parent:-]

--Child created id: 550
--Creating new operations for variant [Variant id: 550, #gens: 277, #ops: 0, parent:549]
---analyzing modificationPoint position: 57
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 28
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
---modifPoint 3 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 62
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 4 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 60
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java203
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 203, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 550, #gens: 278, #ops: 1, parent:549] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 550
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-550/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(275): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (549(f=1.0), 550(f=1.0), )
Selected to next generation: IDs2--> (549(f=1.0), )
----------Running generation: 276, population size: 1

***** Generation 276 : 0
**Parent Variant: [Variant id: 551, #gens: 277, #ops: 0, parent:-]

--Child created id: 552
--Creating new operations for variant [Variant id: 552, #gens: 277, #ops: 0, parent:551]
---analyzing modificationPoint position: 99
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  // return the initial guess if it is good enough double yInitial = f.value(initial)
---analyzing modificationPoint position: 54
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
---modifPoint 2 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [format]
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 552, #gens: 278, #ops: 1, parent:551] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 552
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-552/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(276): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (551(f=1.0), 552(f=1.0), )
Selected to next generation: IDs2--> (551(f=1.0), )
----------Running generation: 277, population size: 1

***** Generation 277 : 0
**Parent Variant: [Variant id: 553, #gens: 277, #ops: 0, parent:-]

--Child created id: 554
--Creating new operations for variant [Variant id: 554, #gens: 277, #ops: 0, parent:553]
---analyzing modificationPoint position: 56
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 25
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 554, #gens: 276, #ops: 1, parent:553] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 554
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-554/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(277): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (553(f=1.0), 554(f=1.0), )
Selected to next generation: IDs2--> (553(f=1.0), )
----------Running generation: 278, population size: 1

***** Generation 278 : 0
**Parent Variant: [Variant id: 555, #gens: 277, #ops: 0, parent:-]

--Child created id: 556
--Creating new operations for variant [Variant id: 556, #gens: 277, #ops: 0, parent:555]
---analyzing modificationPoint position: 139
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  containsPositiveWeight = true
---analyzing modificationPoint position: 18
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 74
---modifPoint 2 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 47
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [ret, ((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((org.apache.commons.math.fraction.Fraction) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 556, #gens: 278, #ops: 1, parent:555] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 556
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-556/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(278): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (555(f=1.0), 556(f=1.0), )
Selected to next generation: IDs2--> (555(f=1.0), )
----------Running generation: 279, population size: 1

***** Generation 279 : 0
**Parent Variant: [Variant id: 557, #gens: 277, #ops: 0, parent:-]

--Child created id: 558
--Creating new operations for variant [Variant id: 558, #gens: 277, #ops: 0, parent:557]
---analyzing modificationPoint position: 53
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 30
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 126
location: Mean.java215
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return xbarw + (correction / sumw) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 558, #gens: 276, #ops: 1, parent:557] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 558
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-558/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(279): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return xbarw + (correction / sumw) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (557(f=1.0), 558(f=1.0), )
Selected to next generation: IDs2--> (557(f=1.0), )
----------Running generation: 280, population size: 1

***** Generation 280 : 0
**Parent Variant: [Variant id: 559, #gens: 277, #ops: 0, parent:-]

--Child created id: 560
--Creating new operations for variant [Variant id: 560, #gens: 277, #ops: 0, parent:559]
---analyzing modificationPoint position: 20
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 64
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 560, #gens: 276, #ops: 1, parent:559] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 560
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-560/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(280): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (559(f=1.0), 560(f=1.0), )
Selected to next generation: IDs2--> (559(f=1.0), )
----------Running generation: 281, population size: 1

***** Generation 281 : 0
**Parent Variant: [Variant id: 561, #gens: 277, #ops: 0, parent:-]

--Child created id: 562
--Creating new operations for variant [Variant id: 562, #gens: 277, #ops: 0, parent:561]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 562, #gens: 276, #ops: 1, parent:561] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 562
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-562/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(281): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (561(f=1.0), 562(f=1.0), )
Selected to next generation: IDs2--> (561(f=1.0), )
----------Running generation: 282, population size: 1

***** Generation 282 : 0
**Parent Variant: [Variant id: 563, #gens: 277, #ops: 0, parent:-]

--Child created id: 564
--Creating new operations for variant [Variant id: 564, #gens: 277, #ops: 0, parent:563]
---analyzing modificationPoint position: 34
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java97
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 97, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 564, #gens: 278, #ops: 1, parent:563] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 564
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-564/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(282): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (563(f=1.0), 564(f=1.0), )
Selected to next generation: IDs2--> (563(f=1.0), )
----------Running generation: 283, population size: 1

***** Generation 283 : 0
**Parent Variant: [Variant id: 565, #gens: 277, #ops: 0, parent:-]

--Child created id: 566
--Creating new operations for variant [Variant id: 566, #gens: 277, #ops: 0, parent:565]
---analyzing modificationPoint position: 15
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 566, #gens: 276, #ops: 1, parent:565] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 566
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-566/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(283): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (565(f=1.0), 566(f=1.0), )
Selected to next generation: IDs2--> (565(f=1.0), )
----------Running generation: 284, population size: 1

***** Generation 284 : 0
**Parent Variant: [Variant id: 567, #gens: 277, #ops: 0, parent:-]

--Child created id: 568
--Creating new operations for variant [Variant id: 568, #gens: 277, #ops: 0, parent:567]
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 568, #gens: 276, #ops: 1, parent:567] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 568
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-568/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(284): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (567(f=1.0), 568(f=1.0), )
Selected to next generation: IDs2--> (567(f=1.0), )
----------Running generation: 285, population size: 1

***** Generation 285 : 0
**Parent Variant: [Variant id: 569, #gens: 277, #ops: 0, parent:-]

--Child created id: 570
--Creating new operations for variant [Variant id: 570, #gens: 277, #ops: 0, parent:569]
---analyzing modificationPoint position: 49
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 570, #gens: 276, #ops: 1, parent:569] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 570
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-570/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(285): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (569(f=1.0), 570(f=1.0), )
Selected to next generation: IDs2--> (569(f=1.0), )
----------Running generation: 286, population size: 1

***** Generation 286 : 0
**Parent Variant: [Variant id: 571, #gens: 277, #ops: 0, parent:-]

--Child created id: 572
--Creating new operations for variant [Variant id: 572, #gens: 277, #ops: 0, parent:571]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 572, #gens: 278, #ops: 1, parent:571] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 572, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf; 		return nf;
		           		^]
Ingredient counter is Zero
---Undoing: gnrtn(286): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (571(f=1.0), 572(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (571(f=1.0), )
----------Running generation: 287, population size: 1

***** Generation 287 : 0
**Parent Variant: [Variant id: 573, #gens: 277, #ops: 0, parent:-]

--Child created id: 574
--Creating new operations for variant [Variant id: 574, #gens: 277, #ops: 0, parent:573]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 574, #gens: 276, #ops: 1, parent:573] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 574
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-574/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(287): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (573(f=1.0), 574(f=1.0), )
Selected to next generation: IDs2--> (573(f=1.0), )
----------Running generation: 288, population size: 1

***** Generation 288 : 0
**Parent Variant: [Variant id: 575, #gens: 277, #ops: 0, parent:-]

--Child created id: 576
--Creating new operations for variant [Variant id: 576, #gens: 277, #ops: 0, parent:575]
---analyzing modificationPoint position: 139
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [weights]
--> var from patch: weights spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java165
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `containsPositiveWeight = true ` -topatch--> `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 165, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `containsPositiveWeight = true ` -topatch--> `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 576, #gens: 278, #ops: 1, parent:575] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 576
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-576/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(288): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `containsPositiveWeight = true ` -topatch--> `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (575(f=1.0), 576(f=1.0), )
Selected to next generation: IDs2--> (575(f=1.0), )
----------Running generation: 289, population size: 1

***** Generation 289 : 0
**Parent Variant: [Variant id: 577, #gens: 277, #ops: 0, parent:-]

--Child created id: 578
--Creating new operations for variant [Variant id: 578, #gens: 277, #ops: 0, parent:577]
---analyzing modificationPoint position: 89
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [f, min, max, initial]
--> var from patch: f spoon.support.reflect.code.CtFieldReadImpl
SameName: final 
































































































org.apache.commons.math.analysis.UnivariateRealFunction f
SameName: final 
































































































org.apache.commons.math.analysis.UnivariateRealFunction f
--> var from patch: min spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initial spoon.support.reflect.code.CtVariableReadImpl
Transforming shadowed variable in return solve(f, min, max, initial)
location: BrentSolver.java138
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, min, max, initial)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 138, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, min, max, initial)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 578, #gens: 277, #ops: 1, parent:577] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 578
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-578/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(289): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, min, max, initial)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (577(f=1.0), 578(f=1.0), )
Selected to next generation: IDs2--> (577(f=1.0), )
----------Running generation: 290, population size: 1

***** Generation 290 : 0
**Parent Variant: [Variant id: 579, #gens: 277, #ops: 0, parent:-]

--Child created id: 580
--Creating new operations for variant [Variant id: 580, #gens: 277, #ops: 0, parent:579]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 57
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java191
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 580, #gens: 278, #ops: 1, parent:579] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 580
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-580/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(290): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (579(f=1.0), 580(f=1.0), )
Selected to next generation: IDs2--> (579(f=1.0), )
----------Running generation: 291, population size: 1

***** Generation 291 : 0
**Parent Variant: [Variant id: 581, #gens: 277, #ops: 0, parent:-]

--Child created id: 582
--Creating new operations for variant [Variant id: 582, #gens: 277, #ops: 0, parent:581]
---analyzing modificationPoint position: 83
location: ProperBigFractionFormat.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 582, #gens: 276, #ops: 1, parent:581] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 582
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-582/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(291): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (581(f=1.0), 582(f=1.0), )
Selected to next generation: IDs2--> (581(f=1.0), )
----------Running generation: 292, population size: 1

***** Generation 292 : 0
**Parent Variant: [Variant id: 583, #gens: 277, #ops: 0, parent:-]

--Child created id: 584
--Creating new operations for variant [Variant id: 584, #gens: 277, #ops: 0, parent:583]
---analyzing modificationPoint position: 47
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [ret, ((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((org.apache.commons.math.fraction.Fraction) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 584, #gens: 277, #ops: 1, parent:583] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 584
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-584/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(292): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (583(f=1.0), 584(f=1.0), )
Selected to next generation: IDs2--> (583(f=1.0), )
----------Running generation: 293, population size: 1

***** Generation 293 : 0
**Parent Variant: [Variant id: 585, #gens: 277, #ops: 0, parent:-]

--Child created id: 586
--Creating new operations for variant [Variant id: 586, #gens: 277, #ops: 0, parent:585]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 586, #gens: 276, #ops: 1, parent:585] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 586
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-586/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(293): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (585(f=1.0), 586(f=1.0), )
Selected to next generation: IDs2--> (585(f=1.0), )
----------Running generation: 294, population size: 1

***** Generation 294 : 0
**Parent Variant: [Variant id: 587, #gens: 277, #ops: 0, parent:-]

--Child created id: 588
--Creating new operations for variant [Variant id: 588, #gens: 277, #ops: 0, parent:587]
---analyzing modificationPoint position: 39
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 588, #gens: 276, #ops: 1, parent:587] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 588
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-588/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(294): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (587(f=1.0), 588(f=1.0), )
Selected to next generation: IDs2--> (587(f=1.0), )
----------Running generation: 295, population size: 1

***** Generation 295 : 0
**Parent Variant: [Variant id: 589, #gens: 277, #ops: 0, parent:-]

--Child created id: 590
--Creating new operations for variant [Variant id: 590, #gens: 277, #ops: 0, parent:589]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 22
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [pattern, locale, arguments]
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 590, #gens: 277, #ops: 1, parent:589] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 590, errors: [MathRuntimeException.java:129: error: non-static variable pattern cannot be referenced from a static context
		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
		       ^, MathRuntimeException.java:129: error: non-static variable arguments cannot be referenced from a static context
		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
		                                                                                                                                                  ^, MathRuntimeException.java:129: error: non-static variable pattern cannot be referenced from a static context
		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
		                                                                                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(295): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (589(f=1.0), 590(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (589(f=1.0), )
----------Running generation: 296, population size: 1

***** Generation 296 : 0
**Parent Variant: [Variant id: 591, #gens: 277, #ops: 0, parent:-]

--Child created id: 592
--Creating new operations for variant [Variant id: 592, #gens: 277, #ops: 0, parent:591]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 67
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 107
location: BrentSolver.java184
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `// neither value is close to zero and min and max do not bracket root. throw org.apache.commons.math[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 592, #gens: 276, #ops: 1, parent:591] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 592
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-592/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(296): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `// neither value is close to zero and min and max do not bracket root. throw org.apache.commons.math[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (591(f=1.0), 592(f=1.0), )
Selected to next generation: IDs2--> (591(f=1.0), )
----------Running generation: 297, population size: 1

***** Generation 297 : 0
**Parent Variant: [Variant id: 593, #gens: 277, #ops: 0, parent:-]

--Child created id: 594
--Creating new operations for variant [Variant id: 594, #gens: 277, #ops: 0, parent:593]
---analyzing modificationPoint position: 113
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 594, #gens: 276, #ops: 1, parent:593] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 594
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-594/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(297): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (593(f=1.0), 594(f=1.0), )
Selected to next generation: IDs2--> (593(f=1.0), )
----------Running generation: 298, population size: 1

***** Generation 298 : 0
**Parent Variant: [Variant id: 595, #gens: 277, #ops: 0, parent:-]

--Child created id: 596
--Creating new operations for variant [Variant id: 596, #gens: 277, #ops: 0, parent:595]
---analyzing modificationPoint position: 102
location: BrentSolver.java114
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 596, #gens: 276, #ops: 1, parent:595] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 596
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-596/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(298): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (595(f=1.0), 596(f=1.0), )
Selected to next generation: IDs2--> (595(f=1.0), )
----------Running generation: 299, population size: 1

***** Generation 299 : 0
**Parent Variant: [Variant id: 597, #gens: 277, #ops: 0, parent:-]

--Child created id: 598
--Creating new operations for variant [Variant id: 598, #gens: 277, #ops: 0, parent:597]
---analyzing modificationPoint position: 193
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtFieldWriteImpl
location: Sum.java122
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, begin, length)) { 	sum = 0.0; 	for (int i = begin; i < (begin + length); i++) { 		s[...] ` -topatch--> `n++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.stat.descriptive.summary.Sum line: 122, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, begin, length)) { 	sum = 0.0; 	for (int i = begin; i < (begin + length); i++) { 		s[...] ` -topatch--> `n++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 598, #gens: 278, #ops: 1, parent:597] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 598
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-598/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(299): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, begin, length)) { 	sum = 0.0; 	for (int i = begin; i < (begin + length); i++) { 		s[...] ` -topatch--> `n++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (597(f=1.0), 598(f=1.0), )
Selected to next generation: IDs2--> (597(f=1.0), )
----------Running generation: 300, population size: 1

***** Generation 300 : 0
**Parent Variant: [Variant id: 599, #gens: 277, #ops: 0, parent:-]

--Child created id: 600
--Creating new operations for variant [Variant id: 600, #gens: 277, #ops: 0, parent:599]
---analyzing modificationPoint position: 47
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 62
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 600, #gens: 276, #ops: 1, parent:599] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 600
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-600/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(300): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (599(f=1.0), 600(f=1.0), )
Selected to next generation: IDs2--> (599(f=1.0), )
----------Running generation: 301, population size: 1

***** Generation 301 : 0
**Parent Variant: [Variant id: 601, #gens: 277, #ops: 0, parent:-]

--Child created id: 602
--Creating new operations for variant [Variant id: 602, #gens: 277, #ops: 0, parent:601]
---analyzing modificationPoint position: 55
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 602, #gens: 276, #ops: 1, parent:601] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 602
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-602/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(301): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (601(f=1.0), 602(f=1.0), )
Selected to next generation: IDs2--> (601(f=1.0), )
----------Running generation: 302, population size: 1

***** Generation 302 : 0
**Parent Variant: [Variant id: 603, #gens: 277, #ops: 0, parent:-]

--Child created id: 604
--Creating new operations for variant [Variant id: 604, #gens: 277, #ops: 0, parent:603]
---analyzing modificationPoint position: 118
location: Mean.java203
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, weights, begin, length)) { 	org.apache.commons.math.stat.descriptive.summary.Sum su[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 604, #gens: 276, #ops: 1, parent:603] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 604
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-604/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(302): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (test(values, weights, begin, length)) { 	org.apache.commons.math.stat.descriptive.summary.Sum su[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (603(f=1.0), 604(f=1.0), )
Selected to next generation: IDs2--> (603(f=1.0), )
----------Running generation: 303, population size: 1

***** Generation 303 : 0
**Parent Variant: [Variant id: 605, #gens: 277, #ops: 0, parent:-]

--Child created id: 606
--Creating new operations for variant [Variant id: 606, #gens: 277, #ops: 0, parent:605]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 606, #gens: 276, #ops: 1, parent:605] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 606
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-606/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(303): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (605(f=1.0), 606(f=1.0), )
Selected to next generation: IDs2--> (605(f=1.0), )
----------Running generation: 304, population size: 1

***** Generation 304 : 0
**Parent Variant: [Variant id: 607, #gens: 277, #ops: 0, parent:-]

--Child created id: 608
--Creating new operations for variant [Variant id: 608, #gens: 277, #ops: 0, parent:607]
---analyzing modificationPoint position: 57
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 608, #gens: 277, #ops: 1, parent:607] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 608
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-608/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(304): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (607(f=1.0), 608(f=1.0), )
Selected to next generation: IDs2--> (607(f=1.0), )
----------Running generation: 305, population size: 1

***** Generation 305 : 0
**Parent Variant: [Variant id: 609, #gens: 277, #ops: 0, parent:-]

--Child created id: 610
--Creating new operations for variant [Variant id: 610, #gens: 277, #ops: 0, parent:609]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 122
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtFieldReadImpl
SameName: final 

































































java.text.NumberFormat numeratorFormat
SameName: final 

































































java.text.NumberFormat numeratorFormat
Transforming shadowed variable in return numeratorFormat
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 610, #gens: 278, #ops: 1, parent:609] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 610, errors: [AbstractFormat.java:111: error: incompatible types: unexpected return value
		return numeratorFormat; 		this.numeratorFormat = numeratorFormat; 		this.denominatorFormat = denominatorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(305): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (609(f=1.0), 610(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (609(f=1.0), )
----------Running generation: 306, population size: 1

***** Generation 306 : 0
**Parent Variant: [Variant id: 611, #gens: 277, #ops: 0, parent:-]

--Child created id: 612
--Creating new operations for variant [Variant id: 612, #gens: 277, #ops: 0, parent:611]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 44
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 22
---modifPoint 2 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 82
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 3 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 35
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 612, #gens: 276, #ops: 1, parent:611] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 612
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-612/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(306): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (611(f=1.0), 612(f=1.0), )
Selected to next generation: IDs2--> (611(f=1.0), )
----------Running generation: 307, population size: 1

***** Generation 307 : 0
**Parent Variant: [Variant id: 613, #gens: 277, #ops: 0, parent:-]

--Child created id: 614
--Creating new operations for variant [Variant id: 614, #gens: 277, #ops: 0, parent:613]
---analyzing modificationPoint position: 55
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 20
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 614, #gens: 276, #ops: 1, parent:613] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 614
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-614/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(307): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (613(f=1.0), 614(f=1.0), )
Selected to next generation: IDs2--> (613(f=1.0), )
----------Running generation: 308, population size: 1

***** Generation 308 : 0
**Parent Variant: [Variant id: 615, #gens: 277, #ops: 0, parent:-]

--Child created id: 616
--Creating new operations for variant [Variant id: 616, #gens: 277, #ops: 0, parent:615]
---analyzing modificationPoint position: 145
location: AbstractUnivariateStatistic.java151
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 616, #gens: 276, #ops: 1, parent:615] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 616
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-616/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(308): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	if (java.lang.Double.isNaN(weights[i])) { 		throw [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (615(f=1.0), 616(f=1.0), )
Selected to next generation: IDs2--> (615(f=1.0), )
----------Running generation: 309, population size: 1

***** Generation 309 : 0
**Parent Variant: [Variant id: 617, #gens: 277, #ops: 0, parent:-]

--Child created id: 618
--Creating new operations for variant [Variant id: 618, #gens: 277, #ops: 0, parent:617]
---analyzing modificationPoint position: 169
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 618, #gens: 278, #ops: 1, parent:617] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 618
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-618/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(309): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (617(f=1.0), 618(f=1.0), )
Selected to next generation: IDs2--> (617(f=1.0), )
----------Running generation: 310, population size: 1

***** Generation 310 : 0
**Parent Variant: [Variant id: 619, #gens: 277, #ops: 0, parent:-]

--Child created id: 620
--Creating new operations for variant [Variant id: 620, #gens: 277, #ops: 0, parent:619]
---analyzing modificationPoint position: 46
location: BigFractionFormat.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 620, #gens: 276, #ops: 1, parent:619] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 620, errors: [BigFractionFormat.java:181: error: variable ret might not have been initialized
		return ret;
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(310): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (619(f=1.0), 620(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (619(f=1.0), )
----------Running generation: 311, population size: 1

***** Generation 311 : 0
**Parent Variant: [Variant id: 621, #gens: 277, #ops: 0, parent:-]

--Child created id: 622
--Creating new operations for variant [Variant id: 622, #gens: 277, #ops: 0, parent:621]
---analyzing modificationPoint position: 51
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 622, #gens: 276, #ops: 1, parent:621] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 622
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-622/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(311): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (621(f=1.0), 622(f=1.0), )
Selected to next generation: IDs2--> (621(f=1.0), )
----------Running generation: 312, population size: 1

***** Generation 312 : 0
**Parent Variant: [Variant id: 623, #gens: 277, #ops: 0, parent:-]

--Child created id: 624
--Creating new operations for variant [Variant id: 624, #gens: 277, #ops: 0, parent:623]
---analyzing modificationPoint position: 82
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java60
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 624, #gens: 278, #ops: 1, parent:623] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 624
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-624/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(312): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (623(f=1.0), 624(f=1.0), )
Selected to next generation: IDs2--> (623(f=1.0), )
----------Running generation: 313, population size: 1

***** Generation 313 : 0
**Parent Variant: [Variant id: 625, #gens: 277, #ops: 0, parent:-]

--Child created id: 626
--Creating new operations for variant [Variant id: 626, #gens: 277, #ops: 0, parent:625]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 91
location: ProperBigFractionFormat.java100
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 626, #gens: 276, #ops: 1, parent:625] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 626
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-626/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(313): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (625(f=1.0), 626(f=1.0), )
Selected to next generation: IDs2--> (625(f=1.0), )
----------Running generation: 314, population size: 1

***** Generation 314 : 0
**Parent Variant: [Variant id: 627, #gens: 277, #ops: 0, parent:-]

--Child created id: 628
--Creating new operations for variant [Variant id: 628, #gens: 277, #ops: 0, parent:627]
---analyzing modificationPoint position: 72
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java149
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 149, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 628, #gens: 278, #ops: 1, parent:627] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 628
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-628/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(314): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (627(f=1.0), 628(f=1.0), )
Selected to next generation: IDs2--> (627(f=1.0), )
----------Running generation: 315, population size: 1

***** Generation 315 : 0
**Parent Variant: [Variant id: 629, #gens: 277, #ops: 0, parent:-]

--Child created id: 630
--Creating new operations for variant [Variant id: 630, #gens: 277, #ops: 0, parent:629]
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 142
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 31
---modifPoint 2 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 68
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 3 not mutation generated in  return numerator
---analyzing modificationPoint position: 224
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y1, y0]
--> var from patch: y1 spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y0 spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java247
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tolerance =  java.lang.Math.max(relativeAccuracy * java.lang.Math.abs(x1), absoluteAccuracy) ` -topatch--> `double r3 = y1 / y0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 247, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tolerance =  java.lang.Math.max(relativeAccuracy * java.lang.Math.abs(x1), absoluteAccuracy) ` -topatch--> `double r3 = y1 / y0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 630, #gens: 277, #ops: 1, parent:629] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 630, errors: [BrentSolver.java:260: error: cannot find symbol
			double r3 = y1 / y0; 			if (java.lang.Math.abs(dx) <= tolerance) { 				setResult(x1, i); 				return result;} 			if ((java.lang.Math.abs(oldDelta) < tolerance) || (java.lang.Math.abs(y0) <= java.lang.Math.abs(y1))) { 				// Force bisection. 				delta = 0.5 * dx; 				oldDelta = delta;} else { 				double r3 = y1 / y0;
			                     			                              ^
  symbol:   variable tolerance
  location: class org.apache.commons.math.analysis.solvers.BrentSolver, BrentSolver.java:260: error: cannot find symbol
			double r3 = y1 / y0; 			if (java.lang.Math.abs(dx) <= tolerance) { 				setResult(x1, i); 				return result;} 			if ((java.lang.Math.abs(oldDelta) < tolerance) || (java.lang.Math.abs(y0) <= java.lang.Math.abs(y1))) { 				// Force bisection. 				delta = 0.5 * dx; 				oldDelta = delta;} else { 				double r3 = y1 / y0;
			                     			                                           				                  				                			                                    ^
  symbol:   variable tolerance
  location: class org.apache.commons.math.analysis.solvers.BrentSolver, BrentSolver.java:282: error: cannot find symbol
				if (((2.0 * p) >= (((1.5 * dx) * p1) - java.lang.Math.abs(tolerance * p1))) || 
				                                                          ^
  symbol:   variable tolerance
  location: class org.apache.commons.math.analysis.solvers.BrentSolver, BrentSolver.java:298: error: cannot find symbol
			if (java.lang.Math.abs(delta) > tolerance) {
			                                ^
  symbol:   variable tolerance
  location: class org.apache.commons.math.analysis.solvers.BrentSolver, BrentSolver.java:301: error: cannot find symbol
				x1 = x1 + (0.5 * tolerance);
				                 ^
  symbol:   variable tolerance
  location: class org.apache.commons.math.analysis.solvers.BrentSolver, BrentSolver.java:303: error: cannot find symbol
				x1 = x1 - (0.5 * tolerance);
				                 ^
  symbol:   variable tolerance
  location: class org.apache.commons.math.analysis.solvers.BrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(315): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double tolerance =  java.lang.Math.max(relativeAccuracy * java.lang.Math.abs(x1), absoluteAccuracy) ` -topatch--> `double r3 = y1 / y0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (629(f=1.0), 630(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (629(f=1.0), )
----------Running generation: 316, population size: 1

***** Generation 316 : 0
**Parent Variant: [Variant id: 631, #gens: 277, #ops: 0, parent:-]

--Child created id: 632
--Creating new operations for variant [Variant id: 632, #gens: 277, #ops: 0, parent:631]
---analyzing modificationPoint position: 138
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [length]
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java164
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "length cannot be[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 164, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "length cannot be[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 632, #gens: 278, #ops: 1, parent:631] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 632
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-632/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(316): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "length cannot be[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (631(f=1.0), 632(f=1.0), )
Selected to next generation: IDs2--> (631(f=1.0), )
----------Running generation: 317, population size: 1

***** Generation 317 : 0
**Parent Variant: [Variant id: 633, #gens: 277, #ops: 0, parent:-]

--Child created id: 634
--Creating new operations for variant [Variant id: 634, #gens: 277, #ops: 0, parent:633]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 634, #gens: 278, #ops: 1, parent:633] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 634
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-634/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(317): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (633(f=1.0), 634(f=1.0), )
Selected to next generation: IDs2--> (633(f=1.0), )
----------Running generation: 318, population size: 1

***** Generation 318 : 0
**Parent Variant: [Variant id: 635, #gens: 277, #ops: 0, parent:-]

--Child created id: 636
--Creating new operations for variant [Variant id: 636, #gens: 277, #ops: 0, parent:635]
---analyzing modificationPoint position: 22
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [java.util.Locale.US, pattern, arguments]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return new java.io.EOFException() {  	/** 	 * Serializable version identifier. 	 */ 	private static [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return new java.io.EOFException() {  	/** 	 * Serializable version identifier. 	 */ 	private static [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 636, #gens: 277, #ops: 1, parent:635] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 636, errors: [MathRuntimeException.java:313: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:313: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:313: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:313: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:313: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:313: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:313: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:313: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:313: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:314: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:314: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:314: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:314: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:314: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:314: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:316: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:317: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:318: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:319: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:320: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:320: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:321: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:321: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(318): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return new java.io.EOFException() {  	/** 	 * Serializable version identifier. 	 */ 	private static [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (635(f=1.0), 636(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (635(f=1.0), )
----------Running generation: 319, population size: 1

***** Generation 319 : 0
**Parent Variant: [Variant id: 637, #gens: 277, #ops: 0, parent:-]

--Child created id: 638
--Creating new operations for variant [Variant id: 638, #gens: 277, #ops: 0, parent:637]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 638, #gens: 278, #ops: 1, parent:637] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 638, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                     		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(319): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (637(f=1.0), 638(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (637(f=1.0), )
----------Running generation: 320, population size: 1

***** Generation 320 : 0
**Parent Variant: [Variant id: 639, #gens: 277, #ops: 0, parent:-]

--Child created id: 640
--Creating new operations for variant [Variant id: 640, #gens: 277, #ops: 0, parent:639]
---analyzing modificationPoint position: 40
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 640, #gens: 277, #ops: 1, parent:639] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 640
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-640/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(320): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (639(f=1.0), 640(f=1.0), )
Selected to next generation: IDs2--> (639(f=1.0), )
----------Running generation: 321, population size: 1

***** Generation 321 : 0
**Parent Variant: [Variant id: 641, #gens: 277, #ops: 0, parent:-]

--Child created id: 642
--Creating new operations for variant [Variant id: 642, #gens: 277, #ops: 0, parent:641]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 82
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 63
---modifPoint 2 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 14
---modifPoint 4 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 178
Templates availables293
Attempts Base Ingredients  1 total 293
---modifPoint 5 not mutation generated in  if ((u == 0) || (v == 0)) { 	if ((u == java.lang.Integer.MIN_VALUE) || (v == java.lang.Integer.MIN_V[...]
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 6 not mutation generated in  num = num % den
---analyzing modificationPoint position: 135
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 7 not mutation generated in  sum += values[i] * weights[i]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 8 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 29
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 9 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 10 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 46
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 11 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 180
location: RandomDataImpl.java521
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `rand.setSeed(java.lang.System.currentTimeMillis()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 642, #gens: 276, #ops: 1, parent:641] gen mutated: 1 , gen not mut: 12, gen not applied  0
-The child compiles: id 642
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-642/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(321): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `rand.setSeed(java.lang.System.currentTimeMillis()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (641(f=1.0), 642(f=1.0), )
Selected to next generation: IDs2--> (641(f=1.0), )
----------Running generation: 322, population size: 1

***** Generation 322 : 0
**Parent Variant: [Variant id: 643, #gens: 277, #ops: 0, parent:-]

--Child created id: 644
--Creating new operations for variant [Variant id: 644, #gens: 277, #ops: 0, parent:643]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 15
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 16
---modifPoint 3 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 25
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 644, #gens: 278, #ops: 1, parent:643] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 644, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(322): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (643(f=1.0), 644(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (643(f=1.0), )
----------Running generation: 323, population size: 1

***** Generation 323 : 0
**Parent Variant: [Variant id: 645, #gens: 277, #ops: 0, parent:-]

--Child created id: 646
--Creating new operations for variant [Variant id: 646, #gens: 277, #ops: 0, parent:645]
---analyzing modificationPoint position: 39
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 646, #gens: 276, #ops: 1, parent:645] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 646
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-646/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(323): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (645(f=1.0), 646(f=1.0), )
Selected to next generation: IDs2--> (645(f=1.0), )
----------Running generation: 324, population size: 1

***** Generation 324 : 0
**Parent Variant: [Variant id: 647, #gens: 277, #ops: 0, parent:-]

--Child created id: 648
--Creating new operations for variant [Variant id: 648, #gens: 277, #ops: 0, parent:647]
---analyzing modificationPoint position: 43
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 648, #gens: 276, #ops: 1, parent:647] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 648
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-648/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(324): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (647(f=1.0), 648(f=1.0), )
Selected to next generation: IDs2--> (647(f=1.0), )
----------Running generation: 325, population size: 1

***** Generation 325 : 0
**Parent Variant: [Variant id: 649, #gens: 277, #ops: 0, parent:-]

--Child created id: 650
--Creating new operations for variant [Variant id: 650, #gens: 277, #ops: 0, parent:649]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 650, #gens: 276, #ops: 1, parent:649] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 650
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-650/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(325): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (649(f=1.0), 650(f=1.0), )
Selected to next generation: IDs2--> (649(f=1.0), )
----------Running generation: 326, population size: 1

***** Generation 326 : 0
**Parent Variant: [Variant id: 651, #gens: 277, #ops: 0, parent:-]

--Child created id: 652
--Creating new operations for variant [Variant id: 652, #gens: 277, #ops: 0, parent:651]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 652, #gens: 278, #ops: 1, parent:651] gen mutated: 1 , gen not mut: 1, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 652
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-652/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(326): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (651(f=1.0), 652(f=1.0), )
Selected to next generation: IDs2--> (651(f=1.0), )
----------Running generation: 327, population size: 1

***** Generation 327 : 0
**Parent Variant: [Variant id: 653, #gens: 277, #ops: 0, parent:-]

--Child created id: 654
--Creating new operations for variant [Variant id: 654, #gens: 277, #ops: 0, parent:653]
---analyzing modificationPoint position: 53
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [obj, ret, toAppendTo, pos]
--> var from patch: obj spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java168
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `if (obj instanceof java.math.BigInteger) { 	ret = format(new org.apache.commons.math.fraction.BigFra[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 168, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `if (obj instanceof java.math.BigInteger) { 	ret = format(new org.apache.commons.math.fraction.BigFra[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 654, #gens: 277, #ops: 1, parent:653] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 654
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-654/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(327): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `if (obj instanceof java.math.BigInteger) { 	ret = format(new org.apache.commons.math.fraction.BigFra[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (653(f=1.0), 654(f=1.0), )
Selected to next generation: IDs2--> (653(f=1.0), )
----------Running generation: 328, population size: 1

***** Generation 328 : 0
**Parent Variant: [Variant id: 655, #gens: 277, #ops: 0, parent:-]

--Child created id: 656
--Creating new operations for variant [Variant id: 656, #gens: 277, #ops: 0, parent:655]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 656, #gens: 276, #ops: 1, parent:655] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 656
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-656/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(328): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (655(f=1.0), 656(f=1.0), )
Selected to next generation: IDs2--> (655(f=1.0), )
----------Running generation: 329, population size: 1

***** Generation 329 : 0
**Parent Variant: [Variant id: 657, #gens: 277, #ops: 0, parent:-]

--Child created id: 658
--Creating new operations for variant [Variant id: 658, #gens: 277, #ops: 0, parent:657]
---analyzing modificationPoint position: 63
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 156
---modifPoint 1 not mutation generated in  return ((int) (((r * upper) + ((1.0 - r) * lower)) + r))
---analyzing modificationPoint position: 49
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 658, #gens: 276, #ops: 1, parent:657] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 658
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-658/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(329): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (657(f=1.0), 658(f=1.0), )
Selected to next generation: IDs2--> (657(f=1.0), )
----------Running generation: 330, population size: 1

***** Generation 330 : 0
**Parent Variant: [Variant id: 659, #gens: 277, #ops: 0, parent:-]

--Child created id: 660
--Creating new operations for variant [Variant id: 660, #gens: 277, #ops: 0, parent:659]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 660, #gens: 276, #ops: 1, parent:659] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 660
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-660/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(330): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (659(f=1.0), 660(f=1.0), )
Selected to next generation: IDs2--> (659(f=1.0), )
----------Running generation: 331, population size: 1

***** Generation 331 : 0
**Parent Variant: [Variant id: 661, #gens: 277, #ops: 0, parent:-]

--Child created id: 662
--Creating new operations for variant [Variant id: 662, #gens: 277, #ops: 0, parent:661]
---analyzing modificationPoint position: 43
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 16
Any element available for mp MP=org.apache.commons.math.MathRuntimeException line: 474, pointed element: CtReturnImpl
---modifPoint 1 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 67
Templates availables49
Attempts Base Ingredients  1 total 49
vars from patch [numerator, denominator]
--> var from patch: numerator spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: denominator spoon.support.reflect.code.CtFieldReadImpl
location: BigFraction.java747
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return numerator.divide(denominator).longValue()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 747, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return numerator.divide(denominator).longValue()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 662, #gens: 277, #ops: 1, parent:661] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 662, errors: [BigFraction.java:844: error: incompatible types: long cannot be converted to java.math.BigInteger
		return numerator.divide(denominator).longValue();} 	/**
		                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(331): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return numerator.divide(denominator).longValue()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (661(f=1.0), 662(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (661(f=1.0), )
----------Running generation: 332, population size: 1

***** Generation 332 : 0
**Parent Variant: [Variant id: 663, #gens: 277, #ops: 0, parent:-]

--Child created id: 664
--Creating new operations for variant [Variant id: 664, #gens: 277, #ops: 0, parent:663]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 18
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 103
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 2 not mutation generated in  // reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...]
---analyzing modificationPoint position: 7
---modifPoint 3 not mutation generated in  return nf
---analyzing modificationPoint position: 153
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 4 not mutation generated in  return (start < mid) && (mid < end)
---analyzing modificationPoint position: 58
---modifPoint 5 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 24
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 664, #gens: 276, #ops: 1, parent:663] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 664
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-664/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(332): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (663(f=1.0), 664(f=1.0), )
Selected to next generation: IDs2--> (663(f=1.0), )
----------Running generation: 333, population size: 1

***** Generation 333 : 0
**Parent Variant: [Variant id: 665, #gens: 277, #ops: 0, parent:-]

--Child created id: 666
--Creating new operations for variant [Variant id: 666, #gens: 277, #ops: 0, parent:665]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 39
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 666, #gens: 278, #ops: 1, parent:665] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 666
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-666/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(333): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (665(f=1.0), 666(f=1.0), )
Selected to next generation: IDs2--> (665(f=1.0), )
----------Running generation: 334, population size: 1

***** Generation 334 : 0
**Parent Variant: [Variant id: 667, #gens: 277, #ops: 0, parent:-]

--Child created id: 668
--Creating new operations for variant [Variant id: 668, #gens: 277, #ops: 0, parent:667]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 128
location: BigFraction.java128
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("d[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 668, #gens: 276, #ops: 1, parent:667] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 668
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-668/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(334): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("d[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (667(f=1.0), 668(f=1.0), )
Selected to next generation: IDs2--> (667(f=1.0), )
----------Running generation: 335, population size: 1

***** Generation 335 : 0
**Parent Variant: [Variant id: 669, #gens: 277, #ops: 0, parent:-]

--Child created id: 670
--Creating new operations for variant [Variant id: 670, #gens: 277, #ops: 0, parent:669]
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 670, #gens: 278, #ops: 1, parent:669] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 670, errors: [FractionFormat.java:230: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		if (num == null) { 			return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		                   			                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(335): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (669(f=1.0), 670(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (669(f=1.0), )
----------Running generation: 336, population size: 1

***** Generation 336 : 0
**Parent Variant: [Variant id: 671, #gens: 277, #ops: 0, parent:-]

--Child created id: 672
--Creating new operations for variant [Variant id: 672, #gens: 277, #ops: 0, parent:671]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 96
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 102, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 672, #gens: 277, #ops: 1, parent:671] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 672
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-672/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(336): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (671(f=1.0), 672(f=1.0), )
Selected to next generation: IDs2--> (671(f=1.0), )
----------Running generation: 337, population size: 1

***** Generation 337 : 0
**Parent Variant: [Variant id: 673, #gens: 277, #ops: 0, parent:-]

--Child created id: 674
--Creating new operations for variant [Variant id: 674, #gens: 277, #ops: 0, parent:673]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 674, #gens: 278, #ops: 1, parent:673] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 674, errors: [AbstractFormat.java:111: error: incompatible types: unexpected return value
		return numeratorFormat; 		this.denominatorFormat = denominatorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(337): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (673(f=1.0), 674(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (673(f=1.0), )
----------Running generation: 338, population size: 1

***** Generation 338 : 0
**Parent Variant: [Variant id: 675, #gens: 277, #ops: 0, parent:-]

--Child created id: 676
--Creating new operations for variant [Variant id: 676, #gens: 277, #ops: 0, parent:675]
---analyzing modificationPoint position: 102
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 0 not mutation generated in  if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; }
---analyzing modificationPoint position: 125
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 1 not mutation generated in  correction += weights[i] * (values[i] - xbarw)
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 676, #gens: 276, #ops: 1, parent:675] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 676
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-676/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(338): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (675(f=1.0), 676(f=1.0), )
Selected to next generation: IDs2--> (675(f=1.0), )
----------Running generation: 339, population size: 1

***** Generation 339 : 0
**Parent Variant: [Variant id: 677, #gens: 277, #ops: 0, parent:-]

--Child created id: 678
--Creating new operations for variant [Variant id: 678, #gens: 277, #ops: 0, parent:677]
---analyzing modificationPoint position: 29
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 678, #gens: 278, #ops: 1, parent:677] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 678, errors: [ProperFractionFormat.java:97: error: variable den is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		int den = fraction.getDenominator(); 		int num = fraction.getNumerator(); 		int den = fraction.getDenominator();
		                                     		                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(339): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (677(f=1.0), 678(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (677(f=1.0), )
----------Running generation: 340, population size: 1

***** Generation 340 : 0
**Parent Variant: [Variant id: 679, #gens: 277, #ops: 0, parent:-]

--Child created id: 680
--Creating new operations for variant [Variant id: 680, #gens: 277, #ops: 0, parent:679]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 53
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch []
location: BigFractionFormat.java168
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 168, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 680, #gens: 278, #ops: 1, parent:679] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 680, errors: [BigFractionFormat.java:168: error: incompatible types: java.util.Locale[] cannot be converted to java.lang.StringBuffer
		final java.lang.StringBuffer ret; 		return java.text.NumberFormat.getAvailableLocales();
		                                  		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(340): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (679(f=1.0), 680(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (679(f=1.0), )
----------Running generation: 341, population size: 1

***** Generation 341 : 0
**Parent Variant: [Variant id: 681, #gens: 277, #ops: 0, parent:-]

--Child created id: 682
--Creating new operations for variant [Variant id: 682, #gens: 277, #ops: 0, parent:681]
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 100
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 1 not mutation generated in  if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...]
---analyzing modificationPoint position: 51
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 2 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 54
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 3 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 87
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [format]
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java238
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 238, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 682, #gens: 278, #ops: 1, parent:681] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 682
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-682/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(341): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (681(f=1.0), 682(f=1.0), )
Selected to next generation: IDs2--> (681(f=1.0), )
----------Running generation: 342, population size: 1

***** Generation 342 : 0
**Parent Variant: [Variant id: 683, #gens: 277, #ops: 0, parent:-]

--Child created id: 684
--Creating new operations for variant [Variant id: 684, #gens: 277, #ops: 0, parent:683]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 684, #gens: 278, #ops: 1, parent:683] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 684, errors: [AbstractFormat.java:123: error: unreachable statement
		"denominator format can not be null"); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                       		^]
Ingredient counter is Zero
---Undoing: gnrtn(342): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (683(f=1.0), 684(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (683(f=1.0), )
----------Running generation: 343, population size: 1

***** Generation 343 : 0
**Parent Variant: [Variant id: 685, #gens: 277, #ops: 0, parent:-]

--Child created id: 686
--Creating new operations for variant [Variant id: 686, #gens: 277, #ops: 0, parent:685]
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 48
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 686, #gens: 277, #ops: 1, parent:685] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 686, errors: [ProperFractionFormat.java:203: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(343): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (685(f=1.0), 686(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (685(f=1.0), )
----------Running generation: 344, population size: 1

***** Generation 344 : 0
**Parent Variant: [Variant id: 687, #gens: 277, #ops: 0, parent:-]

--Child created id: 688
--Creating new operations for variant [Variant id: 688, #gens: 277, #ops: 0, parent:687]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 83
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 688, #gens: 277, #ops: 1, parent:687] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 688
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-688/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(344): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (687(f=1.0), 688(f=1.0), )
Selected to next generation: IDs2--> (687(f=1.0), )
----------Running generation: 345, population size: 1

***** Generation 345 : 0
**Parent Variant: [Variant id: 689, #gens: 277, #ops: 0, parent:-]

--Child created id: 690
--Creating new operations for variant [Variant id: 690, #gens: 277, #ops: 0, parent:689]
---analyzing modificationPoint position: 189
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  correction += values[i] - xbar
---analyzing modificationPoint position: 103
location: BrentSolver.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 690, #gens: 276, #ops: 1, parent:689] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 690
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-690/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(345): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (689(f=1.0), 690(f=1.0), )
Selected to next generation: IDs2--> (689(f=1.0), )
----------Running generation: 346, population size: 1

***** Generation 346 : 0
**Parent Variant: [Variant id: 691, #gens: 277, #ops: 0, parent:-]

--Child created id: 692
--Creating new operations for variant [Variant id: 692, #gens: 277, #ops: 0, parent:691]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, whole, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 692, #gens: 278, #ops: 1, parent:691] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 692, errors: [ProperBigFractionFormat.java:239: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:242: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:245: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:246: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:247: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:248: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:248: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:249: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:249: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:249: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:249: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(346): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (691(f=1.0), 692(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (691(f=1.0), )
----------Running generation: 347, population size: 1

***** Generation 347 : 0
**Parent Variant: [Variant id: 693, #gens: 277, #ops: 0, parent:-]

--Child created id: 694
--Creating new operations for variant [Variant id: 694, #gens: 277, #ops: 0, parent:693]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 147
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: AbstractUnivariateStatistic.java156
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isInfinite(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.c[...] ` -topatch--> `return true` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 156, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isInfinite(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.c[...] ` -topatch--> `return true` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 694, #gens: 278, #ops: 1, parent:693] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 694, errors: [AbstractUnivariateStatistic.java:157: error: unreachable statement
			if (java.lang.Double.isInfinite(weights[i])) {
			^]
Ingredient counter is Zero
---Undoing: gnrtn(347): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isInfinite(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.c[...] ` -topatch--> `return true` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (693(f=1.0), 694(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (693(f=1.0), )
----------Running generation: 348, population size: 1

***** Generation 348 : 0
**Parent Variant: [Variant id: 695, #gens: 277, #ops: 0, parent:-]

--Child created id: 696
--Creating new operations for variant [Variant id: 696, #gens: 277, #ops: 0, parent:695]
---analyzing modificationPoint position: 104
---modifPoint 0 not mutation generated in  // return the second endpoint if it is good enough double yMax = f.value(max)
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 696, #gens: 278, #ops: 1, parent:695] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 696, errors: [ProperFractionFormat.java:96: error: variable num is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		int num = fraction.getNumerator(); 		pos.setBeginIndex(0); 		pos.setEndIndex(0); 		int num = fraction.getNumerator();
		                                   		                      		                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(348): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (695(f=1.0), 696(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (695(f=1.0), )
----------Running generation: 349, population size: 1

***** Generation 349 : 0
**Parent Variant: [Variant id: 697, #gens: 277, #ops: 0, parent:-]

--Child created id: 698
--Creating new operations for variant [Variant id: 698, #gens: 277, #ops: 0, parent:697]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 48
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 698, #gens: 278, #ops: 1, parent:697] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 698, errors: [ProperFractionFormat.java:203: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(349): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (697(f=1.0), 698(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (697(f=1.0), )
----------Running generation: 350, population size: 1

***** Generation 350 : 0
**Parent Variant: [Variant id: 699, #gens: 277, #ops: 0, parent:-]

--Child created id: 700
--Creating new operations for variant [Variant id: 700, #gens: 277, #ops: 0, parent:699]
---analyzing modificationPoint position: 137
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  if (!isSequence(lower, initial, upper)) { 	throw org.apache.commons.math.MathRuntimeException.create[...]
---analyzing modificationPoint position: 82
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 86
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 76
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: AbstractFormat.java163
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 163, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 700, #gens: 277, #ops: 1, parent:699] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 700
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-700/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(350): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (699(f=1.0), 700(f=1.0), )
Selected to next generation: IDs2--> (699(f=1.0), )
----------Running generation: 351, population size: 1

***** Generation 351 : 0
**Parent Variant: [Variant id: 701, #gens: 277, #ops: 0, parent:-]

--Child created id: 702
--Creating new operations for variant [Variant id: 702, #gens: 277, #ops: 0, parent:701]
---analyzing modificationPoint position: 48
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 702, #gens: 278, #ops: 1, parent:701] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 702
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-702/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(351): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (701(f=1.0), 702(f=1.0), )
Selected to next generation: IDs2--> (701(f=1.0), )
----------Running generation: 352, population size: 1

***** Generation 352 : 0
**Parent Variant: [Variant id: 703, #gens: 277, #ops: 0, parent:-]

--Child created id: 704
--Creating new operations for variant [Variant id: 704, #gens: 277, #ops: 0, parent:703]
---analyzing modificationPoint position: 31
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 704, #gens: 278, #ops: 1, parent:703] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 704, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat; 		this.denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(352): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (703(f=1.0), 704(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (703(f=1.0), )
----------Running generation: 353, population size: 1

***** Generation 353 : 0
**Parent Variant: [Variant id: 705, #gens: 277, #ops: 0, parent:-]

--Child created id: 706
--Creating new operations for variant [Variant id: 706, #gens: 277, #ops: 0, parent:705]
---analyzing modificationPoint position: 46
location: BigFractionFormat.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 706, #gens: 276, #ops: 1, parent:705] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 706, errors: [BigFractionFormat.java:181: error: variable ret might not have been initialized
		return ret;
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(353): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (705(f=1.0), 706(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (705(f=1.0), )
----------Running generation: 354, population size: 1

***** Generation 354 : 0
**Parent Variant: [Variant id: 707, #gens: 277, #ops: 0, parent:-]

--Child created id: 708
--Creating new operations for variant [Variant id: 708, #gens: 277, #ops: 0, parent:707]
---analyzing modificationPoint position: 30
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 69
---modifPoint 1 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 48
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 92
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperBigFractionFormat.java101
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 101, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 708, #gens: 278, #ops: 1, parent:707] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 708, errors: [ProperBigFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
			return wholeFormat; 			toAppendTo.append(' '); 			if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 				num = num.negate();}} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;} 	/**
			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(354): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (707(f=1.0), 708(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (707(f=1.0), )
----------Running generation: 355, population size: 1

***** Generation 355 : 0
**Parent Variant: [Variant id: 709, #gens: 277, #ops: 0, parent:-]

--Child created id: 710
--Creating new operations for variant [Variant id: 710, #gens: 277, #ops: 0, parent:709]
---analyzing modificationPoint position: 26
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 710, #gens: 276, #ops: 1, parent:709] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 710
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-710/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(355): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (709(f=1.0), 710(f=1.0), )
Selected to next generation: IDs2--> (709(f=1.0), )
----------Running generation: 356, population size: 1

***** Generation 356 : 0
**Parent Variant: [Variant id: 711, #gens: 277, #ops: 0, parent:-]

--Child created id: 712
--Creating new operations for variant [Variant id: 712, #gens: 277, #ops: 0, parent:711]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 89
---modifPoint 2 not mutation generated in  // full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...]
---analyzing modificationPoint position: 40
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 80
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 4 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 86
location: ProperBigFractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 712, #gens: 276, #ops: 1, parent:711] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 712
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-712/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(356): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (711(f=1.0), 712(f=1.0), )
Selected to next generation: IDs2--> (711(f=1.0), )
----------Running generation: 357, population size: 1

***** Generation 357 : 0
**Parent Variant: [Variant id: 713, #gens: 277, #ops: 0, parent:-]

--Child created id: 714
--Creating new operations for variant [Variant id: 714, #gens: 277, #ops: 0, parent:713]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 714, #gens: 278, #ops: 1, parent:713] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 714
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-714/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(357): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (713(f=1.0), 714(f=1.0), )
Selected to next generation: IDs2--> (713(f=1.0), )
----------Running generation: 358, population size: 1

***** Generation 358 : 0
**Parent Variant: [Variant id: 715, #gens: 277, #ops: 0, parent:-]

--Child created id: 716
--Creating new operations for variant [Variant id: 716, #gens: 277, #ops: 0, parent:715]
---analyzing modificationPoint position: 38
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 716, #gens: 276, #ops: 1, parent:715] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 716
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-716/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(358): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (715(f=1.0), 716(f=1.0), )
Selected to next generation: IDs2--> (715(f=1.0), )
----------Running generation: 359, population size: 1

***** Generation 359 : 0
**Parent Variant: [Variant id: 717, #gens: 277, #ops: 0, parent:-]

--Child created id: 718
--Creating new operations for variant [Variant id: 718, #gens: 277, #ops: 0, parent:717]
---analyzing modificationPoint position: 141
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [begin, length, values]
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java174
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return test(values, begin, length) ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 174, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return test(values, begin, length) ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 718, #gens: 278, #ops: 1, parent:717] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 718
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-718/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(359): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return test(values, begin, length) ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (717(f=1.0), 718(f=1.0), )
Selected to next generation: IDs2--> (717(f=1.0), )
----------Running generation: 360, population size: 1

***** Generation 360 : 0
**Parent Variant: [Variant id: 719, #gens: 277, #ops: 0, parent:-]

--Child created id: 720
--Creating new operations for variant [Variant id: 720, #gens: 277, #ops: 0, parent:719]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 45
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 63
---modifPoint 2 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 720, #gens: 276, #ops: 1, parent:719] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 720
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-720/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(360): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (719(f=1.0), 720(f=1.0), )
Selected to next generation: IDs2--> (719(f=1.0), )
----------Running generation: 361, population size: 1

***** Generation 361 : 0
**Parent Variant: [Variant id: 721, #gens: 277, #ops: 0, parent:-]

--Child created id: 722
--Creating new operations for variant [Variant id: 722, #gens: 277, #ops: 0, parent:721]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 138
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; }
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 722, #gens: 276, #ops: 1, parent:721] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 722
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-722/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(361): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (721(f=1.0), 722(f=1.0), )
Selected to next generation: IDs2--> (721(f=1.0), )
----------Running generation: 362, population size: 1

***** Generation 362 : 0
**Parent Variant: [Variant id: 723, #gens: 277, #ops: 0, parent:-]

--Child created id: 724
--Creating new operations for variant [Variant id: 724, #gens: 277, #ops: 0, parent:723]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 77
location: AbstractFormat.java165
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 724, #gens: 276, #ops: 1, parent:723] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 724
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-724/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(362): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (723(f=1.0), 724(f=1.0), )
Selected to next generation: IDs2--> (723(f=1.0), )
----------Running generation: 363, population size: 1

***** Generation 363 : 0
**Parent Variant: [Variant id: 725, #gens: 277, #ops: 0, parent:-]

--Child created id: 726
--Creating new operations for variant [Variant id: 726, #gens: 277, #ops: 0, parent:725]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 126
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [sum, values, weights, begin, length, sumw]
--> var from patch: sum spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: weights spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: sumw spoon.support.reflect.code.CtVariableReadImpl
location: Mean.java215
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return xbarw + (correction / sumw) ` -topatch--> `double xbarw = sum.evaluate(values, weights, begin, length) / sumw` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.stat.descriptive.moment.Mean line: 215, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return xbarw + (correction / sumw) ` -topatch--> `double xbarw = sum.evaluate(values, weights, begin, length) / sumw` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 726, #gens: 278, #ops: 1, parent:725] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 726, errors: [Mean.java:215: error: variable xbarw is already defined in method evaluate(double[],double[],int,int)
			} 			double xbarw = sum.evaluate(values, weights, begin, length) / sumw;
			  			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(363): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return xbarw + (correction / sumw) ` -topatch--> `double xbarw = sum.evaluate(values, weights, begin, length) / sumw` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (725(f=1.0), 726(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (725(f=1.0), )
----------Running generation: 364, population size: 1

***** Generation 364 : 0
**Parent Variant: [Variant id: 727, #gens: 277, #ops: 0, parent:-]

--Child created id: 728
--Creating new operations for variant [Variant id: 728, #gens: 277, #ops: 0, parent:727]
---analyzing modificationPoint position: 33
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 728, #gens: 276, #ops: 1, parent:727] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 728
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-728/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(364): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (727(f=1.0), 728(f=1.0), )
Selected to next generation: IDs2--> (727(f=1.0), )
----------Running generation: 365, population size: 1

***** Generation 365 : 0
**Parent Variant: [Variant id: 729, #gens: 277, #ops: 0, parent:-]

--Child created id: 730
--Creating new operations for variant [Variant id: 730, #gens: 277, #ops: 0, parent:729]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 69
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 1 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 162
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 2 not mutation generated in  this.numerator = num
---analyzing modificationPoint position: 57
---modifPoint 3 not mutation generated in  return ret
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 4 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 0
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 127
location: BigFraction.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 730, #gens: 276, #ops: 1, parent:729] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 730
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-730/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(365): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (729(f=1.0), 730(f=1.0), )
Selected to next generation: IDs2--> (729(f=1.0), )
----------Running generation: 366, population size: 1

***** Generation 366 : 0
**Parent Variant: [Variant id: 731, #gens: 277, #ops: 0, parent:-]

--Child created id: 732
--Creating new operations for variant [Variant id: 732, #gens: 277, #ops: 0, parent:731]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 55
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 732, #gens: 276, #ops: 1, parent:731] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 732
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-732/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(366): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (731(f=1.0), 732(f=1.0), )
Selected to next generation: IDs2--> (731(f=1.0), )
----------Running generation: 367, population size: 1

***** Generation 367 : 0
**Parent Variant: [Variant id: 733, #gens: 277, #ops: 0, parent:-]

--Child created id: 734
--Creating new operations for variant [Variant id: 734, #gens: 277, #ops: 0, parent:733]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 734, #gens: 276, #ops: 1, parent:733] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 734
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-734/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(367): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (733(f=1.0), 734(f=1.0), )
Selected to next generation: IDs2--> (733(f=1.0), )
----------Running generation: 368, population size: 1

***** Generation 368 : 0
**Parent Variant: [Variant id: 735, #gens: 277, #ops: 0, parent:-]

--Child created id: 736
--Creating new operations for variant [Variant id: 736, #gens: 277, #ops: 0, parent:735]
---analyzing modificationPoint position: 57
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 86
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 44
---modifPoint 2 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 736, #gens: 277, #ops: 1, parent:735] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 736
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-736/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(368): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (735(f=1.0), 736(f=1.0), )
Selected to next generation: IDs2--> (735(f=1.0), )
----------Running generation: 369, population size: 1

***** Generation 369 : 0
**Parent Variant: [Variant id: 737, #gens: 277, #ops: 0, parent:-]

--Child created id: 738
--Creating new operations for variant [Variant id: 738, #gens: 277, #ops: 0, parent:737]
---analyzing modificationPoint position: 103
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  // reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...]
---analyzing modificationPoint position: 108
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 65
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 738, #gens: 277, #ops: 1, parent:737] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 738, errors: [FractionFormat.java:226: error: variable initialIndex is already defined in method parse(java.lang.String,java.text.ParsePosition)
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		final int initialIndex = pos.getIndex();
		                                                                                       		          ^, FractionFormat.java:230: error: cannot find symbol
		if (num == null) {
		    ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(369): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (737(f=1.0), 738(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (737(f=1.0), )
----------Running generation: 370, population size: 1

***** Generation 370 : 0
**Parent Variant: [Variant id: 739, #gens: 277, #ops: 0, parent:-]

--Child created id: 740
--Creating new operations for variant [Variant id: 740, #gens: 277, #ops: 0, parent:739]
---analyzing modificationPoint position: 148
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: AbstractUnivariateStatistic.java160
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (weights[i] < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "weight array mus[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 160, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (weights[i] < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "weight array mus[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 740, #gens: 278, #ops: 1, parent:739] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 740, errors: [AbstractUnivariateStatistic.java:172: error: unreachable statement
			"weight array must contain at least one non-zero value"); 			if (weights[i] < 0) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("negative weight {0} at index {1} ", weights[i], i);} 			if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 				containsPositiveWeight = true;}} 		if (!containsPositiveWeight) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("weight array must contain at least one non-zero value");
			                                                          			^]
Ingredient counter is Zero
---Undoing: gnrtn(370): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (weights[i] < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "weight array mus[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (739(f=1.0), 740(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (739(f=1.0), )
----------Running generation: 371, population size: 1

***** Generation 371 : 0
**Parent Variant: [Variant id: 741, #gens: 277, #ops: 0, parent:-]

--Child created id: 742
--Creating new operations for variant [Variant id: 742, #gens: 277, #ops: 0, parent:741]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 108
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 3 not mutation generated in  return denominator
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 40
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 10
---modifPoint 6 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 7 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 61
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 8 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 742, #gens: 276, #ops: 1, parent:741] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child compiles: id 742
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-742/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(371): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (741(f=1.0), 742(f=1.0), )
Selected to next generation: IDs2--> (741(f=1.0), )
----------Running generation: 372, population size: 1

***** Generation 372 : 0
**Parent Variant: [Variant id: 743, #gens: 277, #ops: 0, parent:-]

--Child created id: 744
--Creating new operations for variant [Variant id: 744, #gens: 277, #ops: 0, parent:743]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 744, #gens: 276, #ops: 1, parent:743] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 744
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-744/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(372): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (743(f=1.0), 744(f=1.0), )
Selected to next generation: IDs2--> (743(f=1.0), )
----------Running generation: 373, population size: 1

***** Generation 373 : 0
**Parent Variant: [Variant id: 745, #gens: 277, #ops: 0, parent:-]

--Child created id: 746
--Creating new operations for variant [Variant id: 746, #gens: 277, #ops: 0, parent:745]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 28
---modifPoint 1 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [java.lang.System.err]
--> var from patch: java.lang.System.err spoon.support.reflect.code.CtFieldReadImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 746, #gens: 278, #ops: 1, parent:745] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 746, errors: [MathRuntimeException.java:187: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:213: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:213: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:213: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:213: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:213: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:213: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:213: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:213: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:213: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:214: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:214: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:214: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:214: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:214: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:214: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:216: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:217: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:218: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:219: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:220: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:220: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:221: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:221: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(373): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (745(f=1.0), 746(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (745(f=1.0), )
----------Running generation: 374, population size: 1

***** Generation 374 : 0
**Parent Variant: [Variant id: 747, #gens: 277, #ops: 0, parent:-]

--Child created id: 748
--Creating new operations for variant [Variant id: 748, #gens: 277, #ops: 0, parent:747]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 20
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 748, #gens: 276, #ops: 1, parent:747] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 748
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-748/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(374): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (747(f=1.0), 748(f=1.0), )
Selected to next generation: IDs2--> (747(f=1.0), )
----------Running generation: 375, population size: 1

***** Generation 375 : 0
**Parent Variant: [Variant id: 749, #gens: 277, #ops: 0, parent:-]

--Child created id: 750
--Creating new operations for variant [Variant id: 750, #gens: 277, #ops: 0, parent:749]
---analyzing modificationPoint position: 123
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  // Compute correction factor in second pass double correction = 0
---analyzing modificationPoint position: 17
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 750, #gens: 278, #ops: 1, parent:749] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 750, errors: [ProperFractionFormat.java:96: error: variable num is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		int num = fraction.getNumerator(); 		pos.setEndIndex(0); 		int num = fraction.getNumerator();
		                                   		                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(375): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (749(f=1.0), 750(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (749(f=1.0), )
----------Running generation: 376, population size: 1

***** Generation 376 : 0
**Parent Variant: [Variant id: 751, #gens: 277, #ops: 0, parent:-]

--Child created id: 752
--Creating new operations for variant [Variant id: 752, #gens: 277, #ops: 0, parent:751]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 752, #gens: 278, #ops: 1, parent:751] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 752
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-752/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(376): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (751(f=1.0), 752(f=1.0), )
Selected to next generation: IDs2--> (751(f=1.0), )
----------Running generation: 377, population size: 1

***** Generation 377 : 0
**Parent Variant: [Variant id: 753, #gens: 277, #ops: 0, parent:-]

--Child created id: 754
--Creating new operations for variant [Variant id: 754, #gens: 277, #ops: 0, parent:753]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 29
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 39
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 754, #gens: 276, #ops: 1, parent:753] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 754
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-754/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(377): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (753(f=1.0), 754(f=1.0), )
Selected to next generation: IDs2--> (753(f=1.0), )
----------Running generation: 378, population size: 1

***** Generation 378 : 0
**Parent Variant: [Variant id: 755, #gens: 277, #ops: 0, parent:-]

--Child created id: 756
--Creating new operations for variant [Variant id: 756, #gens: 277, #ops: 0, parent:755]
---analyzing modificationPoint position: 64
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 756, #gens: 276, #ops: 1, parent:755] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 756
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-756/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(378): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (755(f=1.0), 756(f=1.0), )
Selected to next generation: IDs2--> (755(f=1.0), )
----------Running generation: 379, population size: 1

***** Generation 379 : 0
**Parent Variant: [Variant id: 757, #gens: 277, #ops: 0, parent:-]

--Child created id: 758
--Creating new operations for variant [Variant id: 758, #gens: 277, #ops: 0, parent:757]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 165
Templates availables293
Attempts Base Ingredients  1 total 293
vars from patch []
location: MathUtils.java629
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "Cannot normalize[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 629, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "Cannot normalize[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 758, #gens: 278, #ops: 1, parent:757] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 758, errors: [MathUtils.java:1151: error: illegal start of type
		} 		if (k == 31) { 			throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31", p, q);} 		// B2. Initialize: u and v have been divided by 2^k and at least 		// one is odd. 		/* B3 */ 		int t = ((u & 1) == 1) ? v : -(u / 2); 		// t negative: u was odd, v may be even (t replaces v) 		// t positive: u was even, v is odd (t replaces u)
		  		^, MathUtils.java:1151: error: <identifier> expected
		} 		if (k == 31) { 			throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31", p, q);} 		// B2. Initialize: u and v have been divided by 2^k and at least 		// one is odd. 		/* B3 */ 		int t = ((u & 1) == 1) ? v : -(u / 2); 		// t negative: u was odd, v may be even (t replaces v) 		// t positive: u was even, v is odd (t replaces u)
		  		     ^, MathUtils.java:1152: error: illegal start of type
		do { 			/* assert u<0 && v<0; */ 			// B4/B3: cast out twos from t.
		^, MathUtils.java:1189: error: illegal start of type
		} 		if (k == 63) { 			throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63", p, q);} 		// B2. Initialize: u and v have been divided by 2^k and at least 		// one is odd. 		/* B3 */ 		long t = ((u & 1) == 1) ? v : -(u / 2); 		// t negative: u was odd, v may be even (t replaces v) 		// t positive: u was even, v is odd (t replaces u)
		  		^, MathUtils.java:1189: error: <identifier> expected
		} 		if (k == 63) { 			throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^63", p, q);} 		// B2. Initialize: u and v have been divided by 2^k and at least 		// one is odd. 		/* B3 */ 		long t = ((u & 1) == 1) ? v : -(u / 2); 		// t negative: u was odd, v may be even (t replaces v) 		// t positive: u was even, v is odd (t replaces u)
		  		     ^, MathUtils.java:1190: error: illegal start of type
		do { 			/* assert u<0 && v<0; */ 			// B4/B3: cast out twos from t.
		^, MathUtils.java:1341: error: illegal start of expression
	 * Get the next machine representable number after a number, moving
	 ^, MathUtils.java:1341: error: ';' expected
	 * Get the next machine representable number after a number, moving
	      ^, MathUtils.java:1341: error: ';' expected
	 * Get the next machine representable number after a number, moving
	               ^, MathUtils.java:1341: error: ';' expected
	 * Get the next machine representable number after a number, moving
	                                     ^, MathUtils.java:1341: error: ';' expected
	 * Get the next machine representable number after a number, moving
	                                                  ^, MathUtils.java:1341: error: ';' expected
	 * Get the next machine representable number after a number, moving
	                                                                   ^, MathUtils.java:1342: error: ';' expected
	 * in the direction of another number.
	         ^, MathUtils.java:1342: error: ';' expected
	 * in the direction of another number.
	                      ^, MathUtils.java:1342: error: ';' expected
	 * in the direction of another number.
	                                     ^, MathUtils.java:1344: error: illegal start of expression
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	 ^, MathUtils.java:1344: error: illegal start of expression
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                      ^, MathUtils.java:1344: error: not a statement
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                           ^, MathUtils.java:1344: error: ';' expected
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                               ^, MathUtils.java:1344: error: ';' expected
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                                            ^, MathUtils.java:1344: error: ';' expected
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                                                     ^, MathUtils.java:1344: error: ';' expected
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                                                               ^, MathUtils.java:1344: error: illegal start of type
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                                                                ^, MathUtils.java:1344: error: illegal start of expression
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                                                                      ^, MathUtils.java:1344: error: not a statement
	 * If <code>direction</code> is greater than or equal to<code>d</code>,
	                                                                     ^, MathUtils.java:1345: error: ';' expected
	 * the smallest machine representable number strictly greater than
	               ^, MathUtils.java:1345: error: ';' expected
	 * the smallest machine representable number strictly greater than
	                                     ^, MathUtils.java:1345: error: ';' expected
	 * the smallest machine representable number strictly greater than
	                                                     ^, MathUtils.java:1345: error: ';' expected
	 * the smallest machine representable number strictly greater than
	                                                                  ^, MathUtils.java:1346: error: illegal start of expression
	 * <code>d</code> is returned; otherwise the largest representable number
	         ^, MathUtils.java:1346: error: illegal start of type
	 * <code>d</code> is returned; otherwise the largest representable number
	           ^, MathUtils.java:1346: error: not a statement
	 * <code>d</code> is returned; otherwise the largest representable number
	          ^, MathUtils.java:1346: error: not a statement
	 * <code>d</code> is returned; otherwise the largest representable number
	                ^, MathUtils.java:1346: error: ';' expected
	 * <code>d</code> is returned; otherwise the largest representable number
	                    ^, MathUtils.java:1346: error: not a statement
	 * <code>d</code> is returned; otherwise the largest representable number
	                     ^, MathUtils.java:1346: error: ';' expected
	 * <code>d</code> is returned; otherwise the largest representable number
	                                            ^, MathUtils.java:1346: error: ';' expected
	 * <code>d</code> is returned; otherwise the largest representable number
	                                                                  ^, MathUtils.java:1347: error: not a statement
	 * strictly less than <code>d</code> is returned.</p>
	 ^, MathUtils.java:1347: error: ';' expected
	 * strictly less than <code>d</code> is returned.</p>
	           ^, MathUtils.java:1347: error: ';' expected
	 * strictly less than <code>d</code> is returned.</p>
	                     ^, MathUtils.java:1347: error: illegal start of expression
	 * strictly less than <code>d</code> is returned.</p>
	                            ^, MathUtils.java:1347: error: illegal start of type
	 * strictly less than <code>d</code> is returned.</p>
	                              ^, MathUtils.java:1347: error: not a statement
	 * strictly less than <code>d</code> is returned.</p>
	                             ^, MathUtils.java:1347: error: not a statement
	 * strictly less than <code>d</code> is returned.</p>
	                                   ^, MathUtils.java:1347: error: ';' expected
	 * strictly less than <code>d</code> is returned.</p>
	                                       ^, MathUtils.java:1347: error: illegal start of type
	 * strictly less than <code>d</code> is returned.</p>
	                                                  ^, MathUtils.java:1348: error: illegal start of expression
	 * <p>
	 ^, MathUtils.java:1349: error: illegal start of expression
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	 ^, MathUtils.java:1349: error: illegal start of expression
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	              ^, MathUtils.java:1349: error: not a statement
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                   ^, MathUtils.java:1349: error: ';' expected
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                       ^, MathUtils.java:1349: error: ';' expected
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                              ^, MathUtils.java:1349: error: not a statement
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                               ^, MathUtils.java:1349: error: ';' expected
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                                       ^, MathUtils.java:1349: error: ';' expected
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                                              ^, MathUtils.java:1349: error: ';' expected
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                                                                 ^, MathUtils.java:1349: error: illegal start of type
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                                                                   ^, MathUtils.java:1350: error: illegal start of expression
	 *
	 ^, MathUtils.java:1351: error: illegal start of expression
	 * @param d
	 ^, MathUtils.java:1351: error: illegal start of expression
	 * @param d
	   ^, MathUtils.java:1349: error: not a statement
	 * If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>
	                                                                     ^, MathUtils.java:1352: error: ';' expected
	 * 		base number
	   		    ^, MathUtils.java:1353: error: illegal start of expression
	 * @param direction
	   ^, MathUtils.java:1354: error: ',', ')', or '[' expected
	 * 		(the only important thing is whether
	   		         ^, MathUtils.java:1354: error: not a statement
	 * 		(the only important thing is whether
	 ^, MathUtils.java:1354: error: ';' expected
	 * 		(the only important thing is whether
	   		                   ^, MathUtils.java:1354: error: ';' expected
	 * 		(the only important thing is whether
	   		                            ^, MathUtils.java:1355: error: not a statement
	 * 		direction is greater or smaller than d)
	 ^, MathUtils.java:1355: error: ';' expected
	 * 		direction is greater or smaller than d)
	   		         ^, MathUtils.java:1355: error: ';' expected
	 * 		direction is greater or smaller than d)
	   		                    ^, MathUtils.java:1355: error: ';' expected
	 * 		direction is greater or smaller than d)
	   		                               ^, MathUtils.java:1355: error: ';' expected
	 * 		direction is greater or smaller than d)
	   		                                      ^, MathUtils.java:1356: error: <identifier> expected
	 * @return the next machine representable number in the specified direction
	    ^, MathUtils.java:1356: error: ';' expected
	 * @return the next machine representable number in the specified direction
	              ^, MathUtils.java:1356: error: ';' expected
	 * @return the next machine representable number in the specified direction
	                           ^, MathUtils.java:1356: error: ';' expected
	 * @return the next machine representable number in the specified direction
	                                                ^, MathUtils.java:1356: error: ';' expected
	 * @return the next machine representable number in the specified direction
	                                                       ^, MathUtils.java:1356: error: ';' expected
	 * @return the next machine representable number in the specified direction
	                                                                           ^, MathUtils.java:1357: error: illegal start of type
	 * @since 1.2
	          ^, MathUtils.java:1358: error: illegal start of expression
	 */ 	public static double nextAfter(double d, double direction) { 		// handling of some important special cases
	    	^, MathUtils.java:1340: error: 'else' without 'if'
			if (a <= (java.lang.Long.MAX_VALUE / b)) { 				ret = a * b;} else { 				throw new java.lang.ArithmeticException(msg);}} else { 			// assert a == 0 			ret = 0;} 		return ret;} 	/**
			                                           				                     				                                                ^, MathUtils.java:1360: error: illegal start of type
			if (mantissa == 0xfffffffffffffL) { 				return java.lang.Double.longBitsToDouble(sign | (exponent + 0x10000000000000L));} else { 				return java.lang.Double.longBitsToDouble((sign | exponent) | (mantissa + 1));}} else // we should decrease the mantissa
			                                    				                                                                                         				                                                                                ^, MathUtils.java:1361: error: <identifier> expected
		if (mantissa == 0L) { 			return java.lang.Double.longBitsToDouble((sign | (exponent - 0x10000000000000L)) | 0xfffffffffffffL);} else { 			return java.lang.Double.longBitsToDouble((sign | exponent) | (mantissa - 1));}} 	/**
		            ^, MathUtils.java:1361: error: illegal start of type
		if (mantissa == 0L) { 			return java.lang.Double.longBitsToDouble((sign | (exponent - 0x10000000000000L)) | 0xfffffffffffffL);} else { 			return java.lang.Double.longBitsToDouble((sign | exponent) | (mantissa - 1));}} 	/**
		                      			                                                                                                       ^, MathUtils.java:1371: error: class, interface, or enum expected
	 */ 	public static double scalb(final double d, final int scaleFactor) { 		// handling of some important special cases
	    	              ^, MathUtils.java:1371: error: class, interface, or enum expected
	 */ 	public static double scalb(final double d, final int scaleFactor) { 		// handling of some important special cases
	    	                                 ^, MathUtils.java:1371: error: class, interface, or enum expected
	 */ 	public static double scalb(final double d, final int scaleFactor) { 		// handling of some important special cases
	    	                                                 ^, MathUtils.java:1372: error: class, interface, or enum expected
		if (((d == 0) || java.lang.Double.isNaN(d)) || java.lang.Double.isInfinite(d)) { 			return d;} 		// split the double in raw components 		final long bits = java.lang.Double.doubleToLongBits(d); 		final long exponent = bits & 0x7ff0000000000000L; 		final long rest = bits & 0x800fffffffffffffL; 		// shift the exponent 		final long newBits = rest | (exponent + (((long) (scaleFactor)) << 52)); 		return java.lang.Double.longBitsToDouble(newBits);} 	/**
		                                                                                 			         ^, MathUtils.java:1376: error: class, interface, or enum expected
	 *   <li>normalize an angle between 0 and 2&pi;:<br/>
	                                               ^, MathUtils.java:1377: error: class, interface, or enum expected
	 *       <code>a = MathUtils.normalizeAngle(a, Math.PI);</code></li>
	                                                        ^, MathUtils.java:1378: error: class, interface, or enum expected
	 *   <li>normalize an angle between -&pi; and +&pi;<br/>
	                                          ^, MathUtils.java:1378: error: class, interface, or enum expected
	 *   <li>normalize an angle between -&pi; and +&pi;<br/>
	                                                   ^, MathUtils.java:1379: error: class, interface, or enum expected
	 *       <code>a = MathUtils.normalizeAngle(a, 0.0);</code></li>
	                                                    ^, MathUtils.java:1381: error: class, interface, or enum expected
	 *       <code>angle = MathUtils.normalizeAngle(end, start) - start;</code></li>
	                                                                    ^, MathUtils.java:1383: error: class, interface, or enum expected
	 * <p>Note that due to numerical accuracy and since &pi; cannot be represented
	                                                         ^, MathUtils.java:1387: error: class, interface, or enum expected
	 * @param a
	          ^, MathUtils.java:1389: error: class, interface, or enum expected
	 * @param center
	          ^, MathUtils.java:1390: error: class, interface, or enum expected
	 * 		center of the desired 2&pi; interval for the result
	   		                            ^, MathUtils.java:1391: error: <identifier> expected
	 * @return a-2k&pi; with integer k and center-&pi; &lt;= a-2k&pi; &lt;= center+&pi;
	    ^, MathUtils.java:1391: error: class, interface, or enum expected
	 * @return a-2k&pi; with integer k and center-&pi; &lt;= a-2k&pi; &lt;= center+&pi;
	                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(379): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "Cannot normalize[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (757(f=1.0), 758(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (757(f=1.0), )
----------Running generation: 380, population size: 1

***** Generation 380 : 0
**Parent Variant: [Variant id: 759, #gens: 277, #ops: 0, parent:-]

--Child created id: 760
--Creating new operations for variant [Variant id: 760, #gens: 277, #ops: 0, parent:759]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 106
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 1 not mutation generated in  // reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java118
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 118, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 760, #gens: 277, #ops: 1, parent:759] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 760
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-760/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(380): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (759(f=1.0), 760(f=1.0), )
Selected to next generation: IDs2--> (759(f=1.0), )
----------Running generation: 381, population size: 1

***** Generation 381 : 0
**Parent Variant: [Variant id: 761, #gens: 277, #ops: 0, parent:-]

--Child created id: 762
--Creating new operations for variant [Variant id: 762, #gens: 277, #ops: 0, parent:761]
---analyzing modificationPoint position: 40
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 140
location: AbstractUnivariateStatistic.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 762, #gens: 276, #ops: 1, parent:761] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 762
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-762/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(381): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (761(f=1.0), 762(f=1.0), )
Selected to next generation: IDs2--> (761(f=1.0), )
----------Running generation: 382, population size: 1

***** Generation 382 : 0
**Parent Variant: [Variant id: 763, #gens: 277, #ops: 0, parent:-]

--Child created id: 764
--Creating new operations for variant [Variant id: 764, #gens: 277, #ops: 0, parent:763]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 89
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [f, initial, yInitial, max, yMax]
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initial spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yInitial spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yMax spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java138
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, initial, yInitial, max, yMax, initial, yInitial)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 138, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, initial, yInitial, max, yMax, initial, yInitial)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 764, #gens: 277, #ops: 1, parent:763] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 764
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-764/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(382): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, initial, yInitial, max, yMax, initial, yInitial)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (763(f=1.0), 764(f=1.0), )
Selected to next generation: IDs2--> (763(f=1.0), )
----------Running generation: 383, population size: 1

***** Generation 383 : 0
**Parent Variant: [Variant id: 765, #gens: 277, #ops: 0, parent:-]

--Child created id: 766
--Creating new operations for variant [Variant id: 766, #gens: 277, #ops: 0, parent:765]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 31
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 766, #gens: 278, #ops: 1, parent:765] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 766, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(383): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (765(f=1.0), 766(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (765(f=1.0), )
----------Running generation: 384, population size: 1

***** Generation 384 : 0
**Parent Variant: [Variant id: 767, #gens: 277, #ops: 0, parent:-]

--Child created id: 768
--Creating new operations for variant [Variant id: 768, #gens: 277, #ops: 0, parent:767]
---analyzing modificationPoint position: 78
location: AbstractFormat.java168
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 768, #gens: 276, #ops: 1, parent:767] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 768, errors: [AbstractFormat.java:170: error: variable c might not have been initialized
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(384): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (767(f=1.0), 768(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (767(f=1.0), )
----------Running generation: 385, population size: 1

***** Generation 385 : 0
**Parent Variant: [Variant id: 769, #gens: 277, #ops: 0, parent:-]

--Child created id: 770
--Creating new operations for variant [Variant id: 770, #gens: 277, #ops: 0, parent:769]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 101
---modifPoint 1 not mutation generated in  // return the first endpoint if it is good enough double yMin = f.value(min)
---analyzing modificationPoint position: 45
---modifPoint 2 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
vars from patch []
location: MathRuntimeException.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String argument = "https://issues.apache.org/jira/browse/MATH"` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String argument = "https://issues.apache.org/jira/browse/MATH"` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 770, #gens: 277, #ops: 1, parent:769] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 770, errors: [MathRuntimeException.java:506: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:532: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:532: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:532: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:532: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:532: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:532: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:532: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:532: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:532: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:533: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:533: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:533: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:533: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:533: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:533: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:535: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:536: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:537: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:538: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:539: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:539: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:540: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:540: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(385): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String argument = "https://issues.apache.org/jira/browse/MATH"` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (769(f=1.0), 770(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (769(f=1.0), )
----------Running generation: 386, population size: 1

***** Generation 386 : 0
**Parent Variant: [Variant id: 771, #gens: 277, #ops: 0, parent:-]

--Child created id: 772
--Creating new operations for variant [Variant id: 772, #gens: 277, #ops: 0, parent:771]
---analyzing modificationPoint position: 42
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 772, #gens: 276, #ops: 1, parent:771] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 772
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-772/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(386): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (771(f=1.0), 772(f=1.0), )
Selected to next generation: IDs2--> (771(f=1.0), )
----------Running generation: 387, population size: 1

***** Generation 387 : 0
**Parent Variant: [Variant id: 773, #gens: 277, #ops: 0, parent:-]

--Child created id: 774
--Creating new operations for variant [Variant id: 774, #gens: 277, #ops: 0, parent:773]
---analyzing modificationPoint position: 51
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 0 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 774, #gens: 277, #ops: 1, parent:773] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 774, errors: [AbstractFormat.java:93: error: call to this must be first statement in constructor
		nf.setMaximumFractionDigits(0); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(387): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (773(f=1.0), 774(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (773(f=1.0), )
----------Running generation: 388, population size: 1

***** Generation 388 : 0
**Parent Variant: [Variant id: 775, #gens: 277, #ops: 0, parent:-]

--Child created id: 776
--Creating new operations for variant [Variant id: 776, #gens: 277, #ops: 0, parent:775]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 23
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: MathRuntimeException.java128
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `// do nothing here` (spoon.support.reflect.code.CtCommentImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 128, pointed element: CtCommentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `// do nothing here` (spoon.support.reflect.code.CtCommentImpl) 

--Summary Creation: for variant [Variant id: 776, #gens: 278, #ops: 1, parent:775] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 776, errors: [MathRuntimeException.java:136: error: illegal start of expression
	 */ 	public java.lang.String getPattern() {
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(388): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `// do nothing here` (spoon.support.reflect.code.CtCommentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (775(f=1.0), 776(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (775(f=1.0), )
----------Running generation: 389, population size: 1

***** Generation 389 : 0
**Parent Variant: [Variant id: 777, #gens: 277, #ops: 0, parent:-]

--Child created id: 778
--Creating new operations for variant [Variant id: 778, #gens: 277, #ops: 0, parent:777]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 114
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); }
---analyzing modificationPoint position: 75
---modifPoint 2 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 66
location: FractionFormat.java229
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 778, #gens: 276, #ops: 1, parent:777] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 778
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-778/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(389): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (777(f=1.0), 778(f=1.0), )
Selected to next generation: IDs2--> (777(f=1.0), )
----------Running generation: 390, population size: 1

***** Generation 390 : 0
**Parent Variant: [Variant id: 779, #gens: 277, #ops: 0, parent:-]

--Child created id: 780
--Creating new operations for variant [Variant id: 780, #gens: 277, #ops: 0, parent:779]
---analyzing modificationPoint position: 68
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 58
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 2 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 4 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 10
---modifPoint 5 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 38
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 780, #gens: 276, #ops: 1, parent:779] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 780
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-780/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(390): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (779(f=1.0), 780(f=1.0), )
Selected to next generation: IDs2--> (779(f=1.0), )
----------Running generation: 391, population size: 1

***** Generation 391 : 0
**Parent Variant: [Variant id: 781, #gens: 277, #ops: 0, parent:-]

--Child created id: 782
--Creating new operations for variant [Variant id: 782, #gens: 277, #ops: 0, parent:781]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 782, #gens: 278, #ops: 1, parent:781] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 782
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-782/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(391): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (781(f=1.0), 782(f=1.0), )
Selected to next generation: IDs2--> (781(f=1.0), )
----------Running generation: 392, population size: 1

***** Generation 392 : 0
**Parent Variant: [Variant id: 783, #gens: 277, #ops: 0, parent:-]

--Child created id: 784
--Creating new operations for variant [Variant id: 784, #gens: 277, #ops: 0, parent:783]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 89
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [f, min, yMin, initial, yInitial]
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: min spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yMin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initial spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yInitial spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java138
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, min, yMin, initial, yInitial, min, yMin)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 138, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, min, yMin, initial, yInitial, min, yMin)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 784, #gens: 277, #ops: 1, parent:783] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 784
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-784/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(392): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return solve(f, min, yMin, initial, yInitial, min, yMin)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (783(f=1.0), 784(f=1.0), )
Selected to next generation: IDs2--> (783(f=1.0), )
----------Running generation: 393, population size: 1

***** Generation 393 : 0
**Parent Variant: [Variant id: 785, #gens: 277, #ops: 0, parent:-]

--Child created id: 786
--Creating new operations for variant [Variant id: 786, #gens: 277, #ops: 0, parent:785]
---analyzing modificationPoint position: 58
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 26
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 786, #gens: 276, #ops: 1, parent:785] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 786
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-786/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(393): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (785(f=1.0), 786(f=1.0), )
Selected to next generation: IDs2--> (785(f=1.0), )
----------Running generation: 394, population size: 1

***** Generation 394 : 0
**Parent Variant: [Variant id: 787, #gens: 277, #ops: 0, parent:-]

--Child created id: 788
--Creating new operations for variant [Variant id: 788, #gens: 277, #ops: 0, parent:787]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 20
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 48
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 788, #gens: 277, #ops: 1, parent:787] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 788, errors: [ProperFractionFormat.java:158: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:158: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:158: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:162: error: illegal start of type
		if (num == null) {
		^, ProperFractionFormat.java:162: error: <identifier> expected
		if (num == null) {
		       ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                ^, ProperFractionFormat.java:170: error: ';' expected
		if (num.intValue() < 0) {
		                  ^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                    ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		                     ^, ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(394): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (787(f=1.0), 788(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (787(f=1.0), )
----------Running generation: 395, population size: 1

***** Generation 395 : 0
**Parent Variant: [Variant id: 789, #gens: 277, #ops: 0, parent:-]

--Child created id: 790
--Creating new operations for variant [Variant id: 790, #gens: 277, #ops: 0, parent:789]
---analyzing modificationPoint position: 127
location: BigFraction.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 790, #gens: 276, #ops: 1, parent:789] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 790
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-790/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(395): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("n[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (789(f=1.0), 790(f=1.0), )
Selected to next generation: IDs2--> (789(f=1.0), )
----------Running generation: 396, population size: 1

***** Generation 396 : 0
**Parent Variant: [Variant id: 791, #gens: 277, #ops: 0, parent:-]

--Child created id: 792
--Creating new operations for variant [Variant id: 792, #gens: 277, #ops: 0, parent:791]
---analyzing modificationPoint position: 59
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 137, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 792, #gens: 277, #ops: 1, parent:791] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 792
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-792/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(396): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (791(f=1.0), 792(f=1.0), )
Selected to next generation: IDs2--> (791(f=1.0), )
----------Running generation: 397, population size: 1

***** Generation 397 : 0
**Parent Variant: [Variant id: 793, #gens: 277, #ops: 0, parent:-]

--Child created id: 794
--Creating new operations for variant [Variant id: 794, #gens: 277, #ops: 0, parent:793]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 56
---modifPoint 2 not mutation generated in  return ret
---analyzing modificationPoint position: 32
---modifPoint 3 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 34
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 155
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 5 not mutation generated in  double r = getRan().nextDouble()
---analyzing modificationPoint position: 39
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 794, #gens: 278, #ops: 1, parent:793] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 794
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-794/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(397): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (793(f=1.0), 794(f=1.0), )
Selected to next generation: IDs2--> (793(f=1.0), )
----------Running generation: 398, population size: 1

***** Generation 398 : 0
**Parent Variant: [Variant id: 795, #gens: 277, #ops: 0, parent:-]

--Child created id: 796
--Creating new operations for variant [Variant id: 796, #gens: 277, #ops: 0, parent:795]
---analyzing modificationPoint position: 38
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 796, #gens: 276, #ops: 1, parent:795] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 796
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-796/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(398): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (795(f=1.0), 796(f=1.0), )
Selected to next generation: IDs2--> (795(f=1.0), )
----------Running generation: 399, population size: 1

***** Generation 399 : 0
**Parent Variant: [Variant id: 797, #gens: 277, #ops: 0, parent:-]

--Child created id: 798
--Creating new operations for variant [Variant id: 798, #gens: 277, #ops: 0, parent:797]
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 798, #gens: 278, #ops: 1, parent:797] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 798, errors: [ProperFractionFormat.java:99: error: variable num is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		num = num % den; 		int num = fraction.getNumerator();
		                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(399): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (797(f=1.0), 798(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (797(f=1.0), )
----------Running generation: 400, population size: 1

***** Generation 400 : 0
**Parent Variant: [Variant id: 799, #gens: 277, #ops: 0, parent:-]

--Child created id: 800
--Creating new operations for variant [Variant id: 800, #gens: 277, #ops: 0, parent:799]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 71
location: AbstractFormat.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 800, #gens: 276, #ops: 1, parent:799] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 800
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-800/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(400): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (799(f=1.0), 800(f=1.0), )
Selected to next generation: IDs2--> (799(f=1.0), )
----------Running generation: 401, population size: 1

***** Generation 401 : 0
**Parent Variant: [Variant id: 801, #gens: 277, #ops: 0, parent:-]

--Child created id: 802
--Creating new operations for variant [Variant id: 802, #gens: 277, #ops: 0, parent:801]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 802, #gens: 276, #ops: 1, parent:801] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 802
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-802/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(401): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (801(f=1.0), 802(f=1.0), )
Selected to next generation: IDs2--> (801(f=1.0), )
----------Running generation: 402, population size: 1

***** Generation 402 : 0
**Parent Variant: [Variant id: 803, #gens: 277, #ops: 0, parent:-]

--Child created id: 804
--Creating new operations for variant [Variant id: 804, #gens: 277, #ops: 0, parent:803]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 804, #gens: 277, #ops: 1, parent:803] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 804
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-804/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(402): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (803(f=1.0), 804(f=1.0), )
Selected to next generation: IDs2--> (803(f=1.0), )
----------Running generation: 403, population size: 1

***** Generation 403 : 0
**Parent Variant: [Variant id: 805, #gens: 277, #ops: 0, parent:-]

--Child created id: 806
--Creating new operations for variant [Variant id: 806, #gens: 277, #ops: 0, parent:805]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 806, #gens: 278, #ops: 1, parent:805] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 806
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-806/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(403): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (805(f=1.0), 806(f=1.0), )
Selected to next generation: IDs2--> (805(f=1.0), )
----------Running generation: 404, population size: 1

***** Generation 404 : 0
**Parent Variant: [Variant id: 807, #gens: 277, #ops: 0, parent:-]

--Child created id: 808
--Creating new operations for variant [Variant id: 808, #gens: 277, #ops: 0, parent:807]
---analyzing modificationPoint position: 76
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 114
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch [denominator, numerator]
--> var from patch: denominator spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: numerator spoon.support.reflect.code.CtFieldReadImpl
location: BigFraction.java141
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(denominator, numerator)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 141, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(denominator, numerator)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 808, #gens: 278, #ops: 1, parent:807] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 808, errors: [BigFraction.java:1018: error: illegal start of expression
	 * Create a fraction given the double value.
	 ^, BigFraction.java:1018: error: ';' expected
	 * Create a fraction given the double value.
	         ^, BigFraction.java:1018: error: ';' expected
	 * Create a fraction given the double value.
	                    ^, BigFraction.java:1018: error: ';' expected
	 * Create a fraction given the double value.
	                              ^, BigFraction.java:1018: error: ';' expected
	 * Create a fraction given the double value.
	                                           ^, BigFraction.java:1020: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	 ^, BigFraction.java:1020: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	       ^, BigFraction.java:1020: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	                           ^, BigFraction.java:1020: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	                                ^, BigFraction.java:1020: error: illegal start of type
	 * This constructor behaves <em>differently</em> from
	                                            ^, BigFraction.java:1020: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                           ^, BigFraction.java:1021: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	   ^, BigFraction.java:1020: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                               ^, BigFraction.java:1021: error: illegal character: '#'
	 * {@link #BigFraction(double, double, int)}. It converts the
	          ^, BigFraction.java:1021: error: illegal start of type
	 * {@link #BigFraction(double, double, int)}. It converts the
	                      ^, BigFraction.java:1021: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                       ^, BigFraction.java:1021: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                             ^, BigFraction.java:1021: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                               ^, BigFraction.java:1021: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                     ^, BigFraction.java:1021: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                       ^, BigFraction.java:1021: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                          ^, BigFraction.java:1021: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                            ^, BigFraction.java:1021: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                                         ^, BigFraction.java:1022: error: '.class' expected
	 * double value exactly, considering its internal bits representation.
	          ^, BigFraction.java:1022: error: not a statement
	 * double value exactly, considering its internal bits representation.
	 ^, BigFraction.java:1022: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                    ^, BigFraction.java:1022: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                 ^, BigFraction.java:1022: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                                     ^, BigFraction.java:1023: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	            ^, BigFraction.java:1023: error: not a statement
	 * This does work for all values except NaN and infinities and does
	             ^, BigFraction.java:1023: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                 ^, BigFraction.java:1023: error: '(' expected
	 * This does work for all values except NaN and infinities and does
	                     ^, BigFraction.java:1023: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                ^, BigFraction.java:1023: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                       ^, BigFraction.java:1023: error: not a statement
	 * This does work for all values except NaN and infinities and does
	                                        ^, BigFraction.java:1023: error: ')' expected
	 * This does work for all values except NaN and infinities and does
	                                           ^, BigFraction.java:1023: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                          ^, BigFraction.java:1023: error: variable declaration not allowed here
	 * This does work for all values except NaN and infinities and does
	                                                ^, BigFraction.java:1023: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                                   ^, BigFraction.java:1024: error: ';' expected
	 * not requires any loop or convergence threshold.
	               ^, BigFraction.java:1024: error: ';' expected
	 * not requires any loop or convergence threshold.
	                        ^, BigFraction.java:1024: error: ';' expected
	 * not requires any loop or convergence threshold.
	                                       ^, BigFraction.java:1024: error: <identifier> expected
	 * not requires any loop or convergence threshold.
	                                                  ^, BigFraction.java:1025: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:1026: error: illegal start of expression
	 * <p>
	 ^, BigFraction.java:1027: error: illegal start of expression
	 * Since this conversion is exact and since double numbers are sometimes
	 ^, BigFraction.java:1025: error: not a statement
	 * </p>
	      ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	        ^, BigFraction.java:1027: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	         ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	             ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                           ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                     ^, BigFraction.java:1027: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	                                      ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                           ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                          ^, BigFraction.java:1027: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                                        ^, BigFraction.java:1028: error: not a statement
	 * approximated, the fraction created may seem strange in some cases. For example
	   ^, BigFraction.java:1028: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	               ^, BigFraction.java:1028: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                             ^, BigFraction.java:1028: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                         ^, BigFraction.java:1028: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                      ^, BigFraction.java:1028: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                              ^, BigFraction.java:1028: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                                                 ^, BigFraction.java:1029: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	           ^, BigFraction.java:1029: error: ';' expected
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                 ^, BigFraction.java:1029: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                            ^, BigFraction.java:1029: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                ^, BigFraction.java:1029: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                   ^, BigFraction.java:1030: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	      ^, BigFraction.java:1030: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	       ^, BigFraction.java:1030: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	               ^, BigFraction.java:1030: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                           ^, BigFraction.java:1030: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                            ^, BigFraction.java:1030: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                                    ^, BigFraction.java:1031: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	              ^, BigFraction.java:1031: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                            ^, BigFraction.java:1031: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                      ^, BigFraction.java:1031: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                      ^, BigFraction.java:1031: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                             ^, BigFraction.java:1031: error: not a statement
	 * because the double number passed to the constructor is not exactly 1/3
	                                                              ^, BigFraction.java:1031: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                                     ^, BigFraction.java:1032: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	    ^, BigFraction.java:1032: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	        ^, BigFraction.java:1032: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                      ^, BigFraction.java:1032: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                ^, BigFraction.java:1032: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                           ^, BigFraction.java:1032: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	                                            ^, BigFraction.java:1032: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                                   ^, BigFraction.java:1033: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:1034: error: illegal start of expression
	 *
	 ^, BigFraction.java:1035: error: illegal start of expression
	 * @see #BigFraction(double, double, int)
	 ^, BigFraction.java:1035: error: illegal character: '#'
	 * @see #BigFraction(double, double, int)
	        ^, BigFraction.java:1033: error: not a statement
	 * </p>
	      ^, BigFraction.java:1035: error: ';' expected
	 * @see #BigFraction(double, double, int)
	       ^, BigFraction.java:1035: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                           ^, BigFraction.java:1035: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                   ^, BigFraction.java:1035: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                        ^, BigFraction.java:1036: error: illegal start of expression
	 * @param value
	   ^, BigFraction.java:1037: error: not a statement
	 * 		the double value to convert to a fraction.
	 ^, BigFraction.java:1037: error: ';' expected
	 * 		the double value to convert to a fraction.
	   		   ^]
Ingredient counter is Zero
---Undoing: gnrtn(404): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(denominator, numerator)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (807(f=1.0), 808(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (807(f=1.0), )
----------Running generation: 405, population size: 1

***** Generation 405 : 0
**Parent Variant: [Variant id: 809, #gens: 277, #ops: 0, parent:-]

--Child created id: 810
--Creating new operations for variant [Variant id: 810, #gens: 277, #ops: 0, parent:809]
---analyzing modificationPoint position: 267
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [length]
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java83
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "length cannot be[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 83, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "length cannot be[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 810, #gens: 278, #ops: 1, parent:809] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 810, errors: [AbstractUnivariateStatistic.java:91: error: unreachable statement
		"length cannot be negative ({0})", length); 		if (begin < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})", begin);} 		if (length < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})", length);
		                                            		^]
Ingredient counter is Zero
---Undoing: gnrtn(405): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "length cannot be[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (809(f=1.0), 810(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (809(f=1.0), )
----------Running generation: 406, population size: 1

***** Generation 406 : 0
**Parent Variant: [Variant id: 811, #gens: 277, #ops: 0, parent:-]

--Child created id: 812
--Creating new operations for variant [Variant id: 812, #gens: 277, #ops: 0, parent:811]
---analyzing modificationPoint position: 122
location: UnivariateRealSolverImpl.java209
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 812, #gens: 276, #ops: 1, parent:811] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 812
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-812/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(406): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (811(f=1.0), 812(f=1.0), )
Selected to next generation: IDs2--> (811(f=1.0), )
----------Running generation: 407, population size: 1

***** Generation 407 : 0
**Parent Variant: [Variant id: 813, #gens: 277, #ops: 0, parent:-]

--Child created id: 814
--Creating new operations for variant [Variant id: 814, #gens: 277, #ops: 0, parent:813]
---analyzing modificationPoint position: 67
Templates availables49
Attempts Base Ingredients  1 total 49
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 814, #gens: 278, #ops: 1, parent:813] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 814
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-814/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(407): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (813(f=1.0), 814(f=1.0), )
Selected to next generation: IDs2--> (813(f=1.0), )
----------Running generation: 408, population size: 1

***** Generation 408 : 0
**Parent Variant: [Variant id: 815, #gens: 277, #ops: 0, parent:-]

--Child created id: 816
--Creating new operations for variant [Variant id: 816, #gens: 277, #ops: 0, parent:815]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 45
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 110, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 816, #gens: 278, #ops: 1, parent:815] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 816, errors: [ProperFractionFormat.java:109: error: variable whole is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		pos); 		int whole = num / den;
		      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(408): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (815(f=1.0), 816(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (815(f=1.0), )
----------Running generation: 409, population size: 1

***** Generation 409 : 0
**Parent Variant: [Variant id: 817, #gens: 277, #ops: 0, parent:-]

--Child created id: 818
--Creating new operations for variant [Variant id: 818, #gens: 277, #ops: 0, parent:817]
---analyzing modificationPoint position: 121
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [moment]
--> var from patch: moment spoon.support.reflect.code.CtFieldWriteImpl
location: Mean.java208
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xbarw = sum.evaluate(values, weights, begin, length) / sumw ` -topatch--> `moment = new org.apache.commons.math.stat.descriptive.moment.FirstMoment()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.stat.descriptive.moment.Mean line: 208, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xbarw = sum.evaluate(values, weights, begin, length) / sumw ` -topatch--> `moment = new org.apache.commons.math.stat.descriptive.moment.FirstMoment()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 818, #gens: 278, #ops: 1, parent:817] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 818
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-818/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(409): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xbarw = sum.evaluate(values, weights, begin, length) / sumw ` -topatch--> `moment = new org.apache.commons.math.stat.descriptive.moment.FirstMoment()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (817(f=1.0), 818(f=1.0), )
Selected to next generation: IDs2--> (817(f=1.0), )
----------Running generation: 410, population size: 1

***** Generation 410 : 0
**Parent Variant: [Variant id: 819, #gens: 277, #ops: 0, parent:-]

--Child created id: 820
--Creating new operations for variant [Variant id: 820, #gens: 277, #ops: 0, parent:819]
---analyzing modificationPoint position: 28
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 19
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 820, #gens: 277, #ops: 1, parent:819] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 820
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-820/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(410): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (819(f=1.0), 820(f=1.0), )
Selected to next generation: IDs2--> (819(f=1.0), )
----------Running generation: 411, population size: 1

***** Generation 411 : 0
**Parent Variant: [Variant id: 821, #gens: 277, #ops: 0, parent:-]

--Child created id: 822
--Creating new operations for variant [Variant id: 822, #gens: 277, #ops: 0, parent:821]
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 206
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 1 not mutation generated in  x2 = x0
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 822, #gens: 276, #ops: 1, parent:821] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 822
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-822/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(411): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (821(f=1.0), 822(f=1.0), )
Selected to next generation: IDs2--> (821(f=1.0), )
----------Running generation: 412, population size: 1

***** Generation 412 : 0
**Parent Variant: [Variant id: 823, #gens: 277, #ops: 0, parent:-]

--Child created id: 824
--Creating new operations for variant [Variant id: 824, #gens: 277, #ops: 0, parent:823]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 58
---modifPoint 1 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 67
---modifPoint 2 not mutation generated in  return denominator
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 824, #gens: 278, #ops: 1, parent:823] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 824, errors: [AbstractFormat.java:103: error: non-static variable denominatorFormat cannot be referenced from a static context
		return denominatorFormat; 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(412): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (823(f=1.0), 824(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (823(f=1.0), )
----------Running generation: 413, population size: 1

***** Generation 413 : 0
**Parent Variant: [Variant id: 825, #gens: 277, #ops: 0, parent:-]

--Child created id: 826
--Creating new operations for variant [Variant id: 826, #gens: 277, #ops: 0, parent:825]
---analyzing modificationPoint position: 25
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 86
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 826, #gens: 278, #ops: 1, parent:825] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 826
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-826/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(413): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (825(f=1.0), 826(f=1.0), )
Selected to next generation: IDs2--> (825(f=1.0), )
----------Running generation: 414, population size: 1

***** Generation 414 : 0
**Parent Variant: [Variant id: 827, #gens: 277, #ops: 0, parent:-]

--Child created id: 828
--Creating new operations for variant [Variant id: 828, #gens: 277, #ops: 0, parent:827]
---analyzing modificationPoint position: 70
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [this.arguments]
--> var from patch: this.arguments spoon.support.reflect.code.CtFieldWriteImpl
SameName: final java.lang.Object... arguments
SameName: final java.lang.Object... arguments
Transforming shadowed variable in arguments = (arguments == null) ? new java.lang.Object[0] : arguments.clone()
location: MathRuntimeException.java466
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `arguments = (arguments == null) ? new java.lang.Object[0] : arguments.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 466, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `arguments = (arguments == null) ? new java.lang.Object[0] : arguments.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 828, #gens: 278, #ops: 1, parent:827] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 828, errors: [MathRuntimeException.java:467: error: final parameter arguments may not be assigned
	 */ 	public static java.text.ParseException createParseException(final int offset, final java.lang.String pattern, final java.lang.Object... arguments) { 		arguments = (arguments == null) ? new java.lang.Object[0] : arguments.clone(); 		return new java.text.ParseException(null, offset) {
	    	                                                                                                                                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(414): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `arguments = (arguments == null) ? new java.lang.Object[0] : arguments.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (827(f=1.0), 828(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (827(f=1.0), )
----------Running generation: 415, population size: 1

***** Generation 415 : 0
**Parent Variant: [Variant id: 829, #gens: 277, #ops: 0, parent:-]

--Child created id: 830
--Creating new operations for variant [Variant id: 830, #gens: 277, #ops: 0, parent:829]
---analyzing modificationPoint position: 63
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java222
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 830, #gens: 277, #ops: 1, parent:829] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 830, errors: [FractionFormat.java:241: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), FractionFormat.java:259: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(415): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (829(f=1.0), 830(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (829(f=1.0), )
----------Running generation: 416, population size: 1

***** Generation 416 : 0
**Parent Variant: [Variant id: 831, #gens: 277, #ops: 0, parent:-]

--Child created id: 832
--Creating new operations for variant [Variant id: 832, #gens: 277, #ops: 0, parent:831]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 832, #gens: 277, #ops: 1, parent:831] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 832
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-832/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(416): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (831(f=1.0), 832(f=1.0), )
Selected to next generation: IDs2--> (831(f=1.0), )
----------Running generation: 417, population size: 1

***** Generation 417 : 0
**Parent Variant: [Variant id: 833, #gens: 277, #ops: 0, parent:-]

--Child created id: 834
--Creating new operations for variant [Variant id: 834, #gens: 277, #ops: 0, parent:833]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 834, #gens: 277, #ops: 1, parent:833] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 834, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat; 		this.denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(417): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (833(f=1.0), 834(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (833(f=1.0), )
----------Running generation: 418, population size: 1

***** Generation 418 : 0
**Parent Variant: [Variant id: 835, #gens: 277, #ops: 0, parent:-]

--Child created id: 836
--Creating new operations for variant [Variant id: 836, #gens: 277, #ops: 0, parent:835]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 53
location: BigFractionFormat.java168
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 836, #gens: 276, #ops: 1, parent:835] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 836, errors: [BigFractionFormat.java:181: error: variable ret might not have been initialized
		return ret;
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(418): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (835(f=1.0), 836(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (835(f=1.0), )
----------Running generation: 419, population size: 1

***** Generation 419 : 0
**Parent Variant: [Variant id: 837, #gens: 277, #ops: 0, parent:-]

--Child created id: 838
--Creating new operations for variant [Variant id: 838, #gens: 277, #ops: 0, parent:837]
---analyzing modificationPoint position: 49
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 15
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 29
---modifPoint 2 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 35
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 838, #gens: 277, #ops: 1, parent:837] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 838
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-838/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(419): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (837(f=1.0), 838(f=1.0), )
Selected to next generation: IDs2--> (837(f=1.0), )
----------Running generation: 420, population size: 1

***** Generation 420 : 0
**Parent Variant: [Variant id: 839, #gens: 277, #ops: 0, parent:-]

--Child created id: 840
--Creating new operations for variant [Variant id: 840, #gens: 277, #ops: 0, parent:839]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 40
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 840, #gens: 276, #ops: 1, parent:839] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 840
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-840/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(420): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (839(f=1.0), 840(f=1.0), )
Selected to next generation: IDs2--> (839(f=1.0), )
----------Running generation: 421, population size: 1

***** Generation 421 : 0
**Parent Variant: [Variant id: 841, #gens: 277, #ops: 0, parent:-]

--Child created id: 842
--Creating new operations for variant [Variant id: 842, #gens: 277, #ops: 0, parent:841]
---analyzing modificationPoint position: 100
location: BrentSolver.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 842, #gens: 276, #ops: 1, parent:841] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 842
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-842/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 6] ,[]
-Valid?: |false|2|6|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(421): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (841(f=1.0), 842(f=2.0), )
Selected to next generation: IDs2--> (841(f=1.0), )
----------Running generation: 422, population size: 1

***** Generation 422 : 0
**Parent Variant: [Variant id: 843, #gens: 277, #ops: 0, parent:-]

--Child created id: 844
--Creating new operations for variant [Variant id: 844, #gens: 277, #ops: 0, parent:843]
---analyzing modificationPoint position: 89
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [result]
--> var from patch: result spoon.support.reflect.code.CtFieldReadImpl
location: BrentSolver.java138
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return result` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 138, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return result` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 844, #gens: 277, #ops: 1, parent:843] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 844
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-844/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(422): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `return result` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (843(f=1.0), 844(f=1.0), )
Selected to next generation: IDs2--> (843(f=1.0), )
----------Running generation: 423, population size: 1

***** Generation 423 : 0
**Parent Variant: [Variant id: 845, #gens: 277, #ops: 0, parent:-]

--Child created id: 846
--Creating new operations for variant [Variant id: 846, #gens: 277, #ops: 0, parent:845]
---analyzing modificationPoint position: 31
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 171
Templates availables293
Attempts Base Ingredients  1 total 293
---modifPoint 1 not mutation generated in  // B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]
---analyzing modificationPoint position: 72
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java149
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 149, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 846, #gens: 277, #ops: 1, parent:845] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 846, errors: [AbstractFormat.java:150: error: call to this must be first statement in constructor
	 */ 	protected static void parseAndIgnoreWhitespace(final java.lang.String source, final java.text.ParsePosition pos) { 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(423): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (845(f=1.0), 846(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (845(f=1.0), )
----------Running generation: 424, population size: 1

***** Generation 424 : 0
**Parent Variant: [Variant id: 847, #gens: 277, #ops: 0, parent:-]

--Child created id: 848
--Creating new operations for variant [Variant id: 848, #gens: 277, #ops: 0, parent:847]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 848, #gens: 278, #ops: 1, parent:847] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 848, errors: [ProperFractionFormat.java:149: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		if (whole == null) { 			return wholeFormat;
		                     			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(424): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (847(f=1.0), 848(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (847(f=1.0), )
----------Running generation: 425, population size: 1

***** Generation 425 : 0
**Parent Variant: [Variant id: 849, #gens: 277, #ops: 0, parent:-]

--Child created id: 850
--Creating new operations for variant [Variant id: 850, #gens: 277, #ops: 0, parent:849]
---analyzing modificationPoint position: 28
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 59
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 10
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 56
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 3 not mutation generated in  return ret
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 850, #gens: 276, #ops: 1, parent:849] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 850
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-850/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(425): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (849(f=1.0), 850(f=1.0), )
Selected to next generation: IDs2--> (849(f=1.0), )
----------Running generation: 426, population size: 1

***** Generation 426 : 0
**Parent Variant: [Variant id: 851, #gens: 277, #ops: 0, parent:-]

--Child created id: 852
--Creating new operations for variant [Variant id: 852, #gens: 277, #ops: 0, parent:851]
---analyzing modificationPoint position: 128
location: BigFraction.java128
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("d[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 852, #gens: 276, #ops: 1, parent:851] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 852
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-852/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(426): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("d[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (851(f=1.0), 852(f=1.0), )
Selected to next generation: IDs2--> (851(f=1.0), )
----------Running generation: 427, population size: 1

***** Generation 427 : 0
**Parent Variant: [Variant id: 853, #gens: 277, #ops: 0, parent:-]

--Child created id: 854
--Creating new operations for variant [Variant id: 854, #gens: 277, #ops: 0, parent:853]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch []
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 854, #gens: 278, #ops: 1, parent:853] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 854, errors: [AbstractFormat.java:71: error: call to this must be first statement in constructor
		this.denominatorFormat = denominatorFormat; 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                            		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(427): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (853(f=1.0), 854(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (853(f=1.0), )
----------Running generation: 428, population size: 1

***** Generation 428 : 0
**Parent Variant: [Variant id: 855, #gens: 277, #ops: 0, parent:-]

--Child created id: 856
--Creating new operations for variant [Variant id: 856, #gens: 277, #ops: 0, parent:855]
---analyzing modificationPoint position: 165
Templates availables293
Attempts Base Ingredients  1 total 293
---modifPoint 0 not mutation generated in  // keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...]
---analyzing modificationPoint position: 134
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [sum]
--> var from patch: sum spoon.support.reflect.code.CtVariableReadImpl
location: Sum.java163
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `return sum` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.stat.descriptive.summary.Sum line: 163, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `return sum` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 856, #gens: 278, #ops: 1, parent:855] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 856, errors: [Sum.java:164: error: unreachable statement
			for (int i = begin; i < (begin + length); i++) {
			^]
Ingredient counter is Zero
---Undoing: gnrtn(428): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `return sum` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (855(f=1.0), 856(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (855(f=1.0), )
----------Running generation: 429, population size: 1

***** Generation 429 : 0
**Parent Variant: [Variant id: 857, #gens: 277, #ops: 0, parent:-]

--Child created id: 858
--Creating new operations for variant [Variant id: 858, #gens: 277, #ops: 0, parent:857]
---analyzing modificationPoint position: 162
location: Fraction.java290
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numerator = num ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 858, #gens: 276, #ops: 1, parent:857] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 858, errors: [Fraction.java:293: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(429): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numerator = num ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (857(f=1.0), 858(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (857(f=1.0), )
----------Running generation: 430, population size: 1

***** Generation 430 : 0
**Parent Variant: [Variant id: 859, #gens: 277, #ops: 0, parent:-]

--Child created id: 860
--Creating new operations for variant [Variant id: 860, #gens: 277, #ops: 0, parent:859]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 860, #gens: 276, #ops: 1, parent:859] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 860
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-860/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(430): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (859(f=1.0), 860(f=1.0), )
Selected to next generation: IDs2--> (859(f=1.0), )
----------Running generation: 431, population size: 1

***** Generation 431 : 0
**Parent Variant: [Variant id: 861, #gens: 277, #ops: 0, parent:-]

--Child created id: 862
--Creating new operations for variant [Variant id: 862, #gens: 277, #ops: 0, parent:861]
---analyzing modificationPoint position: 109
Templates availables29
Attempts Base Ingredients  1 total 29
vars from patch []
location: Fraction.java386
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numerator ` -topatch--> `return (37 * ((37 * 17) + getNumerator())) + getDenominator()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.Fraction line: 386, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numerator ` -topatch--> `return (37 * ((37 * 17) + getNumerator())) + getDenominator()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 862, #gens: 277, #ops: 1, parent:861] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 862
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-862/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(431): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numerator ` -topatch--> `return (37 * ((37 * 17) + getNumerator())) + getDenominator()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (861(f=1.0), 862(f=1.0), )
Selected to next generation: IDs2--> (861(f=1.0), )
----------Running generation: 432, population size: 1

***** Generation 432 : 0
**Parent Variant: [Variant id: 863, #gens: 277, #ops: 0, parent:-]

--Child created id: 864
--Creating new operations for variant [Variant id: 864, #gens: 277, #ops: 0, parent:863]
---analyzing modificationPoint position: 91
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java100
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 100, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 864, #gens: 278, #ops: 1, parent:863] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 864
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-864/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(432): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (863(f=1.0), 864(f=1.0), )
Selected to next generation: IDs2--> (863(f=1.0), )
----------Running generation: 433, population size: 1

***** Generation 433 : 0
**Parent Variant: [Variant id: 865, #gens: 277, #ops: 0, parent:-]

--Child created id: 866
--Creating new operations for variant [Variant id: 866, #gens: 277, #ops: 0, parent:865]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 866, #gens: 278, #ops: 1, parent:865] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 866, errors: [AbstractFormat.java:81: error: incompatible types: unexpected return value
		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault()); 		this.denominatorFormat = denominatorFormat;} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(433): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (865(f=1.0), 866(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (865(f=1.0), )
----------Running generation: 434, population size: 1

***** Generation 434 : 0
**Parent Variant: [Variant id: 867, #gens: 277, #ops: 0, parent:-]

--Child created id: 868
--Creating new operations for variant [Variant id: 868, #gens: 277, #ops: 0, parent:867]
---analyzing modificationPoint position: 45
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 138
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [values]
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java164
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `if (values == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 164, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `if (values == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 868, #gens: 277, #ops: 1, parent:867] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 868
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-868/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(434): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `if (values == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (867(f=1.0), 868(f=1.0), )
Selected to next generation: IDs2--> (867(f=1.0), )
----------Running generation: 435, population size: 1

***** Generation 435 : 0
**Parent Variant: [Variant id: 869, #gens: 277, #ops: 0, parent:-]

--Child created id: 870
--Creating new operations for variant [Variant id: 870, #gens: 277, #ops: 0, parent:869]
---analyzing modificationPoint position: 48
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
Attempts Base Ingredients  4 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 870, #gens: 277, #ops: 1, parent:869] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 870, errors: [ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                ^, ProperFractionFormat.java:170: error: ';' expected
		if (num.intValue() < 0) {
		                  ^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                    ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		                     ^, ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(435): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (869(f=1.0), 870(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (869(f=1.0), )
----------Running generation: 436, population size: 1

***** Generation 436 : 0
**Parent Variant: [Variant id: 871, #gens: 277, #ops: 0, parent:-]

--Child created id: 872
--Creating new operations for variant [Variant id: 872, #gens: 277, #ops: 0, parent:871]
---analyzing modificationPoint position: 44
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 83
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 74
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 3 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, pos, initialIndex]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 872, #gens: 278, #ops: 1, parent:871] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 872, errors: [ProperFractionFormat.java:229: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(436): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (871(f=1.0), 872(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (871(f=1.0), )
----------Running generation: 437, population size: 1

***** Generation 437 : 0
**Parent Variant: [Variant id: 873, #gens: 277, #ops: 0, parent:-]

--Child created id: 874
--Creating new operations for variant [Variant id: 874, #gens: 277, #ops: 0, parent:873]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 20
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 874, #gens: 276, #ops: 1, parent:873] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 874
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-874/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(437): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (873(f=1.0), 874(f=1.0), )
Selected to next generation: IDs2--> (873(f=1.0), )
----------Running generation: 438, population size: 1

***** Generation 438 : 0
**Parent Variant: [Variant id: 875, #gens: 277, #ops: 0, parent:-]

--Child created id: 876
--Creating new operations for variant [Variant id: 876, #gens: 277, #ops: 0, parent:875]
---analyzing modificationPoint position: 187
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  // Compute correction factor in second pass double correction = 0
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 67
---modifPoint 2 not mutation generated in  return denominator
---analyzing modificationPoint position: 130
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 3 not mutation generated in  if (java.math.BigInteger.ZERO.equals(num)) { 	numerator = java.math.BigInteger.ZERO; 	denominator = [...]
---analyzing modificationPoint position: 15
---modifPoint 4 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 101
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 5 not mutation generated in  // return the first endpoint if it is good enough double yMin = f.value(min)
---analyzing modificationPoint position: 89
---modifPoint 6 not mutation generated in  // full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...]
---analyzing modificationPoint position: 10
---modifPoint 7 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 105
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 8 not mutation generated in  if (java.lang.Math.abs(yMax) <= functionValueAccuracy) { 	setResult(yMax, 0); 	return result; }
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 9 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 62
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 876, #gens: 276, #ops: 1, parent:875] gen mutated: 1 , gen not mut: 10, gen not applied  0
-The child compiles: id 876
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-876/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(438): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (875(f=1.0), 876(f=1.0), )
Selected to next generation: IDs2--> (875(f=1.0), )
----------Running generation: 439, population size: 1

***** Generation 439 : 0
**Parent Variant: [Variant id: 877, #gens: 277, #ops: 0, parent:-]

--Child created id: 878
--Creating new operations for variant [Variant id: 878, #gens: 277, #ops: 0, parent:877]
---analyzing modificationPoint position: 133
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [begin, i, length, sum, values]
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: sum spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
location: Sum.java162
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `sum = 0.0 ` -topatch--> `for (int i = begin; i < (begin + length); i++) { 	sum += values[i]; }` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.stat.descriptive.summary.Sum line: 162, pointed element: CtForImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `sum = 0.0 ` -topatch--> `for (int i = begin; i < (begin + length); i++) { 	sum += values[i]; }` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 878, #gens: 278, #ops: 1, parent:877] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 878
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-878/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(439): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `sum = 0.0 ` -topatch--> `for (int i = begin; i < (begin + length); i++) { 	sum += values[i]; }` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (877(f=1.0), 878(f=1.0), )
Selected to next generation: IDs2--> (877(f=1.0), )
----------Running generation: 440, population size: 1

***** Generation 440 : 0
**Parent Variant: [Variant id: 879, #gens: 277, #ops: 0, parent:-]

--Child created id: 880
--Creating new operations for variant [Variant id: 880, #gens: 277, #ops: 0, parent:879]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 97
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [initial]
--> var from patch: initial spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(min, initial, max) ` -topatch--> `setResult(initial, 0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(min, initial, max) ` -topatch--> `setResult(initial, 0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 880, #gens: 277, #ops: 1, parent:879] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 880, errors: [BrentSolver.java:115: error: illegal start of type
		if (java.lang.Math.abs(yMin) <= functionValueAccuracy) {
		^, BrentSolver.java:115: error: <identifier> expected
		if (java.lang.Math.abs(yMin) <= functionValueAccuracy) {
		                      ^, BrentSolver.java:115: error: <identifier> expected
		if (java.lang.Math.abs(yMin) <= functionValueAccuracy) {
		                           ^, BrentSolver.java:115: error: ';' expected
		if (java.lang.Math.abs(yMin) <= functionValueAccuracy) {
		                            ^, BrentSolver.java:121: error: illegal start of type
		if ((yInitial * yMin) < 0) {
		^, BrentSolver.java:121: error: <identifier> expected
		if ((yInitial * yMin) < 0) {
		             ^, BrentSolver.java:121: error: <identifier> expected
		if ((yInitial * yMin) < 0) {
		                    ^, BrentSolver.java:121: error: <identifier> expected
		if ((yInitial * yMin) < 0) {
		                       ^, BrentSolver.java:121: error: illegal start of type
		if ((yInitial * yMin) < 0) {
		                        ^, BrentSolver.java:127: error: illegal start of type
		if (java.lang.Math.abs(yMax) <= functionValueAccuracy) {
		^, BrentSolver.java:127: error: <identifier> expected
		if (java.lang.Math.abs(yMax) <= functionValueAccuracy) {
		                      ^, BrentSolver.java:127: error: <identifier> expected
		if (java.lang.Math.abs(yMax) <= functionValueAccuracy) {
		                           ^, BrentSolver.java:127: error: ';' expected
		if (java.lang.Math.abs(yMax) <= functionValueAccuracy) {
		                            ^, BrentSolver.java:133: error: illegal start of type
		if ((yInitial * yMax) < 0) {
		^, BrentSolver.java:133: error: <identifier> expected
		if ((yInitial * yMax) < 0) {
		             ^, BrentSolver.java:133: error: <identifier> expected
		if ((yInitial * yMax) < 0) {
		                    ^, BrentSolver.java:133: error: <identifier> expected
		if ((yInitial * yMax) < 0) {
		                       ^, BrentSolver.java:133: error: illegal start of type
		if ((yInitial * yMax) < 0) {
		                        ^, BrentSolver.java:139: error: illegal start of type
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		^, BrentSolver.java:139: error: invalid method declaration; return type required
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		       ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		              ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		                   ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		                         ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		                              ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		                                    ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		                                             ^, BrentSolver.java:139: error: <identifier> expected
		return solve(f, min, yMin, max, yMax, initial, yInitial);
		                                                       ^, BrentSolver.java:165: error: class, interface, or enum expected
	 */ 	public double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, final double min, final double max) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		clearResult();
	    	       ^, BrentSolver.java:165: error: class, interface, or enum expected
	 */ 	public double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, final double min, final double max) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		clearResult();
	    	                          ^, BrentSolver.java:165: error: class, interface, or enum expected
	 */ 	public double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, final double min, final double max) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		clearResult();
	    	                                                                                           ^, BrentSolver.java:165: error: class, interface, or enum expected
	 */ 	public double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, final double min, final double max) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		clearResult();
	    	                                                                                                             ^, BrentSolver.java:166: error: class, interface, or enum expected
		verifyInterval(min, max);
		^, BrentSolver.java:168: error: class, interface, or enum expected
		double ret = java.lang.Double.NaN;
		^, BrentSolver.java:170: error: class, interface, or enum expected
		double yMin = f.value(min);
		^, BrentSolver.java:171: error: class, interface, or enum expected
		double yMax = f.value(max);
		^, BrentSolver.java:174: error: class, interface, or enum expected
		double sign = yMin * yMax;
		^, BrentSolver.java:175: error: class, interface, or enum expected
		if (sign > 0) {
		^, BrentSolver.java:179: error: class, interface, or enum expected
				ret = min;
				^, BrentSolver.java:180: error: class, interface, or enum expected
			} else if (java.lang.Math.abs(yMax) <= functionValueAccuracy) {
			^, BrentSolver.java:182: error: class, interface, or enum expected
				ret = max;
				^, BrentSolver.java:183: error: class, interface, or enum expected
			} else {
			^, BrentSolver.java:187: error: class, interface, or enum expected
			}
			^, BrentSolver.java:191: error: class, interface, or enum expected
		} else 
		^, BrentSolver.java:195: error: class, interface, or enum expected
		} else {
		^, BrentSolver.java:197: error: class, interface, or enum expected
		}
		^, BrentSolver.java:201: error: class, interface, or enum expected
	}
	^, BrentSolver.java:229: error: class, interface, or enum expected
	 */ 	private double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, double x0, double y0, double x1, double y1, double x2, double y2) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		double delta = x1 - x0; 		double oldDelta = delta; 		int i = 0;
	    	                           ^, BrentSolver.java:229: error: class, interface, or enum expected
	 */ 	private double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, double x0, double y0, double x1, double y1, double x2, double y2) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		double delta = x1 - x0; 		double oldDelta = delta; 		int i = 0;
	    	                                                                                                                                                                                                                                                                             		                        		^, BrentSolver.java:229: error: class, interface, or enum expected
	 */ 	private double solve(final org.apache.commons.math.analysis.UnivariateRealFunction f, double x0, double y0, double x1, double y1, double x2, double y2) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException { 		double delta = x1 - x0; 		double oldDelta = delta; 		int i = 0;
	    	                                                                                                                                                                                                                                                                             		                        		                         		^, BrentSolver.java:230: error: class, interface, or enum expected
		while (i < maximalIterationCount) {
		^, BrentSolver.java:234: error: class, interface, or enum expected
				x1 = x2;
				^, BrentSolver.java:235: error: class, interface, or enum expected
				x2 = x0;
				^, BrentSolver.java:236: error: class, interface, or enum expected
				y0 = y1;
				^, BrentSolver.java:237: error: class, interface, or enum expected
				y1 = y2;
				^, BrentSolver.java:238: error: class, interface, or enum expected
				y2 = y0;
				^, BrentSolver.java:239: error: class, interface, or enum expected
			}
			^, BrentSolver.java:245: error: class, interface, or enum expected
				return result;
				^, BrentSolver.java:246: error: class, interface, or enum expected
			}
			^, BrentSolver.java:248: error: class, interface, or enum expected
			double tolerance = 
			^, BrentSolver.java:250: error: class, interface, or enum expected
			if (java.lang.Math.abs(dx) <= tolerance) {
			^, BrentSolver.java:252: error: class, interface, or enum expected
				return result;
				^, BrentSolver.java:253: error: class, interface, or enum expected
			}
			^, BrentSolver.java:258: error: class, interface, or enum expected
				oldDelta = delta;
				^, BrentSolver.java:259: error: class, interface, or enum expected
			} else {
			^, BrentSolver.java:261: error: class, interface, or enum expected
				double p;
				^, BrentSolver.java:262: error: class, interface, or enum expected
				double p1;
				^, BrentSolver.java:266: error: class, interface, or enum expected
				if (x0 == x2) {
				^, BrentSolver.java:269: error: class, interface, or enum expected
					p1 = 1.0 - r3;
					^, BrentSolver.java:270: error: class, interface, or enum expected
				} else {
				^, BrentSolver.java:273: error: class, interface, or enum expected
					double r2 = y1 / y2;
					^, BrentSolver.java:274: error: class, interface, or enum expected
					p = r3 * (((dx * r1) * (r1 - r2)) - ((x1 - x0) * (r2 - 1.0)));
					^, BrentSolver.java:275: error: class, interface, or enum expected
					p1 = ((r1 - 1.0) * (r2 - 1.0)) * (r3 - 1.0);
					^, BrentSolver.java:276: error: class, interface, or enum expected
				}
				^, BrentSolver.java:279: error: class, interface, or enum expected
				} else {
				^, BrentSolver.java:281: error: class, interface, or enum expected
				}
				^, BrentSolver.java:288: error: class, interface, or enum expected
					oldDelta = delta;
					^, BrentSolver.java:289: error: class, interface, or enum expected
				} else {
				^, BrentSolver.java:291: error: class, interface, or enum expected
					delta = p / p1;
					^, BrentSolver.java:292: error: class, interface, or enum expected
				}
				^, BrentSolver.java:296: error: class, interface, or enum expected
			y0 = y1;
			^, BrentSolver.java:298: error: class, interface, or enum expected
			if (java.lang.Math.abs(delta) > tolerance) {
			^, BrentSolver.java:300: error: class, interface, or enum expected
			} else if (dx > 0.0) {
			^, BrentSolver.java:302: error: class, interface, or enum expected
			} else if (dx <= 0.0) {
			^, BrentSolver.java:304: error: class, interface, or enum expected
			}
			^, BrentSolver.java:306: error: class, interface, or enum expected
			if ((y1 > 0) == (y2 > 0)) {
			^, BrentSolver.java:308: error: class, interface, or enum expected
				y2 = y0;
				^, BrentSolver.java:309: error: class, interface, or enum expected
				delta = x1 - x0;
				^, BrentSolver.java:310: error: class, interface, or enum expected
				oldDelta = delta;
				^, BrentSolver.java:311: error: class, interface, or enum expected
			}
			^, BrentSolver.java:313: error: class, interface, or enum expected
		} 
		^, BrentSolver.java:315: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(440): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(min, initial, max) ` -topatch--> `setResult(initial, 0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (879(f=1.0), 880(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (879(f=1.0), )
----------Running generation: 441, population size: 1

***** Generation 441 : 0
**Parent Variant: [Variant id: 881, #gens: 277, #ops: 0, parent:-]

--Child created id: 882
--Creating new operations for variant [Variant id: 882, #gens: 277, #ops: 0, parent:881]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 16
---modifPoint 1 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 79
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java170
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 170, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 882, #gens: 277, #ops: 1, parent:881] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 882
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-882/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(441): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (881(f=1.0), 882(f=1.0), )
Selected to next generation: IDs2--> (881(f=1.0), )
----------Running generation: 442, population size: 1

***** Generation 442 : 0
**Parent Variant: [Variant id: 883, #gens: 277, #ops: 0, parent:-]

--Child created id: 884
--Creating new operations for variant [Variant id: 884, #gens: 277, #ops: 0, parent:883]
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 884, #gens: 276, #ops: 1, parent:883] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 884
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-884/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(442): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (883(f=1.0), 884(f=1.0), )
Selected to next generation: IDs2--> (883(f=1.0), )
----------Running generation: 443, population size: 1

***** Generation 443 : 0
**Parent Variant: [Variant id: 885, #gens: 277, #ops: 0, parent:-]

--Child created id: 886
--Creating new operations for variant [Variant id: 886, #gens: 277, #ops: 0, parent:885]
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 122
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [functionValueAccuracy]
--> var from patch: functionValueAccuracy spoon.support.reflect.code.CtFieldReadImpl
location: UnivariateRealSolverImpl.java209
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `return functionValueAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl line: 209, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `return functionValueAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 886, #gens: 278, #ops: 1, parent:885] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 886, errors: [UnivariateRealSolverImpl.java:210: error: incompatible types: unexpected return value
	 */ 	protected void verifyInterval(final double lower, final double upper) { 		if (lower >= upper) { 			return functionValueAccuracy; 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	                                                                        		                      			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(443): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `return functionValueAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (885(f=1.0), 886(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (885(f=1.0), )
----------Running generation: 444, population size: 1

***** Generation 444 : 0
**Parent Variant: [Variant id: 887, #gens: 277, #ops: 0, parent:-]

--Child created id: 888
--Creating new operations for variant [Variant id: 888, #gens: 277, #ops: 0, parent:887]
---analyzing modificationPoint position: 179
location: RandomDataImpl.java520
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rand = new org.apache.commons.math.random.JDKRandomGenerator() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 888, #gens: 276, #ops: 1, parent:887] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 888
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-888/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(444): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rand = new org.apache.commons.math.random.JDKRandomGenerator() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (887(f=1.0), 888(f=1.0), )
Selected to next generation: IDs2--> (887(f=1.0), )
----------Running generation: 445, population size: 1

***** Generation 445 : 0
**Parent Variant: [Variant id: 889, #gens: 277, #ops: 0, parent:-]

--Child created id: 890
--Creating new operations for variant [Variant id: 890, #gens: 277, #ops: 0, parent:889]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 50
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 16
---modifPoint 2 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 129
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 3 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 203
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 4 not mutation generated in  p1 = -p1
---analyzing modificationPoint position: 18
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 890, #gens: 278, #ops: 1, parent:889] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 890
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-890/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(445): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (889(f=1.0), 890(f=1.0), )
Selected to next generation: IDs2--> (889(f=1.0), )
----------Running generation: 446, population size: 1

***** Generation 446 : 0
**Parent Variant: [Variant id: 891, #gens: 277, #ops: 0, parent:-]

--Child created id: 892
--Creating new operations for variant [Variant id: 892, #gens: 277, #ops: 0, parent:891]
---analyzing modificationPoint position: 46
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 49
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@addf3083, search space size: 6
---modifPoint 2 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 23
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [arguments]
--> var from patch: arguments spoon.support.reflect.code.CtFieldReadImpl
SameName: final java.lang.Object... arguments
SameName: final java.lang.Object... arguments
Transforming shadowed variable in return arguments.clone()
location: MathRuntimeException.java128
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 128, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 892, #gens: 277, #ops: 1, parent:891] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 892, errors: [MathRuntimeException.java:145: error: incompatible types: java.lang.Object[] cannot be converted to java.lang.String
		return arguments.clone();} 	/**
		                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(446): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...] ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (891(f=1.0), 892(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (891(f=1.0), )
----------Running generation: 447, population size: 1

***** Generation 447 : 0
**Parent Variant: [Variant id: 893, #gens: 277, #ops: 0, parent:-]

--Child created id: 894
--Creating new operations for variant [Variant id: 894, #gens: 277, #ops: 0, parent:893]
---analyzing modificationPoint position: 112
location: BrentSolver.java179
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yMax) <= functionValueAccuracy) { 	setResult(max, 0); 	ret = max; } else { 	/[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 894, #gens: 276, #ops: 1, parent:893] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 894
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-894/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 6] ,[]
-Valid?: |false|2|6|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(447): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yMax) <= functionValueAccuracy) { 	setResult(max, 0); 	ret = max; } else { 	/[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (893(f=1.0), 894(f=2.0), )
Selected to next generation: IDs2--> (893(f=1.0), )
----------Running generation: 448, population size: 1

***** Generation 448 : 0
**Parent Variant: [Variant id: 895, #gens: 277, #ops: 0, parent:-]

--Child created id: 896
--Creating new operations for variant [Variant id: 896, #gens: 277, #ops: 0, parent:895]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 46
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch []
location: BigFractionFormat.java169
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 896, #gens: 278, #ops: 1, parent:895] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 896, errors: [BigFractionFormat.java:169: error: incompatible types: java.util.Locale[] cannot be converted to java.lang.StringBuffer
		if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 			return java.text.NumberFormat.getAvailableLocales();
		                                                                   			                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(448): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (895(f=1.0), 896(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (895(f=1.0), )
----------Running generation: 449, population size: 1

***** Generation 449 : 0
**Parent Variant: [Variant id: 897, #gens: 277, #ops: 0, parent:-]

--Child created id: 898
--Creating new operations for variant [Variant id: 898, #gens: 277, #ops: 0, parent:897]
---analyzing modificationPoint position: 106
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [yMin, functionValueAccuracy, result]
--> var from patch: yMin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: functionValueAccuracy spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: result spoon.support.reflect.code.CtFieldReadImpl
location: BrentSolver.java132
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 132, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 898, #gens: 277, #ops: 1, parent:897] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 898
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-898/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(449): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (897(f=1.0), 898(f=1.0), )
Selected to next generation: IDs2--> (897(f=1.0), )
----------Running generation: 450, population size: 1

***** Generation 450 : 0
**Parent Variant: [Variant id: 899, #gens: 277, #ops: 0, parent:-]

--Child created id: 900
--Creating new operations for variant [Variant id: 900, #gens: 277, #ops: 0, parent:899]
---analyzing modificationPoint position: 31
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 25
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 900, #gens: 278, #ops: 1, parent:899] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 900
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-900/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(450): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (899(f=1.0), 900(f=1.0), )
Selected to next generation: IDs2--> (899(f=1.0), )
----------Running generation: 451, population size: 1

***** Generation 451 : 0
**Parent Variant: [Variant id: 901, #gens: 277, #ops: 0, parent:-]

--Child created id: 902
--Creating new operations for variant [Variant id: 902, #gens: 277, #ops: 0, parent:901]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 60
---modifPoint 1 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 57
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 902, #gens: 277, #ops: 1, parent:901] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 902, errors: [FractionFormat.java:190: error: incompatible types: java.util.Locale[] cannot be converted to java.lang.StringBuffer
		} 		return java.text.NumberFormat.getAvailableLocales();
		  		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(451): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (901(f=1.0), 902(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (901(f=1.0), )
----------Running generation: 452, population size: 1

***** Generation 452 : 0
**Parent Variant: [Variant id: 903, #gens: 277, #ops: 0, parent:-]

--Child created id: 904
--Creating new operations for variant [Variant id: 904, #gens: 277, #ops: 0, parent:903]
---analyzing modificationPoint position: 65
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 168
Templates availables293
Attempts Base Ingredients  1 total 293
---modifPoint 1 not mutation generated in  // B1. [Find power of 2] int k = 0
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 38
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 904, #gens: 276, #ops: 1, parent:903] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 904
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-904/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(452): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (903(f=1.0), 904(f=1.0), )
Selected to next generation: IDs2--> (903(f=1.0), )
----------Running generation: 453, population size: 1

***** Generation 453 : 0
**Parent Variant: [Variant id: 905, #gens: 277, #ops: 0, parent:-]

--Child created id: 906
--Creating new operations for variant [Variant id: 906, #gens: 277, #ops: 0, parent:905]
---analyzing modificationPoint position: 97
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 0 not mutation generated in  verifySequence(min, initial, max)
---analyzing modificationPoint position: 39
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 906, #gens: 276, #ops: 1, parent:905] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 906
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-906/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(453): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (905(f=1.0), 906(f=1.0), )
Selected to next generation: IDs2--> (905(f=1.0), )
----------Running generation: 454, population size: 1

***** Generation 454 : 0
**Parent Variant: [Variant id: 907, #gens: 277, #ops: 0, parent:-]

--Child created id: 908
--Creating new operations for variant [Variant id: 908, #gens: 277, #ops: 0, parent:907]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 89
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
vars from patch [f, min, yMin, max, yMax, initial, yInitial]
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: min spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yMin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yMax spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initial spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yInitial spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java138
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 138, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 908, #gens: 277, #ops: 1, parent:907] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 908
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-908/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(454): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...] ` -topatch--> `// full Brent algorithm starting with provided initial guess return solve(f, min, yMin, max, yMax, i[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (907(f=1.0), 908(f=1.0), )
Selected to next generation: IDs2--> (907(f=1.0), )
----------Running generation: 455, population size: 1

***** Generation 455 : 0
**Parent Variant: [Variant id: 909, #gens: 277, #ops: 0, parent:-]

--Child created id: 910
--Creating new operations for variant [Variant id: 910, #gens: 277, #ops: 0, parent:909]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 910, #gens: 276, #ops: 1, parent:909] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 910
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-910/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(455): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (909(f=1.0), 910(f=1.0), )
Selected to next generation: IDs2--> (909(f=1.0), )
----------Running generation: 456, population size: 1

***** Generation 456 : 0
**Parent Variant: [Variant id: 911, #gens: 277, #ops: 0, parent:-]

--Child created id: 912
--Creating new operations for variant [Variant id: 912, #gens: 277, #ops: 0, parent:911]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 236
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 1 not mutation generated in  while (i < maximalIterationCount) { 	if (java.lang.Math.abs(y2) < java.lang.Math.abs(y1)) { 		// use[...]
---analyzing modificationPoint position: 24
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 10
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 4 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 5 not mutation generated in  num = java.lang.Math.abs(num)
---analyzing modificationPoint position: 94
location: BrentSolver.java102
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `clearResult() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 912, #gens: 276, #ops: 1, parent:911] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 912
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-912/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(456): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `clearResult() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (911(f=1.0), 912(f=1.0), )
Selected to next generation: IDs2--> (911(f=1.0), )
----------Running generation: 457, population size: 1

***** Generation 457 : 0
**Parent Variant: [Variant id: 913, #gens: 277, #ops: 0, parent:-]

--Child created id: 914
--Creating new operations for variant [Variant id: 914, #gens: 277, #ops: 0, parent:913]
---analyzing modificationPoint position: 19
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 914, #gens: 276, #ops: 1, parent:913] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 914
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-914/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(457): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (913(f=1.0), 914(f=1.0), )
Selected to next generation: IDs2--> (913(f=1.0), )
----------Running generation: 458, population size: 1

***** Generation 458 : 0
**Parent Variant: [Variant id: 915, #gens: 277, #ops: 0, parent:-]

--Child created id: 916
--Creating new operations for variant [Variant id: 916, #gens: 277, #ops: 0, parent:915]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 73
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  pos.setIndex(pos.getIndex() - 1)
---analyzing modificationPoint position: 17
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 916, #gens: 277, #ops: 1, parent:915] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 916, errors: [ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(458): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (915(f=1.0), 916(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (915(f=1.0), )
----------Running generation: 459, population size: 1

***** Generation 459 : 0
**Parent Variant: [Variant id: 917, #gens: 277, #ops: 0, parent:-]

--Child created id: 918
--Creating new operations for variant [Variant id: 918, #gens: 277, #ops: 0, parent:917]
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 81
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 918, #gens: 278, #ops: 1, parent:917] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 918
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-918/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(459): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (917(f=1.0), 918(f=1.0), )
Selected to next generation: IDs2--> (917(f=1.0), )
----------Running generation: 460, population size: 1

***** Generation 460 : 0
**Parent Variant: [Variant id: 919, #gens: 277, #ops: 0, parent:-]

--Child created id: 920
--Creating new operations for variant [Variant id: 920, #gens: 277, #ops: 0, parent:919]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 920, #gens: 276, #ops: 1, parent:919] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 920
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-920/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(460): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (919(f=1.0), 920(f=1.0), )
Selected to next generation: IDs2--> (919(f=1.0), )
----------Running generation: 461, population size: 1

***** Generation 461 : 0
**Parent Variant: [Variant id: 921, #gens: 277, #ops: 0, parent:-]

--Child created id: 922
--Creating new operations for variant [Variant id: 922, #gens: 277, #ops: 0, parent:921]
---analyzing modificationPoint position: 29
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 21
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@addf3083, search space size: 6
---modifPoint 2 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 22
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [pattern]
--> var from patch: pattern spoon.support.reflect.code.CtFieldReadImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return pattern` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return pattern` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 922, #gens: 277, #ops: 1, parent:921] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 922, errors: [MathRuntimeException.java:137: error: non-static variable pattern cannot be referenced from a static context
		return pattern;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(461): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return pattern` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (921(f=1.0), 922(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (921(f=1.0), )
----------Running generation: 462, population size: 1

***** Generation 462 : 0
**Parent Variant: [Variant id: 923, #gens: 277, #ops: 0, parent:-]

--Child created id: 924
--Creating new operations for variant [Variant id: 924, #gens: 277, #ops: 0, parent:923]
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 270
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  if (length == 0) { 	return false; }
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 25
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 35
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  num = num % den
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 5 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 6 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 924, #gens: 277, #ops: 1, parent:923] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 924
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-924/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(462): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (923(f=1.0), 924(f=1.0), )
Selected to next generation: IDs2--> (923(f=1.0), )
----------Running generation: 463, population size: 1

***** Generation 463 : 0
**Parent Variant: [Variant id: 925, #gens: 277, #ops: 0, parent:-]

--Child created id: 926
--Creating new operations for variant [Variant id: 926, #gens: 277, #ops: 0, parent:925]
---analyzing modificationPoint position: 31
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 60
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 3 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 926, #gens: 277, #ops: 1, parent:925] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 926, errors: [FractionFormat.java:121: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.FractionFormat
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getProperInstance(final java.util.Locale locale) { 		return java.text.NumberFormat.getAvailableLocales();
	    	                                                                                                                 		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(463): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (925(f=1.0), 926(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (925(f=1.0), )
----------Running generation: 464, population size: 1

***** Generation 464 : 0
**Parent Variant: [Variant id: 927, #gens: 277, #ops: 0, parent:-]

--Child created id: 928
--Creating new operations for variant [Variant id: 928, #gens: 277, #ops: 0, parent:927]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 928, #gens: 278, #ops: 1, parent:927] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 928, errors: [AbstractFormat.java:93: error: non-static variable numeratorFormat cannot be referenced from a static context
		nf.setMaximumFractionDigits(0); 		numeratorFormat = numeratorFormat;
		                                		^, AbstractFormat.java:93: error: non-static variable numeratorFormat cannot be referenced from a static context
		nf.setMaximumFractionDigits(0); 		numeratorFormat = numeratorFormat;
		                                		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(464): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (927(f=1.0), 928(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (927(f=1.0), )
----------Running generation: 465, population size: 1

***** Generation 465 : 0
**Parent Variant: [Variant id: 929, #gens: 277, #ops: 0, parent:-]

--Child created id: 930
--Creating new operations for variant [Variant id: 930, #gens: 277, #ops: 0, parent:929]
---analyzing modificationPoint position: 84
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 16
Any element available for mp MP=org.apache.commons.math.MathRuntimeException line: 474, pointed element: CtReturnImpl
---modifPoint 1 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 166
Templates availables293
Attempts Base Ingredients  1 total 293
---modifPoint 2 not mutation generated in  if (v > 0) { 	v = -v; }// make v negative 
---analyzing modificationPoint position: 142
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [values]
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java141
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `test(values, 0, 0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 141, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `test(values, 0, 0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 930, #gens: 278, #ops: 1, parent:929] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 930
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-930/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(465): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `test(values, 0, 0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (929(f=1.0), 930(f=1.0), )
Selected to next generation: IDs2--> (929(f=1.0), )
----------Running generation: 466, population size: 1

***** Generation 466 : 0
**Parent Variant: [Variant id: 931, #gens: 277, #ops: 0, parent:-]

--Child created id: 932
--Creating new operations for variant [Variant id: 932, #gens: 277, #ops: 0, parent:931]
---analyzing modificationPoint position: 216
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  y2 = y0
---analyzing modificationPoint position: 231
Templates availables83
Attempts Base Ingredients  1 total 83
vars from patch [y1, y0]
--> var from patch: y1 spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y0 spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java305
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y1 > 0) == (y2 > 0)) { 	x2 = x0; 	y2 = y0; 	delta = x1 - x0; 	oldDelta = delta; } ` -topatch--> `double r3 = y1 / y0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 305, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y1 > 0) == (y2 > 0)) { 	x2 = x0; 	y2 = y0; 	delta = x1 - x0; 	oldDelta = delta; } ` -topatch--> `double r3 = y1 / y0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 932, #gens: 278, #ops: 1, parent:931] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 932
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-932/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(466): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y1 > 0) == (y2 > 0)) { 	x2 = x0; 	y2 = y0; 	delta = x1 - x0; 	oldDelta = delta; } ` -topatch--> `double r3 = y1 / y0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (931(f=1.0), 932(f=1.0), )
Selected to next generation: IDs2--> (931(f=1.0), )
----------Running generation: 467, population size: 1

***** Generation 467 : 0
**Parent Variant: [Variant id: 933, #gens: 277, #ops: 0, parent:-]

--Child created id: 934
--Creating new operations for variant [Variant id: 934, #gens: 277, #ops: 0, parent:933]
---analyzing modificationPoint position: 74
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: AbstractFormat.java161
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 934, #gens: 277, #ops: 1, parent:933] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 934, errors: [AbstractFormat.java:164: error: variable ret is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		char ret = 0; 		final int n = source.length(); 		char ret = 0;
		              		                               		     ^, AbstractFormat.java:166: error: cannot find symbol
		if (index < n) {
		    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:169: error: cannot find symbol
				c = source.charAt(index++);
				                  ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:170: error: cannot find symbol
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                                 ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:171: error: cannot find symbol
			pos.setIndex(index);
			             ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:173: error: cannot find symbol
			if (index < n) {
			    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(467): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (933(f=1.0), 934(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (933(f=1.0), )
----------Running generation: 468, population size: 1

***** Generation 468 : 0
**Parent Variant: [Variant id: 935, #gens: 277, #ops: 0, parent:-]

--Child created id: 936
--Creating new operations for variant [Variant id: 936, #gens: 277, #ops: 0, parent:935]
---analyzing modificationPoint position: 75
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java162
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 162, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 936, #gens: 278, #ops: 1, parent:935] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 936, errors: [AbstractFormat.java:162: error: variable index is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
	 */ 	protected static char parseNextCharacter(final java.lang.String source, final java.text.ParsePosition pos) { 		int index = pos.getIndex(); 		int index = pos.getIndex();
	    	                                                                                                             		                            		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(468): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (935(f=1.0), 936(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (935(f=1.0), )
----------Running generation: 469, population size: 1

***** Generation 469 : 0
**Parent Variant: [Variant id: 937, #gens: 277, #ops: 0, parent:-]

--Child created id: 938
--Creating new operations for variant [Variant id: 938, #gens: 277, #ops: 0, parent:937]
---analyzing modificationPoint position: 124
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 0 not mutation generated in  for (int i = begin; i < (begin + length); i++) { 	correction += weights[i] * (values[i] - xbarw); }
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 15
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 4 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 58
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 117
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 6 not mutation generated in  denominator = den
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 7 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 7
---modifPoint 8 not mutation generated in  return nf
---analyzing modificationPoint position: 42
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 938, #gens: 278, #ops: 1, parent:937] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child compiles: id 938
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-938/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(469): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (937(f=1.0), 938(f=1.0), )
Selected to next generation: IDs2--> (937(f=1.0), )
----------Running generation: 470, population size: 1

***** Generation 470 : 0
**Parent Variant: [Variant id: 939, #gens: 277, #ops: 0, parent:-]

--Child created id: 940
--Creating new operations for variant [Variant id: 940, #gens: 277, #ops: 0, parent:939]
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 103, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 940, #gens: 277, #ops: 1, parent:939] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 940
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-940/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(470): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (939(f=1.0), 940(f=1.0), )
Selected to next generation: IDs2--> (939(f=1.0), )
----------Running generation: 471, population size: 1

***** Generation 471 : 0
**Parent Variant: [Variant id: 941, #gens: 277, #ops: 0, parent:-]

--Child created id: 942
--Creating new operations for variant [Variant id: 942, #gens: 277, #ops: 0, parent:941]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 14
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 4 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 942, #gens: 276, #ops: 1, parent:941] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 942
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-942/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(471): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (941(f=1.0), 942(f=1.0), )
Selected to next generation: IDs2--> (941(f=1.0), )
----------Running generation: 472, population size: 1

***** Generation 472 : 0
**Parent Variant: [Variant id: 943, #gens: 277, #ops: 0, parent:-]

--Child created id: 944
--Creating new operations for variant [Variant id: 944, #gens: 277, #ops: 0, parent:943]
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 944, #gens: 276, #ops: 1, parent:943] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 944
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-944/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(472): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (943(f=1.0), 944(f=1.0), )
Selected to next generation: IDs2--> (943(f=1.0), )
----------Running generation: 473, population size: 1

***** Generation 473 : 0
**Parent Variant: [Variant id: 945, #gens: 277, #ops: 0, parent:-]

--Child created id: 946
--Creating new operations for variant [Variant id: 946, #gens: 277, #ops: 0, parent:945]
---analyzing modificationPoint position: 135
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtFieldReadImpl
location: Sum.java164
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += values[i] * weights[i] ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.stat.descriptive.summary.Sum line: 164, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += values[i] * weights[i] ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 946, #gens: 278, #ops: 1, parent:945] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 946
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-946/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(473): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `sum += values[i] * weights[i] ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (945(f=1.0), 946(f=1.0), )
Selected to next generation: IDs2--> (945(f=1.0), )
----------Running generation: 474, population size: 1

***** Generation 474 : 0
**Parent Variant: [Variant id: 947, #gens: 277, #ops: 0, parent:-]

--Child created id: 948
--Creating new operations for variant [Variant id: 948, #gens: 277, #ops: 0, parent:947]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 948, #gens: 278, #ops: 1, parent:947] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 948, errors: [MathRuntimeException.java:505: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:531: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:531: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:531: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:531: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:532: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:532: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:532: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:534: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:535: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:536: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:537: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:538: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:538: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:539: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:539: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(474): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (947(f=1.0), 948(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (947(f=1.0), )
----------Running generation: 475, population size: 1

***** Generation 475 : 0
**Parent Variant: [Variant id: 949, #gens: 277, #ops: 0, parent:-]

--Child created id: 950
--Creating new operations for variant [Variant id: 950, #gens: 277, #ops: 0, parent:949]
---analyzing modificationPoint position: 146
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: AbstractUnivariateStatistic.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "weight array mus[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 152, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "weight array mus[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 950, #gens: 278, #ops: 1, parent:949] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 950, errors: [AbstractUnivariateStatistic.java:172: error: unreachable statement
			"weight array must contain at least one non-zero value"); 			if (java.lang.Double.isNaN(weights[i])) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}", i);} 			if (java.lang.Double.isInfinite(weights[i])) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}", i);} 			if (weights[i] < 0) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("negative weight {0} at index {1} ", weights[i], i);} 			if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 				containsPositiveWeight = true;}} 		if (!containsPositiveWeight) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("weight array must contain at least one non-zero value");
			                                                          			^]
Ingredient counter is Zero
---Undoing: gnrtn(475): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "weight array mus[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (949(f=1.0), 950(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (949(f=1.0), )
----------Running generation: 476, population size: 1

***** Generation 476 : 0
**Parent Variant: [Variant id: 951, #gens: 277, #ops: 0, parent:-]

--Child created id: 952
--Creating new operations for variant [Variant id: 952, #gens: 277, #ops: 0, parent:951]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 952, #gens: 278, #ops: 1, parent:951] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 952, errors: [AbstractFormat.java:92: error: non-static variable numeratorFormat cannot be referenced from a static context
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		numeratorFormat = numeratorFormat; 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		^, AbstractFormat.java:92: error: non-static variable numeratorFormat cannot be referenced from a static context
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		numeratorFormat = numeratorFormat; 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(476): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (951(f=1.0), 952(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (951(f=1.0), )
----------Running generation: 477, population size: 1

***** Generation 477 : 0
**Parent Variant: [Variant id: 953, #gens: 277, #ops: 0, parent:-]

--Child created id: 954
--Creating new operations for variant [Variant id: 954, #gens: 277, #ops: 0, parent:953]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 21
---modifPoint 1 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 23
---modifPoint 2 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 3 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 173
location: MathUtils.java660
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 954, #gens: 276, #ops: 1, parent:953] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 954, errors: [MathUtils.java:770: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(477): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (953(f=1.0), 954(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (953(f=1.0), )
----------Running generation: 478, population size: 1

***** Generation 478 : 0
**Parent Variant: [Variant id: 955, #gens: 277, #ops: 0, parent:-]

--Child created id: 956
--Creating new operations for variant [Variant id: 956, #gens: 277, #ops: 0, parent:955]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 72
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 44
---modifPoint 3 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 4 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 7
---modifPoint 5 not mutation generated in  return nf
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 6 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 10
---modifPoint 7 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java206
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 956, #gens: 278, #ops: 1, parent:955] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child does NOT compile: 956, errors: [FractionFormat.java:209: error: unreachable statement
			"unparseable fraction number: \"{0}\"", source); 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("cannot format given object as a fraction number");
			                                                 			^]
Ingredient counter is Zero
---Undoing: gnrtn(478): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (955(f=1.0), 956(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (955(f=1.0), )
----------Running generation: 479, population size: 1

***** Generation 479 : 0
**Parent Variant: [Variant id: 957, #gens: 277, #ops: 0, parent:-]

--Child created id: 958
--Creating new operations for variant [Variant id: 958, #gens: 277, #ops: 0, parent:957]
---analyzing modificationPoint position: 32
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 67
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 26
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 82
location: ProperBigFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 958, #gens: 276, #ops: 1, parent:957] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 958
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-958/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(479): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (957(f=1.0), 958(f=1.0), )
Selected to next generation: IDs2--> (957(f=1.0), )
----------Running generation: 480, population size: 1

***** Generation 480 : 0
**Parent Variant: [Variant id: 959, #gens: 277, #ops: 0, parent:-]

--Child created id: 960
--Creating new operations for variant [Variant id: 960, #gens: 277, #ops: 0, parent:959]
---analyzing modificationPoint position: 95
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 102, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 960, #gens: 278, #ops: 1, parent:959] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 960
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-960/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(480): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (959(f=1.0), 960(f=1.0), )
Selected to next generation: IDs2--> (959(f=1.0), )
----------Running generation: 481, population size: 1

***** Generation 481 : 0
**Parent Variant: [Variant id: 961, #gens: 277, #ops: 0, parent:-]

--Child created id: 962
--Creating new operations for variant [Variant id: 962, #gens: 277, #ops: 0, parent:961]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 163
location: Fraction.java291
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 962, #gens: 276, #ops: 1, parent:961] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 962, errors: [Fraction.java:293: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(481): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (961(f=1.0), 962(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (961(f=1.0), )
----------Running generation: 482, population size: 1

***** Generation 482 : 0
**Parent Variant: [Variant id: 963, #gens: 277, #ops: 0, parent:-]

--Child created id: 964
--Creating new operations for variant [Variant id: 964, #gens: 277, #ops: 0, parent:963]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 102
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 1 not mutation generated in  if (java.lang.Math.abs(yMin) <= functionValueAccuracy) { 	setResult(yMin, 0); 	return result; }
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 964, #gens: 276, #ops: 1, parent:963] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 964
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-964/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(482): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (963(f=1.0), 964(f=1.0), )
Selected to next generation: IDs2--> (963(f=1.0), )
----------Running generation: 483, population size: 1

***** Generation 483 : 0
**Parent Variant: [Variant id: 965, #gens: 277, #ops: 0, parent:-]

--Child created id: 966
--Creating new operations for variant [Variant id: 966, #gens: 277, #ops: 0, parent:965]
---analyzing modificationPoint position: 106
location: BrentSolver.java132
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 966, #gens: 276, #ops: 1, parent:965] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 966
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-966/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(483): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if initial and max bracket the root if ((yInitial * yMax) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (965(f=1.0), 966(f=1.0), )
Selected to next generation: IDs2--> (965(f=1.0), )
----------Running generation: 484, population size: 1

***** Generation 484 : 0
**Parent Variant: [Variant id: 967, #gens: 277, #ops: 0, parent:-]

--Child created id: 968
--Creating new operations for variant [Variant id: 968, #gens: 277, #ops: 0, parent:967]
---analyzing modificationPoint position: 45
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 65
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
Attempts Base Ingredients  6 total 8
Attempts Base Ingredients  7 total 8
Attempts Base Ingredients  8 total 8
--- no mutation left to apply in element spoon.support.reflect.code.CtIfImpl@1, search space size: 8
---modifPoint 3 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 39
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 4 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 61
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 5 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 80
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 6 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 7 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 53
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 8 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 129
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 9 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 76
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java163
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 163, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 968, #gens: 277, #ops: 1, parent:967] gen mutated: 1 , gen not mut: 10, gen not applied  0
-The child does NOT compile: 968, errors: [AbstractFormat.java:163: error: variable index is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		final int n = source.length(); 		int index = pos.getIndex();
		                               		    ^, AbstractFormat.java:174: error: cannot find symbol
				ret = c;
				^
  symbol:   variable ret
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:178: error: cannot find symbol
		return ret;
		       ^
  symbol:   variable ret
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(484): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (967(f=1.0), 968(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (967(f=1.0), )
----------Running generation: 485, population size: 1

***** Generation 485 : 0
**Parent Variant: [Variant id: 969, #gens: 277, #ops: 0, parent:-]

--Child created id: 970
--Creating new operations for variant [Variant id: 970, #gens: 277, #ops: 0, parent:969]
---analyzing modificationPoint position: 25
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 970, #gens: 277, #ops: 1, parent:969] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 970
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-970/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(485): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (969(f=1.0), 970(f=1.0), )
Selected to next generation: IDs2--> (969(f=1.0), )
----------Running generation: 486, population size: 1

***** Generation 486 : 0
**Parent Variant: [Variant id: 971, #gens: 277, #ops: 0, parent:-]

--Child created id: 972
--Creating new operations for variant [Variant id: 972, #gens: 277, #ops: 0, parent:971]
---analyzing modificationPoint position: 104
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  // return the second endpoint if it is good enough double yMax = f.value(max)
---analyzing modificationPoint position: 25
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 972, #gens: 276, #ops: 1, parent:971] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 972
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-972/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(486): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (971(f=1.0), 972(f=1.0), )
Selected to next generation: IDs2--> (971(f=1.0), )
----------Running generation: 487, population size: 1

***** Generation 487 : 0
**Parent Variant: [Variant id: 973, #gens: 277, #ops: 0, parent:-]

--Child created id: 974
--Creating new operations for variant [Variant id: 974, #gens: 277, #ops: 0, parent:973]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 974, #gens: 278, #ops: 1, parent:973] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 974, errors: [FractionFormat.java:235: error: unreachable statement
			return null;
			^]
Ingredient counter is Zero
---Undoing: gnrtn(487): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (973(f=1.0), 974(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (973(f=1.0), )
----------Running generation: 488, population size: 1

***** Generation 488 : 0
**Parent Variant: [Variant id: 975, #gens: 277, #ops: 0, parent:-]

--Child created id: 976
--Creating new operations for variant [Variant id: 976, #gens: 277, #ops: 0, parent:975]
---analyzing modificationPoint position: 40
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 60
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 138
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; }
---analyzing modificationPoint position: 55
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 3 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 43
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 4 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 32
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 6 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 23
---modifPoint 7 not mutation generated in  return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeExcepti[...]
---analyzing modificationPoint position: 134
location: Sum.java163
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 976, #gens: 276, #ops: 1, parent:975] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child compiles: id 976
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-976/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(488): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (975(f=1.0), 976(f=1.0), )
Selected to next generation: IDs2--> (975(f=1.0), )
----------Running generation: 489, population size: 1

***** Generation 489 : 0
**Parent Variant: [Variant id: 977, #gens: 277, #ops: 0, parent:-]

--Child created id: 978
--Creating new operations for variant [Variant id: 978, #gens: 277, #ops: 0, parent:977]
---analyzing modificationPoint position: 32
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 67
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 61
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 978, #gens: 276, #ops: 1, parent:977] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 978
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-978/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(489): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (977(f=1.0), 978(f=1.0), )
Selected to next generation: IDs2--> (977(f=1.0), )
----------Running generation: 490, population size: 1

***** Generation 490 : 0
**Parent Variant: [Variant id: 979, #gens: 277, #ops: 0, parent:-]

--Child created id: 980
--Creating new operations for variant [Variant id: 980, #gens: 277, #ops: 0, parent:979]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 86
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 20
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 107
location: BrentSolver.java184
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `// neither value is close to zero and min and max do not bracket root. throw org.apache.commons.math[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 980, #gens: 276, #ops: 1, parent:979] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 980
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-980/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(490): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `// neither value is close to zero and min and max do not bracket root. throw org.apache.commons.math[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (979(f=1.0), 980(f=1.0), )
Selected to next generation: IDs2--> (979(f=1.0), )
----------Running generation: 491, population size: 1

***** Generation 491 : 0
**Parent Variant: [Variant id: 981, #gens: 277, #ops: 0, parent:-]

--Child created id: 982
--Creating new operations for variant [Variant id: 982, #gens: 277, #ops: 0, parent:981]
---analyzing modificationPoint position: 133
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  sum = 0.0
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 94
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 3 not mutation generated in  clearResult()
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 982, #gens: 276, #ops: 1, parent:981] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 982
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-982/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(491): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (981(f=1.0), 982(f=1.0), )
Selected to next generation: IDs2--> (981(f=1.0), )
----------Running generation: 492, population size: 1

***** Generation 492 : 0
**Parent Variant: [Variant id: 983, #gens: 277, #ops: 0, parent:-]

--Child created id: 984
--Creating new operations for variant [Variant id: 984, #gens: 277, #ops: 0, parent:983]
---analyzing modificationPoint position: 144
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [begin]
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java150
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean containsPositiveWeight = false ` -topatch--> `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 150, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean containsPositiveWeight = false ` -topatch--> `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 984, #gens: 278, #ops: 1, parent:983] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 984
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-984/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(492): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `boolean containsPositiveWeight = false ` -topatch--> `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (983(f=1.0), 984(f=1.0), )
Selected to next generation: IDs2--> (983(f=1.0), )
----------Running generation: 493, population size: 1

***** Generation 493 : 0
**Parent Variant: [Variant id: 985, #gens: 277, #ops: 0, parent:-]

--Child created id: 986
--Creating new operations for variant [Variant id: 986, #gens: 277, #ops: 0, parent:985]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 986, #gens: 278, #ops: 1, parent:985] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 986, errors: [AbstractFormat.java:123: error: unreachable statement
		"denominator format can not be null"); 		return denominatorFormat;} 	/**
		                                       		^]
Ingredient counter is Zero
---Undoing: gnrtn(493): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (985(f=1.0), 986(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (985(f=1.0), )
----------Running generation: 494, population size: 1

***** Generation 494 : 0
**Parent Variant: [Variant id: 987, #gens: 277, #ops: 0, parent:-]

--Child created id: 988
--Creating new operations for variant [Variant id: 988, #gens: 277, #ops: 0, parent:987]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 988, #gens: 276, #ops: 1, parent:987] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 988
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-988/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(494): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (987(f=1.0), 988(f=1.0), )
Selected to next generation: IDs2--> (987(f=1.0), )
----------Running generation: 495, population size: 1

***** Generation 495 : 0
**Parent Variant: [Variant id: 989, #gens: 277, #ops: 0, parent:-]

--Child created id: 990
--Creating new operations for variant [Variant id: 990, #gens: 277, #ops: 0, parent:989]
---analyzing modificationPoint position: 70
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [java.util.Locale.US, pattern, arguments]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java466
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `return new java.lang.ArrayIndexOutOfBoundsException() {  	/** 	 * Serializable version identifier. 	[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 466, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `return new java.lang.ArrayIndexOutOfBoundsException() {  	/** 	 * Serializable version identifier. 	[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 990, #gens: 277, #ops: 1, parent:989] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 990, errors: [MathRuntimeException.java:467: error: incompatible types: <anonymous java.lang.ArrayIndexOutOfBoundsException> cannot be converted to java.text.ParseException
	 */ 	public static java.text.ParseException createParseException(final int offset, final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArrayIndexOutOfBoundsException() { 			/**
	    	                                                                                                                                                     		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(495): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...] ` -topatch--> `return new java.lang.ArrayIndexOutOfBoundsException() {  	/** 	 * Serializable version identifier. 	[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (989(f=1.0), 990(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (989(f=1.0), )
----------Running generation: 496, population size: 1

***** Generation 496 : 0
**Parent Variant: [Variant id: 991, #gens: 277, #ops: 0, parent:-]

--Child created id: 992
--Creating new operations for variant [Variant id: 992, #gens: 277, #ops: 0, parent:991]
---analyzing modificationPoint position: 101
Templates availables83
Attempts Base Ingredients  1 total 83
---modifPoint 0 not mutation generated in  // return the first endpoint if it is good enough double yMin = f.value(min)
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 16
Any element available for mp MP=org.apache.commons.math.MathRuntimeException line: 474, pointed element: CtReturnImpl
---modifPoint 2 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 55
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 4 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [s]
--> var from patch: s spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 992, #gens: 278, #ops: 1, parent:991] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 992, errors: [MathRuntimeException.java:130: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(496): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (991(f=1.0), 992(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (991(f=1.0), )
----------Running generation: 497, population size: 1

***** Generation 497 : 0
**Parent Variant: [Variant id: 993, #gens: 277, #ops: 0, parent:-]

--Child created id: 994
--Creating new operations for variant [Variant id: 994, #gens: 277, #ops: 0, parent:993]
---analyzing modificationPoint position: 31
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java96
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 96, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 994, #gens: 278, #ops: 1, parent:993] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 994
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-994/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(497): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (993(f=1.0), 994(f=1.0), )
Selected to next generation: IDs2--> (993(f=1.0), )
----------Running generation: 498, population size: 1

***** Generation 498 : 0
**Parent Variant: [Variant id: 995, #gens: 277, #ops: 0, parent:-]

--Child created id: 996
--Creating new operations for variant [Variant id: 996, #gens: 277, #ops: 0, parent:995]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 82
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 20
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java234
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 996, #gens: 277, #ops: 1, parent:995] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 996, errors: [FractionFormat.java:234: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
			                            			                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(498): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (995(f=1.0), 996(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (995(f=1.0), )
----------Running generation: 499, population size: 1

***** Generation 499 : 0
**Parent Variant: [Variant id: 997, #gens: 277, #ops: 0, parent:-]

--Child created id: 998
--Creating new operations for variant [Variant id: 998, #gens: 277, #ops: 0, parent:997]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 998, #gens: 276, #ops: 1, parent:997] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 998
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-998/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(499): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (997(f=1.0), 998(f=1.0), )
Selected to next generation: IDs2--> (997(f=1.0), )
----------Running generation: 500, population size: 1

***** Generation 500 : 0
**Parent Variant: [Variant id: 999, #gens: 277, #ops: 0, parent:-]

--Child created id: 1000
--Creating new operations for variant [Variant id: 1000, #gens: 277, #ops: 0, parent:999]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 122
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: UnivariateRealSolverImpl.java209
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `checkResultComputed()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl line: 209, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `checkResultComputed()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1000, #gens: 278, #ops: 1, parent:999] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1000
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1000/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(500): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "endpoints do not[...] ` -topatch--> `checkResultComputed()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (999(f=1.0), 1000(f=1.0), )
Selected to next generation: IDs2--> (999(f=1.0), )
----------Running generation: 501, population size: 1

***** Generation 501 : 0
**Parent Variant: [Variant id: 1001, #gens: 277, #ops: 0, parent:-]

--Child created id: 1002
--Creating new operations for variant [Variant id: 1002, #gens: 277, #ops: 0, parent:1001]
---analyzing modificationPoint position: 34
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 82
location: ProperBigFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1002, #gens: 276, #ops: 1, parent:1001] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1002
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1002/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(501): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1001(f=1.0), 1002(f=1.0), )
Selected to next generation: IDs2--> (1001(f=1.0), )
----------Running generation: 502, population size: 1

***** Generation 502 : 0
**Parent Variant: [Variant id: 1003, #gens: 277, #ops: 0, parent:-]

--Child created id: 1004
--Creating new operations for variant [Variant id: 1004, #gens: 277, #ops: 0, parent:1003]
---analyzing modificationPoint position: 24
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1004, #gens: 276, #ops: 1, parent:1003] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1004
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1004/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(502): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1003(f=1.0), 1004(f=1.0), )
Selected to next generation: IDs2--> (1003(f=1.0), )
----------Running generation: 503, population size: 1

***** Generation 503 : 0
**Parent Variant: [Variant id: 1005, #gens: 277, #ops: 0, parent:-]

--Child created id: 1006
--Creating new operations for variant [Variant id: 1006, #gens: 277, #ops: 0, parent:1005]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 64
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 48
---modifPoint 3 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 39
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1006, #gens: 278, #ops: 1, parent:1005] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1006, errors: [ProperBigFractionFormat.java:106: error: variable num is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		} 		java.math.BigInteger num = fraction.getNumerator();
		  		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(503): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1005(f=1.0), 1006(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1005(f=1.0), )
----------Running generation: 504, population size: 1

***** Generation 504 : 0
**Parent Variant: [Variant id: 1007, #gens: 277, #ops: 0, parent:-]

--Child created id: 1008
--Creating new operations for variant [Variant id: 1008, #gens: 277, #ops: 0, parent:1007]
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1008, #gens: 278, #ops: 1, parent:1007] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1008
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1008/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(504): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1007(f=1.0), 1008(f=1.0), )
Selected to next generation: IDs2--> (1007(f=1.0), )
----------Running generation: 505, population size: 1

***** Generation 505 : 0
**Parent Variant: [Variant id: 1009, #gens: 277, #ops: 0, parent:-]

--Child created id: 1010
--Creating new operations for variant [Variant id: 1010, #gens: 277, #ops: 0, parent:1009]
---analyzing modificationPoint position: 45
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
Attempts Base Ingredients  4 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1010, #gens: 277, #ops: 1, parent:1009] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1010
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1010/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(505): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1009(f=1.0), 1010(f=1.0), )
Selected to next generation: IDs2--> (1009(f=1.0), )
----------Running generation: 506, population size: 1

***** Generation 506 : 0
**Parent Variant: [Variant id: 1011, #gens: 277, #ops: 0, parent:-]

--Child created id: 1012
--Creating new operations for variant [Variant id: 1012, #gens: 277, #ops: 0, parent:1011]
---analyzing modificationPoint position: 20
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 3
---modifPoint 4 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 74
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java161
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1012, #gens: 277, #ops: 1, parent:1011] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 1012, errors: [AbstractFormat.java:163: error: variable n is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		final int n = source.length(); 		final int n = source.length();
		                               		          ^, AbstractFormat.java:166: error: cannot find symbol
		if (index < n) {
		    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:169: error: cannot find symbol
				c = source.charAt(index++);
				                  ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:170: error: cannot find symbol
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                                 ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:171: error: cannot find symbol
			pos.setIndex(index);
			             ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:173: error: cannot find symbol
			if (index < n) {
			    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(506): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1011(f=1.0), 1012(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1011(f=1.0), )
----------Running generation: 507, population size: 1

***** Generation 507 : 0
**Parent Variant: [Variant id: 1013, #gens: 277, #ops: 0, parent:-]

--Child created id: 1014
--Creating new operations for variant [Variant id: 1014, #gens: 277, #ops: 0, parent:1013]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [this.wholeFormat, format]
--> var from patch: this.wholeFormat spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1014, #gens: 278, #ops: 1, parent:1013] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1014
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1014/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(507): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1013(f=1.0), 1014(f=1.0), )
Selected to next generation: IDs2--> (1013(f=1.0), )
----------Running generation: 508, population size: 1

***** Generation 508 : 0
**Parent Variant: [Variant id: 1015, #gens: 277, #ops: 0, parent:-]

--Child created id: 1016
--Creating new operations for variant [Variant id: 1016, #gens: 277, #ops: 0, parent:1015]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 22
---modifPoint 1 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 26
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 210
location: MathUtils.java661
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `u = -t ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1016, #gens: 276, #ops: 1, parent:1015] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1016, errors: [MathUtils.java:770: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(508): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `u = -t ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1015(f=1.0), 1016(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1015(f=1.0), )
----------Running generation: 509, population size: 1

***** Generation 509 : 0
**Parent Variant: [Variant id: 1017, #gens: 277, #ops: 0, parent:-]

--Child created id: 1018
--Creating new operations for variant [Variant id: 1018, #gens: 277, #ops: 0, parent:1017]
---analyzing modificationPoint position: 31
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 134
Templates availables24
Attempts Base Ingredients  1 total 24
---modifPoint 1 not mutation generated in  for (int i = begin; i < (begin + length); i++) { 	sum += values[i] * weights[i]; }
---analyzing modificationPoint position: 90
location: BigFraction.java390
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1018, #gens: 276, #ops: 1, parent:1017] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1018, errors: [BigFraction.java:392: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(509): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1017(f=1.0), 1018(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1017(f=1.0), )
----------Running generation: 510, population size: 1

***** Generation 510 : 0
**Parent Variant: [Variant id: 1019, #gens: 277, #ops: 0, parent:-]

--Child created id: 1020
--Creating new operations for variant [Variant id: 1020, #gens: 277, #ops: 0, parent:1019]
---analyzing modificationPoint position: 119
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  org.apache.commons.math.stat.descriptive.summary.Sum sum = new org.apache.commons.math.stat.descript[...]
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java136
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 136, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1020, #gens: 277, #ops: 1, parent:1019] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1020, errors: [ProperFractionFormat.java:203: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(510): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1019(f=1.0), 1020(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1019(f=1.0), )
----------Running generation: 511, population size: 1

***** Generation 511 : 0
**Parent Variant: [Variant id: 1021, #gens: 277, #ops: 0, parent:-]

--Child created id: 1022
--Creating new operations for variant [Variant id: 1022, #gens: 277, #ops: 0, parent:1021]
---analyzing modificationPoint position: 163
Templates availables143
Attempts Base Ingredients  1 total 143
---modifPoint 0 not mutation generated in  this.denominator = den
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: MathRuntimeException.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1022, #gens: 278, #ops: 1, parent:1021] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1022, errors: [MathRuntimeException.java:505: error: illegal start of expression
	 */ 	private static java.lang.String buildMessage(final java.util.Locale locale, final java.lang.String pattern, final java.lang.Object... arguments) { 		return pattern == null ? "" : new java.text.MessageFormat(org.apache.commons.math.MathRuntimeException.translate(pattern, locale), locale).format(arguments);} 	/**
	    	^, MathRuntimeException.java:531: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:531: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:531: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:531: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:531: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:532: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:532: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:532: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:532: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:534: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:535: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:536: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:537: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:538: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:538: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:539: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:539: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(511): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...] ` -topatch--> `final java.lang.String pattern = "internal error, please fill a bug report at {0}"` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1021(f=1.0), 1022(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1021(f=1.0), )
----------Running generation: 512, population size: 1

***** Generation 512 : 0
**Parent Variant: [Variant id: 1023, #gens: 277, #ops: 0, parent:-]

--Child created id: 1024
--Creating new operations for variant [Variant id: 1024, #gens: 277, #ops: 0, parent:1023]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
Attempts Base Ingredients  3 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 32
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1024, #gens: 278, #ops: 1, parent:1023] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1024, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(512): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1023(f=1.0), 1024(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1023(f=1.0), )
----------Running generation: 513, population size: 1

***** Generation 513 : 0
**Parent Variant: [Variant id: 1025, #gens: 277, #ops: 0, parent:-]

--Child created id: 1026
--Creating new operations for variant [Variant id: 1026, #gens: 277, #ops: 0, parent:1025]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1026, #gens: 278, #ops: 1, parent:1025] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1026, errors: [AbstractFormat.java:92: error: non-static variable denominatorFormat cannot be referenced from a static context
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		denominatorFormat = denominatorFormat;
	    	                                                                                                		                                                                                    		^, AbstractFormat.java:92: error: non-static variable denominatorFormat cannot be referenced from a static context
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		denominatorFormat = denominatorFormat;
	    	                                                                                                		                                                                                    		                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(513): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1025(f=1.0), 1026(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1025(f=1.0), )
----------Running generation: 514, population size: 1

***** Generation 514 : 0
**Parent Variant: [Variant id: 1027, #gens: 277, #ops: 0, parent:-]

--Child created id: 1028
--Creating new operations for variant [Variant id: 1028, #gens: 277, #ops: 0, parent:1027]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1028, #gens: 278, #ops: 1, parent:1027] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1028, errors: [ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                ^, ProperFractionFormat.java:170: error: ';' expected
		if (num.intValue() < 0) {
		                  ^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                    ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		                     ^, ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(514): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1027(f=1.0), 1028(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1027(f=1.0), )
----------Running generation: 515, population size: 1

***** Generation 515 : 0
**Parent Variant: [Variant id: 1029, #gens: 277, #ops: 0, parent:-]

--Child created id: 1030
--Creating new operations for variant [Variant id: 1030, #gens: 277, #ops: 0, parent:1029]
---analyzing modificationPoint position: 33
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [whole]
--> var from patch: whole spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1030, #gens: 277, #ops: 1, parent:1029] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1030, errors: [ProperBigFractionFormat.java:237: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:240: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:243: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:244: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:245: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:245: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:246: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:246: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:247: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:247: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(515): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1029(f=1.0), 1030(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1029(f=1.0), )
----------Running generation: 516, population size: 1

***** Generation 516 : 0
**Parent Variant: [Variant id: 1031, #gens: 277, #ops: 0, parent:-]

--Child created id: 1032
--Creating new operations for variant [Variant id: 1032, #gens: 277, #ops: 0, parent:1031]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1032, #gens: 276, #ops: 1, parent:1031] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1032
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1032/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(516): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1031(f=1.0), 1032(f=1.0), )
Selected to next generation: IDs2--> (1031(f=1.0), )
----------Running generation: 517, population size: 1

***** Generation 517 : 0
**Parent Variant: [Variant id: 1033, #gens: 277, #ops: 0, parent:-]

--Child created id: 1034
--Creating new operations for variant [Variant id: 1034, #gens: 277, #ops: 0, parent:1033]
---analyzing modificationPoint position: 47
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1034, #gens: 278, #ops: 1, parent:1033] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1034
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1034/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(517): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1033(f=1.0), 1034(f=1.0), )
Selected to next generation: IDs2--> (1033(f=1.0), )
----------Running generation: 518, population size: 1

***** Generation 518 : 0
**Parent Variant: [Variant id: 1035, #gens: 277, #ops: 0, parent:-]

--Child created id: 1036
--Creating new operations for variant [Variant id: 1036, #gens: 277, #ops: 0, parent:1035]
---analyzing modificationPoint position: 16
Any element available for mp MP=org.apache.commons.math.MathRuntimeException line: 474, pointed element: CtReturnImpl
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 146
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [begin, length, values]
--> var from patch: begin spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java152
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 152, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1036, #gens: 277, #ops: 1, parent:1035] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1036
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1036/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(518): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(weights[i])) { 	throw org.apache.commons.math.MathRuntimeException.create[...] ` -topatch--> `if ((begin + length) > values.length) { 	throw org.apache.commons.math.MathRuntimeException.createIl[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1035(f=1.0), 1036(f=1.0), )
Selected to next generation: IDs2--> (1035(f=1.0), )
----------Running generation: 519, population size: 1

***** Generation 519 : 0
**Parent Variant: [Variant id: 1037, #gens: 277, #ops: 0, parent:-]

--Child created id: 1038
--Creating new operations for variant [Variant id: 1038, #gens: 277, #ops: 0, parent:1037]
---analyzing modificationPoint position: 101
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  // return the first endpoint if it is good enough double yMin = f.value(min)
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1038, #gens: 276, #ops: 1, parent:1037] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1038
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1038/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(519): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1037(f=1.0), 1038(f=1.0), )
Selected to next generation: IDs2--> (1037(f=1.0), )
----------Running generation: 520, population size: 1

***** Generation 520 : 0
**Parent Variant: [Variant id: 1039, #gens: 277, #ops: 0, parent:-]

--Child created id: 1040
--Creating new operations for variant [Variant id: 1040, #gens: 277, #ops: 0, parent:1039]
---analyzing modificationPoint position: 30
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 39
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1040, #gens: 277, #ops: 1, parent:1039] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1040
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1040/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(520): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1039(f=1.0), 1040(f=1.0), )
Selected to next generation: IDs2--> (1039(f=1.0), )
----------Running generation: 521, population size: 1

***** Generation 521 : 0
**Parent Variant: [Variant id: 1041, #gens: 277, #ops: 0, parent:-]

--Child created id: 1042
--Creating new operations for variant [Variant id: 1042, #gens: 277, #ops: 0, parent:1041]
---analyzing modificationPoint position: 39
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1042, #gens: 278, #ops: 1, parent:1041] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1042, errors: [AbstractFormat.java:94: error: call to this must be first statement in constructor
		nf.setParseIntegerOnly(true); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(521): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1041(f=1.0), 1042(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1041(f=1.0), )
----------Running generation: 522, population size: 1

***** Generation 522 : 0
**Parent Variant: [Variant id: 1043, #gens: 277, #ops: 0, parent:-]

--Child created id: 1044
--Creating new operations for variant [Variant id: 1044, #gens: 277, #ops: 0, parent:1043]
---analyzing modificationPoint position: 45
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 19
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1044, #gens: 276, #ops: 1, parent:1043] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1044
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1044/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(522): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1043(f=1.0), 1044(f=1.0), )
Selected to next generation: IDs2--> (1043(f=1.0), )
----------Running generation: 523, population size: 1

***** Generation 523 : 0
**Parent Variant: [Variant id: 1045, #gens: 277, #ops: 0, parent:-]

--Child created id: 1046
--Creating new operations for variant [Variant id: 1046, #gens: 277, #ops: 0, parent:1045]
---analyzing modificationPoint position: 117
location: BigFraction.java154
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1046, #gens: 276, #ops: 1, parent:1045] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1046, errors: [BigFraction.java:158: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(523): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1045(f=1.0), 1046(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1045(f=1.0), )
----------Running generation: 524, population size: 1

***** Generation 524 : 0
**Parent Variant: [Variant id: 1047, #gens: 277, #ops: 0, parent:-]

--Child created id: 1048
--Creating new operations for variant [Variant id: 1048, #gens: 277, #ops: 0, parent:1047]
---analyzing modificationPoint position: 22
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [this.pattern]
--> var from patch: this.pattern spoon.support.reflect.code.CtFieldWriteImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `this.pattern = getMessage()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `this.pattern = getMessage()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1048, #gens: 278, #ops: 1, parent:1047] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1048, errors: [MathRuntimeException.java:112: error: non-static variable this cannot be referenced from a static context
		} 		this.pattern = getMessage();
		  		^, MathRuntimeException.java:112: error: cannot assign a value to final variable pattern
		} 		this.pattern = getMessage();
		  		    ^, MathRuntimeException.java:112: error: non-static method getMessage() cannot be referenced from a static context
		} 		this.pattern = getMessage();
		  		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(524): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `this.pattern = getMessage()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1047(f=1.0), 1048(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1047(f=1.0), )
----------Running generation: 525, population size: 1

***** Generation 525 : 0
**Parent Variant: [Variant id: 1049, #gens: 277, #ops: 0, parent:-]

--Child created id: 1050
--Creating new operations for variant [Variant id: 1050, #gens: 277, #ops: 0, parent:1049]
---analyzing modificationPoint position: 188
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [length]
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
location: Mean.java164
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	correction += values[i] - xbar; } ` -topatch--> `double sampleSize = length` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.stat.descriptive.moment.Mean line: 164, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	correction += values[i] - xbar; } ` -topatch--> `double sampleSize = length` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1050, #gens: 278, #ops: 1, parent:1049] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1050, errors: [Mean.java:164: error: variable sampleSize is already defined in method evaluate(double[],int,int)
			double correction = 0; 			double sampleSize = length;
			                       			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(525): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = begin; i < (begin + length); i++) { 	correction += values[i] - xbar; } ` -topatch--> `double sampleSize = length` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1049(f=1.0), 1050(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1049(f=1.0), )
----------Running generation: 526, population size: 1

***** Generation 526 : 0
**Parent Variant: [Variant id: 1051, #gens: 277, #ops: 0, parent:-]

--Child created id: 1052
--Creating new operations for variant [Variant id: 1052, #gens: 277, #ops: 0, parent:1051]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 46
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 214
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [y0, y1]
--> var from patch: y0 spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: y1 spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java235
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `y0 = y1 ` -topatch--> `y0 = y1` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 235, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `y0 = y1 ` -topatch--> `y0 = y1` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1052, #gens: 277, #ops: 1, parent:1051] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1052
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1052/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(526): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `y0 = y1 ` -topatch--> `y0 = y1` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1051(f=1.0), 1052(f=1.0), )
Selected to next generation: IDs2--> (1051(f=1.0), )
----------Running generation: 527, population size: 1

***** Generation 527 : 0
**Parent Variant: [Variant id: 1053, #gens: 277, #ops: 0, parent:-]

--Child created id: 1054
--Creating new operations for variant [Variant id: 1054, #gens: 277, #ops: 0, parent:1053]
---analyzing modificationPoint position: 21
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 189
location: Mean.java165
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `correction += values[i] - xbar ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1054, #gens: 276, #ops: 1, parent:1053] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1054
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1054/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(527): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `correction += values[i] - xbar ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1053(f=1.0), 1054(f=1.0), )
Selected to next generation: IDs2--> (1053(f=1.0), )
----------Running generation: 528, population size: 1

***** Generation 528 : 0
**Parent Variant: [Variant id: 1055, #gens: 277, #ops: 0, parent:-]

--Child created id: 1056
--Creating new operations for variant [Variant id: 1056, #gens: 277, #ops: 0, parent:1055]
---analyzing modificationPoint position: 100
Templates availables83
Attempts Base Ingredients  1 total 83
vars from patch []
location: BrentSolver.java107
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 107, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1056, #gens: 278, #ops: 1, parent:1055] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1056, errors: [BrentSolver.java:256: error: illegal start of type
				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax);}} else if (sign < 0) { 			// solve using only the first endpoint as initial guess 			ret = solve(f, min, yMin, max, yMax, min, yMin);} else // either min or max is a root
				                                                                                                                                                                                        ^, BrentSolver.java:256: error: illegal start of type
				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax);}} else if (sign < 0) { 			// solve using only the first endpoint as initial guess 			ret = solve(f, min, yMin, max, yMax, min, yMin);} else // either min or max is a root
				                                                                                                                                                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(528): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Math.abs(yInitial) <= functionValueAccuracy) { 	setResult(initial, 0); 	return result;[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1055(f=1.0), 1056(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1055(f=1.0), )
----------Running generation: 529, population size: 1

***** Generation 529 : 0
**Parent Variant: [Variant id: 1057, #gens: 277, #ops: 0, parent:-]

--Child created id: 1058
--Creating new operations for variant [Variant id: 1058, #gens: 277, #ops: 0, parent:1057]
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1058, #gens: 278, #ops: 1, parent:1057] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1058
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1058/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(529): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1057(f=1.0), 1058(f=1.0), )
Selected to next generation: IDs2--> (1057(f=1.0), )
----------Running generation: 530, population size: 1

***** Generation 530 : 0
**Parent Variant: [Variant id: 1059, #gens: 277, #ops: 0, parent:-]

--Child created id: 1060
--Creating new operations for variant [Variant id: 1060, #gens: 277, #ops: 0, parent:1059]
---analyzing modificationPoint position: 37
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 45
---modifPoint 3 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
Attempts Base Ingredients  4 total 13
---modifPoint 4 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 33
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 5
---modifPoint 5 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 43
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 6 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1060, #gens: 277, #ops: 1, parent:1059] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 1060, errors: [FractionFormat.java:104: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.FractionFormat
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getImproperInstance(final java.util.Locale locale) { 		return java.text.NumberFormat.getAvailableLocales();
	    	                                                                                                                   		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(530): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1059(f=1.0), 1060(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1059(f=1.0), )
----------Running generation: 531, population size: 1

***** Generation 531 : 0
**Parent Variant: [Variant id: 1061, #gens: 277, #ops: 0, parent:-]

--Child created id: 1062
--Creating new operations for variant [Variant id: 1062, #gens: 277, #ops: 0, parent:1061]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1062, #gens: 278, #ops: 1, parent:1061] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1062, errors: [ProperFractionFormat.java:196: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(531): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1061(f=1.0), 1062(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1061(f=1.0), )
----------Running generation: 532, population size: 1

***** Generation 532 : 0
**Parent Variant: [Variant id: 1063, #gens: 277, #ops: 0, parent:-]

--Child created id: 1064
--Creating new operations for variant [Variant id: 1064, #gens: 277, #ops: 0, parent:1063]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1064, #gens: 276, #ops: 1, parent:1063] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1064
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1064/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(532): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1063(f=1.0), 1064(f=1.0), )
Selected to next generation: IDs2--> (1063(f=1.0), )
----------Running generation: 533, population size: 1

***** Generation 533 : 0
**Parent Variant: [Variant id: 1065, #gens: 277, #ops: 0, parent:-]

--Child created id: 1066
--Creating new operations for variant [Variant id: 1066, #gens: 277, #ops: 0, parent:1065]
---analyzing modificationPoint position: 136
Templates availables24
Attempts Base Ingredients  1 total 24
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtFieldReadImpl
location: Sum.java167
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return sum ` -topatch--> `return n` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.stat.descriptive.summary.Sum line: 167, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return sum ` -topatch--> `return n` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1066, #gens: 278, #ops: 1, parent:1065] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1066, errors: [Sum.java:168: error: unreachable statement
		return sum;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(533): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return sum ` -topatch--> `return n` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1065(f=1.0), 1066(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1065(f=1.0), )
----------Running generation: 534, population size: 1

***** Generation 534 : 0
**Parent Variant: [Variant id: 1067, #gens: 277, #ops: 0, parent:-]

--Child created id: 1068
--Creating new operations for variant [Variant id: 1068, #gens: 277, #ops: 0, parent:1067]
---analyzing modificationPoint position: 19
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1068, #gens: 276, #ops: 1, parent:1067] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1068
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1068/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(534): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1067(f=1.0), 1068(f=1.0), )
Selected to next generation: IDs2--> (1067(f=1.0), )
----------Running generation: 535, population size: 1

***** Generation 535 : 0
**Parent Variant: [Variant id: 1069, #gens: 277, #ops: 0, parent:-]

--Child created id: 1070
--Creating new operations for variant [Variant id: 1070, #gens: 277, #ops: 0, parent:1069]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [this.wholeFormat, format]
--> var from patch: this.wholeFormat spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1070, #gens: 278, #ops: 1, parent:1069] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1070
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1070/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(535): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1069(f=1.0), 1070(f=1.0), )
Selected to next generation: IDs2--> (1069(f=1.0), )
----------Running generation: 536, population size: 1

***** Generation 536 : 0
**Parent Variant: [Variant id: 1071, #gens: 277, #ops: 0, parent:-]

--Child created id: 1072
--Creating new operations for variant [Variant id: 1072, #gens: 277, #ops: 0, parent:1071]
---analyzing modificationPoint position: 60
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java203
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 203, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1072, #gens: 278, #ops: 1, parent:1071] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1072, errors: [FractionFormat.java:204: error: variable parsePosition is already defined in method parse(java.lang.String)
	 */ 	@java.lang.Override 	public org.apache.commons.math.fraction.Fraction parse(final java.lang.String source) throws java.text.ParseException { 		final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0); 		final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0);
	    	                    	                                                                                                                        		                                                                              		                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(536): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1071(f=1.0), 1072(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1071(f=1.0), )
----------Running generation: 537, population size: 1

***** Generation 537 : 0
**Parent Variant: [Variant id: 1073, #gens: 277, #ops: 0, parent:-]

--Child created id: 1074
--Creating new operations for variant [Variant id: 1074, #gens: 277, #ops: 0, parent:1073]
---analyzing modificationPoint position: 155
---modifPoint 0 not mutation generated in  double r = getRan().nextDouble()
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 36
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 61
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch []
location: FractionFormat.java204
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 204, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1074, #gens: 277, #ops: 1, parent:1073] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1074, errors: [FractionFormat.java:204: error: variable parsePosition is already defined in method parse(java.lang.String)
	 */ 	@java.lang.Override 	public org.apache.commons.math.fraction.Fraction parse(final java.lang.String source) throws java.text.ParseException { 		final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0); 		final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0);
	    	                    	                                                                                                                        		                                                                              		                              ^, FractionFormat.java:211: error: cannot find symbol
		return result;
		       ^
  symbol:   variable result
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(537): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1073(f=1.0), 1074(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1073(f=1.0), )
----------Running generation: 538, population size: 1

***** Generation 538 : 0
**Parent Variant: [Variant id: 1075, #gens: 277, #ops: 0, parent:-]

--Child created id: 1076
--Creating new operations for variant [Variant id: 1076, #gens: 277, #ops: 0, parent:1075]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 55
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
---modifPoint 2 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 62
Templates availables38
Attempts Base Ingredients  1 total 38
Attempts Base Ingredients  2 total 38
---modifPoint 4 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 71
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java173
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 173, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1076, #gens: 278, #ops: 1, parent:1075] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 1076, errors: [AbstractFormat.java:174: error: unreachable statement
				ret = c;
				^]
Ingredient counter is Zero
---Undoing: gnrtn(538): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1075(f=1.0), 1076(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1075(f=1.0), )
----------Running generation: 539, population size: 1

***** Generation 539 : 0
**Parent Variant: [Variant id: 1077, #gens: 277, #ops: 0, parent:-]

--Child created id: 1078
--Creating new operations for variant [Variant id: 1078, #gens: 277, #ops: 0, parent:1077]
---analyzing modificationPoint position: 29
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 267
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [length]
--> var from patch: length spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java83
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...] ` -topatch--> `if (length < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 83, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...] ` -topatch--> `if (length < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1078, #gens: 277, #ops: 1, parent:1077] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1078
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1078/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(539): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (begin < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException([...] ` -topatch--> `if (length < 0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1077(f=1.0), 1078(f=1.0), )
Selected to next generation: IDs2--> (1077(f=1.0), )
----------Running generation: 540, population size: 1

***** Generation 540 : 0
**Parent Variant: [Variant id: 1079, #gens: 277, #ops: 0, parent:-]

--Child created id: 1080
--Creating new operations for variant [Variant id: 1080, #gens: 277, #ops: 0, parent:1079]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 70
---modifPoint 2 not mutation generated in  return new java.text.ParseException(null, offset) {  	/** 	 * Serializable version identifier. 	 */ [...]
---analyzing modificationPoint position: 7
---modifPoint 3 not mutation generated in  return nf
---analyzing modificationPoint position: 52
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java206
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1080, #gens: 278, #ops: 1, parent:1079] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1080, errors: [FractionFormat.java:246: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' :
				                                                                         			^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(540): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1079(f=1.0), 1080(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1079(f=1.0), )
----------Running generation: 541, population size: 1

***** Generation 541 : 0
**Parent Variant: [Variant id: 1081, #gens: 277, #ops: 0, parent:-]

--Child created id: 1082
--Creating new operations for variant [Variant id: 1082, #gens: 277, #ops: 0, parent:1081]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 91
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  getWholeFormat().format(whole, toAppendTo, pos)
---analyzing modificationPoint position: 68
---modifPoint 2 not mutation generated in  return numerator
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1082, #gens: 276, #ops: 1, parent:1081] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1082
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1082/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(541): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1081(f=1.0), 1082(f=1.0), )
Selected to next generation: IDs2--> (1081(f=1.0), )
----------Running generation: 542, population size: 1

***** Generation 542 : 0
**Parent Variant: [Variant id: 1083, #gens: 277, #ops: 0, parent:-]

--Child created id: 1084
--Creating new operations for variant [Variant id: 1084, #gens: 277, #ops: 0, parent:1083]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 103
location: BrentSolver.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1084, #gens: 276, #ops: 1, parent:1083] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1084
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1084/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(542): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// reduce interval if min and initial bracket the root if ((yInitial * yMin) < 0) { 	return solve(f,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1083(f=1.0), 1084(f=1.0), )
Selected to next generation: IDs2--> (1083(f=1.0), )
----------Running generation: 543, population size: 1

***** Generation 543 : 0
**Parent Variant: [Variant id: 1085, #gens: 277, #ops: 0, parent:-]

--Child created id: 1086
--Creating new operations for variant [Variant id: 1086, #gens: 277, #ops: 0, parent:1085]
---analyzing modificationPoint position: 63
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java222
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1086, #gens: 278, #ops: 1, parent:1085] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1086
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1086/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(543): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1085(f=1.0), 1086(f=1.0), )
Selected to next generation: IDs2--> (1085(f=1.0), )
----------Running generation: 544, population size: 1

***** Generation 544 : 0
**Parent Variant: [Variant id: 1087, #gens: 277, #ops: 0, parent:-]

--Child created id: 1088
--Creating new operations for variant [Variant id: 1088, #gens: 277, #ops: 0, parent:1087]
---analyzing modificationPoint position: 71
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [ret, c]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java173
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 173, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1088, #gens: 277, #ops: 1, parent:1087] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1088
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1088/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(544): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1087(f=1.0), 1088(f=1.0), )
Selected to next generation: IDs2--> (1087(f=1.0), )
----------Running generation: 545, population size: 1

***** Generation 545 : 0
**Parent Variant: [Variant id: 1089, #gens: 277, #ops: 0, parent:-]

--Child created id: 1090
--Creating new operations for variant [Variant id: 1090, #gens: 277, #ops: 0, parent:1089]
---analyzing modificationPoint position: 142
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: AbstractUnivariateStatistic.java141
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "subarray ends af[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 141, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "subarray ends af[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1090, #gens: 278, #ops: 1, parent:1089] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1090, errors: [AbstractUnivariateStatistic.java:146: error: unreachable statement
		if (weights.length != values.length) {
		^]
Ingredient counter is Zero
---Undoing: gnrtn(545): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (weights == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "subarray ends af[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1089(f=1.0), 1090(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1089(f=1.0), )
----------Running generation: 546, population size: 1

***** Generation 546 : 0
**Parent Variant: [Variant id: 1091, #gens: 277, #ops: 0, parent:-]

--Child created id: 1092
--Creating new operations for variant [Variant id: 1092, #gens: 277, #ops: 0, parent:1091]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
Attempts Base Ingredients  3 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1092, #gens: 278, #ops: 1, parent:1091] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1092, errors: [AbstractFormat.java:111: error: non-static variable numeratorFormat cannot be referenced from a static context
		return numeratorFormat; 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(546): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1091(f=1.0), 1092(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1091(f=1.0), )
----------Running generation: 547, population size: 1

***** Generation 547 : 0
**Parent Variant: [Variant id: 1093, #gens: 277, #ops: 0, parent:-]

--Child created id: 1094
--Creating new operations for variant [Variant id: 1094, #gens: 277, #ops: 0, parent:1093]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1094, #gens: 277, #ops: 1, parent:1093] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1094
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1094/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(547): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1093(f=1.0), 1094(f=1.0), )
Selected to next generation: IDs2--> (1093(f=1.0), )
----------Running generation: 548, population size: 1

***** Generation 548 : 0
**Parent Variant: [Variant id: 1095, #gens: 277, #ops: 0, parent:-]

--Child created id: 1096
--Creating new operations for variant [Variant id: 1096, #gens: 277, #ops: 0, parent:1095]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [whole]
--> var from patch: whole spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1096, #gens: 278, #ops: 1, parent:1095] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1096, errors: [ProperBigFractionFormat.java:237: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:240: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:243: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:244: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:245: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:245: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:246: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:246: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:247: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:247: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(548): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1095(f=1.0), 1096(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1095(f=1.0), )
----------Running generation: 549, population size: 1

***** Generation 549 : 0
**Parent Variant: [Variant id: 1097, #gens: 277, #ops: 0, parent:-]

--Child created id: 1098
--Creating new operations for variant [Variant id: 1098, #gens: 277, #ops: 0, parent:1097]
---analyzing modificationPoint position: 21
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 94
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 1 not mutation generated in  clearResult()
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1098, #gens: 278, #ops: 1, parent:1097] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1098, errors: [ProperFractionFormat.java:145: error: unreachable statement
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(549): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1097(f=1.0), 1098(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1097(f=1.0), )
----------Running generation: 550, population size: 1

***** Generation 550 : 0
**Parent Variant: [Variant id: 1099, #gens: 277, #ops: 0, parent:-]

--Child created id: 1100
--Creating new operations for variant [Variant id: 1100, #gens: 277, #ops: 0, parent:1099]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 108
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 138
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [containsPositiveWeight]
--> var from patch: containsPositiveWeight spoon.support.reflect.code.CtVariableReadImpl
location: AbstractUnivariateStatistic.java164
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic line: 164, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1100, #gens: 278, #ops: 1, parent:1099] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1100
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1100/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(550): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((!containsPositiveWeight) && (weights[i] > 0.0)) { 	containsPositiveWeight = true; } ` -topatch--> `if (!containsPositiveWeight) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgu[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1099(f=1.0), 1100(f=1.0), )
Selected to next generation: IDs2--> (1099(f=1.0), )
----------Running generation: 551, population size: 1

***** Generation 551 : 0
**Parent Variant: [Variant id: 1101, #gens: 277, #ops: 0, parent:-]

--Child created id: 1102
--Creating new operations for variant [Variant id: 1102, #gens: 277, #ops: 0, parent:1101]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 22
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [java.util.Locale.US, pattern, arguments]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pattern spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: arguments spoon.support.reflect.code.CtVariableReadImpl
location: MathRuntimeException.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return new java.util.ConcurrentModificationException() {  	/** 	 * Serializable version identifier. [...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return new java.util.ConcurrentModificationException() {  	/** 	 * Serializable version identifier. [...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1102, #gens: 277, #ops: 1, parent:1101] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1102, errors: [MathRuntimeException.java:430: error: illegal start of expression
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	 ^, MathRuntimeException.java:430: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	             ^, MathRuntimeException.java:430: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	              ^, MathRuntimeException.java:430: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	               ^, MathRuntimeException.java:430: error: illegal start of type
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                              ^, MathRuntimeException.java:430: error: not a statement
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                   ^, MathRuntimeException.java:430: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                         ^, MathRuntimeException.java:430: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                             ^, MathRuntimeException.java:430: error: ';' expected
	 * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
	                                                                                            ^, MathRuntimeException.java:431: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                     ^, MathRuntimeException.java:431: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                  ^, MathRuntimeException.java:431: error: not a statement
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                   ^, MathRuntimeException.java:431: error: ';' expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                     ^, MathRuntimeException.java:431: error: <identifier> expected
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                    ^, MathRuntimeException.java:431: error: illegal start of expression
	 * Message formatting is delegated to {@link java.text.MessageFormat}.
	                                                                     ^, MathRuntimeException.java:433: error: <identifier> expected
	 * @param pattern
	                 ^, MathRuntimeException.java:434: error: ';' expected
	 * 		format specifier
	   		                ^, MathRuntimeException.java:435: error: <identifier> expected
	 * @param arguments
	                   ^, MathRuntimeException.java:436: error: ';' expected
	 * 		format arguments
	   		                ^, MathRuntimeException.java:437: error: <identifier> expected
	 * @return built exception
	    ^, MathRuntimeException.java:437: error: ';' expected
	 * @return built exception
	                ^, MathRuntimeException.java:438: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	  ^, MathRuntimeException.java:438: error: illegal start of expression
	 */ 	public static java.lang.ArithmeticException createArithmeticException(final java.lang.String pattern, final java.lang.Object... arguments) { 		return new java.lang.ArithmeticException() { 			/**
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(551): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// the locale is not supported or the resource is unknown // don't translate and fall back to using [...] ` -topatch--> `return new java.util.ConcurrentModificationException() {  	/** 	 * Serializable version identifier. [...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1101(f=1.0), 1102(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1101(f=1.0), )
----------Running generation: 552, population size: 1

***** Generation 552 : 0
**Parent Variant: [Variant id: 1103, #gens: 277, #ops: 0, parent:-]

--Child created id: 1104
--Creating new operations for variant [Variant id: 1104, #gens: 277, #ops: 0, parent:1103]
---analyzing modificationPoint position: 79
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  pos.setIndex(index)
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1104, #gens: 276, #ops: 1, parent:1103] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1104
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1104/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(552): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1103(f=1.0), 1104(f=1.0), )
Selected to next generation: IDs2--> (1103(f=1.0), )
----------Running generation: 553, population size: 1

***** Generation 553 : 0
**Parent Variant: [Variant id: 1105, #gens: 277, #ops: 0, parent:-]

--Child created id: 1106
--Creating new operations for variant [Variant id: 1106, #gens: 277, #ops: 0, parent:1105]
---analyzing modificationPoint position: 36
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1106, #gens: 276, #ops: 1, parent:1105] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1106
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1106/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(553): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1105(f=1.0), 1106(f=1.0), )
Selected to next generation: IDs2--> (1105(f=1.0), )
----------Running generation: 554, population size: 1

***** Generation 554 : 0
**Parent Variant: [Variant id: 1107, #gens: 277, #ops: 0, parent:-]

--Child created id: 1108
--Creating new operations for variant [Variant id: 1108, #gens: 277, #ops: 0, parent:1107]
---analyzing modificationPoint position: 109
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
Attempts Base Ingredients  2 total 38
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 178
Templates availables293
Attempts Base Ingredients  1 total 293
vars from patch [p]
--> var from patch: p spoon.support.reflect.code.CtVariableReadImpl
location: MathUtils.java616
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((u == 0) || (v == 0)) { 	if ((u == java.lang.Integer.MIN_VALUE) || (v == java.lang.Integer.MIN_V[...] ` -topatch--> `int u = p` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 616, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((u == 0) || (v == 0)) { 	if ((u == java.lang.Integer.MIN_VALUE) || (v == java.lang.Integer.MIN_V[...] ` -topatch--> `int u = p` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1108, #gens: 278, #ops: 1, parent:1107] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1108, errors: [MathUtils.java:616: error: variable u is already defined in method gcd(int,int)
	 */ 	public static int gcd(final int p, final int q) { 		int u = p; 		int v = q; 		int u = p;
	    	                                                  		           		           		    ^, MathUtils.java:770: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(554): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((u == 0) || (v == 0)) { 	if ((u == java.lang.Integer.MIN_VALUE) || (v == java.lang.Integer.MIN_V[...] ` -topatch--> `int u = p` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1107(f=1.0), 1108(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1107(f=1.0), )
----------Running generation: 555, population size: 1

***** Generation 555 : 0
**Parent Variant: [Variant id: 1109, #gens: 277, #ops: 0, parent:-]

--Child created id: 1110
--Creating new operations for variant [Variant id: 1110, #gens: 277, #ops: 0, parent:1109]
---analyzing modificationPoint position: 16
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathRuntimeException.buildMessage(java.util.Locale.US, pattern, argum[...]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 270
location: AbstractUnivariateStatistic.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) { 	return false; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1110, #gens: 276, #ops: 1, parent:1109] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1110
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1110/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(555): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) { 	return false; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1109(f=1.0), 1110(f=1.0), )
Selected to next generation: IDs2--> (1109(f=1.0), )
----------Running generation: 556, population size: 1

***** Generation 556 : 0
**Parent Variant: [Variant id: 1111, #gens: 277, #ops: 0, parent:-]

--Child created id: 1112
--Creating new operations for variant [Variant id: 1112, #gens: 277, #ops: 0, parent:1111]
---analyzing modificationPoint position: 34
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 99
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [f, min]
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: min spoon.support.reflect.code.CtVariableReadImpl
location: BrentSolver.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// return the initial guess if it is good enough double yInitial = f.value(initial) ` -topatch--> `double yMin = f.value(min)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BrentSolver line: 106, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// return the initial guess if it is good enough double yInitial = f.value(initial) ` -topatch--> `double yMin = f.value(min)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1112, #gens: 277, #ops: 1, parent:1111] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1112, errors: [BrentSolver.java:197: error: illegal start of type
				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax);}} else if (sign < 0) { 			// solve using only the first endpoint as initial guess 			ret = solve(f, min, yMin, max, yMax, min, yMin);} else // either min or max is a root
				                                                                                                                                                                                        ^, BrentSolver.java:197: error: illegal start of type
				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax);}} else if (sign < 0) { 			// solve using only the first endpoint as initial guess 			ret = solve(f, min, yMin, max, yMax, min, yMin);} else // either min or max is a root
				                                                                                                                                                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(556): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// return the initial guess if it is good enough double yInitial = f.value(initial) ` -topatch--> `double yMin = f.value(min)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1111(f=1.0), 1112(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1111(f=1.0), )
----------Running generation: 557, population size: 1

***** Generation 557 : 0
**Parent Variant: [Variant id: 1113, #gens: 277, #ops: 0, parent:-]

--Child created id: 1114
--Creating new operations for variant [Variant id: 1114, #gens: 277, #ops: 0, parent:1113]
---analyzing modificationPoint position: 141
---modifPoint 0 not mutation generated in  return test(values, begin, length)
---analyzing modificationPoint position: 271
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 1 not mutation generated in  n = 0
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1114, #gens: 276, #ops: 1, parent:1113] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1114
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/variant-1114/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-73/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 6] ,[]
-Valid?: |false|1|6|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(557): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1113(f=1.0), 1114(f=1.0), )
Selected to next generation: IDs2--> (1113(f=1.0), )
----------Running generation: 558, population size: 1

***** Generation 558 : 0
**Parent Variant: [Variant id: 1115, #gens: 277, #ops: 0, parent:-]

--Child created id: 1116
--Creating new operations for variant [Variant id: 1116, #gens: 277, #ops: 0, parent:1115]
---analyzing modificationPoint position: 60
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 138
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [values, values.length]
--> var from patch: values spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: values.length spoon.support.reflect.code.CtFieldReadImpl
Error at generation 558
java.lang.NullPointerException: Cannot invoke "spoon.reflect.declaration.CtField.getSimpleName()" because "field" is null
Time Repair Loop (s): 116.921
generationsexecuted: 558
----SUMMARY_EXECUTION---
End Repair Search: NOT Found solution
All variants:
f 1.0, [Variant id: 1115, #gens: 277, #ops: 0, parent:-]
Number suspicious:1
Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=116.921
NR_GENERATIONS=558
NR_RIGHT_COMPILATIONS=359
NR_FAILLING_COMPILATIONS=198
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=ERROR
FAULT_LOCALIZATION=flacoco

Patch stats:

Storing ing JSON at /Users/marekmazur/astor/./output_astor/AstorMain-math-73//astor_output.json
astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":359,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","FAULT_LOCALIZATION":"flacoco","OUTPUT_STATUS":"ERROR","NR_FAILLING_COMPILATIONS":198,"NR_GENERATIONS":558,"TOTAL_TIME":116.921,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
Time Total(s): 161.551
